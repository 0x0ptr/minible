
aux_mcu.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000df38  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000000e0  20000000  0000df38  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000024f0  200000e0  0000e018  000200e0  2**2
                  ALLOC
  3 .stack        00002000  200025d0  00010508  000200e0  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  000200e0  2**0
                  CONTENTS, READONLY
  5 .comment      000000b4  00000000  00000000  00020108  2**0
                  CONTENTS, READONLY
  6 .debug_info   00037b23  00000000  00000000  000201bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00005226  00000000  00000000  00057cdf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000117ab  00000000  00000000  0005cf05  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00001008  00000000  00000000  0006e6b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000014e8  00000000  00000000  0006f6b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0000cbe0  00000000  00000000  00070ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00017e39  00000000  00000000  0007d780  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0009b58d  00000000  00000000  000955b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00003294  00000000  00000000  00130b48  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	d0 45 00 20 b1 01 00 00 ad 01 00 00 ad 01 00 00     .E. ............
	...
      2c:	ad 01 00 00 00 00 00 00 00 00 00 00 ad 01 00 00     ................
      3c:	ad 01 00 00 ad 01 00 00 ad 01 00 00 ad 01 00 00     ................
      4c:	ad 01 00 00 3d 15 00 00 ad 01 00 00 ad 01 00 00     ....=...........
      5c:	ad 01 00 00 ad 01 00 00 f5 19 00 00 ad 01 00 00     ................
      6c:	09 1a 00 00 ad 01 00 00 ad 01 00 00 ad 01 00 00     ................
      7c:	ad 01 00 00 ad 01 00 00 ad 01 00 00 8d 1b 00 00     ................
      8c:	ad 01 00 00 ad 01 00 00 ad 01 00 00 ad 01 00 00     ................
      9c:	ad 01 00 00 ad 01 00 00 ad 01 00 00 ad 01 00 00     ................
      ac:	ad 01 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200000e0 	.word	0x200000e0
      d4:	00000000 	.word	0x00000000
      d8:	0000df38 	.word	0x0000df38

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200000e4 	.word	0x200000e4
     108:	0000df38 	.word	0x0000df38
     10c:	0000df38 	.word	0x0000df38
     110:	00000000 	.word	0x00000000

00000114 <ble_wakeup_pin_set_low>:
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = ~data;
}

static inline void hri_port_clear_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     114:	2180      	movs	r1, #128	; 0x80
     116:	2394      	movs	r3, #148	; 0x94
     118:	22c0      	movs	r2, #192	; 0xc0
     11a:	05d2      	lsls	r2, r2, #23
     11c:	50d1      	str	r1, [r2, r3]

/* Set BLE Wakeup pin to be low */
void ble_wakeup_pin_set_low(void)
{
	gpio_set_pin_level(BTLC1000_WAKEUP_PIN, IOPORT_PIN_LEVEL_LOW);
}
     11e:	4770      	bx	lr

00000120 <ble_wakeup_pin_set_high>:
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     120:	2180      	movs	r1, #128	; 0x80
     122:	2398      	movs	r3, #152	; 0x98
     124:	22c0      	movs	r2, #192	; 0xc0
     126:	05d2      	lsls	r2, r2, #23
     128:	50d1      	str	r1, [r2, r3]

/* Set wakeup pin to high */
void ble_wakeup_pin_set_high(void)
{
	gpio_set_pin_level(BTLC1000_WAKEUP_PIN, IOPORT_PIN_LEVEL_HIGH);
}
     12a:	4770      	bx	lr

0000012c <ble_enable_pin_set_low>:
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     12c:	2102      	movs	r1, #2
     12e:	2394      	movs	r3, #148	; 0x94
     130:	22c0      	movs	r2, #192	; 0xc0
     132:	05d2      	lsls	r2, r2, #23
     134:	50d1      	str	r1, [r2, r3]

/* Set enable pin to Low */
void ble_enable_pin_set_low(void)
{
	gpio_set_pin_level(BTLC1000_CHIP_ENABLE_PIN, IOPORT_PIN_LEVEL_LOW);
}
     136:	4770      	bx	lr

00000138 <ble_enable_pin_set_high>:
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     138:	2102      	movs	r1, #2
     13a:	2398      	movs	r3, #152	; 0x98
     13c:	22c0      	movs	r2, #192	; 0xc0
     13e:	05d2      	lsls	r2, r2, #23
     140:	50d1      	str	r1, [r2, r3]

/* Set enable pin to high */
void ble_enable_pin_set_high(void)
{
	gpio_set_pin_level(BTLC1000_CHIP_ENABLE_PIN, IOPORT_PIN_LEVEL_HIGH);
}
     142:	4770      	bx	lr

00000144 <ble_configure_control_pin>:

/* Configure the BTLC1000 control(chip_enable, wakeup) pins */
void ble_configure_control_pin(void)
{
     144:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	/* initialize the delay before use */
	delay_init(NULL);
     146:	2000      	movs	r0, #0
     148:	4b13      	ldr	r3, [pc, #76]	; (198 <ble_configure_control_pin+0x54>)
     14a:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     14c:	24c0      	movs	r4, #192	; 0xc0
     14e:	05e4      	lsls	r4, r4, #23
     150:	2388      	movs	r3, #136	; 0x88
     152:	469c      	mov	ip, r3
     154:	2580      	movs	r5, #128	; 0x80
     156:	50e5      	str	r5, [r4, r3]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     158:	4b10      	ldr	r3, [pc, #64]	; (19c <ble_configure_control_pin+0x58>)
     15a:	22a8      	movs	r2, #168	; 0xa8
     15c:	4910      	ldr	r1, [pc, #64]	; (1a0 <ble_configure_control_pin+0x5c>)
     15e:	5099      	str	r1, [r3, r2]
     160:	27c0      	movs	r7, #192	; 0xc0
     162:	063f      	lsls	r7, r7, #24
     164:	509f      	str	r7, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     166:	26c7      	movs	r6, #199	; 0xc7
     168:	5d99      	ldrb	r1, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
     16a:	2001      	movs	r0, #1
     16c:	4381      	bics	r1, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     16e:	5599      	strb	r1, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     170:	3e2f      	subs	r6, #47	; 0x2f
     172:	51a5      	str	r5, [r4, r6]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     174:	3d7e      	subs	r5, #126	; 0x7e
     176:	4661      	mov	r1, ip
     178:	5065      	str	r5, [r4, r1]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     17a:	490a      	ldr	r1, [pc, #40]	; (1a4 <ble_configure_control_pin+0x60>)
     17c:	5099      	str	r1, [r3, r2]
     17e:	509f      	str	r7, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     180:	21c1      	movs	r1, #193	; 0xc1
     182:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     184:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     186:	545a      	strb	r2, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     188:	2394      	movs	r3, #148	; 0x94
     18a:	50e5      	str	r5, [r4, r3]

	/* set chip enable to low */
	ble_enable_pin_set_low();

	/* Delay for 50ms */
	delay_ms(BTLC1000_RESET_MS);
     18c:	3031      	adds	r0, #49	; 0x31
     18e:	4b06      	ldr	r3, [pc, #24]	; (1a8 <ble_configure_control_pin+0x64>)
     190:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     192:	51a5      	str	r5, [r4, r6]

	/* set chip enable to high */
	ble_enable_pin_set_high();
}
     194:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     196:	46c0      	nop			; (mov r8, r8)
     198:	00000615 	.word	0x00000615
     19c:	41004400 	.word	0x41004400
     1a0:	40000080 	.word	0x40000080
     1a4:	40000002 	.word	0x40000002
     1a8:	00000629 	.word	0x00000629

000001ac <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     1ac:	e7fe      	b.n	1ac <Dummy_Handler>
	...

000001b0 <Reset_Handler>:
{
     1b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     1b2:	4a2a      	ldr	r2, [pc, #168]	; (25c <Reset_Handler+0xac>)
     1b4:	4b2a      	ldr	r3, [pc, #168]	; (260 <Reset_Handler+0xb0>)
     1b6:	429a      	cmp	r2, r3
     1b8:	d011      	beq.n	1de <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     1ba:	001a      	movs	r2, r3
     1bc:	4b29      	ldr	r3, [pc, #164]	; (264 <Reset_Handler+0xb4>)
     1be:	429a      	cmp	r2, r3
     1c0:	d20d      	bcs.n	1de <Reset_Handler+0x2e>
     1c2:	4a29      	ldr	r2, [pc, #164]	; (268 <Reset_Handler+0xb8>)
     1c4:	3303      	adds	r3, #3
     1c6:	1a9b      	subs	r3, r3, r2
     1c8:	089b      	lsrs	r3, r3, #2
     1ca:	3301      	adds	r3, #1
     1cc:	009b      	lsls	r3, r3, #2
     1ce:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     1d0:	4823      	ldr	r0, [pc, #140]	; (260 <Reset_Handler+0xb0>)
     1d2:	4922      	ldr	r1, [pc, #136]	; (25c <Reset_Handler+0xac>)
     1d4:	588c      	ldr	r4, [r1, r2]
     1d6:	5084      	str	r4, [r0, r2]
     1d8:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     1da:	429a      	cmp	r2, r3
     1dc:	d1fa      	bne.n	1d4 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     1de:	4a23      	ldr	r2, [pc, #140]	; (26c <Reset_Handler+0xbc>)
     1e0:	4b23      	ldr	r3, [pc, #140]	; (270 <Reset_Handler+0xc0>)
     1e2:	429a      	cmp	r2, r3
     1e4:	d20a      	bcs.n	1fc <Reset_Handler+0x4c>
     1e6:	43d3      	mvns	r3, r2
     1e8:	4921      	ldr	r1, [pc, #132]	; (270 <Reset_Handler+0xc0>)
     1ea:	185b      	adds	r3, r3, r1
     1ec:	2103      	movs	r1, #3
     1ee:	438b      	bics	r3, r1
     1f0:	3304      	adds	r3, #4
     1f2:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     1f4:	2100      	movs	r1, #0
     1f6:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     1f8:	4293      	cmp	r3, r2
     1fa:	d1fc      	bne.n	1f6 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     1fc:	4a1d      	ldr	r2, [pc, #116]	; (274 <Reset_Handler+0xc4>)
     1fe:	21ff      	movs	r1, #255	; 0xff
     200:	4b1d      	ldr	r3, [pc, #116]	; (278 <Reset_Handler+0xc8>)
     202:	438b      	bics	r3, r1
     204:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     206:	39fd      	subs	r1, #253	; 0xfd
     208:	2390      	movs	r3, #144	; 0x90
     20a:	005b      	lsls	r3, r3, #1
     20c:	4a1b      	ldr	r2, [pc, #108]	; (27c <Reset_Handler+0xcc>)
     20e:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     210:	4a1b      	ldr	r2, [pc, #108]	; (280 <Reset_Handler+0xd0>)
     212:	78d3      	ldrb	r3, [r2, #3]
     214:	2503      	movs	r5, #3
     216:	43ab      	bics	r3, r5
     218:	2402      	movs	r4, #2
     21a:	4323      	orrs	r3, r4
     21c:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     21e:	78d3      	ldrb	r3, [r2, #3]
     220:	270c      	movs	r7, #12
     222:	43bb      	bics	r3, r7
     224:	2608      	movs	r6, #8
     226:	4333      	orrs	r3, r6
     228:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     22a:	4b16      	ldr	r3, [pc, #88]	; (284 <Reset_Handler+0xd4>)
     22c:	7b98      	ldrb	r0, [r3, #14]
     22e:	2230      	movs	r2, #48	; 0x30
     230:	4390      	bics	r0, r2
     232:	2220      	movs	r2, #32
     234:	4310      	orrs	r0, r2
     236:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     238:	7b99      	ldrb	r1, [r3, #14]
     23a:	43b9      	bics	r1, r7
     23c:	4331      	orrs	r1, r6
     23e:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     240:	7b9a      	ldrb	r2, [r3, #14]
     242:	43aa      	bics	r2, r5
     244:	4322      	orrs	r2, r4
     246:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     248:	4a0f      	ldr	r2, [pc, #60]	; (288 <Reset_Handler+0xd8>)
     24a:	6853      	ldr	r3, [r2, #4]
     24c:	2180      	movs	r1, #128	; 0x80
     24e:	430b      	orrs	r3, r1
     250:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     252:	4b0e      	ldr	r3, [pc, #56]	; (28c <Reset_Handler+0xdc>)
     254:	4798      	blx	r3
        main();
     256:	4b0e      	ldr	r3, [pc, #56]	; (290 <Reset_Handler+0xe0>)
     258:	4798      	blx	r3
     25a:	e7fe      	b.n	25a <Reset_Handler+0xaa>
     25c:	0000df38 	.word	0x0000df38
     260:	20000000 	.word	0x20000000
     264:	200000e0 	.word	0x200000e0
     268:	20000004 	.word	0x20000004
     26c:	200000e0 	.word	0x200000e0
     270:	200025d0 	.word	0x200025d0
     274:	e000ed00 	.word	0xe000ed00
     278:	00000000 	.word	0x00000000
     27c:	41007000 	.word	0x41007000
     280:	41005000 	.word	0x41005000
     284:	41004800 	.word	0x41004800
     288:	41004000 	.word	0x41004000
     28c:	00008a09 	.word	0x00008a09
     290:	000011f5 	.word	0x000011f5

00000294 <EXTERNAL_IRQ_0_init>:
static uint8_t BLE_UART_buffer[BLE_UART_BUFFER_SIZE];

struct usart_sync_descriptor TARGET_IO;

void EXTERNAL_IRQ_0_init(void)
{
     294:	b570      	push	{r4, r5, r6, lr}
}

static inline void hri_gclk_write_CLKCTRL_reg(const void *const hw, hri_gclk_clkctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->CLKCTRL.reg = data;
     296:	4a10      	ldr	r2, [pc, #64]	; (2d8 <EXTERNAL_IRQ_0_init+0x44>)
     298:	4b10      	ldr	r3, [pc, #64]	; (2dc <EXTERNAL_IRQ_0_init+0x48>)
     29a:	805a      	strh	r2, [r3, #2]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     29c:	22c0      	movs	r2, #192	; 0xc0
     29e:	05d2      	lsls	r2, r2, #23
     2a0:	2080      	movs	r0, #128	; 0x80
     2a2:	0200      	lsls	r0, r0, #8
     2a4:	6050      	str	r0, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     2a6:	4b0e      	ldr	r3, [pc, #56]	; (2e0 <EXTERNAL_IRQ_0_init+0x4c>)
     2a8:	490e      	ldr	r1, [pc, #56]	; (2e4 <EXTERNAL_IRQ_0_init+0x50>)
     2aa:	6299      	str	r1, [r3, #40]	; 0x28
     2ac:	490e      	ldr	r1, [pc, #56]	; (2e8 <EXTERNAL_IRQ_0_init+0x54>)
     2ae:	6299      	str	r1, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     2b0:	6050      	str	r0, [r2, #4]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg |= PORT_PINCFG_PULLEN;
     2b2:	214f      	movs	r1, #79	; 0x4f
     2b4:	5c5c      	ldrb	r4, [r3, r1]
     2b6:	2504      	movs	r5, #4
     2b8:	432c      	orrs	r4, r5
     2ba:	545c      	strb	r4, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     2bc:	6190      	str	r0, [r2, #24]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     2be:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     2c0:	2001      	movs	r0, #1
     2c2:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     2c4:	4302      	orrs	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     2c6:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     2c8:	3918      	subs	r1, #24
     2ca:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     2cc:	300e      	adds	r0, #14
     2ce:	4002      	ands	r2, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     2d0:	545a      	strb	r2, [r3, r1]
	                       // <GPIO_PULL_DOWN"> Pull-down
	                       GPIO_PULL_UP);

	gpio_set_pin_function(BLE_APP_SW, PINMUX_PA15A_EIC_EXTINT15);

	ext_irq_init();
     2d2:	4b06      	ldr	r3, [pc, #24]	; (2ec <EXTERNAL_IRQ_0_init+0x58>)
     2d4:	4798      	blx	r3
}
     2d6:	bd70      	pop	{r4, r5, r6, pc}
     2d8:	00004005 	.word	0x00004005
     2dc:	40000c00 	.word	0x40000c00
     2e0:	41004400 	.word	0x41004400
     2e4:	40028000 	.word	0x40028000
     2e8:	c0020000 	.word	0xc0020000
     2ec:	00000681 	.word	0x00000681

000002f0 <BLE_FC_UART_CLOCK_init>:
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
     2f0:	4a04      	ldr	r2, [pc, #16]	; (304 <BLE_FC_UART_CLOCK_init+0x14>)
     2f2:	6a13      	ldr	r3, [r2, #32]
     2f4:	2104      	movs	r1, #4
     2f6:	430b      	orrs	r3, r1
     2f8:	6213      	str	r3, [r2, #32]
     2fa:	4a03      	ldr	r2, [pc, #12]	; (308 <BLE_FC_UART_CLOCK_init+0x18>)
     2fc:	4b03      	ldr	r3, [pc, #12]	; (30c <BLE_FC_UART_CLOCK_init+0x1c>)
     2fe:	805a      	strh	r2, [r3, #2]
void BLE_FC_UART_CLOCK_init()
{

	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM0);
	_gclk_enable_channel(SERCOM0_GCLK_ID_CORE, CONF_GCLK_SERCOM0_CORE_SRC);
}
     300:	4770      	bx	lr
     302:	46c0      	nop			; (mov r8, r8)
     304:	40000400 	.word	0x40000400
     308:	00004014 	.word	0x00004014
     30c:	40000c00 	.word	0x40000c00

00000310 <BLE_FC_UART_PORT_init>:
 * \brief USART pinmux initialization function
 *
 * Set each required pin to USART functionality
 */
void BLE_FC_UART_PORT_init()
{
     310:	b5f0      	push	{r4, r5, r6, r7, lr}
     312:	46c6      	mov	lr, r8
     314:	b500      	push	{lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     316:	4b1f      	ldr	r3, [pc, #124]	; (394 <BLE_FC_UART_PORT_init+0x84>)
     318:	2144      	movs	r1, #68	; 0x44
     31a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     31c:	2001      	movs	r0, #1
     31e:	4684      	mov	ip, r0
     320:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     322:	2701      	movs	r7, #1
     324:	433a      	orrs	r2, r7
     326:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     328:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     32a:	3031      	adds	r0, #49	; 0x31
     32c:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     32e:	3935      	subs	r1, #53	; 0x35
     330:	4688      	mov	r8, r1
     332:	438a      	bics	r2, r1
	tmp |= PORT_PMUX_PMUXE(data);
     334:	2103      	movs	r1, #3
     336:	430a      	orrs	r2, r1
     338:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     33a:	541a      	strb	r2, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     33c:	2445      	movs	r4, #69	; 0x45
     33e:	5d1a      	ldrb	r2, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     340:	4665      	mov	r5, ip
     342:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     344:	433a      	orrs	r2, r7
     346:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     348:	551a      	strb	r2, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     34a:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     34c:	260f      	movs	r6, #15
     34e:	4032      	ands	r2, r6
	tmp |= PORT_PMUX_PMUXO(data);
     350:	2530      	movs	r5, #48	; 0x30
     352:	432a      	orrs	r2, r5
     354:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     356:	541a      	strb	r2, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     358:	3014      	adds	r0, #20
     35a:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     35c:	4664      	mov	r4, ip
     35e:	43a2      	bics	r2, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     360:	433a      	orrs	r2, r7
     362:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     364:	541a      	strb	r2, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     366:	3432      	adds	r4, #50	; 0x32
     368:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     36a:	4642      	mov	r2, r8
     36c:	4390      	bics	r0, r2
	tmp |= PORT_PMUX_PMUXE(data);
     36e:	4308      	orrs	r0, r1
     370:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     372:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     374:	3238      	adds	r2, #56	; 0x38
     376:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     378:	4660      	mov	r0, ip
     37a:	4381      	bics	r1, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     37c:	4339      	orrs	r1, r7
     37e:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     380:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     382:	5d1a      	ldrb	r2, [r3, r4]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     384:	4032      	ands	r2, r6
	tmp |= PORT_PMUX_PMUXO(data);
     386:	432a      	orrs	r2, r5
     388:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     38a:	551a      	strb	r2, [r3, r4]
	gpio_set_pin_function(PA05, PINMUX_PA05D_SERCOM0_PAD1);

	gpio_set_pin_function(PA06, PINMUX_PA06D_SERCOM0_PAD2);

	gpio_set_pin_function(PA07, PINMUX_PA07D_SERCOM0_PAD3);
}
     38c:	bc04      	pop	{r2}
     38e:	4690      	mov	r8, r2
     390:	bdf0      	pop	{r4, r5, r6, r7, pc}
     392:	46c0      	nop			; (mov r8, r8)
     394:	41004400 	.word	0x41004400

00000398 <BLE_FC_UART_init>:
 * \brief USART initialization function
 *
 * Enables USART peripheral, clocks and initializes USART driver
 */
void BLE_FC_UART_init(void)
{
     398:	b510      	push	{r4, lr}
     39a:	b082      	sub	sp, #8
	BLE_FC_UART_CLOCK_init();
     39c:	4b06      	ldr	r3, [pc, #24]	; (3b8 <BLE_FC_UART_init+0x20>)
     39e:	4798      	blx	r3
	usart_async_init(&BLE_FC_UART, SERCOM0, BLE_FC_UART_buffer, BLE_FC_UART_BUFFER_SIZE, (void *)NULL);
     3a0:	2300      	movs	r3, #0
     3a2:	9300      	str	r3, [sp, #0]
     3a4:	3310      	adds	r3, #16
     3a6:	4a05      	ldr	r2, [pc, #20]	; (3bc <BLE_FC_UART_init+0x24>)
     3a8:	4905      	ldr	r1, [pc, #20]	; (3c0 <BLE_FC_UART_init+0x28>)
     3aa:	4806      	ldr	r0, [pc, #24]	; (3c4 <BLE_FC_UART_init+0x2c>)
     3ac:	4c06      	ldr	r4, [pc, #24]	; (3c8 <BLE_FC_UART_init+0x30>)
     3ae:	47a0      	blx	r4
	BLE_FC_UART_PORT_init();
     3b0:	4b06      	ldr	r3, [pc, #24]	; (3cc <BLE_FC_UART_init+0x34>)
     3b2:	4798      	blx	r3
}
     3b4:	b002      	add	sp, #8
     3b6:	bd10      	pop	{r4, pc}
     3b8:	000002f1 	.word	0x000002f1
     3bc:	200000fc 	.word	0x200000fc
     3c0:	42000800 	.word	0x42000800
     3c4:	20000e20 	.word	0x20000e20
     3c8:	00000be5 	.word	0x00000be5
     3cc:	00000311 	.word	0x00000311

000003d0 <BLE_UART_CLOCK_init>:
     3d0:	4a04      	ldr	r2, [pc, #16]	; (3e4 <BLE_UART_CLOCK_init+0x14>)
     3d2:	6a13      	ldr	r3, [r2, #32]
     3d4:	2110      	movs	r1, #16
     3d6:	430b      	orrs	r3, r1
     3d8:	6213      	str	r3, [r2, #32]
     3da:	4a03      	ldr	r2, [pc, #12]	; (3e8 <BLE_UART_CLOCK_init+0x18>)
     3dc:	4b03      	ldr	r3, [pc, #12]	; (3ec <BLE_UART_CLOCK_init+0x1c>)
     3de:	805a      	strh	r2, [r3, #2]
void BLE_UART_CLOCK_init()
{

	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM2);
	_gclk_enable_channel(SERCOM2_GCLK_ID_CORE, CONF_GCLK_SERCOM2_CORE_SRC);
}
     3e0:	4770      	bx	lr
     3e2:	46c0      	nop			; (mov r8, r8)
     3e4:	40000400 	.word	0x40000400
     3e8:	00004016 	.word	0x00004016
     3ec:	40000c00 	.word	0x40000c00

000003f0 <BLE_UART_PORT_init>:
 * \brief USART pinmux initialization function
 *
 * Set each required pin to USART functionality
 */
void BLE_UART_PORT_init()
{
     3f0:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     3f2:	4b0e      	ldr	r3, [pc, #56]	; (42c <BLE_UART_PORT_init+0x3c>)
     3f4:	2248      	movs	r2, #72	; 0x48
     3f6:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     3f8:	2501      	movs	r5, #1
     3fa:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     3fc:	2401      	movs	r4, #1
     3fe:	4321      	orrs	r1, r4
     400:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     402:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     404:	2034      	movs	r0, #52	; 0x34
     406:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     408:	3a39      	subs	r2, #57	; 0x39
     40a:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     40c:	3a0c      	subs	r2, #12
     40e:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     410:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     412:	2149      	movs	r1, #73	; 0x49
     414:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     416:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     418:	4322      	orrs	r2, r4
     41a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     41c:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     41e:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     420:	393a      	subs	r1, #58	; 0x3a
     422:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     424:	3121      	adds	r1, #33	; 0x21
     426:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     428:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(PA08, PINMUX_PA08D_SERCOM2_PAD0);

	gpio_set_pin_function(PA09, PINMUX_PA09D_SERCOM2_PAD1);
}
     42a:	bd30      	pop	{r4, r5, pc}
     42c:	41004400 	.word	0x41004400

00000430 <BLE_UART_init>:
 * \brief USART initialization function
 *
 * Enables USART peripheral, clocks and initializes USART driver
 */
void BLE_UART_init(void)
{
     430:	b510      	push	{r4, lr}
     432:	b082      	sub	sp, #8
	BLE_UART_CLOCK_init();
     434:	4b07      	ldr	r3, [pc, #28]	; (454 <BLE_UART_init+0x24>)
     436:	4798      	blx	r3
	usart_async_init(&BLE_UART, SERCOM2, BLE_UART_buffer, BLE_UART_BUFFER_SIZE, (void *)NULL);
     438:	2300      	movs	r3, #0
     43a:	9300      	str	r3, [sp, #0]
     43c:	3310      	adds	r3, #16
     43e:	4a06      	ldr	r2, [pc, #24]	; (458 <BLE_UART_init+0x28>)
     440:	3210      	adds	r2, #16
     442:	4906      	ldr	r1, [pc, #24]	; (45c <BLE_UART_init+0x2c>)
     444:	4806      	ldr	r0, [pc, #24]	; (460 <BLE_UART_init+0x30>)
     446:	4c07      	ldr	r4, [pc, #28]	; (464 <BLE_UART_init+0x34>)
     448:	47a0      	blx	r4
	BLE_UART_PORT_init();
     44a:	4b07      	ldr	r3, [pc, #28]	; (468 <BLE_UART_init+0x38>)
     44c:	4798      	blx	r3
}
     44e:	b002      	add	sp, #8
     450:	bd10      	pop	{r4, pc}
     452:	46c0      	nop			; (mov r8, r8)
     454:	000003d1 	.word	0x000003d1
     458:	200000fc 	.word	0x200000fc
     45c:	42001000 	.word	0x42001000
     460:	20000e98 	.word	0x20000e98
     464:	00000be5 	.word	0x00000be5
     468:	000003f1 	.word	0x000003f1

0000046c <TARGET_IO_PORT_init>:

void TARGET_IO_PORT_init(void)
{
     46c:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     46e:	4b0e      	ldr	r3, [pc, #56]	; (4a8 <TARGET_IO_PORT_init+0x3c>)
     470:	2256      	movs	r2, #86	; 0x56
     472:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     474:	2501      	movs	r5, #1
     476:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     478:	2401      	movs	r4, #1
     47a:	4321      	orrs	r1, r4
     47c:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     47e:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     480:	203b      	movs	r0, #59	; 0x3b
     482:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     484:	3a47      	subs	r2, #71	; 0x47
     486:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     488:	3a0d      	subs	r2, #13
     48a:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     48c:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     48e:	2157      	movs	r1, #87	; 0x57
     490:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     492:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     494:	4322      	orrs	r2, r4
     496:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     498:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     49a:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     49c:	3948      	subs	r1, #72	; 0x48
     49e:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     4a0:	3111      	adds	r1, #17
     4a2:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     4a4:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(PA22, PINMUX_PA22C_SERCOM3_PAD0);

	gpio_set_pin_function(PA23, PINMUX_PA23C_SERCOM3_PAD1);
}
     4a6:	bd30      	pop	{r4, r5, pc}
     4a8:	41004400 	.word	0x41004400

000004ac <TARGET_IO_CLOCK_init>:
     4ac:	4a04      	ldr	r2, [pc, #16]	; (4c0 <TARGET_IO_CLOCK_init+0x14>)
     4ae:	6a13      	ldr	r3, [r2, #32]
     4b0:	2120      	movs	r1, #32
     4b2:	430b      	orrs	r3, r1
     4b4:	6213      	str	r3, [r2, #32]
     4b6:	4a03      	ldr	r2, [pc, #12]	; (4c4 <TARGET_IO_CLOCK_init+0x18>)
     4b8:	4b03      	ldr	r3, [pc, #12]	; (4c8 <TARGET_IO_CLOCK_init+0x1c>)
     4ba:	805a      	strh	r2, [r3, #2]

void TARGET_IO_CLOCK_init(void)
{
	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM3);
	_gclk_enable_channel(SERCOM3_GCLK_ID_CORE, CONF_GCLK_SERCOM3_CORE_SRC);
}
     4bc:	4770      	bx	lr
     4be:	46c0      	nop			; (mov r8, r8)
     4c0:	40000400 	.word	0x40000400
     4c4:	00004017 	.word	0x00004017
     4c8:	40000c00 	.word	0x40000c00

000004cc <TARGET_IO_init>:

void TARGET_IO_init(void)
{
     4cc:	b510      	push	{r4, lr}
	TARGET_IO_CLOCK_init();
     4ce:	4b05      	ldr	r3, [pc, #20]	; (4e4 <TARGET_IO_init+0x18>)
     4d0:	4798      	blx	r3
	usart_sync_init(&TARGET_IO, SERCOM3, (void *)NULL);
     4d2:	2200      	movs	r2, #0
     4d4:	4904      	ldr	r1, [pc, #16]	; (4e8 <TARGET_IO_init+0x1c>)
     4d6:	4805      	ldr	r0, [pc, #20]	; (4ec <TARGET_IO_init+0x20>)
     4d8:	4b05      	ldr	r3, [pc, #20]	; (4f0 <TARGET_IO_init+0x24>)
     4da:	4798      	blx	r3
	TARGET_IO_PORT_init();
     4dc:	4b05      	ldr	r3, [pc, #20]	; (4f4 <TARGET_IO_init+0x28>)
     4de:	4798      	blx	r3
}
     4e0:	bd10      	pop	{r4, pc}
     4e2:	46c0      	nop			; (mov r8, r8)
     4e4:	000004ad 	.word	0x000004ad
     4e8:	42001400 	.word	0x42001400
     4ec:	20000e70 	.word	0x20000e70
     4f0:	00000ee5 	.word	0x00000ee5
     4f4:	0000046d 	.word	0x0000046d

000004f8 <system_init>:

	timer_init(&Timer, TC3, _tc_get_timer());
}

void system_init(void)
{
     4f8:	b5f0      	push	{r4, r5, r6, r7, lr}
     4fa:	46c6      	mov	lr, r8
     4fc:	b500      	push	{lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     4fe:	4b2d      	ldr	r3, [pc, #180]	; (5b4 <system_init+0xbc>)
     500:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     502:	22c0      	movs	r2, #192	; 0xc0
     504:	05d2      	lsls	r2, r2, #23
     506:	2102      	movs	r1, #2
     508:	6151      	str	r1, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     50a:	6091      	str	r1, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     50c:	4b2a      	ldr	r3, [pc, #168]	; (5b8 <system_init+0xc0>)
     50e:	4f2b      	ldr	r7, [pc, #172]	; (5bc <system_init+0xc4>)
     510:	629f      	str	r7, [r3, #40]	; 0x28
     512:	24c0      	movs	r4, #192	; 0xc0
     514:	0624      	lsls	r4, r4, #24
     516:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     518:	2641      	movs	r6, #65	; 0x41
     51a:	5d9d      	ldrb	r5, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
     51c:	2001      	movs	r0, #1
     51e:	4385      	bics	r5, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     520:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     522:	2508      	movs	r5, #8
     524:	6155      	str	r5, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     526:	6095      	str	r5, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     528:	4d25      	ldr	r5, [pc, #148]	; (5c0 <system_init+0xc8>)
     52a:	629d      	str	r5, [r3, #40]	; 0x28
     52c:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     52e:	3602      	adds	r6, #2
     530:	5d9d      	ldrb	r5, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
     532:	4385      	bics	r5, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     534:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     536:	3651      	adds	r6, #81	; 0x51
     538:	5191      	str	r1, [r2, r6]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     53a:	2588      	movs	r5, #136	; 0x88
     53c:	46a8      	mov	r8, r5
     53e:	5151      	str	r1, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     540:	31a6      	adds	r1, #166	; 0xa6
     542:	505f      	str	r7, [r3, r1]
     544:	505c      	str	r4, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     546:	27c1      	movs	r7, #193	; 0xc1
     548:	46bc      	mov	ip, r7
     54a:	5ddf      	ldrb	r7, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     54c:	4387      	bics	r7, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     54e:	4665      	mov	r5, ip
     550:	555f      	strb	r7, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     552:	2780      	movs	r7, #128	; 0x80
     554:	5197      	str	r7, [r2, r6]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     556:	4645      	mov	r5, r8
     558:	5157      	str	r7, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     55a:	4f1a      	ldr	r7, [pc, #104]	; (5c4 <system_init+0xcc>)
     55c:	505f      	str	r7, [r3, r1]
     55e:	505c      	str	r4, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     560:	27c7      	movs	r7, #199	; 0xc7
     562:	5ddc      	ldrb	r4, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     564:	4384      	bics	r4, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     566:	55dc      	strb	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     568:	2480      	movs	r4, #128	; 0x80
     56a:	05e4      	lsls	r4, r4, #23
     56c:	5194      	str	r4, [r2, r6]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     56e:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     570:	505c      	str	r4, [r3, r1]
     572:	4a15      	ldr	r2, [pc, #84]	; (5c8 <system_init+0xd0>)
     574:	505a      	str	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     576:	3136      	adds	r1, #54	; 0x36
     578:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     57a:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     57c:	545a      	strb	r2, [r3, r1]
	// Set pin direction to output
	gpio_set_pin_direction(BLE_APP_LED, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(BLE_APP_LED, GPIO_PIN_FUNCTION_OFF);

	EXTERNAL_IRQ_0_init();
     57e:	4b13      	ldr	r3, [pc, #76]	; (5cc <system_init+0xd4>)
     580:	4798      	blx	r3

	BLE_FC_UART_init();
     582:	4b13      	ldr	r3, [pc, #76]	; (5d0 <system_init+0xd8>)
     584:	4798      	blx	r3
	BLE_UART_init();
     586:	4b13      	ldr	r3, [pc, #76]	; (5d4 <system_init+0xdc>)
     588:	4798      	blx	r3

	TARGET_IO_init();
     58a:	4b13      	ldr	r3, [pc, #76]	; (5d8 <system_init+0xe0>)
     58c:	4798      	blx	r3
     58e:	4a13      	ldr	r2, [pc, #76]	; (5dc <system_init+0xe4>)
     590:	6a11      	ldr	r1, [r2, #32]
     592:	2380      	movs	r3, #128	; 0x80
     594:	011b      	lsls	r3, r3, #4
     596:	430b      	orrs	r3, r1
     598:	6213      	str	r3, [r2, #32]
     59a:	4a11      	ldr	r2, [pc, #68]	; (5e0 <system_init+0xe8>)
     59c:	4b11      	ldr	r3, [pc, #68]	; (5e4 <system_init+0xec>)
     59e:	805a      	strh	r2, [r3, #2]
	timer_init(&Timer, TC3, _tc_get_timer());
     5a0:	4b11      	ldr	r3, [pc, #68]	; (5e8 <system_init+0xf0>)
     5a2:	4798      	blx	r3
     5a4:	0002      	movs	r2, r0
     5a6:	4911      	ldr	r1, [pc, #68]	; (5ec <system_init+0xf4>)
     5a8:	4811      	ldr	r0, [pc, #68]	; (5f0 <system_init+0xf8>)
     5aa:	4b12      	ldr	r3, [pc, #72]	; (5f4 <system_init+0xfc>)
     5ac:	4798      	blx	r3

	Timer_init();
}
     5ae:	bc04      	pop	{r2}
     5b0:	4690      	mov	r8, r2
     5b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     5b4:	00001445 	.word	0x00001445
     5b8:	41004400 	.word	0x41004400
     5bc:	40000002 	.word	0x40000002
     5c0:	40000008 	.word	0x40000008
     5c4:	40000080 	.word	0x40000080
     5c8:	c0004000 	.word	0xc0004000
     5cc:	00000295 	.word	0x00000295
     5d0:	00000399 	.word	0x00000399
     5d4:	00000431 	.word	0x00000431
     5d8:	000004cd 	.word	0x000004cd
     5dc:	40000400 	.word	0x40000400
     5e0:	0000401b 	.word	0x0000401b
     5e4:	40000c00 	.word	0x40000c00
     5e8:	00001b67 	.word	0x00001b67
     5ec:	42002c00 	.word	0x42002c00
     5f0:	20000e7c 	.word	0x20000e7c
     5f4:	00000851 	.word	0x00000851

000005f8 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     5f8:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     5fc:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     5fe:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     600:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     604:	4770      	bx	lr

00000606 <atomic_leave_critical>:
     606:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     60a:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     60c:	f383 8810 	msr	PRIMASK, r3
}
     610:	4770      	bx	lr
	...

00000614 <delay_init>:

/**
 * \brief Initialize Delay driver
 */
void delay_init(void *const hw)
{
     614:	b510      	push	{r4, lr}
	_delay_init(hardware = hw);
     616:	4b02      	ldr	r3, [pc, #8]	; (620 <delay_init+0xc>)
     618:	6018      	str	r0, [r3, #0]
     61a:	4b02      	ldr	r3, [pc, #8]	; (624 <delay_init+0x10>)
     61c:	4798      	blx	r3
}
     61e:	bd10      	pop	{r4, pc}
     620:	2000011c 	.word	0x2000011c
     624:	0000143d 	.word	0x0000143d

00000628 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     628:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     62a:	4b04      	ldr	r3, [pc, #16]	; (63c <delay_ms+0x14>)
     62c:	681c      	ldr	r4, [r3, #0]
     62e:	4b04      	ldr	r3, [pc, #16]	; (640 <delay_ms+0x18>)
     630:	4798      	blx	r3
     632:	0001      	movs	r1, r0
     634:	0020      	movs	r0, r4
     636:	4b03      	ldr	r3, [pc, #12]	; (644 <delay_ms+0x1c>)
     638:	4798      	blx	r3
}
     63a:	bd10      	pop	{r4, pc}
     63c:	2000011c 	.word	0x2000011c
     640:	00001421 	.word	0x00001421
     644:	0000143f 	.word	0x0000143f

00000648 <process_ext_irq>:
 * \brief Interrupt processing routine
 *
 * \param[in] pin The pin which triggered the interrupt
 */
static void process_ext_irq(const uint32_t pin)
{
     648:	b570      	push	{r4, r5, r6, lr}
		middle = (upper + lower) >> 1;
		if (middle >= EXT_IRQ_AMOUNT) {
			return;
		}

		if (ext_irqs[middle].pin == pin) {
     64a:	4b0c      	ldr	r3, [pc, #48]	; (67c <process_ext_irq+0x34>)
     64c:	685c      	ldr	r4, [r3, #4]
     64e:	42a0      	cmp	r0, r4
     650:	d00e      	beq.n	670 <process_ext_irq+0x28>
     652:	2201      	movs	r2, #1
     654:	2100      	movs	r1, #0
			}
			return;
		}

		if (ext_irqs[middle].pin < pin) {
			lower = middle + 1;
     656:	2601      	movs	r6, #1
		} else {
			upper = middle - 1;
     658:	25ff      	movs	r5, #255	; 0xff
     65a:	e003      	b.n	664 <process_ext_irq+0x1c>
     65c:	002a      	movs	r2, r5
		middle = (upper + lower) >> 1;
     65e:	1853      	adds	r3, r2, r1
		if (middle >= EXT_IRQ_AMOUNT) {
     660:	085b      	lsrs	r3, r3, #1
     662:	d10a      	bne.n	67a <process_ext_irq+0x32>
		if (ext_irqs[middle].pin < pin) {
     664:	42a0      	cmp	r0, r4
     666:	d9f9      	bls.n	65c <process_ext_irq+0x14>
	while (upper >= lower) {
     668:	2a00      	cmp	r2, #0
     66a:	d006      	beq.n	67a <process_ext_irq+0x32>
			lower = middle + 1;
     66c:	0031      	movs	r1, r6
     66e:	e7f6      	b.n	65e <process_ext_irq+0x16>
			if (ext_irqs[middle].cb) {
     670:	4b02      	ldr	r3, [pc, #8]	; (67c <process_ext_irq+0x34>)
     672:	681b      	ldr	r3, [r3, #0]
     674:	2b00      	cmp	r3, #0
     676:	d000      	beq.n	67a <process_ext_irq+0x32>
				ext_irqs[middle].cb();
     678:	4798      	blx	r3
		}
	}
}
     67a:	bd70      	pop	{r4, r5, r6, pc}
     67c:	20000120 	.word	0x20000120

00000680 <ext_irq_init>:
{
     680:	b510      	push	{r4, lr}
		ext_irqs[i].pin = 0xFFFFFFFF;
     682:	4b05      	ldr	r3, [pc, #20]	; (698 <ext_irq_init+0x18>)
     684:	2201      	movs	r2, #1
     686:	4252      	negs	r2, r2
     688:	605a      	str	r2, [r3, #4]
		ext_irqs[i].cb  = NULL;
     68a:	2200      	movs	r2, #0
     68c:	601a      	str	r2, [r3, #0]
	return _ext_irq_init(process_ext_irq);
     68e:	4803      	ldr	r0, [pc, #12]	; (69c <ext_irq_init+0x1c>)
     690:	4b03      	ldr	r3, [pc, #12]	; (6a0 <ext_irq_init+0x20>)
     692:	4798      	blx	r3
}
     694:	bd10      	pop	{r4, pc}
     696:	46c0      	nop			; (mov r8, r8)
     698:	20000120 	.word	0x20000120
     69c:	00000649 	.word	0x00000649
     6a0:	00001479 	.word	0x00001479

000006a4 <ext_irq_register>:
{
     6a4:	b510      	push	{r4, lr}
		if (ext_irqs[i].pin == pin) {
     6a6:	4b0f      	ldr	r3, [pc, #60]	; (6e4 <ext_irq_register+0x40>)
     6a8:	685b      	ldr	r3, [r3, #4]
     6aa:	4298      	cmp	r0, r3
     6ac:	d008      	beq.n	6c0 <ext_irq_register+0x1c>
	if (NULL == cb) {
     6ae:	2900      	cmp	r1, #0
     6b0:	d014      	beq.n	6dc <ext_irq_register+0x38>
			if (NULL == ext_irqs[i].cb) {
     6b2:	4b0c      	ldr	r3, [pc, #48]	; (6e4 <ext_irq_register+0x40>)
     6b4:	681b      	ldr	r3, [r3, #0]
     6b6:	2b00      	cmp	r3, #0
     6b8:	d009      	beq.n	6ce <ext_irq_register+0x2a>
		return ERR_INVALID_ARG;
     6ba:	200d      	movs	r0, #13
     6bc:	4240      	negs	r0, r0
     6be:	e00c      	b.n	6da <ext_irq_register+0x36>
			ext_irqs[i].cb = cb;
     6c0:	4b08      	ldr	r3, [pc, #32]	; (6e4 <ext_irq_register+0x40>)
     6c2:	6019      	str	r1, [r3, #0]
	if (NULL == cb) {
     6c4:	2900      	cmp	r1, #0
     6c6:	d105      	bne.n	6d4 <ext_irq_register+0x30>
		return _ext_irq_enable(pin, false);
     6c8:	4b07      	ldr	r3, [pc, #28]	; (6e8 <ext_irq_register+0x44>)
     6ca:	4798      	blx	r3
     6cc:	e005      	b.n	6da <ext_irq_register+0x36>
				ext_irqs[i].cb  = cb;
     6ce:	4b05      	ldr	r3, [pc, #20]	; (6e4 <ext_irq_register+0x40>)
     6d0:	6019      	str	r1, [r3, #0]
				ext_irqs[i].pin = pin;
     6d2:	6058      	str	r0, [r3, #4]
	return _ext_irq_enable(pin, true);
     6d4:	2101      	movs	r1, #1
     6d6:	4b04      	ldr	r3, [pc, #16]	; (6e8 <ext_irq_register+0x44>)
     6d8:	4798      	blx	r3
}
     6da:	bd10      	pop	{r4, pc}
			return ERR_INVALID_ARG;
     6dc:	200d      	movs	r0, #13
     6de:	4240      	negs	r0, r0
     6e0:	e7fb      	b.n	6da <ext_irq_register+0x36>
     6e2:	46c0      	nop			; (mov r8, r8)
     6e4:	20000120 	.word	0x20000120
     6e8:	00001511 	.word	0x00001511

000006ec <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     6ec:	b570      	push	{r4, r5, r6, lr}
     6ee:	0006      	movs	r6, r0
     6f0:	000c      	movs	r4, r1
     6f2:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     6f4:	2800      	cmp	r0, #0
     6f6:	d00d      	beq.n	714 <io_write+0x28>
     6f8:	0008      	movs	r0, r1
     6fa:	1e43      	subs	r3, r0, #1
     6fc:	4198      	sbcs	r0, r3
     6fe:	b2c0      	uxtb	r0, r0
     700:	2234      	movs	r2, #52	; 0x34
     702:	4905      	ldr	r1, [pc, #20]	; (718 <io_write+0x2c>)
     704:	4b05      	ldr	r3, [pc, #20]	; (71c <io_write+0x30>)
     706:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     708:	6833      	ldr	r3, [r6, #0]
     70a:	002a      	movs	r2, r5
     70c:	0021      	movs	r1, r4
     70e:	0030      	movs	r0, r6
     710:	4798      	blx	r3
}
     712:	bd70      	pop	{r4, r5, r6, pc}
     714:	2000      	movs	r0, #0
     716:	e7f3      	b.n	700 <io_write+0x14>
     718:	00009e4c 	.word	0x00009e4c
     71c:	00000f5d 	.word	0x00000f5d

00000720 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     720:	b570      	push	{r4, r5, r6, lr}
     722:	0006      	movs	r6, r0
     724:	000c      	movs	r4, r1
     726:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     728:	2800      	cmp	r0, #0
     72a:	d00d      	beq.n	748 <io_read+0x28>
     72c:	0008      	movs	r0, r1
     72e:	1e43      	subs	r3, r0, #1
     730:	4198      	sbcs	r0, r3
     732:	b2c0      	uxtb	r0, r0
     734:	223d      	movs	r2, #61	; 0x3d
     736:	4905      	ldr	r1, [pc, #20]	; (74c <io_read+0x2c>)
     738:	4b05      	ldr	r3, [pc, #20]	; (750 <io_read+0x30>)
     73a:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     73c:	6873      	ldr	r3, [r6, #4]
     73e:	002a      	movs	r2, r5
     740:	0021      	movs	r1, r4
     742:	0030      	movs	r0, r6
     744:	4798      	blx	r3
}
     746:	bd70      	pop	{r4, r5, r6, pc}
     748:	2000      	movs	r0, #0
     74a:	e7f3      	b.n	734 <io_read+0x14>
     74c:	00009e4c 	.word	0x00009e4c
     750:	00000f5d 	.word	0x00000f5d

00000754 <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
     754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     756:	46ce      	mov	lr, r9
     758:	4647      	mov	r7, r8
     75a:	b580      	push	{r7, lr}
     75c:	4681      	mov	r9, r0
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
     75e:	6803      	ldr	r3, [r0, #0]
     760:	469c      	mov	ip, r3
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
     762:	2b00      	cmp	r3, #0
     764:	d005      	beq.n	772 <timer_add_timer_task+0x1e>
		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
		}
		if (time_left >= new_task->interval)
     766:	688e      	ldr	r6, [r1, #8]
     768:	001c      	movs	r4, r3
     76a:	2500      	movs	r5, #0
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     76c:	2701      	movs	r7, #1
     76e:	1abf      	subs	r7, r7, r2
     770:	e00d      	b.n	78e <timer_add_timer_task+0x3a>
		list_insert_as_head(list, new_task);
     772:	4b12      	ldr	r3, [pc, #72]	; (7bc <timer_add_timer_task+0x68>)
     774:	4798      	blx	r3
		return;
     776:	e018      	b.n	7aa <timer_add_timer_task+0x56>
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     778:	18fb      	adds	r3, r7, r3
     77a:	68a0      	ldr	r0, [r4, #8]
     77c:	4680      	mov	r8, r0
     77e:	4443      	add	r3, r8
		if (time_left >= new_task->interval)
     780:	42b3      	cmp	r3, r6
     782:	d20c      	bcs.n	79e <timer_add_timer_task+0x4a>
 * \return A pointer to the next list element or NULL if there is not next
 * element
 */
static inline void *list_get_next_element(const void *const element)
{
	return element ? ((struct list_element *)element)->next : NULL;
     784:	6823      	ldr	r3, [r4, #0]
     786:	0025      	movs	r5, r4
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
     788:	2b00      	cmp	r3, #0
     78a:	d00b      	beq.n	7a4 <timer_add_timer_task+0x50>
     78c:	001c      	movs	r4, r3
		if (it->time_label <= time) {
     78e:	6863      	ldr	r3, [r4, #4]
     790:	4293      	cmp	r3, r2
     792:	d8f1      	bhi.n	778 <timer_add_timer_task+0x24>
			time_left = it->interval - (time - it->time_label);
     794:	68a0      	ldr	r0, [r4, #8]
     796:	4680      	mov	r8, r0
     798:	4443      	add	r3, r8
     79a:	1a9b      	subs	r3, r3, r2
     79c:	e7f0      	b.n	780 <timer_add_timer_task+0x2c>
			break;
		prev = it;
	}

	if (it == head) {
     79e:	45a4      	cmp	ip, r4
     7a0:	d007      	beq.n	7b2 <timer_add_timer_task+0x5e>
     7a2:	002c      	movs	r4, r5
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
     7a4:	0020      	movs	r0, r4
     7a6:	4b06      	ldr	r3, [pc, #24]	; (7c0 <timer_add_timer_task+0x6c>)
     7a8:	4798      	blx	r3
	}
}
     7aa:	bc0c      	pop	{r2, r3}
     7ac:	4690      	mov	r8, r2
     7ae:	4699      	mov	r9, r3
     7b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
     7b2:	4648      	mov	r0, r9
     7b4:	4b01      	ldr	r3, [pc, #4]	; (7bc <timer_add_timer_task+0x68>)
     7b6:	4798      	blx	r3
     7b8:	e7f7      	b.n	7aa <timer_add_timer_task+0x56>
     7ba:	46c0      	nop			; (mov r8, r8)
     7bc:	00000f89 	.word	0x00000f89
     7c0:	00000fb5 	.word	0x00000fb5

000007c4 <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
     7c4:	b5f0      	push	{r4, r5, r6, r7, lr}
     7c6:	46c6      	mov	lr, r8
     7c8:	b500      	push	{lr}
     7ca:	b082      	sub	sp, #8
     7cc:	0007      	movs	r7, r0
	return (void *)list->head;
     7ce:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
     7d0:	6903      	ldr	r3, [r0, #16]
     7d2:	3301      	adds	r3, #1
     7d4:	4698      	mov	r8, r3
     7d6:	6103      	str	r3, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
     7d8:	7e03      	ldrb	r3, [r0, #24]
     7da:	07db      	lsls	r3, r3, #31
     7dc:	d411      	bmi.n	802 <timer_process_counted+0x3e>
     7de:	7e03      	ldrb	r3, [r0, #24]
     7e0:	079b      	lsls	r3, r3, #30
     7e2:	d40e      	bmi.n	802 <timer_process_counted+0x3e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
		return;
	}

	while (it && ((time - it->time_label) >= it->interval)) {
     7e4:	2c00      	cmp	r4, #0
     7e6:	d010      	beq.n	80a <timer_process_counted+0x46>
     7e8:	4643      	mov	r3, r8
     7ea:	6862      	ldr	r2, [r4, #4]
     7ec:	1a9b      	subs	r3, r3, r2
     7ee:	68a2      	ldr	r2, [r4, #8]
     7f0:	4293      	cmp	r3, r2
     7f2:	d30a      	bcc.n	80a <timer_process_counted+0x46>
		struct timer_task *tmp = it;

		list_remove_head(&timer->tasks);
     7f4:	2314      	movs	r3, #20
     7f6:	469c      	mov	ip, r3
     7f8:	4484      	add	ip, r0
     7fa:	4663      	mov	r3, ip
     7fc:	9301      	str	r3, [sp, #4]
     7fe:	4e12      	ldr	r6, [pc, #72]	; (848 <timer_process_counted+0x84>)
     800:	e014      	b.n	82c <timer_process_counted+0x68>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
     802:	7e3b      	ldrb	r3, [r7, #24]
     804:	2202      	movs	r2, #2
     806:	4313      	orrs	r3, r2
     808:	763b      	strb	r3, [r7, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
     80a:	b002      	add	sp, #8
     80c:	bc04      	pop	{r2}
     80e:	4690      	mov	r8, r2
     810:	bdf0      	pop	{r4, r5, r6, r7, pc}
     812:	697d      	ldr	r5, [r7, #20]
		tmp->cb(tmp);
     814:	68e3      	ldr	r3, [r4, #12]
     816:	0020      	movs	r0, r4
     818:	4798      	blx	r3
	while (it && ((time - it->time_label) >= it->interval)) {
     81a:	2d00      	cmp	r5, #0
     81c:	d0f5      	beq.n	80a <timer_process_counted+0x46>
		it = (struct timer_task *)list_get_head(&timer->tasks);
     81e:	002c      	movs	r4, r5
	while (it && ((time - it->time_label) >= it->interval)) {
     820:	4643      	mov	r3, r8
     822:	686a      	ldr	r2, [r5, #4]
     824:	1a9b      	subs	r3, r3, r2
     826:	68aa      	ldr	r2, [r5, #8]
     828:	4293      	cmp	r3, r2
     82a:	d3ee      	bcc.n	80a <timer_process_counted+0x46>
		list_remove_head(&timer->tasks);
     82c:	9801      	ldr	r0, [sp, #4]
     82e:	47b0      	blx	r6
		if (TIMER_TASK_REPEAT == tmp->mode) {
     830:	7c23      	ldrb	r3, [r4, #16]
     832:	2b01      	cmp	r3, #1
     834:	d1ed      	bne.n	812 <timer_process_counted+0x4e>
			tmp->time_label = time;
     836:	4643      	mov	r3, r8
     838:	6063      	str	r3, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
     83a:	4642      	mov	r2, r8
     83c:	0021      	movs	r1, r4
     83e:	9801      	ldr	r0, [sp, #4]
     840:	4b02      	ldr	r3, [pc, #8]	; (84c <timer_process_counted+0x88>)
     842:	4798      	blx	r3
     844:	e7e5      	b.n	812 <timer_process_counted+0x4e>
     846:	46c0      	nop			; (mov r8, r8)
     848:	00000fbd 	.word	0x00000fbd
     84c:	00000755 	.word	0x00000755

00000850 <timer_init>:
{
     850:	b570      	push	{r4, r5, r6, lr}
     852:	0005      	movs	r5, r0
     854:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     856:	2800      	cmp	r0, #0
     858:	d011      	beq.n	87e <timer_init+0x2e>
     85a:	0008      	movs	r0, r1
     85c:	1e43      	subs	r3, r0, #1
     85e:	4198      	sbcs	r0, r3
     860:	b2c0      	uxtb	r0, r0
     862:	223b      	movs	r2, #59	; 0x3b
     864:	4907      	ldr	r1, [pc, #28]	; (884 <timer_init+0x34>)
     866:	4b08      	ldr	r3, [pc, #32]	; (888 <timer_init+0x38>)
     868:	4798      	blx	r3
	_timer_init(&descr->device, hw);
     86a:	0021      	movs	r1, r4
     86c:	0028      	movs	r0, r5
     86e:	4b07      	ldr	r3, [pc, #28]	; (88c <timer_init+0x3c>)
     870:	4798      	blx	r3
	descr->time                           = 0;
     872:	2300      	movs	r3, #0
     874:	612b      	str	r3, [r5, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
     876:	4b06      	ldr	r3, [pc, #24]	; (890 <timer_init+0x40>)
     878:	602b      	str	r3, [r5, #0]
}
     87a:	2000      	movs	r0, #0
     87c:	bd70      	pop	{r4, r5, r6, pc}
     87e:	2000      	movs	r0, #0
     880:	e7ef      	b.n	862 <timer_init+0x12>
     882:	46c0      	nop			; (mov r8, r8)
     884:	00009e64 	.word	0x00009e64
     888:	00000f5d 	.word	0x00000f5d
     88c:	00001a3d 	.word	0x00001a3d
     890:	000007c5 	.word	0x000007c5

00000894 <timer_start>:
{
     894:	b510      	push	{r4, lr}
     896:	0004      	movs	r4, r0
	ASSERT(descr);
     898:	1e43      	subs	r3, r0, #1
     89a:	4198      	sbcs	r0, r3
     89c:	b2c0      	uxtb	r0, r0
     89e:	2253      	movs	r2, #83	; 0x53
     8a0:	4907      	ldr	r1, [pc, #28]	; (8c0 <timer_start+0x2c>)
     8a2:	4b08      	ldr	r3, [pc, #32]	; (8c4 <timer_start+0x30>)
     8a4:	4798      	blx	r3
	if (_timer_is_started(&descr->device)) {
     8a6:	0020      	movs	r0, r4
     8a8:	4b07      	ldr	r3, [pc, #28]	; (8c8 <timer_start+0x34>)
     8aa:	4798      	blx	r3
     8ac:	2800      	cmp	r0, #0
     8ae:	d104      	bne.n	8ba <timer_start+0x26>
	_timer_start(&descr->device);
     8b0:	0020      	movs	r0, r4
     8b2:	4b06      	ldr	r3, [pc, #24]	; (8cc <timer_start+0x38>)
     8b4:	4798      	blx	r3
	return ERR_NONE;
     8b6:	2000      	movs	r0, #0
}
     8b8:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     8ba:	2011      	movs	r0, #17
     8bc:	4240      	negs	r0, r0
     8be:	e7fb      	b.n	8b8 <timer_start+0x24>
     8c0:	00009e64 	.word	0x00009e64
     8c4:	00000f5d 	.word	0x00000f5d
     8c8:	00001b5d 	.word	0x00001b5d
     8cc:	00001b51 	.word	0x00001b51

000008d0 <timer_add_task>:
{
     8d0:	b570      	push	{r4, r5, r6, lr}
     8d2:	b082      	sub	sp, #8
     8d4:	0004      	movs	r4, r0
     8d6:	000d      	movs	r5, r1
	ASSERT(descr && task);
     8d8:	2800      	cmp	r0, #0
     8da:	d024      	beq.n	926 <timer_add_task+0x56>
     8dc:	0008      	movs	r0, r1
     8de:	1e43      	subs	r3, r0, #1
     8e0:	4198      	sbcs	r0, r3
     8e2:	b2c0      	uxtb	r0, r0
     8e4:	227a      	movs	r2, #122	; 0x7a
     8e6:	491e      	ldr	r1, [pc, #120]	; (960 <timer_add_task+0x90>)
     8e8:	4b1e      	ldr	r3, [pc, #120]	; (964 <timer_add_task+0x94>)
     8ea:	4798      	blx	r3
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     8ec:	7e23      	ldrb	r3, [r4, #24]
     8ee:	2201      	movs	r2, #1
     8f0:	4313      	orrs	r3, r2
     8f2:	7623      	strb	r3, [r4, #24]
	if (is_list_element(&descr->tasks, task)) {
     8f4:	0026      	movs	r6, r4
     8f6:	3614      	adds	r6, #20
     8f8:	0029      	movs	r1, r5
     8fa:	0030      	movs	r0, r6
     8fc:	4b1a      	ldr	r3, [pc, #104]	; (968 <timer_add_task+0x98>)
     8fe:	4798      	blx	r3
     900:	2800      	cmp	r0, #0
     902:	d112      	bne.n	92a <timer_add_task+0x5a>
	task->time_label = descr->time;
     904:	6923      	ldr	r3, [r4, #16]
     906:	606b      	str	r3, [r5, #4]
	timer_add_timer_task(&descr->tasks, task, descr->time);
     908:	6922      	ldr	r2, [r4, #16]
     90a:	0029      	movs	r1, r5
     90c:	0030      	movs	r0, r6
     90e:	4b17      	ldr	r3, [pc, #92]	; (96c <timer_add_task+0x9c>)
     910:	4798      	blx	r3
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     912:	7e23      	ldrb	r3, [r4, #24]
     914:	2201      	movs	r2, #1
     916:	4393      	bics	r3, r2
     918:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     91a:	7e23      	ldrb	r3, [r4, #24]
	return ERR_NONE;
     91c:	2000      	movs	r0, #0
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     91e:	079b      	lsls	r3, r3, #30
     920:	d40f      	bmi.n	942 <timer_add_task+0x72>
}
     922:	b002      	add	sp, #8
     924:	bd70      	pop	{r4, r5, r6, pc}
     926:	2000      	movs	r0, #0
     928:	e7dc      	b.n	8e4 <timer_add_task+0x14>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     92a:	7e23      	ldrb	r3, [r4, #24]
     92c:	2201      	movs	r2, #1
     92e:	4393      	bics	r3, r2
     930:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     932:	327e      	adds	r2, #126	; 0x7e
     934:	490a      	ldr	r1, [pc, #40]	; (960 <timer_add_task+0x90>)
     936:	2000      	movs	r0, #0
     938:	4b0a      	ldr	r3, [pc, #40]	; (964 <timer_add_task+0x94>)
     93a:	4798      	blx	r3
		return ERR_ALREADY_INITIALIZED;
     93c:	2012      	movs	r0, #18
     93e:	4240      	negs	r0, r0
     940:	e7ef      	b.n	922 <timer_add_task+0x52>
		CRITICAL_SECTION_ENTER()
     942:	a801      	add	r0, sp, #4
     944:	4b0a      	ldr	r3, [pc, #40]	; (970 <timer_add_task+0xa0>)
     946:	4798      	blx	r3
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     948:	7e23      	ldrb	r3, [r4, #24]
     94a:	2202      	movs	r2, #2
     94c:	4393      	bics	r3, r2
     94e:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     950:	0020      	movs	r0, r4
     952:	4b08      	ldr	r3, [pc, #32]	; (974 <timer_add_task+0xa4>)
     954:	4798      	blx	r3
		CRITICAL_SECTION_LEAVE()
     956:	a801      	add	r0, sp, #4
     958:	4b07      	ldr	r3, [pc, #28]	; (978 <timer_add_task+0xa8>)
     95a:	4798      	blx	r3
	return ERR_NONE;
     95c:	2000      	movs	r0, #0
     95e:	e7e0      	b.n	922 <timer_add_task+0x52>
     960:	00009e64 	.word	0x00009e64
     964:	00000f5d 	.word	0x00000f5d
     968:	00000f65 	.word	0x00000f65
     96c:	00000755 	.word	0x00000755
     970:	000005f9 	.word	0x000005f9
     974:	00001b6d 	.word	0x00001b6d
     978:	00000607 	.word	0x00000607

0000097c <timer_remove_task>:
{
     97c:	b570      	push	{r4, r5, r6, lr}
     97e:	b082      	sub	sp, #8
     980:	0004      	movs	r4, r0
     982:	000d      	movs	r5, r1
	ASSERT(descr && task);
     984:	2800      	cmp	r0, #0
     986:	d021      	beq.n	9cc <timer_remove_task+0x50>
     988:	0008      	movs	r0, r1
     98a:	1e43      	subs	r3, r0, #1
     98c:	4198      	sbcs	r0, r3
     98e:	b2c0      	uxtb	r0, r0
     990:	2295      	movs	r2, #149	; 0x95
     992:	491c      	ldr	r1, [pc, #112]	; (a04 <timer_remove_task+0x88>)
     994:	4b1c      	ldr	r3, [pc, #112]	; (a08 <timer_remove_task+0x8c>)
     996:	4798      	blx	r3
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     998:	7e23      	ldrb	r3, [r4, #24]
     99a:	2201      	movs	r2, #1
     99c:	4313      	orrs	r3, r2
     99e:	7623      	strb	r3, [r4, #24]
	if (!is_list_element(&descr->tasks, task)) {
     9a0:	0026      	movs	r6, r4
     9a2:	3614      	adds	r6, #20
     9a4:	0029      	movs	r1, r5
     9a6:	0030      	movs	r0, r6
     9a8:	4b18      	ldr	r3, [pc, #96]	; (a0c <timer_remove_task+0x90>)
     9aa:	4798      	blx	r3
     9ac:	2800      	cmp	r0, #0
     9ae:	d00f      	beq.n	9d0 <timer_remove_task+0x54>
	list_delete_element(&descr->tasks, task);
     9b0:	0029      	movs	r1, r5
     9b2:	0030      	movs	r0, r6
     9b4:	4b16      	ldr	r3, [pc, #88]	; (a10 <timer_remove_task+0x94>)
     9b6:	4798      	blx	r3
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     9b8:	7e23      	ldrb	r3, [r4, #24]
     9ba:	2201      	movs	r2, #1
     9bc:	4393      	bics	r3, r2
     9be:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     9c0:	7e23      	ldrb	r3, [r4, #24]
	return ERR_NONE;
     9c2:	2000      	movs	r0, #0
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     9c4:	079b      	lsls	r3, r3, #30
     9c6:	d40e      	bmi.n	9e6 <timer_remove_task+0x6a>
}
     9c8:	b002      	add	sp, #8
     9ca:	bd70      	pop	{r4, r5, r6, pc}
     9cc:	2000      	movs	r0, #0
     9ce:	e7df      	b.n	990 <timer_remove_task+0x14>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     9d0:	7e23      	ldrb	r3, [r4, #24]
     9d2:	2201      	movs	r2, #1
     9d4:	4393      	bics	r3, r2
     9d6:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     9d8:	3299      	adds	r2, #153	; 0x99
     9da:	490a      	ldr	r1, [pc, #40]	; (a04 <timer_remove_task+0x88>)
     9dc:	4b0a      	ldr	r3, [pc, #40]	; (a08 <timer_remove_task+0x8c>)
     9de:	4798      	blx	r3
		return ERR_NOT_FOUND;
     9e0:	200a      	movs	r0, #10
     9e2:	4240      	negs	r0, r0
     9e4:	e7f0      	b.n	9c8 <timer_remove_task+0x4c>
		CRITICAL_SECTION_ENTER()
     9e6:	a801      	add	r0, sp, #4
     9e8:	4b0a      	ldr	r3, [pc, #40]	; (a14 <timer_remove_task+0x98>)
     9ea:	4798      	blx	r3
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     9ec:	7e23      	ldrb	r3, [r4, #24]
     9ee:	2202      	movs	r2, #2
     9f0:	4393      	bics	r3, r2
     9f2:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     9f4:	0020      	movs	r0, r4
     9f6:	4b08      	ldr	r3, [pc, #32]	; (a18 <timer_remove_task+0x9c>)
     9f8:	4798      	blx	r3
		CRITICAL_SECTION_LEAVE()
     9fa:	a801      	add	r0, sp, #4
     9fc:	4b07      	ldr	r3, [pc, #28]	; (a1c <timer_remove_task+0xa0>)
     9fe:	4798      	blx	r3
	return ERR_NONE;
     a00:	2000      	movs	r0, #0
     a02:	e7e1      	b.n	9c8 <timer_remove_task+0x4c>
     a04:	00009e64 	.word	0x00009e64
     a08:	00000f5d 	.word	0x00000f5d
     a0c:	00000f65 	.word	0x00000f65
     a10:	00000fcb 	.word	0x00000fcb
     a14:	000005f9 	.word	0x000005f9
     a18:	00001b6d 	.word	0x00001b6d
     a1c:	00000607 	.word	0x00000607

00000a20 <usart_transmission_complete>:
 * \brief Process completion of data sending
 *
 * \param[in] device The pointer to device structure
 */
static void usart_transmission_complete(struct _usart_async_device *device)
{
     a20:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     a22:	3808      	subs	r0, #8

	descr->stat = 0;
     a24:	2300      	movs	r3, #0
     a26:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.tx_done) {
     a28:	6a43      	ldr	r3, [r0, #36]	; 0x24
     a2a:	2b00      	cmp	r3, #0
     a2c:	d000      	beq.n	a30 <usart_transmission_complete+0x10>
		descr->usart_cb.tx_done(descr);
     a2e:	4798      	blx	r3
	}
}
     a30:	bd10      	pop	{r4, pc}

00000a32 <usart_error>:
 * \brief Process error interrupt
 *
 * \param[in] device The pointer to device structure
 */
static void usart_error(struct _usart_async_device *device)
{
     a32:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     a34:	3808      	subs	r0, #8

	descr->stat = 0;
     a36:	2300      	movs	r3, #0
     a38:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.error) {
     a3a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     a3c:	2b00      	cmp	r3, #0
     a3e:	d000      	beq.n	a42 <usart_error+0x10>
		descr->usart_cb.error(descr);
     a40:	4798      	blx	r3
	}
}
     a42:	bd10      	pop	{r4, pc}

00000a44 <usart_fill_rx_buffer>:
{
     a44:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     a46:	0004      	movs	r4, r0
	ringbuffer_put(&descr->rx, data);
     a48:	302c      	adds	r0, #44	; 0x2c
     a4a:	4b04      	ldr	r3, [pc, #16]	; (a5c <usart_fill_rx_buffer+0x18>)
     a4c:	4798      	blx	r3
	if (descr->usart_cb.rx_done) {
     a4e:	6a23      	ldr	r3, [r4, #32]
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     a50:	3c08      	subs	r4, #8
	if (descr->usart_cb.rx_done) {
     a52:	2b00      	cmp	r3, #0
     a54:	d001      	beq.n	a5a <usart_fill_rx_buffer+0x16>
		descr->usart_cb.rx_done(descr);
     a56:	0020      	movs	r0, r4
     a58:	4798      	blx	r3
}
     a5a:	bd10      	pop	{r4, pc}
     a5c:	000010a9 	.word	0x000010a9

00000a60 <usart_async_write>:
{
     a60:	b570      	push	{r4, r5, r6, lr}
     a62:	0004      	movs	r4, r0
     a64:	000e      	movs	r6, r1
     a66:	0015      	movs	r5, r2
	ASSERT(descr && buf && length);
     a68:	2800      	cmp	r0, #0
     a6a:	d01d      	beq.n	aa8 <usart_async_write+0x48>
     a6c:	2900      	cmp	r1, #0
     a6e:	d01d      	beq.n	aac <usart_async_write+0x4c>
     a70:	0010      	movs	r0, r2
     a72:	1e43      	subs	r3, r0, #1
     a74:	4198      	sbcs	r0, r3
     a76:	223c      	movs	r2, #60	; 0x3c
     a78:	32ff      	adds	r2, #255	; 0xff
     a7a:	490f      	ldr	r1, [pc, #60]	; (ab8 <usart_async_write+0x58>)
     a7c:	4b0f      	ldr	r3, [pc, #60]	; (abc <usart_async_write+0x5c>)
     a7e:	4798      	blx	r3
	if (descr->tx_por != descr->tx_buffer_length) {
     a80:	2344      	movs	r3, #68	; 0x44
     a82:	5ae2      	ldrh	r2, [r4, r3]
     a84:	3308      	adds	r3, #8
     a86:	5ae3      	ldrh	r3, [r4, r3]
     a88:	429a      	cmp	r2, r3
     a8a:	d111      	bne.n	ab0 <usart_async_write+0x50>
	descr->tx_buffer        = (uint8_t *)buf;
     a8c:	64a6      	str	r6, [r4, #72]	; 0x48
	descr->tx_buffer_length = length;
     a8e:	234c      	movs	r3, #76	; 0x4c
     a90:	52e5      	strh	r5, [r4, r3]
	descr->tx_por           = 0;
     a92:	2200      	movs	r2, #0
     a94:	3b08      	subs	r3, #8
     a96:	52e2      	strh	r2, [r4, r3]
	descr->stat             = USART_ASYNC_STATUS_BUSY;
     a98:	3b43      	subs	r3, #67	; 0x43
     a9a:	6323      	str	r3, [r4, #48]	; 0x30
	_usart_async_enable_byte_sent_irq(&descr->device);
     a9c:	0020      	movs	r0, r4
     a9e:	3008      	adds	r0, #8
     aa0:	4b07      	ldr	r3, [pc, #28]	; (ac0 <usart_async_write+0x60>)
     aa2:	4798      	blx	r3
	return (int32_t)length;
     aa4:	0028      	movs	r0, r5
}
     aa6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && buf && length);
     aa8:	2000      	movs	r0, #0
     aaa:	e7e4      	b.n	a76 <usart_async_write+0x16>
     aac:	2000      	movs	r0, #0
     aae:	e7e2      	b.n	a76 <usart_async_write+0x16>
		return ERR_NO_RESOURCE;
     ab0:	201c      	movs	r0, #28
     ab2:	4240      	negs	r0, r0
     ab4:	e7f7      	b.n	aa6 <usart_async_write+0x46>
     ab6:	46c0      	nop			; (mov r8, r8)
     ab8:	00009e80 	.word	0x00009e80
     abc:	00000f5d 	.word	0x00000f5d
     ac0:	0000196f 	.word	0x0000196f

00000ac4 <usart_process_byte_sent>:
{
     ac4:	b570      	push	{r4, r5, r6, lr}
     ac6:	0004      	movs	r4, r0
	if (descr->tx_por != descr->tx_buffer_length) {
     ac8:	0001      	movs	r1, r0
     aca:	3908      	subs	r1, #8
     acc:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
     ace:	224c      	movs	r2, #76	; 0x4c
     ad0:	5a8a      	ldrh	r2, [r1, r2]
     ad2:	429a      	cmp	r2, r3
     ad4:	d00c      	beq.n	af0 <usart_process_byte_sent+0x2c>
		_usart_async_write_byte(&descr->device, descr->tx_buffer[descr->tx_por++]);
     ad6:	000a      	movs	r2, r1
     ad8:	6c89      	ldr	r1, [r1, #72]	; 0x48
     ada:	1c5d      	adds	r5, r3, #1
     adc:	2044      	movs	r0, #68	; 0x44
     ade:	5215      	strh	r5, [r2, r0]
     ae0:	5cc9      	ldrb	r1, [r1, r3]
     ae2:	0020      	movs	r0, r4
     ae4:	4b04      	ldr	r3, [pc, #16]	; (af8 <usart_process_byte_sent+0x34>)
     ae6:	4798      	blx	r3
		_usart_async_enable_byte_sent_irq(&descr->device);
     ae8:	0020      	movs	r0, r4
     aea:	4b04      	ldr	r3, [pc, #16]	; (afc <usart_process_byte_sent+0x38>)
     aec:	4798      	blx	r3
}
     aee:	bd70      	pop	{r4, r5, r6, pc}
		_usart_async_enable_tx_done_irq(&descr->device);
     af0:	4b03      	ldr	r3, [pc, #12]	; (b00 <usart_process_byte_sent+0x3c>)
     af2:	4798      	blx	r3
}
     af4:	e7fb      	b.n	aee <usart_process_byte_sent+0x2a>
     af6:	46c0      	nop			; (mov r8, r8)
     af8:	00001935 	.word	0x00001935
     afc:	0000196f 	.word	0x0000196f
     b00:	00001977 	.word	0x00001977

00000b04 <usart_async_read>:
{
     b04:	b5f0      	push	{r4, r5, r6, r7, lr}
     b06:	46ce      	mov	lr, r9
     b08:	4647      	mov	r7, r8
     b0a:	b580      	push	{r7, lr}
     b0c:	b085      	sub	sp, #20
     b0e:	0005      	movs	r5, r0
     b10:	000e      	movs	r6, r1
     b12:	0017      	movs	r7, r2
	ASSERT(descr && buf && length);
     b14:	2800      	cmp	r0, #0
     b16:	d015      	beq.n	b44 <usart_async_read+0x40>
     b18:	2900      	cmp	r1, #0
     b1a:	d013      	beq.n	b44 <usart_async_read+0x40>
     b1c:	2a00      	cmp	r2, #0
     b1e:	d12a      	bne.n	b76 <usart_async_read+0x72>
     b20:	22ac      	movs	r2, #172	; 0xac
     b22:	0052      	lsls	r2, r2, #1
     b24:	4929      	ldr	r1, [pc, #164]	; (bcc <usart_async_read+0xc8>)
     b26:	2000      	movs	r0, #0
     b28:	4b29      	ldr	r3, [pc, #164]	; (bd0 <usart_async_read+0xcc>)
     b2a:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     b2c:	a803      	add	r0, sp, #12
     b2e:	4b29      	ldr	r3, [pc, #164]	; (bd4 <usart_async_read+0xd0>)
     b30:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     b32:	0028      	movs	r0, r5
     b34:	3034      	adds	r0, #52	; 0x34
     b36:	4b28      	ldr	r3, [pc, #160]	; (bd8 <usart_async_read+0xd4>)
     b38:	4798      	blx	r3
	CRITICAL_SECTION_LEAVE()
     b3a:	a803      	add	r0, sp, #12
     b3c:	4b27      	ldr	r3, [pc, #156]	; (bdc <usart_async_read+0xd8>)
     b3e:	4798      	blx	r3
	uint16_t                       was_read = 0;
     b40:	2500      	movs	r5, #0
	return (int32_t)was_read;
     b42:	e03c      	b.n	bbe <usart_async_read+0xba>
	ASSERT(descr && buf && length);
     b44:	22ac      	movs	r2, #172	; 0xac
     b46:	0052      	lsls	r2, r2, #1
     b48:	4920      	ldr	r1, [pc, #128]	; (bcc <usart_async_read+0xc8>)
     b4a:	2000      	movs	r0, #0
     b4c:	4b20      	ldr	r3, [pc, #128]	; (bd0 <usart_async_read+0xcc>)
     b4e:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     b50:	a803      	add	r0, sp, #12
     b52:	4b20      	ldr	r3, [pc, #128]	; (bd4 <usart_async_read+0xd0>)
     b54:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     b56:	3534      	adds	r5, #52	; 0x34
     b58:	0028      	movs	r0, r5
     b5a:	9501      	str	r5, [sp, #4]
     b5c:	4b1e      	ldr	r3, [pc, #120]	; (bd8 <usart_async_read+0xd4>)
     b5e:	4798      	blx	r3
     b60:	4680      	mov	r8, r0
	CRITICAL_SECTION_LEAVE()
     b62:	a803      	add	r0, sp, #12
     b64:	4b1d      	ldr	r3, [pc, #116]	; (bdc <usart_async_read+0xd8>)
     b66:	4798      	blx	r3
	uint16_t                       was_read = 0;
     b68:	2500      	movs	r5, #0
	while ((was_read < num) && (was_read < length)) {
     b6a:	4643      	mov	r3, r8
     b6c:	2b00      	cmp	r3, #0
     b6e:	d026      	beq.n	bbe <usart_async_read+0xba>
     b70:	2f00      	cmp	r7, #0
     b72:	d116      	bne.n	ba2 <usart_async_read+0x9e>
     b74:	e023      	b.n	bbe <usart_async_read+0xba>
	ASSERT(descr && buf && length);
     b76:	22ac      	movs	r2, #172	; 0xac
     b78:	0052      	lsls	r2, r2, #1
     b7a:	4914      	ldr	r1, [pc, #80]	; (bcc <usart_async_read+0xc8>)
     b7c:	2001      	movs	r0, #1
     b7e:	4b14      	ldr	r3, [pc, #80]	; (bd0 <usart_async_read+0xcc>)
     b80:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     b82:	a803      	add	r0, sp, #12
     b84:	4b13      	ldr	r3, [pc, #76]	; (bd4 <usart_async_read+0xd0>)
     b86:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     b88:	3534      	adds	r5, #52	; 0x34
     b8a:	0028      	movs	r0, r5
     b8c:	9501      	str	r5, [sp, #4]
     b8e:	4b12      	ldr	r3, [pc, #72]	; (bd8 <usart_async_read+0xd4>)
     b90:	4798      	blx	r3
     b92:	4680      	mov	r8, r0
	CRITICAL_SECTION_LEAVE()
     b94:	a803      	add	r0, sp, #12
     b96:	4b11      	ldr	r3, [pc, #68]	; (bdc <usart_async_read+0xd8>)
     b98:	4798      	blx	r3
	while ((was_read < num) && (was_read < length)) {
     b9a:	4643      	mov	r3, r8
	uint16_t                       was_read = 0;
     b9c:	2500      	movs	r5, #0
	while ((was_read < num) && (was_read < length)) {
     b9e:	2b00      	cmp	r3, #0
     ba0:	d00d      	beq.n	bbe <usart_async_read+0xba>
{
     ba2:	2400      	movs	r4, #0
		ringbuffer_get(&descr->rx, &buf[was_read++]);
     ba4:	4b0e      	ldr	r3, [pc, #56]	; (be0 <usart_async_read+0xdc>)
     ba6:	4699      	mov	r9, r3
     ba8:	1c65      	adds	r5, r4, #1
     baa:	b2ad      	uxth	r5, r5
     bac:	1931      	adds	r1, r6, r4
     bae:	9801      	ldr	r0, [sp, #4]
     bb0:	47c8      	blx	r9
     bb2:	3401      	adds	r4, #1
	while ((was_read < num) && (was_read < length)) {
     bb4:	4544      	cmp	r4, r8
     bb6:	d202      	bcs.n	bbe <usart_async_read+0xba>
     bb8:	b2a3      	uxth	r3, r4
     bba:	429f      	cmp	r7, r3
     bbc:	d8f4      	bhi.n	ba8 <usart_async_read+0xa4>
}
     bbe:	0028      	movs	r0, r5
     bc0:	b005      	add	sp, #20
     bc2:	bc0c      	pop	{r2, r3}
     bc4:	4690      	mov	r8, r2
     bc6:	4699      	mov	r9, r3
     bc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     bca:	46c0      	nop			; (mov r8, r8)
     bcc:	00009e80 	.word	0x00009e80
     bd0:	00000f5d 	.word	0x00000f5d
     bd4:	000005f9 	.word	0x000005f9
     bd8:	000010e9 	.word	0x000010e9
     bdc:	00000607 	.word	0x00000607
     be0:	00001061 	.word	0x00001061

00000be4 <usart_async_init>:
{
     be4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     be6:	0004      	movs	r4, r0
     be8:	000d      	movs	r5, r1
     bea:	0016      	movs	r6, r2
     bec:	001f      	movs	r7, r3
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     bee:	2800      	cmp	r0, #0
     bf0:	d026      	beq.n	c40 <usart_async_init+0x5c>
     bf2:	2900      	cmp	r1, #0
     bf4:	d026      	beq.n	c44 <usart_async_init+0x60>
     bf6:	2a00      	cmp	r2, #0
     bf8:	d026      	beq.n	c48 <usart_async_init+0x64>
     bfa:	0018      	movs	r0, r3
     bfc:	1e43      	subs	r3, r0, #1
     bfe:	4198      	sbcs	r0, r3
     c00:	223a      	movs	r2, #58	; 0x3a
     c02:	4914      	ldr	r1, [pc, #80]	; (c54 <usart_async_init+0x70>)
     c04:	4b14      	ldr	r3, [pc, #80]	; (c58 <usart_async_init+0x74>)
     c06:	4798      	blx	r3
	if (ERR_NONE != ringbuffer_init(&descr->rx, rx_buffer, rx_buffer_length)) {
     c08:	0020      	movs	r0, r4
     c0a:	3034      	adds	r0, #52	; 0x34
     c0c:	003a      	movs	r2, r7
     c0e:	0031      	movs	r1, r6
     c10:	4b12      	ldr	r3, [pc, #72]	; (c5c <usart_async_init+0x78>)
     c12:	4798      	blx	r3
     c14:	2800      	cmp	r0, #0
     c16:	d119      	bne.n	c4c <usart_async_init+0x68>
	init_status = _usart_async_init(&descr->device, hw);
     c18:	0020      	movs	r0, r4
     c1a:	3008      	adds	r0, #8
     c1c:	0029      	movs	r1, r5
     c1e:	4b10      	ldr	r3, [pc, #64]	; (c60 <usart_async_init+0x7c>)
     c20:	4798      	blx	r3
	if (init_status) {
     c22:	2800      	cmp	r0, #0
     c24:	d10b      	bne.n	c3e <usart_async_init+0x5a>
	descr->io.read  = usart_async_read;
     c26:	4b0f      	ldr	r3, [pc, #60]	; (c64 <usart_async_init+0x80>)
     c28:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_async_write;
     c2a:	4b0f      	ldr	r3, [pc, #60]	; (c68 <usart_async_init+0x84>)
     c2c:	6023      	str	r3, [r4, #0]
	descr->device.usart_cb.tx_byte_sent = usart_process_byte_sent;
     c2e:	4b0f      	ldr	r3, [pc, #60]	; (c6c <usart_async_init+0x88>)
     c30:	60a3      	str	r3, [r4, #8]
	descr->device.usart_cb.rx_done_cb   = usart_fill_rx_buffer;
     c32:	4b0f      	ldr	r3, [pc, #60]	; (c70 <usart_async_init+0x8c>)
     c34:	60e3      	str	r3, [r4, #12]
	descr->device.usart_cb.tx_done_cb   = usart_transmission_complete;
     c36:	4b0f      	ldr	r3, [pc, #60]	; (c74 <usart_async_init+0x90>)
     c38:	6123      	str	r3, [r4, #16]
	descr->device.usart_cb.error_cb     = usart_error;
     c3a:	4b0f      	ldr	r3, [pc, #60]	; (c78 <usart_async_init+0x94>)
     c3c:	6163      	str	r3, [r4, #20]
}
     c3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     c40:	2000      	movs	r0, #0
     c42:	e7dd      	b.n	c00 <usart_async_init+0x1c>
     c44:	2000      	movs	r0, #0
     c46:	e7db      	b.n	c00 <usart_async_init+0x1c>
     c48:	2000      	movs	r0, #0
     c4a:	e7d9      	b.n	c00 <usart_async_init+0x1c>
		return ERR_INVALID_ARG;
     c4c:	200d      	movs	r0, #13
     c4e:	4240      	negs	r0, r0
     c50:	e7f5      	b.n	c3e <usart_async_init+0x5a>
     c52:	46c0      	nop			; (mov r8, r8)
     c54:	00009e80 	.word	0x00009e80
     c58:	00000f5d 	.word	0x00000f5d
     c5c:	0000100d 	.word	0x0000100d
     c60:	00001829 	.word	0x00001829
     c64:	00000b05 	.word	0x00000b05
     c68:	00000a61 	.word	0x00000a61
     c6c:	00000ac5 	.word	0x00000ac5
     c70:	00000a45 	.word	0x00000a45
     c74:	00000a21 	.word	0x00000a21
     c78:	00000a33 	.word	0x00000a33

00000c7c <usart_async_deinit>:
{
     c7c:	b510      	push	{r4, lr}
     c7e:	0004      	movs	r4, r0
	ASSERT(descr);
     c80:	1e43      	subs	r3, r0, #1
     c82:	4198      	sbcs	r0, r3
     c84:	b2c0      	uxtb	r0, r0
     c86:	2254      	movs	r2, #84	; 0x54
     c88:	4905      	ldr	r1, [pc, #20]	; (ca0 <usart_async_deinit+0x24>)
     c8a:	4b06      	ldr	r3, [pc, #24]	; (ca4 <usart_async_deinit+0x28>)
     c8c:	4798      	blx	r3
	_usart_async_deinit(&descr->device);
     c8e:	0020      	movs	r0, r4
     c90:	3008      	adds	r0, #8
     c92:	4b05      	ldr	r3, [pc, #20]	; (ca8 <usart_async_deinit+0x2c>)
     c94:	4798      	blx	r3
	descr->io.read  = NULL;
     c96:	2300      	movs	r3, #0
     c98:	6063      	str	r3, [r4, #4]
	descr->io.write = NULL;
     c9a:	6023      	str	r3, [r4, #0]
}
     c9c:	2000      	movs	r0, #0
     c9e:	bd10      	pop	{r4, pc}
     ca0:	00009e80 	.word	0x00009e80
     ca4:	00000f5d 	.word	0x00000f5d
     ca8:	0000189d 	.word	0x0000189d

00000cac <usart_async_enable>:
{
     cac:	b510      	push	{r4, lr}
     cae:	0004      	movs	r4, r0
	ASSERT(descr);
     cb0:	1e43      	subs	r3, r0, #1
     cb2:	4198      	sbcs	r0, r3
     cb4:	b2c0      	uxtb	r0, r0
     cb6:	2261      	movs	r2, #97	; 0x61
     cb8:	4904      	ldr	r1, [pc, #16]	; (ccc <usart_async_enable+0x20>)
     cba:	4b05      	ldr	r3, [pc, #20]	; (cd0 <usart_async_enable+0x24>)
     cbc:	4798      	blx	r3
	_usart_async_enable(&descr->device);
     cbe:	0020      	movs	r0, r4
     cc0:	3008      	adds	r0, #8
     cc2:	4b04      	ldr	r3, [pc, #16]	; (cd4 <usart_async_enable+0x28>)
     cc4:	4798      	blx	r3
}
     cc6:	2000      	movs	r0, #0
     cc8:	bd10      	pop	{r4, pc}
     cca:	46c0      	nop			; (mov r8, r8)
     ccc:	00009e80 	.word	0x00009e80
     cd0:	00000f5d 	.word	0x00000f5d
     cd4:	00001905 	.word	0x00001905

00000cd8 <usart_async_disable>:
{
     cd8:	b510      	push	{r4, lr}
     cda:	0004      	movs	r4, r0
	ASSERT(descr);
     cdc:	1e43      	subs	r3, r0, #1
     cde:	4198      	sbcs	r0, r3
     ce0:	b2c0      	uxtb	r0, r0
     ce2:	226c      	movs	r2, #108	; 0x6c
     ce4:	4904      	ldr	r1, [pc, #16]	; (cf8 <usart_async_disable+0x20>)
     ce6:	4b05      	ldr	r3, [pc, #20]	; (cfc <usart_async_disable+0x24>)
     ce8:	4798      	blx	r3
	_usart_async_disable(&descr->device);
     cea:	0020      	movs	r0, r4
     cec:	3008      	adds	r0, #8
     cee:	4b04      	ldr	r3, [pc, #16]	; (d00 <usart_async_disable+0x28>)
     cf0:	4798      	blx	r3
}
     cf2:	2000      	movs	r0, #0
     cf4:	bd10      	pop	{r4, pc}
     cf6:	46c0      	nop			; (mov r8, r8)
     cf8:	00009e80 	.word	0x00009e80
     cfc:	00000f5d 	.word	0x00000f5d
     d00:	00001919 	.word	0x00001919

00000d04 <usart_async_get_io_descriptor>:
{
     d04:	b570      	push	{r4, r5, r6, lr}
     d06:	0004      	movs	r4, r0
     d08:	000d      	movs	r5, r1
	ASSERT(descr && io);
     d0a:	2800      	cmp	r0, #0
     d0c:	d00a      	beq.n	d24 <usart_async_get_io_descriptor+0x20>
     d0e:	0008      	movs	r0, r1
     d10:	1e43      	subs	r3, r0, #1
     d12:	4198      	sbcs	r0, r3
     d14:	b2c0      	uxtb	r0, r0
     d16:	2277      	movs	r2, #119	; 0x77
     d18:	4903      	ldr	r1, [pc, #12]	; (d28 <usart_async_get_io_descriptor+0x24>)
     d1a:	4b04      	ldr	r3, [pc, #16]	; (d2c <usart_async_get_io_descriptor+0x28>)
     d1c:	4798      	blx	r3
	*io = &descr->io;
     d1e:	602c      	str	r4, [r5, #0]
}
     d20:	2000      	movs	r0, #0
     d22:	bd70      	pop	{r4, r5, r6, pc}
     d24:	2000      	movs	r0, #0
     d26:	e7f6      	b.n	d16 <usart_async_get_io_descriptor+0x12>
     d28:	00009e80 	.word	0x00009e80
     d2c:	00000f5d 	.word	0x00000f5d

00000d30 <usart_async_register_callback>:
{
     d30:	b570      	push	{r4, r5, r6, lr}
     d32:	0005      	movs	r5, r0
     d34:	000e      	movs	r6, r1
     d36:	0014      	movs	r4, r2
	ASSERT(descr);
     d38:	1e43      	subs	r3, r0, #1
     d3a:	4198      	sbcs	r0, r3
     d3c:	b2c0      	uxtb	r0, r0
     d3e:	2283      	movs	r2, #131	; 0x83
     d40:	4916      	ldr	r1, [pc, #88]	; (d9c <usart_async_register_callback+0x6c>)
     d42:	4b17      	ldr	r3, [pc, #92]	; (da0 <usart_async_register_callback+0x70>)
     d44:	4798      	blx	r3
	switch (type) {
     d46:	2e01      	cmp	r6, #1
     d48:	d011      	beq.n	d6e <usart_async_register_callback+0x3e>
     d4a:	2e00      	cmp	r6, #0
     d4c:	d004      	beq.n	d58 <usart_async_register_callback+0x28>
     d4e:	2e02      	cmp	r6, #2
     d50:	d018      	beq.n	d84 <usart_async_register_callback+0x54>
		return ERR_INVALID_ARG;
     d52:	200d      	movs	r0, #13
     d54:	4240      	negs	r0, r0
     d56:	e009      	b.n	d6c <usart_async_register_callback+0x3c>
		descr->usart_cb.rx_done = cb;
     d58:	62ac      	str	r4, [r5, #40]	; 0x28
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_RX_DONE, NULL != cb);
     d5a:	1e62      	subs	r2, r4, #1
     d5c:	4194      	sbcs	r4, r2
     d5e:	b2e2      	uxtb	r2, r4
     d60:	0028      	movs	r0, r5
     d62:	3008      	adds	r0, #8
     d64:	2101      	movs	r1, #1
     d66:	4b0f      	ldr	r3, [pc, #60]	; (da4 <usart_async_register_callback+0x74>)
     d68:	4798      	blx	r3
	return ERR_NONE;
     d6a:	2000      	movs	r0, #0
}
     d6c:	bd70      	pop	{r4, r5, r6, pc}
		descr->usart_cb.tx_done = cb;
     d6e:	626c      	str	r4, [r5, #36]	; 0x24
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_TX_DONE, NULL != cb);
     d70:	1e62      	subs	r2, r4, #1
     d72:	4194      	sbcs	r4, r2
     d74:	b2e2      	uxtb	r2, r4
     d76:	0028      	movs	r0, r5
     d78:	3008      	adds	r0, #8
     d7a:	2102      	movs	r1, #2
     d7c:	4b09      	ldr	r3, [pc, #36]	; (da4 <usart_async_register_callback+0x74>)
     d7e:	4798      	blx	r3
	return ERR_NONE;
     d80:	2000      	movs	r0, #0
		break;
     d82:	e7f3      	b.n	d6c <usart_async_register_callback+0x3c>
		descr->usart_cb.error = cb;
     d84:	62ec      	str	r4, [r5, #44]	; 0x2c
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_ERROR, NULL != cb);
     d86:	1e62      	subs	r2, r4, #1
     d88:	4194      	sbcs	r4, r2
     d8a:	b2e2      	uxtb	r2, r4
     d8c:	0028      	movs	r0, r5
     d8e:	3008      	adds	r0, #8
     d90:	2103      	movs	r1, #3
     d92:	4b04      	ldr	r3, [pc, #16]	; (da4 <usart_async_register_callback+0x74>)
     d94:	4798      	blx	r3
	return ERR_NONE;
     d96:	2000      	movs	r0, #0
		break;
     d98:	e7e8      	b.n	d6c <usart_async_register_callback+0x3c>
     d9a:	46c0      	nop			; (mov r8, r8)
     d9c:	00009e80 	.word	0x00009e80
     da0:	00000f5d 	.word	0x00000f5d
     da4:	00001981 	.word	0x00001981

00000da8 <usart_async_set_flow_control>:
{
     da8:	b570      	push	{r4, r5, r6, lr}
     daa:	0004      	movs	r4, r0
     dac:	1c0d      	adds	r5, r1, #0
	ASSERT(descr);
     dae:	1e43      	subs	r3, r0, #1
     db0:	4198      	sbcs	r0, r3
     db2:	b2c0      	uxtb	r0, r0
     db4:	229f      	movs	r2, #159	; 0x9f
     db6:	4905      	ldr	r1, [pc, #20]	; (dcc <usart_async_set_flow_control+0x24>)
     db8:	4b05      	ldr	r3, [pc, #20]	; (dd0 <usart_async_set_flow_control+0x28>)
     dba:	4798      	blx	r3
	_usart_async_set_flow_control_state(&descr->device, state);
     dbc:	0020      	movs	r0, r4
     dbe:	3008      	adds	r0, #8
     dc0:	1c29      	adds	r1, r5, #0
     dc2:	4b04      	ldr	r3, [pc, #16]	; (dd4 <usart_async_set_flow_control+0x2c>)
     dc4:	4798      	blx	r3
}
     dc6:	2000      	movs	r0, #0
     dc8:	bd70      	pop	{r4, r5, r6, pc}
     dca:	46c0      	nop			; (mov r8, r8)
     dcc:	00009e80 	.word	0x00009e80
     dd0:	00000f5d 	.word	0x00000f5d
     dd4:	0000196d 	.word	0x0000196d

00000dd8 <usart_async_is_tx_empty>:
{
     dd8:	b510      	push	{r4, lr}
     dda:	0004      	movs	r4, r0
	ASSERT(descr);
     ddc:	1e43      	subs	r3, r0, #1
     dde:	4198      	sbcs	r0, r3
     de0:	b2c0      	uxtb	r0, r0
     de2:	22f8      	movs	r2, #248	; 0xf8
     de4:	4903      	ldr	r1, [pc, #12]	; (df4 <usart_async_is_tx_empty+0x1c>)
     de6:	4b04      	ldr	r3, [pc, #16]	; (df8 <usart_async_is_tx_empty+0x20>)
     de8:	4798      	blx	r3
	return _usart_async_is_byte_sent(&descr->device);
     dea:	0020      	movs	r0, r4
     dec:	3008      	adds	r0, #8
     dee:	4b03      	ldr	r3, [pc, #12]	; (dfc <usart_async_is_tx_empty+0x24>)
     df0:	4798      	blx	r3
}
     df2:	bd10      	pop	{r4, pc}
     df4:	00009e80 	.word	0x00009e80
     df8:	00000f5d 	.word	0x00000f5d
     dfc:	00001959 	.word	0x00001959

00000e00 <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     e02:	46ce      	mov	lr, r9
     e04:	4647      	mov	r7, r8
     e06:	b580      	push	{r7, lr}
     e08:	0004      	movs	r4, r0
     e0a:	000f      	movs	r7, r1
     e0c:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     e0e:	2800      	cmp	r0, #0
     e10:	d026      	beq.n	e60 <usart_sync_write+0x60>
     e12:	2900      	cmp	r1, #0
     e14:	d026      	beq.n	e64 <usart_sync_write+0x64>
     e16:	0010      	movs	r0, r2
     e18:	1e43      	subs	r3, r0, #1
     e1a:	4198      	sbcs	r0, r3
     e1c:	22f1      	movs	r2, #241	; 0xf1
     e1e:	4912      	ldr	r1, [pc, #72]	; (e68 <usart_sync_write+0x68>)
     e20:	4b12      	ldr	r3, [pc, #72]	; (e6c <usart_sync_write+0x6c>)
     e22:	4798      	blx	r3
	while (!_usart_sync_is_ready_to_send(&descr->device))
     e24:	3408      	adds	r4, #8
     e26:	4d12      	ldr	r5, [pc, #72]	; (e70 <usart_sync_write+0x70>)
     e28:	0020      	movs	r0, r4
     e2a:	47a8      	blx	r5
     e2c:	2800      	cmp	r0, #0
     e2e:	d0fb      	beq.n	e28 <usart_sync_write+0x28>
     e30:	2600      	movs	r6, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
     e32:	4b10      	ldr	r3, [pc, #64]	; (e74 <usart_sync_write+0x74>)
     e34:	4699      	mov	r9, r3
		while (!_usart_sync_is_ready_to_send(&descr->device))
     e36:	4d0e      	ldr	r5, [pc, #56]	; (e70 <usart_sync_write+0x70>)
		_usart_sync_write_byte(&descr->device, buf[offset]);
     e38:	5db9      	ldrb	r1, [r7, r6]
     e3a:	0020      	movs	r0, r4
     e3c:	47c8      	blx	r9
		while (!_usart_sync_is_ready_to_send(&descr->device))
     e3e:	0020      	movs	r0, r4
     e40:	47a8      	blx	r5
     e42:	2800      	cmp	r0, #0
     e44:	d0fb      	beq.n	e3e <usart_sync_write+0x3e>
			;
	} while (++offset < length);
     e46:	3601      	adds	r6, #1
     e48:	4546      	cmp	r6, r8
     e4a:	d3f5      	bcc.n	e38 <usart_sync_write+0x38>
	while (!_usart_sync_is_transmit_done(&descr->device))
     e4c:	4d0a      	ldr	r5, [pc, #40]	; (e78 <usart_sync_write+0x78>)
     e4e:	0020      	movs	r0, r4
     e50:	47a8      	blx	r5
     e52:	2800      	cmp	r0, #0
     e54:	d0fb      	beq.n	e4e <usart_sync_write+0x4e>
		;
	return (int32_t)offset;
}
     e56:	0030      	movs	r0, r6
     e58:	bc0c      	pop	{r2, r3}
     e5a:	4690      	mov	r8, r2
     e5c:	4699      	mov	r9, r3
     e5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     e60:	2000      	movs	r0, #0
     e62:	e7db      	b.n	e1c <usart_sync_write+0x1c>
     e64:	2000      	movs	r0, #0
     e66:	e7d9      	b.n	e1c <usart_sync_write+0x1c>
     e68:	00009ea4 	.word	0x00009ea4
     e6c:	00000f5d 	.word	0x00000f5d
     e70:	00001945 	.word	0x00001945
     e74:	0000192d 	.word	0x0000192d
     e78:	0000194f 	.word	0x0000194f

00000e7c <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     e7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     e7e:	46ce      	mov	lr, r9
     e80:	4647      	mov	r7, r8
     e82:	b580      	push	{r7, lr}
     e84:	0004      	movs	r4, r0
     e86:	000f      	movs	r7, r1
     e88:	4690      	mov	r8, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     e8a:	2800      	cmp	r0, #0
     e8c:	d01d      	beq.n	eca <usart_sync_read+0x4e>
     e8e:	2900      	cmp	r1, #0
     e90:	d01d      	beq.n	ece <usart_sync_read+0x52>
     e92:	0010      	movs	r0, r2
     e94:	1e43      	subs	r3, r0, #1
     e96:	4198      	sbcs	r0, r3
     e98:	2286      	movs	r2, #134	; 0x86
     e9a:	0052      	lsls	r2, r2, #1
     e9c:	490d      	ldr	r1, [pc, #52]	; (ed4 <usart_sync_read+0x58>)
     e9e:	4b0e      	ldr	r3, [pc, #56]	; (ed8 <usart_sync_read+0x5c>)
     ea0:	4798      	blx	r3
	uint32_t                      offset = 0;
     ea2:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
     ea4:	3408      	adds	r4, #8
     ea6:	4d0d      	ldr	r5, [pc, #52]	; (edc <usart_sync_read+0x60>)
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
     ea8:	4b0d      	ldr	r3, [pc, #52]	; (ee0 <usart_sync_read+0x64>)
     eaa:	4699      	mov	r9, r3
		while (!_usart_sync_is_byte_received(&descr->device))
     eac:	0020      	movs	r0, r4
     eae:	47a8      	blx	r5
     eb0:	2800      	cmp	r0, #0
     eb2:	d0fb      	beq.n	eac <usart_sync_read+0x30>
		buf[offset] = _usart_sync_read_byte(&descr->device);
     eb4:	0020      	movs	r0, r4
     eb6:	47c8      	blx	r9
     eb8:	55b8      	strb	r0, [r7, r6]
	} while (++offset < length);
     eba:	3601      	adds	r6, #1
     ebc:	4546      	cmp	r6, r8
     ebe:	d3f5      	bcc.n	eac <usart_sync_read+0x30>

	return (int32_t)offset;
}
     ec0:	0030      	movs	r0, r6
     ec2:	bc0c      	pop	{r2, r3}
     ec4:	4690      	mov	r8, r2
     ec6:	4699      	mov	r9, r3
     ec8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     eca:	2000      	movs	r0, #0
     ecc:	e7e4      	b.n	e98 <usart_sync_read+0x1c>
     ece:	2000      	movs	r0, #0
     ed0:	e7e2      	b.n	e98 <usart_sync_read+0x1c>
     ed2:	46c0      	nop			; (mov r8, r8)
     ed4:	00009ea4 	.word	0x00009ea4
     ed8:	00000f5d 	.word	0x00000f5d
     edc:	00001963 	.word	0x00001963
     ee0:	0000193d 	.word	0x0000193d

00000ee4 <usart_sync_init>:
{
     ee4:	b570      	push	{r4, r5, r6, lr}
     ee6:	0005      	movs	r5, r0
     ee8:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     eea:	2800      	cmp	r0, #0
     eec:	d013      	beq.n	f16 <usart_sync_init+0x32>
     eee:	0008      	movs	r0, r1
     ef0:	1e43      	subs	r3, r0, #1
     ef2:	4198      	sbcs	r0, r3
     ef4:	b2c0      	uxtb	r0, r0
     ef6:	2234      	movs	r2, #52	; 0x34
     ef8:	4908      	ldr	r1, [pc, #32]	; (f1c <usart_sync_init+0x38>)
     efa:	4b09      	ldr	r3, [pc, #36]	; (f20 <usart_sync_init+0x3c>)
     efc:	4798      	blx	r3
	init_status = _usart_sync_init(&descr->device, hw);
     efe:	0028      	movs	r0, r5
     f00:	3008      	adds	r0, #8
     f02:	0021      	movs	r1, r4
     f04:	4b07      	ldr	r3, [pc, #28]	; (f24 <usart_sync_init+0x40>)
     f06:	4798      	blx	r3
	if (init_status) {
     f08:	2800      	cmp	r0, #0
     f0a:	d103      	bne.n	f14 <usart_sync_init+0x30>
	descr->io.read  = usart_sync_read;
     f0c:	4b06      	ldr	r3, [pc, #24]	; (f28 <usart_sync_init+0x44>)
     f0e:	606b      	str	r3, [r5, #4]
	descr->io.write = usart_sync_write;
     f10:	4b06      	ldr	r3, [pc, #24]	; (f2c <usart_sync_init+0x48>)
     f12:	602b      	str	r3, [r5, #0]
}
     f14:	bd70      	pop	{r4, r5, r6, pc}
     f16:	2000      	movs	r0, #0
     f18:	e7ed      	b.n	ef6 <usart_sync_init+0x12>
     f1a:	46c0      	nop			; (mov r8, r8)
     f1c:	00009ea4 	.word	0x00009ea4
     f20:	00000f5d 	.word	0x00000f5d
     f24:	000017fd 	.word	0x000017fd
     f28:	00000e7d 	.word	0x00000e7d
     f2c:	00000e01 	.word	0x00000e01

00000f30 <usart_sync_enable>:
{
     f30:	b510      	push	{r4, lr}
     f32:	0004      	movs	r4, r0
	ASSERT(descr);
     f34:	1e43      	subs	r3, r0, #1
     f36:	4198      	sbcs	r0, r3
     f38:	b2c0      	uxtb	r0, r0
     f3a:	2253      	movs	r2, #83	; 0x53
     f3c:	4904      	ldr	r1, [pc, #16]	; (f50 <usart_sync_enable+0x20>)
     f3e:	4b05      	ldr	r3, [pc, #20]	; (f54 <usart_sync_enable+0x24>)
     f40:	4798      	blx	r3
	_usart_sync_enable(&descr->device);
     f42:	0020      	movs	r0, r4
     f44:	3008      	adds	r0, #8
     f46:	4b04      	ldr	r3, [pc, #16]	; (f58 <usart_sync_enable+0x28>)
     f48:	4798      	blx	r3
}
     f4a:	2000      	movs	r0, #0
     f4c:	bd10      	pop	{r4, pc}
     f4e:	46c0      	nop			; (mov r8, r8)
     f50:	00009ea4 	.word	0x00009ea4
     f54:	00000f5d 	.word	0x00000f5d
     f58:	000018f1 	.word	0x000018f1

00000f5c <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     f5c:	2800      	cmp	r0, #0
     f5e:	d100      	bne.n	f62 <assert+0x6>
		__asm("BKPT #0");
     f60:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     f62:	4770      	bx	lr

00000f64 <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
     f64:	6803      	ldr	r3, [r0, #0]
     f66:	2b00      	cmp	r3, #0
     f68:	d00a      	beq.n	f80 <is_list_element+0x1c>
		if (it == element) {
     f6a:	428b      	cmp	r3, r1
     f6c:	d00a      	beq.n	f84 <is_list_element+0x20>
	for (it = list->head; it; it = it->next) {
     f6e:	681b      	ldr	r3, [r3, #0]
     f70:	2b00      	cmp	r3, #0
     f72:	d003      	beq.n	f7c <is_list_element+0x18>
		if (it == element) {
     f74:	4299      	cmp	r1, r3
     f76:	d1fa      	bne.n	f6e <is_list_element+0xa>
			return true;
     f78:	2001      	movs	r0, #1
     f7a:	e000      	b.n	f7e <is_list_element+0x1a>
		}
	}

	return false;
     f7c:	2000      	movs	r0, #0
}
     f7e:	4770      	bx	lr
	return false;
     f80:	2000      	movs	r0, #0
     f82:	e7fc      	b.n	f7e <is_list_element+0x1a>
			return true;
     f84:	2001      	movs	r0, #1
     f86:	e7fa      	b.n	f7e <is_list_element+0x1a>

00000f88 <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
     f88:	b570      	push	{r4, r5, r6, lr}
     f8a:	0004      	movs	r4, r0
     f8c:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
     f8e:	4b06      	ldr	r3, [pc, #24]	; (fa8 <list_insert_as_head+0x20>)
     f90:	4798      	blx	r3
     f92:	2301      	movs	r3, #1
     f94:	4058      	eors	r0, r3
     f96:	b2c0      	uxtb	r0, r0
     f98:	2239      	movs	r2, #57	; 0x39
     f9a:	4904      	ldr	r1, [pc, #16]	; (fac <list_insert_as_head+0x24>)
     f9c:	4b04      	ldr	r3, [pc, #16]	; (fb0 <list_insert_as_head+0x28>)
     f9e:	4798      	blx	r3

	((struct list_element *)element)->next = list->head;
     fa0:	6823      	ldr	r3, [r4, #0]
     fa2:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
     fa4:	6025      	str	r5, [r4, #0]
}
     fa6:	bd70      	pop	{r4, r5, r6, pc}
     fa8:	00000f65 	.word	0x00000f65
     fac:	00009ec4 	.word	0x00009ec4
     fb0:	00000f5d 	.word	0x00000f5d

00000fb4 <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
     fb4:	6803      	ldr	r3, [r0, #0]
     fb6:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
     fb8:	6001      	str	r1, [r0, #0]
}
     fba:	4770      	bx	lr

00000fbc <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
     fbc:	6803      	ldr	r3, [r0, #0]
     fbe:	2b00      	cmp	r3, #0
     fc0:	d001      	beq.n	fc6 <list_remove_head+0xa>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
     fc2:	681a      	ldr	r2, [r3, #0]
     fc4:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
	}

	return NULL;
}
     fc6:	0018      	movs	r0, r3
     fc8:	4770      	bx	lr

00000fca <list_delete_element>:
/**
 * \brief Removes list element
 */
bool list_delete_element(struct list_descriptor *const list, const void *const element)
{
	if (!element) {
     fca:	2900      	cmp	r1, #0
     fcc:	d019      	beq.n	1002 <list_delete_element+0x38>
		return false;
	}

	if (list->head == element) {
     fce:	6802      	ldr	r2, [r0, #0]
     fd0:	4291      	cmp	r1, r2
     fd2:	d00b      	beq.n	fec <list_delete_element+0x22>
		list->head = list->head->next;
		return true;
	} else {
		struct list_element *it = list->head;

		while (it && it->next != element) {
     fd4:	2a00      	cmp	r2, #0
     fd6:	d016      	beq.n	1006 <list_delete_element+0x3c>
     fd8:	6813      	ldr	r3, [r2, #0]
     fda:	4299      	cmp	r1, r3
     fdc:	d00a      	beq.n	ff4 <list_delete_element+0x2a>
     fde:	2b00      	cmp	r3, #0
     fe0:	d00d      	beq.n	ffe <list_delete_element+0x34>
     fe2:	681a      	ldr	r2, [r3, #0]
     fe4:	4291      	cmp	r1, r2
     fe6:	d006      	beq.n	ff6 <list_delete_element+0x2c>
     fe8:	0013      	movs	r3, r2
     fea:	e7f8      	b.n	fde <list_delete_element+0x14>
		list->head = list->head->next;
     fec:	6813      	ldr	r3, [r2, #0]
     fee:	6003      	str	r3, [r0, #0]
		return true;
     ff0:	2001      	movs	r0, #1
     ff2:	e003      	b.n	ffc <list_delete_element+0x32>
		while (it && it->next != element) {
     ff4:	0013      	movs	r3, r2
			it = it->next;
		}
		if (it) {
			it->next = ((struct list_element *)element)->next;
     ff6:	680a      	ldr	r2, [r1, #0]
     ff8:	601a      	str	r2, [r3, #0]
			return true;
     ffa:	2001      	movs	r0, #1
		}
	}

	return false;
}
     ffc:	4770      	bx	lr
	return false;
     ffe:	2000      	movs	r0, #0
    1000:	e7fc      	b.n	ffc <list_delete_element+0x32>
		return false;
    1002:	2000      	movs	r0, #0
    1004:	e7fa      	b.n	ffc <list_delete_element+0x32>
	return false;
    1006:	2000      	movs	r0, #0
    1008:	e7f8      	b.n	ffc <list_delete_element+0x32>
	...

0000100c <ringbuffer_init>:

/**
 * \brief Ringbuffer init
 */
int32_t ringbuffer_init(struct ringbuffer *const rb, void *buf, uint32_t size)
{
    100c:	b570      	push	{r4, r5, r6, lr}
    100e:	0004      	movs	r4, r0
    1010:	000e      	movs	r6, r1
    1012:	0015      	movs	r5, r2
	ASSERT(rb && buf && size);
    1014:	2800      	cmp	r0, #0
    1016:	d00b      	beq.n	1030 <ringbuffer_init+0x24>
    1018:	2900      	cmp	r1, #0
    101a:	d018      	beq.n	104e <ringbuffer_init+0x42>
    101c:	2001      	movs	r0, #1
    101e:	2a00      	cmp	r2, #0
    1020:	d107      	bne.n	1032 <ringbuffer_init+0x26>
    1022:	2228      	movs	r2, #40	; 0x28
    1024:	490c      	ldr	r1, [pc, #48]	; (1058 <ringbuffer_init+0x4c>)
    1026:	2000      	movs	r0, #0
    1028:	4b0c      	ldr	r3, [pc, #48]	; (105c <ringbuffer_init+0x50>)
    102a:	4798      	blx	r3

	/*
	 * buf size must be aligned to power of 2
	 */
	if ((size & (size - 1)) != 0) {
    102c:	1e6b      	subs	r3, r5, #1
    102e:	e007      	b.n	1040 <ringbuffer_init+0x34>
	ASSERT(rb && buf && size);
    1030:	2000      	movs	r0, #0
    1032:	2228      	movs	r2, #40	; 0x28
    1034:	4908      	ldr	r1, [pc, #32]	; (1058 <ringbuffer_init+0x4c>)
    1036:	4b09      	ldr	r3, [pc, #36]	; (105c <ringbuffer_init+0x50>)
    1038:	4798      	blx	r3
	if ((size & (size - 1)) != 0) {
    103a:	1e6b      	subs	r3, r5, #1
    103c:	422b      	tst	r3, r5
    103e:	d108      	bne.n	1052 <ringbuffer_init+0x46>
		return ERR_INVALID_ARG;
	}

	/* size - 1 is faster in calculation */
	rb->size        = size - 1;
    1040:	6063      	str	r3, [r4, #4]
	rb->read_index  = 0;
    1042:	2300      	movs	r3, #0
    1044:	60a3      	str	r3, [r4, #8]
	rb->write_index = rb->read_index;
    1046:	60e3      	str	r3, [r4, #12]
	rb->buf         = (uint8_t *)buf;
    1048:	6026      	str	r6, [r4, #0]

	return ERR_NONE;
    104a:	2000      	movs	r0, #0
}
    104c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && buf && size);
    104e:	2000      	movs	r0, #0
    1050:	e7ef      	b.n	1032 <ringbuffer_init+0x26>
		return ERR_INVALID_ARG;
    1052:	200d      	movs	r0, #13
    1054:	4240      	negs	r0, r0
    1056:	e7f9      	b.n	104c <ringbuffer_init+0x40>
    1058:	00009ee8 	.word	0x00009ee8
    105c:	00000f5d 	.word	0x00000f5d

00001060 <ringbuffer_get>:
/**
 * \brief Get one byte from ringbuffer
 *
 */
int32_t ringbuffer_get(struct ringbuffer *const rb, uint8_t *data)
{
    1060:	b570      	push	{r4, r5, r6, lr}
    1062:	0004      	movs	r4, r0
    1064:	000d      	movs	r5, r1
	ASSERT(rb && data);
    1066:	2800      	cmp	r0, #0
    1068:	d015      	beq.n	1096 <ringbuffer_get+0x36>
    106a:	0008      	movs	r0, r1
    106c:	1e43      	subs	r3, r0, #1
    106e:	4198      	sbcs	r0, r3
    1070:	b2c0      	uxtb	r0, r0
    1072:	2240      	movs	r2, #64	; 0x40
    1074:	490a      	ldr	r1, [pc, #40]	; (10a0 <ringbuffer_get+0x40>)
    1076:	4b0b      	ldr	r3, [pc, #44]	; (10a4 <ringbuffer_get+0x44>)
    1078:	4798      	blx	r3

	if (rb->write_index != rb->read_index) {
    107a:	68a3      	ldr	r3, [r4, #8]
    107c:	68e2      	ldr	r2, [r4, #12]
    107e:	429a      	cmp	r2, r3
    1080:	d00b      	beq.n	109a <ringbuffer_get+0x3a>
		*data = rb->buf[rb->read_index & rb->size];
    1082:	6862      	ldr	r2, [r4, #4]
    1084:	4013      	ands	r3, r2
    1086:	6822      	ldr	r2, [r4, #0]
    1088:	5cd3      	ldrb	r3, [r2, r3]
    108a:	702b      	strb	r3, [r5, #0]
		rb->read_index++;
    108c:	68a3      	ldr	r3, [r4, #8]
    108e:	3301      	adds	r3, #1
    1090:	60a3      	str	r3, [r4, #8]
		return ERR_NONE;
    1092:	2000      	movs	r0, #0
	}

	return ERR_NOT_FOUND;
}
    1094:	bd70      	pop	{r4, r5, r6, pc}
    1096:	2000      	movs	r0, #0
    1098:	e7eb      	b.n	1072 <ringbuffer_get+0x12>
	return ERR_NOT_FOUND;
    109a:	200a      	movs	r0, #10
    109c:	4240      	negs	r0, r0
    109e:	e7f9      	b.n	1094 <ringbuffer_get+0x34>
    10a0:	00009ee8 	.word	0x00009ee8
    10a4:	00000f5d 	.word	0x00000f5d

000010a8 <ringbuffer_put>:
/**
 * \brief Put one byte to ringbuffer
 *
 */
int32_t ringbuffer_put(struct ringbuffer *const rb, uint8_t data)
{
    10a8:	b570      	push	{r4, r5, r6, lr}
    10aa:	0004      	movs	r4, r0
    10ac:	000d      	movs	r5, r1
	ASSERT(rb);
    10ae:	1e43      	subs	r3, r0, #1
    10b0:	4198      	sbcs	r0, r3
    10b2:	b2c0      	uxtb	r0, r0
    10b4:	2251      	movs	r2, #81	; 0x51
    10b6:	490a      	ldr	r1, [pc, #40]	; (10e0 <ringbuffer_put+0x38>)
    10b8:	4b0a      	ldr	r3, [pc, #40]	; (10e4 <ringbuffer_put+0x3c>)
    10ba:	4798      	blx	r3

	rb->buf[rb->write_index & rb->size] = data;
    10bc:	6863      	ldr	r3, [r4, #4]
    10be:	68e2      	ldr	r2, [r4, #12]
    10c0:	4013      	ands	r3, r2
    10c2:	6822      	ldr	r2, [r4, #0]
    10c4:	54d5      	strb	r5, [r2, r3]

	/*
	 * buffer full strategy: new data will overwrite the oldest data in
	 * the buffer
	 */
	if ((rb->write_index - rb->read_index) > rb->size) {
    10c6:	68e3      	ldr	r3, [r4, #12]
    10c8:	6861      	ldr	r1, [r4, #4]
    10ca:	68a2      	ldr	r2, [r4, #8]
    10cc:	1a9a      	subs	r2, r3, r2
    10ce:	428a      	cmp	r2, r1
    10d0:	d901      	bls.n	10d6 <ringbuffer_put+0x2e>
		rb->read_index = rb->write_index - rb->size;
    10d2:	1a59      	subs	r1, r3, r1
    10d4:	60a1      	str	r1, [r4, #8]
	}

	rb->write_index++;
    10d6:	3301      	adds	r3, #1
    10d8:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
}
    10da:	2000      	movs	r0, #0
    10dc:	bd70      	pop	{r4, r5, r6, pc}
    10de:	46c0      	nop			; (mov r8, r8)
    10e0:	00009ee8 	.word	0x00009ee8
    10e4:	00000f5d 	.word	0x00000f5d

000010e8 <ringbuffer_num>:

/**
 * \brief Return the element number of ringbuffer
 */
uint32_t ringbuffer_num(const struct ringbuffer *const rb)
{
    10e8:	b510      	push	{r4, lr}
    10ea:	0004      	movs	r4, r0
	ASSERT(rb);
    10ec:	1e43      	subs	r3, r0, #1
    10ee:	4198      	sbcs	r0, r3
    10f0:	b2c0      	uxtb	r0, r0
    10f2:	2267      	movs	r2, #103	; 0x67
    10f4:	4903      	ldr	r1, [pc, #12]	; (1104 <ringbuffer_num+0x1c>)
    10f6:	4b04      	ldr	r3, [pc, #16]	; (1108 <ringbuffer_num+0x20>)
    10f8:	4798      	blx	r3

	return rb->write_index - rb->read_index;
    10fa:	68e0      	ldr	r0, [r4, #12]
    10fc:	68a3      	ldr	r3, [r4, #8]
    10fe:	1ac0      	subs	r0, r0, r3
}
    1100:	bd10      	pop	{r4, pc}
    1102:	46c0      	nop			; (mov r8, r8)
    1104:	00009ee8 	.word	0x00009ee8
    1108:	00000f5d 	.word	0x00000f5d

0000110c <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
    110c:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
    110e:	4a06      	ldr	r2, [pc, #24]	; (1128 <_sbrk+0x1c>)
    1110:	6812      	ldr	r2, [r2, #0]
    1112:	2a00      	cmp	r2, #0
    1114:	d004      	beq.n	1120 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1116:	4a04      	ldr	r2, [pc, #16]	; (1128 <_sbrk+0x1c>)
    1118:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    111a:	18c3      	adds	r3, r0, r3
    111c:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
    111e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    1120:	4902      	ldr	r1, [pc, #8]	; (112c <_sbrk+0x20>)
    1122:	4a01      	ldr	r2, [pc, #4]	; (1128 <_sbrk+0x1c>)
    1124:	6011      	str	r1, [r2, #0]
    1126:	e7f6      	b.n	1116 <_sbrk+0xa>
    1128:	20000128 	.word	0x20000128
    112c:	200045d0 	.word	0x200045d0

00001130 <_close>:
 */
extern int _close(int file)
{
	(void)file;
	return -1;
}
    1130:	2001      	movs	r0, #1
    1132:	4240      	negs	r0, r0
    1134:	4770      	bx	lr

00001136 <_fstat>:
 * \brief Replacement of C library of _fstat
 */
extern int _fstat(int file, struct stat *st)
{
	(void)file;
	st->st_mode = S_IFCHR;
    1136:	2380      	movs	r3, #128	; 0x80
    1138:	019b      	lsls	r3, r3, #6
    113a:	604b      	str	r3, [r1, #4]

	return 0;
}
    113c:	2000      	movs	r0, #0
    113e:	4770      	bx	lr

00001140 <_isatty>:
 */
extern int _isatty(int file)
{
	(void)file;
	return 1;
}
    1140:	2001      	movs	r0, #1
    1142:	4770      	bx	lr

00001144 <_lseek>:
 */
extern int _lseek(int file, int ptr, int dir)
{
	(void)file, (void)ptr, (void)dir;
	return 0;
}
    1144:	2000      	movs	r0, #0
    1146:	4770      	bx	lr

00001148 <hid_connect_cb>:
/* Callback called during connection */
static at_ble_status_t hid_connect_cb(void *params)
{
	at_ble_handle_t *handle;
	handle      = (at_ble_handle_t *)params;
	keyb_id     = 0;
    1148:	4b03      	ldr	r3, [pc, #12]	; (1158 <hid_connect_cb+0x10>)
    114a:	2200      	movs	r2, #0
    114c:	701a      	strb	r2, [r3, #0]
	conn_status = 1;
    114e:	3201      	adds	r2, #1
    1150:	705a      	strb	r2, [r3, #1]
	ALL_UNUSED(&handle);

	return AT_BLE_SUCCESS;
}
    1152:	2000      	movs	r0, #0
    1154:	4770      	bx	lr
    1156:	46c0      	nop			; (mov r8, r8)
    1158:	2000012c 	.word	0x2000012c

0000115c <hid_disconnect_cb>:
/* Callback called during disconnect */
static at_ble_status_t hid_disconnect_cb(void *params)
{
	at_ble_handle_t *handle;
	handle      = (at_ble_handle_t *)params;
	keyb_id     = 0;
    115c:	4b02      	ldr	r3, [pc, #8]	; (1168 <hid_disconnect_cb+0xc>)
    115e:	2200      	movs	r2, #0
    1160:	701a      	strb	r2, [r3, #0]
	conn_status = 0;
    1162:	705a      	strb	r2, [r3, #1]
	ALL_UNUSED(&handle);
	return AT_BLE_SUCCESS;
}
    1164:	2000      	movs	r0, #0
    1166:	4770      	bx	lr
    1168:	2000012c 	.word	0x2000012c

0000116c <hid_prf_control_point_ntf_cb>:
static void hid_prf_control_point_ntf_cb(hid_control_mode_ntf_t *hid_control_point_value_t)
{
	DBG_LOG_DEV("Control Point Notification Callback :: Service Instance %d Control Value %d",
	            hid_control_point_value_t->serv_inst,
	            hid_control_point_value_t->control_value);
}
    116c:	4770      	bx	lr

0000116e <hid_prf_protocol_mode_ntf_cb>:
	DBG_LOG_DEV(
	    "Protocol Mode Notification Callback :: Service Instance %d  New Protocol Mode  %d  Connection Handle %d",
	    protocol_mode->serv_inst,
	    protocol_mode->mode,
	    protocol_mode->conn_handle);
}
    116e:	4770      	bx	lr

00001170 <hid_prf_boot_ntf_cb>:
{
	DBG_LOG_DEV("Boot Notification Callback :: Service Instance %d  Boot Value  %d  Notification(Enable/Disable) %d",
	            boot_ntf_info_t->serv_inst,
	            boot_ntf_info_t->boot_value,
	            boot_ntf_info_t->ntf_conf);
}
    1170:	4770      	bx	lr
	...

00001174 <hid_prf_report_ntf_cb>:
	            "Connection Handle %d",
	            report_info->serv_inst,
	            report_info->report_ID,
	            report_info->ntf_conf,
	            report_info->conn_handle);
	report_ntf_info.serv_inst   = report_info->serv_inst;
    1174:	7802      	ldrb	r2, [r0, #0]
    1176:	4b04      	ldr	r3, [pc, #16]	; (1188 <hid_prf_report_ntf_cb+0x14>)
    1178:	701a      	strb	r2, [r3, #0]
	report_ntf_info.report_ID   = report_info->report_ID;
    117a:	7842      	ldrb	r2, [r0, #1]
    117c:	705a      	strb	r2, [r3, #1]
	report_ntf_info.ntf_conf    = report_info->ntf_conf;
    117e:	8842      	ldrh	r2, [r0, #2]
    1180:	805a      	strh	r2, [r3, #2]
	report_ntf_info.conn_handle = report_info->conn_handle;
    1182:	8882      	ldrh	r2, [r0, #4]
    1184:	809a      	strh	r2, [r3, #4]
}
    1186:	4770      	bx	lr
    1188:	20000f44 	.word	0x20000f44

0000118c <hid_notification_confirmed_cb>:
{
	at_ble_cmd_complete_event_t *notification_status;
	notification_status = (at_ble_cmd_complete_event_t *)params;
	DBG_LOG_DEV("Keyboard report send to host status %d", notification_status->status);
	return AT_BLE_SUCCESS;
}
    118c:	2000      	movs	r0, #0
    118e:	4770      	bx	lr

00001190 <button_cb>:

/* Callback called when user press the button for writing new characteristic value */
void button_cb(void)
{
	key_status = 1;
    1190:	2201      	movs	r2, #1
    1192:	4b01      	ldr	r3, [pc, #4]	; (1198 <button_cb+0x8>)
    1194:	709a      	strb	r2, [r3, #2]
}
    1196:	4770      	bx	lr
    1198:	2000012c 	.word	0x2000012c

0000119c <app_timer2_cb>:
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = mask;
    119c:	2180      	movs	r1, #128	; 0x80
    119e:	05c9      	lsls	r1, r1, #23
    11a0:	239c      	movs	r3, #156	; 0x9c
    11a2:	22c0      	movs	r2, #192	; 0xc0
    11a4:	05d2      	lsls	r2, r2, #23
    11a6:	50d1      	str	r1, [r2, r3]
}

static void app_timer2_cb(void)
{
	LED_Toggle();
}
    11a8:	4770      	bx	lr
	...

000011ac <LED_init>:
{
    11ac:	b530      	push	{r4, r5, lr}
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    11ae:	24c0      	movs	r4, #192	; 0xc0
    11b0:	05e4      	lsls	r4, r4, #23
    11b2:	2180      	movs	r1, #128	; 0x80
    11b4:	05c9      	lsls	r1, r1, #23
    11b6:	2388      	movs	r3, #136	; 0x88
    11b8:	50e1      	str	r1, [r4, r3]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    11ba:	4b08      	ldr	r3, [pc, #32]	; (11dc <LED_init+0x30>)
    11bc:	22a8      	movs	r2, #168	; 0xa8
    11be:	5099      	str	r1, [r3, r2]
    11c0:	4807      	ldr	r0, [pc, #28]	; (11e0 <LED_init+0x34>)
    11c2:	5098      	str	r0, [r3, r2]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    11c4:	3236      	adds	r2, #54	; 0x36
    11c6:	5c98      	ldrb	r0, [r3, r2]
    11c8:	2504      	movs	r5, #4
    11ca:	43a8      	bics	r0, r5
    11cc:	5498      	strb	r0, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    11ce:	5c98      	ldrb	r0, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    11d0:	3d03      	subs	r5, #3
    11d2:	43a8      	bics	r0, r5
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    11d4:	5498      	strb	r0, [r3, r2]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    11d6:	2398      	movs	r3, #152	; 0x98
    11d8:	50e1      	str	r1, [r4, r3]
}
    11da:	bd30      	pop	{r4, r5, pc}
    11dc:	41004400 	.word	0x41004400
    11e0:	c0004000 	.word	0xc0004000

000011e4 <button_register_callback>:
{
    11e4:	b510      	push	{r4, lr}
    11e6:	0001      	movs	r1, r0
	ext_irq_register(BLE_APP_SW, button_cb);
    11e8:	200f      	movs	r0, #15
    11ea:	4b01      	ldr	r3, [pc, #4]	; (11f0 <button_register_callback+0xc>)
    11ec:	4798      	blx	r3
}
    11ee:	bd10      	pop	{r4, pc}
    11f0:	000006a5 	.word	0x000006a5

000011f4 <main>:

int main(void)
{
    11f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    11f6:	46de      	mov	lr, fp
    11f8:	4657      	mov	r7, sl
    11fa:	464e      	mov	r6, r9
    11fc:	4645      	mov	r5, r8
    11fe:	b5e0      	push	{r5, r6, r7, lr}
    1200:	b083      	sub	sp, #12
	bsp_init();
    1202:	4b5d      	ldr	r3, [pc, #372]	; (1378 <main+0x184>)
    1204:	4798      	blx	r3

	/* Initialize the LED */
	LED_init();
    1206:	4b5d      	ldr	r3, [pc, #372]	; (137c <main+0x188>)
    1208:	4798      	blx	r3

	/* Initialize serial console */
	serial_console_init();
    120a:	4b5d      	ldr	r3, [pc, #372]	; (1380 <main+0x18c>)
    120c:	4798      	blx	r3

	/* Initialize button*/
	button_register_callback(button_cb);
    120e:	485d      	ldr	r0, [pc, #372]	; (1384 <main+0x190>)
    1210:	4b5d      	ldr	r3, [pc, #372]	; (1388 <main+0x194>)
    1212:	4798      	blx	r3

	ble_timer_start(BLE_APP_TIMER_ID2, MS_TIMER(500), BLE_TIMER_REPEAT, app_timer2_cb);
    1214:	4b5d      	ldr	r3, [pc, #372]	; (138c <main+0x198>)
    1216:	2201      	movs	r2, #1
    1218:	495d      	ldr	r1, [pc, #372]	; (1390 <main+0x19c>)
    121a:	2001      	movs	r0, #1
    121c:	4c5d      	ldr	r4, [pc, #372]	; (1394 <main+0x1a0>)
    121e:	47a0      	blx	r4

	DBG_LOG("Initializing HID Keyboard Application");
    1220:	485d      	ldr	r0, [pc, #372]	; (1398 <main+0x1a4>)
    1222:	4b5e      	ldr	r3, [pc, #376]	; (139c <main+0x1a8>)
    1224:	4798      	blx	r3
    1226:	485e      	ldr	r0, [pc, #376]	; (13a0 <main+0x1ac>)
    1228:	4b5e      	ldr	r3, [pc, #376]	; (13a4 <main+0x1b0>)
    122a:	4798      	blx	r3
	hid_prf_data.hid_serv_instance = 1;
    122c:	485e      	ldr	r0, [pc, #376]	; (13a8 <main+0x1b4>)
    122e:	2301      	movs	r3, #1
    1230:	7083      	strb	r3, [r0, #2]
	hid_prf_data.hid_device        = HID_KEYBOARD_MODE;
    1232:	2202      	movs	r2, #2
    1234:	70c2      	strb	r2, [r0, #3]
	hid_prf_data.protocol_mode     = HID_REPORT_PROTOCOL_MODE;
    1236:	7103      	strb	r3, [r0, #4]
	hid_prf_data.num_of_report     = HID_NUM_OF_REPORT;
    1238:	7143      	strb	r3, [r0, #5]
	hid_prf_data.report_id[0]   = 1;
    123a:	7183      	strb	r3, [r0, #6]
	hid_prf_data.report_type[0] = INPUT_REPORT;
    123c:	7403      	strb	r3, [r0, #16]
	hid_prf_data.report_val[0]                  = &app_keyb_report[0];
    123e:	4b5b      	ldr	r3, [pc, #364]	; (13ac <main+0x1b8>)
    1240:	61c3      	str	r3, [r0, #28]
	hid_prf_data.report_len[0]                  = sizeof(app_keyb_report);
    1242:	2408      	movs	r4, #8
    1244:	2144      	movs	r1, #68	; 0x44
    1246:	5444      	strb	r4, [r0, r1]
	hid_prf_data.report_map_info.report_map     = hid_app_keyb_report_map;
    1248:	3308      	adds	r3, #8
    124a:	6503      	str	r3, [r0, #80]	; 0x50
	hid_prf_data.report_map_info.report_map_len = sizeof(hid_app_keyb_report_map);
    124c:	3907      	subs	r1, #7
    124e:	2354      	movs	r3, #84	; 0x54
    1250:	52c1      	strh	r1, [r0, r3]
	hid_prf_data.hid_device_info.bcd_hid        = 0x0111;
    1252:	2112      	movs	r1, #18
    1254:	31ff      	adds	r1, #255	; 0xff
    1256:	3304      	adds	r3, #4
    1258:	52c1      	strh	r1, [r0, r3]
	hid_prf_data.hid_device_info.bcountry_code  = 0x00;
    125a:	2100      	movs	r1, #0
    125c:	3302      	adds	r3, #2
    125e:	54c1      	strb	r1, [r0, r3]
	hid_prf_data.hid_device_info.flags          = 0x02;
    1260:	3301      	adds	r3, #1
    1262:	54c2      	strb	r2, [r0, r3]
	if (hid_prf_conf(&hid_prf_data) == HID_PRF_SUCESS) {
    1264:	4b52      	ldr	r3, [pc, #328]	; (13b0 <main+0x1bc>)
    1266:	4798      	blx	r3
    1268:	2800      	cmp	r0, #0
    126a:	d026      	beq.n	12ba <main+0xc6>
		DBG_LOG("HID Profile Configuration Failed");
    126c:	484a      	ldr	r0, [pc, #296]	; (1398 <main+0x1a4>)
    126e:	4b4b      	ldr	r3, [pc, #300]	; (139c <main+0x1a8>)
    1270:	4798      	blx	r3
    1272:	4850      	ldr	r0, [pc, #320]	; (13b4 <main+0x1c0>)
    1274:	4b4b      	ldr	r3, [pc, #300]	; (13a4 <main+0x1b0>)
    1276:	4798      	blx	r3

	/* Initialize the profile based on user input */
	hid_keyboard_app_init();

	/* initialize the ble chip  and Set the device mac address */
	ble_device_init(NULL);
    1278:	2000      	movs	r0, #0
    127a:	4b4f      	ldr	r3, [pc, #316]	; (13b8 <main+0x1c4>)
    127c:	4798      	blx	r3

	hid_prf_init(NULL);
    127e:	2000      	movs	r0, #0
    1280:	4b4e      	ldr	r3, [pc, #312]	; (13bc <main+0x1c8>)
    1282:	4798      	blx	r3

	/* Register the notification handler */
	notify_report_ntf_handler(hid_prf_report_ntf_cb);
    1284:	484e      	ldr	r0, [pc, #312]	; (13c0 <main+0x1cc>)
    1286:	4b4f      	ldr	r3, [pc, #316]	; (13c4 <main+0x1d0>)
    1288:	4798      	blx	r3
	notify_boot_ntf_handler(hid_prf_boot_ntf_cb);
    128a:	484f      	ldr	r0, [pc, #316]	; (13c8 <main+0x1d4>)
    128c:	4b4f      	ldr	r3, [pc, #316]	; (13cc <main+0x1d8>)
    128e:	4798      	blx	r3
	notify_protocol_mode_handler(hid_prf_protocol_mode_ntf_cb);
    1290:	484f      	ldr	r0, [pc, #316]	; (13d0 <main+0x1dc>)
    1292:	4b50      	ldr	r3, [pc, #320]	; (13d4 <main+0x1e0>)
    1294:	4798      	blx	r3
	notify_control_point_handler(hid_prf_control_point_ntf_cb);
    1296:	4850      	ldr	r0, [pc, #320]	; (13d8 <main+0x1e4>)
    1298:	4b50      	ldr	r3, [pc, #320]	; (13dc <main+0x1e8>)
    129a:	4798      	blx	r3

	/* Callback registering for BLE-GAP Role */
	ble_mgr_events_callback_handler(REGISTER_CALL_BACK, BLE_GAP_EVENT_TYPE, hid_app_gap_handle);
    129c:	4c50      	ldr	r4, [pc, #320]	; (13e0 <main+0x1ec>)
    129e:	0022      	movs	r2, r4
    12a0:	2100      	movs	r1, #0
    12a2:	2000      	movs	r0, #0
    12a4:	4d4f      	ldr	r5, [pc, #316]	; (13e4 <main+0x1f0>)
    12a6:	47a8      	blx	r5

	/* Callback registering for BLE-GATT-Server Role */
	ble_mgr_events_callback_handler(REGISTER_CALL_BACK, BLE_GATT_SERVER_EVENT_TYPE, hid_app_gatt_server_handle);
    12a8:	0022      	movs	r2, r4
    12aa:	324c      	adds	r2, #76	; 0x4c
    12ac:	2102      	movs	r1, #2
    12ae:	2000      	movs	r0, #0
    12b0:	47a8      	blx	r5

	/* Capturing the events  */
	while (app_exec) {
    12b2:	4c3e      	ldr	r4, [pc, #248]	; (13ac <main+0x1b8>)
		ble_event_task();
    12b4:	4e4c      	ldr	r6, [pc, #304]	; (13e8 <main+0x1f4>)

		/* Check for key status */
		if (key_status && conn_status) {
    12b6:	4d4d      	ldr	r5, [pc, #308]	; (13ec <main+0x1f8>)
	while (app_exec) {
    12b8:	e033      	b.n	1322 <main+0x12e>
		DBG_LOG("HID Profile Configured");
    12ba:	4837      	ldr	r0, [pc, #220]	; (1398 <main+0x1a4>)
    12bc:	4b37      	ldr	r3, [pc, #220]	; (139c <main+0x1a8>)
    12be:	4798      	blx	r3
    12c0:	484b      	ldr	r0, [pc, #300]	; (13f0 <main+0x1fc>)
    12c2:	4b38      	ldr	r3, [pc, #224]	; (13a4 <main+0x1b0>)
    12c4:	4798      	blx	r3
    12c6:	e7d7      	b.n	1278 <main+0x84>
			DBG_LOG("Key Pressed...");
			delay_ms(KEY_PAD_DEBOUNCE_TIME);
			if ((keyb_id == POSITION_ZERO) || (keyb_id == POSITION_SIX)) {
				app_keyb_report[0] = CAPS_ON;
    12c8:	2102      	movs	r1, #2
    12ca:	4a38      	ldr	r2, [pc, #224]	; (13ac <main+0x1b8>)
    12cc:	7011      	strb	r1, [r2, #0]
			} else {
				app_keyb_report[0] = CAPS_OFF;
			}

			app_keyb_report[2] = keyb_disp[keyb_id];
    12ce:	4a37      	ldr	r2, [pc, #220]	; (13ac <main+0x1b8>)
    12d0:	4694      	mov	ip, r2
    12d2:	4463      	add	r3, ip
    12d4:	2248      	movs	r2, #72	; 0x48
    12d6:	5c9b      	ldrb	r3, [r3, r2]
    12d8:	4662      	mov	r2, ip
    12da:	7093      	strb	r3, [r2, #2]
			hid_prf_report_update(
    12dc:	4b45      	ldr	r3, [pc, #276]	; (13f4 <main+0x200>)
    12de:	4698      	mov	r8, r3
    12e0:	7819      	ldrb	r1, [r3, #0]
    12e2:	8898      	ldrh	r0, [r3, #4]
    12e4:	2308      	movs	r3, #8
    12e6:	469b      	mov	fp, r3
    12e8:	9300      	str	r3, [sp, #0]
    12ea:	4663      	mov	r3, ip
    12ec:	2201      	movs	r2, #1
    12ee:	4f42      	ldr	r7, [pc, #264]	; (13f8 <main+0x204>)
    12f0:	47b8      	blx	r7
			    report_ntf_info.conn_handle, report_ntf_info.serv_inst, 1, app_keyb_report, sizeof(app_keyb_report));
			delay_ms(20);
    12f2:	2014      	movs	r0, #20
    12f4:	4b41      	ldr	r3, [pc, #260]	; (13fc <main+0x208>)
    12f6:	4798      	blx	r3
			app_keyb_report[2] = 0x00;
    12f8:	2300      	movs	r3, #0
    12fa:	4699      	mov	r9, r3
    12fc:	4a2b      	ldr	r2, [pc, #172]	; (13ac <main+0x1b8>)
    12fe:	7093      	strb	r3, [r2, #2]
			hid_prf_report_update(
    1300:	4643      	mov	r3, r8
    1302:	7819      	ldrb	r1, [r3, #0]
    1304:	8898      	ldrh	r0, [r3, #4]
    1306:	465b      	mov	r3, fp
    1308:	9300      	str	r3, [sp, #0]
    130a:	0013      	movs	r3, r2
    130c:	2201      	movs	r2, #1
    130e:	47b8      	blx	r7
			    report_ntf_info.conn_handle, report_ntf_info.serv_inst, 1, app_keyb_report, sizeof(app_keyb_report));

			key_status = 0;
    1310:	4b36      	ldr	r3, [pc, #216]	; (13ec <main+0x1f8>)
    1312:	464a      	mov	r2, r9
    1314:	709a      	strb	r2, [r3, #2]

			if (keyb_id == MAX_TEXT_LEN) {
    1316:	781b      	ldrb	r3, [r3, #0]
    1318:	2b0b      	cmp	r3, #11
    131a:	d021      	beq.n	1360 <main+0x16c>
				keyb_id = 0;
			} else {
				++keyb_id;
    131c:	3301      	adds	r3, #1
    131e:	4a33      	ldr	r2, [pc, #204]	; (13ec <main+0x1f8>)
    1320:	7013      	strb	r3, [r2, #0]
	while (app_exec) {
    1322:	2354      	movs	r3, #84	; 0x54
    1324:	5ce3      	ldrb	r3, [r4, r3]
    1326:	2b00      	cmp	r3, #0
    1328:	d01e      	beq.n	1368 <main+0x174>
		ble_event_task();
    132a:	47b0      	blx	r6
		if (key_status && conn_status) {
    132c:	78ab      	ldrb	r3, [r5, #2]
    132e:	2b00      	cmp	r3, #0
    1330:	d0f7      	beq.n	1322 <main+0x12e>
    1332:	4b2e      	ldr	r3, [pc, #184]	; (13ec <main+0x1f8>)
    1334:	785b      	ldrb	r3, [r3, #1]
    1336:	2b00      	cmp	r3, #0
    1338:	d0f3      	beq.n	1322 <main+0x12e>
			DBG_LOG("Key Pressed...");
    133a:	4817      	ldr	r0, [pc, #92]	; (1398 <main+0x1a4>)
    133c:	4b17      	ldr	r3, [pc, #92]	; (139c <main+0x1a8>)
    133e:	4798      	blx	r3
    1340:	482f      	ldr	r0, [pc, #188]	; (1400 <main+0x20c>)
    1342:	4b18      	ldr	r3, [pc, #96]	; (13a4 <main+0x1b0>)
    1344:	4798      	blx	r3
			delay_ms(KEY_PAD_DEBOUNCE_TIME);
    1346:	20c8      	movs	r0, #200	; 0xc8
    1348:	4b2c      	ldr	r3, [pc, #176]	; (13fc <main+0x208>)
    134a:	4798      	blx	r3
			if ((keyb_id == POSITION_ZERO) || (keyb_id == POSITION_SIX)) {
    134c:	4b27      	ldr	r3, [pc, #156]	; (13ec <main+0x1f8>)
    134e:	781b      	ldrb	r3, [r3, #0]
    1350:	2b00      	cmp	r3, #0
    1352:	d0b9      	beq.n	12c8 <main+0xd4>
    1354:	2b06      	cmp	r3, #6
    1356:	d0b7      	beq.n	12c8 <main+0xd4>
				app_keyb_report[0] = CAPS_OFF;
    1358:	2100      	movs	r1, #0
    135a:	4a14      	ldr	r2, [pc, #80]	; (13ac <main+0x1b8>)
    135c:	7011      	strb	r1, [r2, #0]
    135e:	e7b6      	b.n	12ce <main+0xda>
				keyb_id = 0;
    1360:	464a      	mov	r2, r9
    1362:	4b22      	ldr	r3, [pc, #136]	; (13ec <main+0x1f8>)
    1364:	701a      	strb	r2, [r3, #0]
    1366:	e7dc      	b.n	1322 <main+0x12e>
			}
		}
	}
}
    1368:	2000      	movs	r0, #0
    136a:	b003      	add	sp, #12
    136c:	bc3c      	pop	{r2, r3, r4, r5}
    136e:	4690      	mov	r8, r2
    1370:	4699      	mov	r9, r3
    1372:	46a2      	mov	sl, r4
    1374:	46ab      	mov	fp, r5
    1376:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1378:	00003e3d 	.word	0x00003e3d
    137c:	000011ad 	.word	0x000011ad
    1380:	00003e49 	.word	0x00003e49
    1384:	00001191 	.word	0x00001191
    1388:	000011e5 	.word	0x000011e5
    138c:	0000119d 	.word	0x0000119d
    1390:	00005dc0 	.word	0x00005dc0
    1394:	00003e69 	.word	0x00003e69
    1398:	00009f84 	.word	0x00009f84
    139c:	00008bad 	.word	0x00008bad
    13a0:	00009f88 	.word	0x00009f88
    13a4:	00008a91 	.word	0x00008a91
    13a8:	20000ee8 	.word	0x20000ee8
    13ac:	20000000 	.word	0x20000000
    13b0:	00001dc1 	.word	0x00001dc1
    13b4:	00009fc8 	.word	0x00009fc8
    13b8:	00002981 	.word	0x00002981
    13bc:	00001e79 	.word	0x00001e79
    13c0:	00001175 	.word	0x00001175
    13c4:	00001f49 	.word	0x00001f49
    13c8:	00001171 	.word	0x00001171
    13cc:	00001f55 	.word	0x00001f55
    13d0:	0000116f 	.word	0x0000116f
    13d4:	00001f61 	.word	0x00001f61
    13d8:	0000116d 	.word	0x0000116d
    13dc:	00001f6d 	.word	0x00001f6d
    13e0:	00009f10 	.word	0x00009f10
    13e4:	000028bd 	.word	0x000028bd
    13e8:	00003095 	.word	0x00003095
    13ec:	2000012c 	.word	0x2000012c
    13f0:	00009fb0 	.word	0x00009fb0
    13f4:	20000f44 	.word	0x20000f44
    13f8:	00001f79 	.word	0x00001f79
    13fc:	00000629 	.word	0x00000629
    1400:	00009fec 	.word	0x00009fec

00001404 <_irq_set>:
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
    1404:	b243      	sxtb	r3, r0
    1406:	2b00      	cmp	r3, #0
    1408:	db07      	blt.n	141a <_irq_set+0x16>
  {
    NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    140a:	231f      	movs	r3, #31
    140c:	4018      	ands	r0, r3
    140e:	3b1e      	subs	r3, #30
    1410:	4083      	lsls	r3, r0
    1412:	2280      	movs	r2, #128	; 0x80
    1414:	0052      	lsls	r2, r2, #1
    1416:	4901      	ldr	r1, [pc, #4]	; (141c <_irq_set+0x18>)
    1418:	508b      	str	r3, [r1, r2]
 * \brief Set the given IRQ
 */
void _irq_set(uint8_t n)
{
	NVIC_SetPendingIRQ((IRQn_Type)n);
}
    141a:	4770      	bx	lr
    141c:	e000e100 	.word	0xe000e100

00001420 <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
    1420:	b510      	push	{r4, lr}
		return (ms * (freq / 100000) + 2) / 3 * 100;
    1422:	0103      	lsls	r3, r0, #4
    1424:	1a1b      	subs	r3, r3, r0
    1426:	015b      	lsls	r3, r3, #5
    1428:	1a18      	subs	r0, r3, r0
    142a:	3002      	adds	r0, #2
    142c:	2103      	movs	r1, #3
    142e:	4b02      	ldr	r3, [pc, #8]	; (1438 <_get_cycles_for_ms+0x18>)
    1430:	4798      	blx	r3
    1432:	2364      	movs	r3, #100	; 0x64
    1434:	4358      	muls	r0, r3
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
    1436:	bd10      	pop	{r4, pc}
    1438:	00008849 	.word	0x00008849

0000143c <_delay_init>:
 * \brief Initialize delay functionality
 */
void _delay_init(void *const hw)
{
	(void)hw;
}
    143c:	4770      	bx	lr

0000143e <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
    143e:	3901      	subs	r1, #1
    1440:	d8fd      	bhi.n	143e <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
    1442:	4770      	bx	lr

00001444 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    1444:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    1446:	4a07      	ldr	r2, [pc, #28]	; (1464 <_init_chip+0x20>)
    1448:	6853      	ldr	r3, [r2, #4]
    144a:	2104      	movs	r1, #4
    144c:	430b      	orrs	r3, r1
    144e:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
    1450:	4b05      	ldr	r3, [pc, #20]	; (1468 <_init_chip+0x24>)
    1452:	4798      	blx	r3
	_sysctrl_init_sources();
    1454:	4b05      	ldr	r3, [pc, #20]	; (146c <_init_chip+0x28>)
    1456:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_sysctrl_init_referenced_generators();
    1458:	4b05      	ldr	r3, [pc, #20]	; (1470 <_init_chip+0x2c>)
    145a:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    145c:	20ff      	movs	r0, #255	; 0xff
    145e:	4b05      	ldr	r3, [pc, #20]	; (1474 <_init_chip+0x30>)
    1460:	4798      	blx	r3
#if CONF_DMAC_ENABLE
	_pm_enable_bus_clock(PM_BUS_AHB, DMAC);
	_pm_enable_bus_clock(PM_BUS_APBB, DMAC);
	_dma_init();
#endif
}
    1462:	bd10      	pop	{r4, pc}
    1464:	41004000 	.word	0x41004000
    1468:	00001629 	.word	0x00001629
    146c:	00001a1d 	.word	0x00001a1d
    1470:	00001a2d 	.word	0x00001a2d
    1474:	00001625 	.word	0x00001625

00001478 <_ext_irq_init>:
typedef uint8_t  hri_eic_nmiflag_reg_t;
typedef uint8_t  hri_eic_status_reg_t;

static inline void hri_eic_wait_for_sync(const void *const hw)
{
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
    1478:	4a22      	ldr	r2, [pc, #136]	; (1504 <_ext_irq_init+0x8c>)
    147a:	7853      	ldrb	r3, [r2, #1]
    147c:	09db      	lsrs	r3, r3, #7
    147e:	d1fc      	bne.n	147a <_ext_irq_init+0x2>
    1480:	4a20      	ldr	r2, [pc, #128]	; (1504 <_ext_irq_init+0x8c>)
    1482:	7853      	ldrb	r3, [r2, #1]
    1484:	09db      	lsrs	r3, r3, #7
    1486:	d1fc      	bne.n	1482 <_ext_irq_init+0xa>

static inline hri_eic_ctrl_reg_t hri_eic_get_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t mask)
{
	uint8_t tmp;
	hri_eic_wait_for_sync(hw);
	tmp = ((Eic *)hw)->CTRL.reg;
    1488:	4b1e      	ldr	r3, [pc, #120]	; (1504 <_ext_irq_init+0x8c>)
    148a:	781b      	ldrb	r3, [r3, #0]
 * \brief Initialize external interrupt module
 */
int32_t _ext_irq_init(void (*cb)(const uint32_t pin))
{
	hri_eic_wait_for_sync(EIC);
	if (hri_eic_get_CTRL_reg(EIC, EIC_CTRL_ENABLE)) {
    148c:	079b      	lsls	r3, r3, #30
    148e:	d50a      	bpl.n	14a6 <_ext_irq_init+0x2e>
}

static inline void hri_eic_write_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CTRL.reg = data;
    1490:	2200      	movs	r2, #0
    1492:	4b1c      	ldr	r3, [pc, #112]	; (1504 <_ext_irq_init+0x8c>)
    1494:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
    1496:	001a      	movs	r2, r3
    1498:	7853      	ldrb	r3, [r2, #1]
    149a:	09db      	lsrs	r3, r3, #7
    149c:	d1fc      	bne.n	1498 <_ext_irq_init+0x20>
    149e:	4a19      	ldr	r2, [pc, #100]	; (1504 <_ext_irq_init+0x8c>)
    14a0:	7853      	ldrb	r3, [r2, #1]
    14a2:	09db      	lsrs	r3, r3, #7
    14a4:	d1fc      	bne.n	14a0 <_ext_irq_init+0x28>
	((Eic *)hw)->CTRL.reg = data;
    14a6:	2201      	movs	r2, #1
    14a8:	4b16      	ldr	r3, [pc, #88]	; (1504 <_ext_irq_init+0x8c>)
    14aa:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
    14ac:	001a      	movs	r2, r3
    14ae:	7853      	ldrb	r3, [r2, #1]
    14b0:	09db      	lsrs	r3, r3, #7
    14b2:	d1fc      	bne.n	14ae <_ext_irq_init+0x36>
    14b4:	4a13      	ldr	r2, [pc, #76]	; (1504 <_ext_irq_init+0x8c>)
    14b6:	7853      	ldrb	r3, [r2, #1]
    14b8:	09db      	lsrs	r3, r3, #7
    14ba:	d1fc      	bne.n	14b6 <_ext_irq_init+0x3e>
}

static inline void hri_eic_write_NMICTRL_reg(const void *const hw, hri_eic_nmictrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->NMICTRL.reg = data;
    14bc:	4b11      	ldr	r3, [pc, #68]	; (1504 <_ext_irq_init+0x8c>)
    14be:	2200      	movs	r2, #0
    14c0:	709a      	strb	r2, [r3, #2]
}

static inline void hri_eic_write_EVCTRL_reg(const void *const hw, hri_eic_evctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->EVCTRL.reg = data;
    14c2:	605a      	str	r2, [r3, #4]
}

static inline void hri_eic_write_WAKEUP_reg(const void *const hw, hri_eic_wakeup_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->WAKEUP.reg = data;
    14c4:	2180      	movs	r1, #128	; 0x80
    14c6:	0209      	lsls	r1, r1, #8
    14c8:	6159      	str	r1, [r3, #20]
}

static inline void hri_eic_write_CONFIG_reg(const void *const hw, uint8_t index, hri_eic_config_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CONFIG[index].reg = data;
    14ca:	619a      	str	r2, [r3, #24]
    14cc:	2280      	movs	r2, #128	; 0x80
    14ce:	0592      	lsls	r2, r2, #22
    14d0:	61da      	str	r2, [r3, #28]
	((Eic *)hw)->CTRL.reg |= EIC_CTRL_ENABLE;
    14d2:	781a      	ldrb	r2, [r3, #0]
    14d4:	2102      	movs	r1, #2
    14d6:	430a      	orrs	r2, r1
    14d8:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
    14da:	001a      	movs	r2, r3
    14dc:	7853      	ldrb	r3, [r2, #1]
    14de:	09db      	lsrs	r3, r3, #7
    14e0:	d1fc      	bne.n	14dc <_ext_irq_init+0x64>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    14e2:	4b09      	ldr	r3, [pc, #36]	; (1508 <_ext_irq_init+0x90>)
    14e4:	2210      	movs	r2, #16
    14e6:	2180      	movs	r1, #128	; 0x80
    14e8:	505a      	str	r2, [r3, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    14ea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    14ee:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    14f2:	3101      	adds	r1, #1
    14f4:	31ff      	adds	r1, #255	; 0xff
    14f6:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    14f8:	601a      	str	r2, [r3, #0]

	NVIC_DisableIRQ(EIC_IRQn);
	NVIC_ClearPendingIRQ(EIC_IRQn);
	NVIC_EnableIRQ(EIC_IRQn);

	callback = cb;
    14fa:	4b04      	ldr	r3, [pc, #16]	; (150c <_ext_irq_init+0x94>)
    14fc:	6018      	str	r0, [r3, #0]

	return ERR_NONE;
}
    14fe:	2000      	movs	r0, #0
    1500:	4770      	bx	lr
    1502:	46c0      	nop			; (mov r8, r8)
    1504:	40001800 	.word	0x40001800
    1508:	e000e100 	.word	0xe000e100
    150c:	20000130 	.word	0x20000130

00001510 <_ext_irq_enable>:
{
	uint8_t extint = INVALID_EXTINT_NUMBER;
	uint8_t i      = 0;

	for (; i < ARRAY_SIZE(_map); i++) {
		if (_map[i].pin == pin) {
    1510:	280f      	cmp	r0, #15
    1512:	d002      	beq.n	151a <_ext_irq_enable+0xa>
			extint = _map[i].extint;
			break;
		}
	}
	if (INVALID_EXTINT_NUMBER == extint) {
		return ERR_INVALID_ARG;
    1514:	200d      	movs	r0, #13
    1516:	4240      	negs	r0, r0
		hri_eic_clear_INTEN_reg(EIC, 1ul << extint);
		hri_eic_clear_INTFLAG_reg(EIC, 1ul << extint);
	}

	return ERR_NONE;
}
    1518:	4770      	bx	lr
	if (enable) {
    151a:	2900      	cmp	r1, #0
    151c:	d106      	bne.n	152c <_ext_irq_enable+0x1c>
	((Eic *)hw)->INTENCLR.reg = mask;
    151e:	4b06      	ldr	r3, [pc, #24]	; (1538 <_ext_irq_enable+0x28>)
    1520:	2280      	movs	r2, #128	; 0x80
    1522:	0212      	lsls	r2, r2, #8
    1524:	609a      	str	r2, [r3, #8]
	((Eic *)hw)->INTFLAG.reg = mask;
    1526:	611a      	str	r2, [r3, #16]
	return ERR_NONE;
    1528:	2000      	movs	r0, #0
    152a:	e7f5      	b.n	1518 <_ext_irq_enable+0x8>
	((Eic *)hw)->INTENSET.reg = mask;
    152c:	2280      	movs	r2, #128	; 0x80
    152e:	0212      	lsls	r2, r2, #8
    1530:	4b01      	ldr	r3, [pc, #4]	; (1538 <_ext_irq_enable+0x28>)
    1532:	60da      	str	r2, [r3, #12]
    1534:	2000      	movs	r0, #0
    1536:	e7ef      	b.n	1518 <_ext_irq_enable+0x8>
    1538:	40001800 	.word	0x40001800

0000153c <EIC_Handler>:

/**
 * \brief EIC interrupt handler
 */
void EIC_Handler(void)
{
    153c:	b5f0      	push	{r4, r5, r6, r7, lr}
    153e:	46ce      	mov	lr, r9
    1540:	4647      	mov	r7, r8
    1542:	b580      	push	{r7, lr}
    1544:	b083      	sub	sp, #12
	return ((Eic *)hw)->INTFLAG.reg;
    1546:	4b31      	ldr	r3, [pc, #196]	; (160c <EIC_Handler+0xd0>)
    1548:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
    154a:	68d9      	ldr	r1, [r3, #12]
	volatile uint32_t flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
    154c:	400a      	ands	r2, r1
    154e:	9201      	str	r2, [sp, #4]
	int8_t            pos;
	uint32_t          pin = INVALID_PIN_NUMBER;

	hri_eic_clear_INTFLAG_reg(EIC, flags);
    1550:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
    1552:	611a      	str	r2, [r3, #16]

	ASSERT(callback);
    1554:	4b2e      	ldr	r3, [pc, #184]	; (1610 <EIC_Handler+0xd4>)
    1556:	6818      	ldr	r0, [r3, #0]
    1558:	1e43      	subs	r3, r0, #1
    155a:	4198      	sbcs	r0, r3
    155c:	b2c0      	uxtb	r0, r0
    155e:	22d2      	movs	r2, #210	; 0xd2
    1560:	492c      	ldr	r1, [pc, #176]	; (1614 <EIC_Handler+0xd8>)
    1562:	4b2d      	ldr	r3, [pc, #180]	; (1618 <EIC_Handler+0xdc>)
    1564:	4798      	blx	r3

	while (flags) {
    1566:	9b01      	ldr	r3, [sp, #4]
    1568:	2b00      	cmp	r3, #0
    156a:	d049      	beq.n	1600 <EIC_Handler+0xc4>
    156c:	2301      	movs	r3, #1
    156e:	425b      	negs	r3, r3
    1570:	4699      	mov	r9, r3
		pos = ffs(flags) - 1;
    1572:	4b2a      	ldr	r3, [pc, #168]	; (161c <EIC_Handler+0xe0>)
    1574:	4698      	mov	r8, r3
					upper = middle - 1;
				}
			}

			if (INVALID_PIN_NUMBER != pin) {
				callback(pin);
    1576:	4f26      	ldr	r7, [pc, #152]	; (1610 <EIC_Handler+0xd4>)
				if (_map[middle].extint == pos) {
    1578:	4d29      	ldr	r5, [pc, #164]	; (1620 <EIC_Handler+0xe4>)
    157a:	e03a      	b.n	15f2 <EIC_Handler+0xb6>
					upper = middle - 1;
    157c:	3a01      	subs	r2, #1
    157e:	b2d6      	uxtb	r6, r2
			while (upper >= lower) {
    1580:	42b1      	cmp	r1, r6
    1582:	d80c      	bhi.n	159e <EIC_Handler+0x62>
				middle = (upper + lower) >> 1;
    1584:	1873      	adds	r3, r6, r1
    1586:	105b      	asrs	r3, r3, #1
    1588:	b2da      	uxtb	r2, r3
				if (_map[middle].extint == pos) {
    158a:	4003      	ands	r3, r0
    158c:	00db      	lsls	r3, r3, #3
    158e:	5d5b      	ldrb	r3, [r3, r5]
    1590:	42a3      	cmp	r3, r4
    1592:	d008      	beq.n	15a6 <EIC_Handler+0x6a>
				if (_map[middle].extint < pos) {
    1594:	429c      	cmp	r4, r3
    1596:	ddf1      	ble.n	157c <EIC_Handler+0x40>
					lower = middle + 1;
    1598:	3201      	adds	r2, #1
    159a:	b2d1      	uxtb	r1, r2
    159c:	e7f0      	b.n	1580 <EIC_Handler+0x44>
			if (INVALID_PIN_NUMBER != pin) {
    159e:	464b      	mov	r3, r9
    15a0:	3301      	adds	r3, #1
    15a2:	d005      	beq.n	15b0 <EIC_Handler+0x74>
    15a4:	e001      	b.n	15aa <EIC_Handler+0x6e>
    15a6:	230f      	movs	r3, #15
    15a8:	4699      	mov	r9, r3
				callback(pin);
    15aa:	4648      	mov	r0, r9
    15ac:	683b      	ldr	r3, [r7, #0]
    15ae:	4798      	blx	r3
			}
			flags &= ~(1ul << pos);
    15b0:	9b01      	ldr	r3, [sp, #4]
    15b2:	2201      	movs	r2, #1
    15b4:	40a2      	lsls	r2, r4
    15b6:	4393      	bics	r3, r2
    15b8:	9301      	str	r3, [sp, #4]
			pos = ffs(flags) - 1;
    15ba:	9801      	ldr	r0, [sp, #4]
    15bc:	4b17      	ldr	r3, [pc, #92]	; (161c <EIC_Handler+0xe0>)
    15be:	4798      	blx	r3
    15c0:	3801      	subs	r0, #1
    15c2:	b244      	sxtb	r4, r0
		while (-1 != pos) {
    15c4:	1c63      	adds	r3, r4, #1
    15c6:	d00a      	beq.n	15de <EIC_Handler+0xa2>
				if (_map[middle].extint == pos) {
    15c8:	2c0f      	cmp	r4, #15
    15ca:	d005      	beq.n	15d8 <EIC_Handler+0x9c>
    15cc:	230f      	movs	r3, #15
    15ce:	2200      	movs	r2, #0
    15d0:	2601      	movs	r6, #1
    15d2:	2100      	movs	r1, #0
    15d4:	20ff      	movs	r0, #255	; 0xff
    15d6:	e7dd      	b.n	1594 <EIC_Handler+0x58>
    15d8:	230f      	movs	r3, #15
    15da:	4699      	mov	r9, r3
    15dc:	e7e5      	b.n	15aa <EIC_Handler+0x6e>
	return ((Eic *)hw)->INTFLAG.reg;
    15de:	4b0b      	ldr	r3, [pc, #44]	; (160c <EIC_Handler+0xd0>)
    15e0:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
    15e2:	68d9      	ldr	r1, [r3, #12]
		}
		flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
    15e4:	400a      	ands	r2, r1
    15e6:	9201      	str	r2, [sp, #4]
		hri_eic_clear_INTFLAG_reg(EIC, flags);
    15e8:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
    15ea:	611a      	str	r2, [r3, #16]
	while (flags) {
    15ec:	9b01      	ldr	r3, [sp, #4]
    15ee:	2b00      	cmp	r3, #0
    15f0:	d006      	beq.n	1600 <EIC_Handler+0xc4>
		pos = ffs(flags) - 1;
    15f2:	9801      	ldr	r0, [sp, #4]
    15f4:	47c0      	blx	r8
    15f6:	3801      	subs	r0, #1
    15f8:	b244      	sxtb	r4, r0
		while (-1 != pos) {
    15fa:	1c63      	adds	r3, r4, #1
    15fc:	d1e4      	bne.n	15c8 <EIC_Handler+0x8c>
    15fe:	e7ee      	b.n	15de <EIC_Handler+0xa2>
	}
}
    1600:	b003      	add	sp, #12
    1602:	bc0c      	pop	{r2, r3}
    1604:	4690      	mov	r8, r2
    1606:	4699      	mov	r9, r3
    1608:	bdf0      	pop	{r4, r5, r6, r7, pc}
    160a:	46c0      	nop			; (mov r8, r8)
    160c:	40001800 	.word	0x40001800
    1610:	20000130 	.word	0x20000130
    1614:	0000a004 	.word	0x0000a004
    1618:	00000f5d 	.word	0x00000f5d
    161c:	000089b5 	.word	0x000089b5
    1620:	00009ffc 	.word	0x00009ffc

00001624 <_gclk_init_generators_by_fref>:
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SRC | GCLK_GENCTRL_ID(8));
	}
#endif
}
    1624:	4770      	bx	lr
	...

00001628 <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
    1628:	4b06      	ldr	r3, [pc, #24]	; (1644 <_pm_init+0x1c>)
    162a:	7a1a      	ldrb	r2, [r3, #8]
    162c:	b2d2      	uxtb	r2, r2
    162e:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
    1630:	7a5a      	ldrb	r2, [r3, #9]
    1632:	b2d2      	uxtb	r2, r2
    1634:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
    1636:	7a9a      	ldrb	r2, [r3, #10]
    1638:	b2d2      	uxtb	r2, r2
    163a:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
    163c:	7ada      	ldrb	r2, [r3, #11]
    163e:	b2d2      	uxtb	r2, r2
    1640:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
    1642:	4770      	bx	lr
    1644:	40000400 	.word	0x40000400

00001648 <_sercom_usart_interrupt_handler>:
 * \internal Sercom interrupt handler
 *
 * \param[in] p The pointer to interrupt parameter
 */
static void _sercom_usart_interrupt_handler(struct _usart_async_device *device)
{
    1648:	b510      	push	{r4, lr}
	void *hw = device->hw;
    164a:	6984      	ldr	r4, [r0, #24]
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
}

static inline bool hri_sercomusart_get_interrupt_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    164c:	7e23      	ldrb	r3, [r4, #24]

	if (hri_sercomusart_get_interrupt_DRE_bit(hw) && hri_sercomusart_get_INTEN_DRE_bit(hw)) {
    164e:	07db      	lsls	r3, r3, #31
    1650:	d502      	bpl.n	1658 <_sercom_usart_interrupt_handler+0x10>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
}

static inline bool hri_sercomusart_get_INTEN_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_DRE) >> SERCOM_USART_INTENSET_DRE_Pos;
    1652:	7da3      	ldrb	r3, [r4, #22]
    1654:	07db      	lsls	r3, r3, #31
    1656:	d40f      	bmi.n	1678 <_sercom_usart_interrupt_handler+0x30>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    1658:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_DRE_bit(hw);
		device->usart_cb.tx_byte_sent(device);
	} else if (hri_sercomusart_get_interrupt_TXC_bit(hw) && hri_sercomusart_get_INTEN_TXC_bit(hw)) {
    165a:	079b      	lsls	r3, r3, #30
    165c:	d502      	bpl.n	1664 <_sercom_usart_interrupt_handler+0x1c>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
}

static inline bool hri_sercomusart_get_INTEN_TXC_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_TXC) >> SERCOM_USART_INTENSET_TXC_Pos;
    165e:	7da3      	ldrb	r3, [r4, #22]
    1660:	079b      	lsls	r3, r3, #30
    1662:	d40e      	bmi.n	1682 <_sercom_usart_interrupt_handler+0x3a>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    1664:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_TXC_bit(hw);
		device->usart_cb.tx_done_cb(device);
	} else if (hri_sercomusart_get_interrupt_RXC_bit(hw)) {
    1666:	075b      	lsls	r3, r3, #29
    1668:	d515      	bpl.n	1696 <_sercom_usart_interrupt_handler+0x4e>
	SERCOM_CRITICAL_SECTION_LEAVE();
}

static inline hri_sercomusart_status_reg_t hri_sercomusart_read_STATUS_reg(const void *const hw)
{
	return ((Sercom *)hw)->USART.STATUS.reg;
    166a:	8b62      	ldrh	r2, [r4, #26]
		if (hri_sercomusart_read_STATUS_reg(hw)
    166c:	2337      	movs	r3, #55	; 0x37
    166e:	421a      	tst	r2, r3
    1670:	d00c      	beq.n	168c <_sercom_usart_interrupt_handler+0x44>
	((Sercom *)hw)->USART.STATUS.reg = mask;
    1672:	3308      	adds	r3, #8
    1674:	8363      	strh	r3, [r4, #26]
		hri_sercomusart_clear_interrupt_ERROR_bit(hw);
		device->usart_cb.error_cb(device);
		status = hri_sercomusart_read_STATUS_reg(hw);
		hri_sercomusart_clear_STATUS_reg(hw, status);
	}
}
    1676:	bd10      	pop	{r4, pc}
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    1678:	2301      	movs	r3, #1
    167a:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_byte_sent(device);
    167c:	6803      	ldr	r3, [r0, #0]
    167e:	4798      	blx	r3
    1680:	e7f9      	b.n	1676 <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    1682:	2302      	movs	r3, #2
    1684:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_done_cb(device);
    1686:	6883      	ldr	r3, [r0, #8]
    1688:	4798      	blx	r3
    168a:	e7f4      	b.n	1676 <_sercom_usart_interrupt_handler+0x2e>
	return ((Sercom *)hw)->USART.DATA.reg;
    168c:	8d21      	ldrh	r1, [r4, #40]	; 0x28
		device->usart_cb.rx_done_cb(device, hri_sercomusart_read_DATA_reg(hw));
    168e:	b2c9      	uxtb	r1, r1
    1690:	6843      	ldr	r3, [r0, #4]
    1692:	4798      	blx	r3
    1694:	e7ef      	b.n	1676 <_sercom_usart_interrupt_handler+0x2e>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR) >> SERCOM_USART_INTFLAG_ERROR_Pos;
    1696:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_ERROR_bit(hw)) {
    1698:	09db      	lsrs	r3, r3, #7
    169a:	d0ec      	beq.n	1676 <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
    169c:	2380      	movs	r3, #128	; 0x80
    169e:	7623      	strb	r3, [r4, #24]
		device->usart_cb.error_cb(device);
    16a0:	68c3      	ldr	r3, [r0, #12]
    16a2:	4798      	blx	r3
	return ((Sercom *)hw)->USART.STATUS.reg;
    16a4:	8b63      	ldrh	r3, [r4, #26]
    16a6:	b29b      	uxth	r3, r3
	((Sercom *)hw)->USART.STATUS.reg = mask;
    16a8:	8363      	strh	r3, [r4, #26]
    16aa:	e7e4      	b.n	1676 <_sercom_usart_interrupt_handler+0x2e>

000016ac <_sercom_init_irq_param>:
 * \brief Init irq param with the given sercom hardware instance
 */
static void _sercom_init_irq_param(const void *const hw, void *dev)
{

	if (hw == SERCOM0) {
    16ac:	4b06      	ldr	r3, [pc, #24]	; (16c8 <_sercom_init_irq_param+0x1c>)
    16ae:	4298      	cmp	r0, r3
    16b0:	d003      	beq.n	16ba <_sercom_init_irq_param+0xe>
		_sercom0_dev = (struct _usart_async_device *)dev;
	}

	if (hw == SERCOM2) {
    16b2:	4b06      	ldr	r3, [pc, #24]	; (16cc <_sercom_init_irq_param+0x20>)
    16b4:	4298      	cmp	r0, r3
    16b6:	d003      	beq.n	16c0 <_sercom_init_irq_param+0x14>
		_sercom2_dev = (struct _usart_async_device *)dev;
	}
}
    16b8:	4770      	bx	lr
		_sercom0_dev = (struct _usart_async_device *)dev;
    16ba:	4b05      	ldr	r3, [pc, #20]	; (16d0 <_sercom_init_irq_param+0x24>)
    16bc:	6019      	str	r1, [r3, #0]
    16be:	e7fb      	b.n	16b8 <_sercom_init_irq_param+0xc>
		_sercom2_dev = (struct _usart_async_device *)dev;
    16c0:	4b03      	ldr	r3, [pc, #12]	; (16d0 <_sercom_init_irq_param+0x24>)
    16c2:	6059      	str	r1, [r3, #4]
}
    16c4:	e7f8      	b.n	16b8 <_sercom_init_irq_param+0xc>
    16c6:	46c0      	nop			; (mov r8, r8)
    16c8:	42000800 	.word	0x42000800
    16cc:	42001000 	.word	0x42001000
    16d0:	20000134 	.word	0x20000134

000016d4 <_usart_init>:
 * \param[in] hw The pointer to hardware instance
 *
 * \return The status of initialization
 */
static int32_t _usart_init(void *const hw)
{
    16d4:	b510      	push	{r4, lr}
    16d6:	0004      	movs	r4, r0
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    16d8:	4b44      	ldr	r3, [pc, #272]	; (17ec <_usart_init+0x118>)
    16da:	18c3      	adds	r3, r0, r3
    16dc:	0a9b      	lsrs	r3, r3, #10
    16de:	b2db      	uxtb	r3, r3
		if (_usarts[i].number == sercom_offset) {
    16e0:	2b00      	cmp	r3, #0
    16e2:	d059      	beq.n	1798 <_usart_init+0xc4>
    16e4:	2b02      	cmp	r3, #2
    16e6:	d055      	beq.n	1794 <_usart_init+0xc0>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
    16e8:	2002      	movs	r0, #2
		if (_usarts[i].number == sercom_offset) {
    16ea:	2b03      	cmp	r3, #3
    16ec:	d006      	beq.n	16fc <_usart_init+0x28>
	ASSERT(false);
    16ee:	2298      	movs	r2, #152	; 0x98
    16f0:	0092      	lsls	r2, r2, #2
    16f2:	493f      	ldr	r1, [pc, #252]	; (17f0 <_usart_init+0x11c>)
    16f4:	2000      	movs	r0, #0
    16f6:	4b3f      	ldr	r3, [pc, #252]	; (17f4 <_usart_init+0x120>)
    16f8:	4798      	blx	r3
	return 0;
    16fa:	2000      	movs	r0, #0
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
    16fc:	69e3      	ldr	r3, [r4, #28]
	uint8_t i = _get_sercom_index(hw);

	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
    16fe:	07db      	lsls	r3, r3, #31
    1700:	d421      	bmi.n	1746 <_usart_init+0x72>
		uint32_t mode = _usarts[i].ctrl_a & SERCOM_USART_CTRLA_MODE_Msk;
    1702:	0083      	lsls	r3, r0, #2
    1704:	181b      	adds	r3, r3, r0
    1706:	009b      	lsls	r3, r3, #2
    1708:	4a3b      	ldr	r2, [pc, #236]	; (17f8 <_usart_init+0x124>)
    170a:	18d3      	adds	r3, r2, r3
    170c:	69d9      	ldr	r1, [r3, #28]
    170e:	231c      	movs	r3, #28
    1710:	4019      	ands	r1, r3
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1712:	2203      	movs	r2, #3
    1714:	69e3      	ldr	r3, [r4, #28]
    1716:	421a      	tst	r2, r3
    1718:	d1fc      	bne.n	1714 <_usart_init+0x40>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    171a:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    171c:	079b      	lsls	r3, r3, #30
    171e:	d50b      	bpl.n	1738 <_usart_init+0x64>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    1720:	6823      	ldr	r3, [r4, #0]
    1722:	2202      	movs	r2, #2
    1724:	4393      	bics	r3, r2
    1726:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1728:	2303      	movs	r3, #3
    172a:	69e2      	ldr	r2, [r4, #28]
    172c:	4213      	tst	r3, r2
    172e:	d1fc      	bne.n	172a <_usart_init+0x56>
    1730:	2302      	movs	r3, #2
    1732:	69e2      	ldr	r2, [r4, #28]
    1734:	4213      	tst	r3, r2
    1736:	d1fc      	bne.n	1732 <_usart_init+0x5e>
			hri_sercomusart_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomusart_wait_for_sync(hw, SERCOM_USART_SYNCBUSY_ENABLE);
		}
		hri_sercomusart_write_CTRLA_reg(hw, SERCOM_USART_CTRLA_SWRST | mode);
    1738:	2301      	movs	r3, #1
    173a:	430b      	orrs	r3, r1
	((Sercom *)hw)->USART.CTRLA.reg = data;
    173c:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    173e:	2203      	movs	r2, #3
    1740:	69e3      	ldr	r3, [r4, #28]
    1742:	421a      	tst	r2, r3
    1744:	d1fc      	bne.n	1740 <_usart_init+0x6c>
    1746:	2201      	movs	r2, #1
    1748:	69e3      	ldr	r3, [r4, #28]
    174a:	421a      	tst	r2, r3
    174c:	d1fc      	bne.n	1748 <_usart_init+0x74>
	}
	hri_sercomusart_wait_for_sync(hw, SERCOM_USART_SYNCBUSY_SWRST);

	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
    174e:	0001      	movs	r1, r0
    1750:	0083      	lsls	r3, r0, #2
    1752:	181b      	adds	r3, r3, r0
    1754:	009b      	lsls	r3, r3, #2
    1756:	4a28      	ldr	r2, [pc, #160]	; (17f8 <_usart_init+0x124>)
    1758:	18d3      	adds	r3, r2, r3
    175a:	69d8      	ldr	r0, [r3, #28]
	((Sercom *)hw)->USART.CTRLA.reg = data;
    175c:	6020      	str	r0, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    175e:	2203      	movs	r2, #3
    1760:	69e3      	ldr	r3, [r4, #28]
    1762:	421a      	tst	r2, r3
    1764:	d1fc      	bne.n	1760 <_usart_init+0x8c>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
    1766:	008b      	lsls	r3, r1, #2
    1768:	185b      	adds	r3, r3, r1
    176a:	009b      	lsls	r3, r3, #2
    176c:	4a22      	ldr	r2, [pc, #136]	; (17f8 <_usart_init+0x124>)
    176e:	18d3      	adds	r3, r2, r3
    1770:	6a1b      	ldr	r3, [r3, #32]
	((Sercom *)hw)->USART.CTRLB.reg = data;
    1772:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1774:	2207      	movs	r2, #7
    1776:	69e3      	ldr	r3, [r4, #28]
    1778:	421a      	tst	r2, r3
    177a:	d1fc      	bne.n	1776 <_usart_init+0xa2>
	if ((_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x1)) || (_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x3))) {
    177c:	23c0      	movs	r3, #192	; 0xc0
    177e:	01db      	lsls	r3, r3, #7
    1780:	4218      	tst	r0, r3
    1782:	d10b      	bne.n	179c <_usart_init+0xc8>
		((Sercom *)hw)->USART.BAUD.FRAC.BAUD = _usarts[i].baud;
		((Sercom *)hw)->USART.BAUD.FRAC.FP   = _usarts[i].fractional;
	} else {
		hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
    1784:	008b      	lsls	r3, r1, #2
    1786:	185b      	adds	r3, r3, r1
    1788:	009b      	lsls	r3, r3, #2
    178a:	4a1b      	ldr	r2, [pc, #108]	; (17f8 <_usart_init+0x124>)
    178c:	18d3      	adds	r3, r2, r3
    178e:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
	((Sercom *)hw)->USART.BAUD.reg = data;
    1790:	81a3      	strh	r3, [r4, #12]
    1792:	e01a      	b.n	17ca <_usart_init+0xf6>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
    1794:	2001      	movs	r0, #1
    1796:	e7b1      	b.n	16fc <_usart_init+0x28>
    1798:	2000      	movs	r0, #0
    179a:	e7af      	b.n	16fc <_usart_init+0x28>
		((Sercom *)hw)->USART.BAUD.FRAC.BAUD = _usarts[i].baud;
    179c:	008a      	lsls	r2, r1, #2
    179e:	1852      	adds	r2, r2, r1
    17a0:	0093      	lsls	r3, r2, #2
    17a2:	4a15      	ldr	r2, [pc, #84]	; (17f8 <_usart_init+0x124>)
    17a4:	18d2      	adds	r2, r2, r3
    17a6:	8c90      	ldrh	r0, [r2, #36]	; 0x24
    17a8:	89a3      	ldrh	r3, [r4, #12]
    17aa:	04c0      	lsls	r0, r0, #19
    17ac:	0cc0      	lsrs	r0, r0, #19
    17ae:	0b5b      	lsrs	r3, r3, #13
    17b0:	035b      	lsls	r3, r3, #13
    17b2:	4303      	orrs	r3, r0
    17b4:	81a3      	strh	r3, [r4, #12]
		((Sercom *)hw)->USART.BAUD.FRAC.FP   = _usarts[i].fractional;
    17b6:	3226      	adds	r2, #38	; 0x26
    17b8:	7813      	ldrb	r3, [r2, #0]
    17ba:	2207      	movs	r2, #7
    17bc:	401a      	ands	r2, r3
    17be:	89a3      	ldrh	r3, [r4, #12]
    17c0:	0352      	lsls	r2, r2, #13
    17c2:	04db      	lsls	r3, r3, #19
    17c4:	0cdb      	lsrs	r3, r3, #19
    17c6:	4313      	orrs	r3, r2
    17c8:	81a3      	strh	r3, [r4, #12]
	}

	hri_sercomusart_write_RXPL_reg(hw, _usarts[i].rxpl);
    17ca:	4a0b      	ldr	r2, [pc, #44]	; (17f8 <_usart_init+0x124>)
    17cc:	0088      	lsls	r0, r1, #2
    17ce:	1843      	adds	r3, r0, r1
    17d0:	009b      	lsls	r3, r3, #2
    17d2:	18d3      	adds	r3, r2, r3
    17d4:	3327      	adds	r3, #39	; 0x27
    17d6:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->USART.RXPL.reg = data;
    17d8:	73a3      	strb	r3, [r4, #14]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
    17da:	1841      	adds	r1, r0, r1
    17dc:	0089      	lsls	r1, r1, #2
    17de:	1852      	adds	r2, r2, r1
    17e0:	3228      	adds	r2, #40	; 0x28
    17e2:	7812      	ldrb	r2, [r2, #0]
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    17e4:	2330      	movs	r3, #48	; 0x30
    17e6:	54e2      	strb	r2, [r4, r3]

	return ERR_NONE;
}
    17e8:	2000      	movs	r0, #0
    17ea:	bd10      	pop	{r4, pc}
    17ec:	bdfff800 	.word	0xbdfff800
    17f0:	0000a074 	.word	0x0000a074
    17f4:	00000f5d 	.word	0x00000f5d
    17f8:	0000a020 	.word	0x0000a020

000017fc <_usart_sync_init>:
{
    17fc:	b570      	push	{r4, r5, r6, lr}
    17fe:	0005      	movs	r5, r0
    1800:	000c      	movs	r4, r1
	ASSERT(device);
    1802:	1e43      	subs	r3, r0, #1
    1804:	4198      	sbcs	r0, r3
    1806:	b2c0      	uxtb	r0, r0
    1808:	22b8      	movs	r2, #184	; 0xb8
    180a:	4904      	ldr	r1, [pc, #16]	; (181c <_usart_sync_init+0x20>)
    180c:	4b04      	ldr	r3, [pc, #16]	; (1820 <_usart_sync_init+0x24>)
    180e:	4798      	blx	r3
	device->hw = hw;
    1810:	602c      	str	r4, [r5, #0]
	return _usart_init(hw);
    1812:	0020      	movs	r0, r4
    1814:	4b03      	ldr	r3, [pc, #12]	; (1824 <_usart_sync_init+0x28>)
    1816:	4798      	blx	r3
}
    1818:	bd70      	pop	{r4, r5, r6, pc}
    181a:	46c0      	nop			; (mov r8, r8)
    181c:	0000a074 	.word	0x0000a074
    1820:	00000f5d 	.word	0x00000f5d
    1824:	000016d5 	.word	0x000016d5

00001828 <_usart_async_init>:
{
    1828:	b570      	push	{r4, r5, r6, lr}
    182a:	0006      	movs	r6, r0
    182c:	000c      	movs	r4, r1
	ASSERT(device);
    182e:	1e43      	subs	r3, r0, #1
    1830:	4198      	sbcs	r0, r3
    1832:	b2c0      	uxtb	r0, r0
    1834:	22c6      	movs	r2, #198	; 0xc6
    1836:	4913      	ldr	r1, [pc, #76]	; (1884 <_usart_async_init+0x5c>)
    1838:	4b13      	ldr	r3, [pc, #76]	; (1888 <_usart_async_init+0x60>)
    183a:	4798      	blx	r3
	init_status = _usart_init(hw);
    183c:	0020      	movs	r0, r4
    183e:	4b13      	ldr	r3, [pc, #76]	; (188c <_usart_async_init+0x64>)
    1840:	4798      	blx	r3
    1842:	1e05      	subs	r5, r0, #0
	if (init_status) {
    1844:	d001      	beq.n	184a <_usart_async_init+0x22>
}
    1846:	0028      	movs	r0, r5
    1848:	bd70      	pop	{r4, r5, r6, pc}
	device->hw = hw;
    184a:	61b4      	str	r4, [r6, #24]
	_sercom_init_irq_param(hw, (void *)device);
    184c:	0031      	movs	r1, r6
    184e:	0020      	movs	r0, r4
    1850:	4b0f      	ldr	r3, [pc, #60]	; (1890 <_usart_async_init+0x68>)
    1852:	4798      	blx	r3
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    1854:	4b0f      	ldr	r3, [pc, #60]	; (1894 <_usart_async_init+0x6c>)
    1856:	469c      	mov	ip, r3
    1858:	4464      	add	r4, ip
    185a:	0aa4      	lsrs	r4, r4, #10
/**
 * \brief Retrieve IRQ number for the given hardware instance
 */
static uint8_t _sercom_get_irq_num(const void *const hw)
{
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
    185c:	3409      	adds	r4, #9
  if ((int32_t)(IRQn) >= 0)
    185e:	b2e3      	uxtb	r3, r4
    1860:	0622      	lsls	r2, r4, #24
    1862:	d4f0      	bmi.n	1846 <_usart_async_init+0x1e>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1864:	221f      	movs	r2, #31
    1866:	401a      	ands	r2, r3
    1868:	2301      	movs	r3, #1
    186a:	4093      	lsls	r3, r2
    186c:	4a0a      	ldr	r2, [pc, #40]	; (1898 <_usart_async_init+0x70>)
    186e:	2180      	movs	r1, #128	; 0x80
    1870:	5053      	str	r3, [r2, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    1872:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    1876:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    187a:	3101      	adds	r1, #1
    187c:	31ff      	adds	r1, #255	; 0xff
    187e:	5053      	str	r3, [r2, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1880:	6013      	str	r3, [r2, #0]
    1882:	e7e0      	b.n	1846 <_usart_async_init+0x1e>
    1884:	0000a074 	.word	0x0000a074
    1888:	00000f5d 	.word	0x00000f5d
    188c:	000016d5 	.word	0x000016d5
    1890:	000016ad 	.word	0x000016ad
    1894:	bdfff800 	.word	0xbdfff800
    1898:	e000e100 	.word	0xe000e100

0000189c <_usart_async_deinit>:
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    189c:	6983      	ldr	r3, [r0, #24]
    189e:	4a12      	ldr	r2, [pc, #72]	; (18e8 <_usart_async_deinit+0x4c>)
    18a0:	4694      	mov	ip, r2
    18a2:	4463      	add	r3, ip
    18a4:	0a9b      	lsrs	r3, r3, #10
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
    18a6:	3309      	adds	r3, #9
  if ((int32_t)(IRQn) >= 0)
    18a8:	b2d9      	uxtb	r1, r3
    18aa:	061b      	lsls	r3, r3, #24
    18ac:	d40a      	bmi.n	18c4 <_usart_async_deinit+0x28>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    18ae:	221f      	movs	r2, #31
    18b0:	400a      	ands	r2, r1
    18b2:	2301      	movs	r3, #1
    18b4:	4093      	lsls	r3, r2
    18b6:	2280      	movs	r2, #128	; 0x80
    18b8:	490c      	ldr	r1, [pc, #48]	; (18ec <_usart_async_deinit+0x50>)
    18ba:	508b      	str	r3, [r1, r2]
  __ASM volatile ("dsb 0xF":::"memory");
    18bc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    18c0:	f3bf 8f6f 	isb	sy
	_usart_deinit(device->hw);
    18c4:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    18c6:	681a      	ldr	r2, [r3, #0]
    18c8:	2102      	movs	r1, #2
    18ca:	438a      	bics	r2, r1
    18cc:	601a      	str	r2, [r3, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    18ce:	3101      	adds	r1, #1
    18d0:	69da      	ldr	r2, [r3, #28]
    18d2:	4211      	tst	r1, r2
    18d4:	d1fc      	bne.n	18d0 <_usart_async_deinit+0x34>
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_SWRST;
    18d6:	681a      	ldr	r2, [r3, #0]
    18d8:	2101      	movs	r1, #1
    18da:	430a      	orrs	r2, r1
    18dc:	601a      	str	r2, [r3, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    18de:	69da      	ldr	r2, [r3, #28]
    18e0:	4211      	tst	r1, r2
    18e2:	d1fc      	bne.n	18de <_usart_async_deinit+0x42>
}
    18e4:	4770      	bx	lr
    18e6:	46c0      	nop			; (mov r8, r8)
    18e8:	bdfff800 	.word	0xbdfff800
    18ec:	e000e100 	.word	0xe000e100

000018f0 <_usart_sync_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    18f0:	6802      	ldr	r2, [r0, #0]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    18f2:	6813      	ldr	r3, [r2, #0]
    18f4:	2102      	movs	r1, #2
    18f6:	430b      	orrs	r3, r1
    18f8:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    18fa:	3101      	adds	r1, #1
    18fc:	69d3      	ldr	r3, [r2, #28]
    18fe:	4219      	tst	r1, r3
    1900:	d1fc      	bne.n	18fc <_usart_sync_enable+0xc>
}
    1902:	4770      	bx	lr

00001904 <_usart_async_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    1904:	6982      	ldr	r2, [r0, #24]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1906:	6813      	ldr	r3, [r2, #0]
    1908:	2102      	movs	r1, #2
    190a:	430b      	orrs	r3, r1
    190c:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    190e:	3101      	adds	r1, #1
    1910:	69d3      	ldr	r3, [r2, #28]
    1912:	4219      	tst	r1, r3
    1914:	d1fc      	bne.n	1910 <_usart_async_enable+0xc>
}
    1916:	4770      	bx	lr

00001918 <_usart_async_disable>:
	hri_sercomusart_clear_CTRLA_ENABLE_bit(device->hw);
    1918:	6982      	ldr	r2, [r0, #24]
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    191a:	6813      	ldr	r3, [r2, #0]
    191c:	2102      	movs	r1, #2
    191e:	438b      	bics	r3, r1
    1920:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1922:	3101      	adds	r1, #1
    1924:	69d3      	ldr	r3, [r2, #28]
    1926:	4219      	tst	r1, r3
    1928:	d1fc      	bne.n	1924 <_usart_async_disable+0xc>
}
    192a:	4770      	bx	lr

0000192c <_usart_sync_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    192c:	6803      	ldr	r3, [r0, #0]
    192e:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    1930:	8519      	strh	r1, [r3, #40]	; 0x28
}
    1932:	4770      	bx	lr

00001934 <_usart_async_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    1934:	6983      	ldr	r3, [r0, #24]
    1936:	b289      	uxth	r1, r1
    1938:	8519      	strh	r1, [r3, #40]	; 0x28
}
    193a:	4770      	bx	lr

0000193c <_usart_sync_read_byte>:
	return hri_sercomusart_read_DATA_reg(device->hw);
    193c:	6803      	ldr	r3, [r0, #0]
	return ((Sercom *)hw)->USART.DATA.reg;
    193e:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    1940:	b2c0      	uxtb	r0, r0
}
    1942:	4770      	bx	lr

00001944 <_usart_sync_is_ready_to_send>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
    1944:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    1946:	7e18      	ldrb	r0, [r3, #24]
    1948:	2301      	movs	r3, #1
    194a:	4018      	ands	r0, r3
}
    194c:	4770      	bx	lr

0000194e <_usart_sync_is_transmit_done>:
	return hri_sercomusart_get_interrupt_TXC_bit(device->hw);
    194e:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    1950:	7e18      	ldrb	r0, [r3, #24]
    1952:	0780      	lsls	r0, r0, #30
    1954:	0fc0      	lsrs	r0, r0, #31
}
    1956:	4770      	bx	lr

00001958 <_usart_async_is_byte_sent>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
    1958:	6983      	ldr	r3, [r0, #24]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    195a:	7e18      	ldrb	r0, [r3, #24]
    195c:	2301      	movs	r3, #1
    195e:	4018      	ands	r0, r3
}
    1960:	4770      	bx	lr

00001962 <_usart_sync_is_byte_received>:
	return hri_sercomusart_get_interrupt_RXC_bit(device->hw);
    1962:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    1964:	7e18      	ldrb	r0, [r3, #24]
    1966:	0740      	lsls	r0, r0, #29
    1968:	0fc0      	lsrs	r0, r0, #31
}
    196a:	4770      	bx	lr

0000196c <_usart_async_set_flow_control_state>:
}
    196c:	4770      	bx	lr

0000196e <_usart_async_enable_byte_sent_irq>:
	hri_sercomusart_set_INTEN_DRE_bit(device->hw);
    196e:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    1970:	2201      	movs	r2, #1
    1972:	759a      	strb	r2, [r3, #22]
}
    1974:	4770      	bx	lr

00001976 <_usart_async_enable_tx_done_irq>:
	hri_sercomusart_set_INTEN_TXC_bit(device->hw);
    1976:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    1978:	2202      	movs	r2, #2
    197a:	759a      	strb	r2, [r3, #22]
}
    197c:	4770      	bx	lr
	...

00001980 <_usart_async_set_irq_state>:
{
    1980:	b570      	push	{r4, r5, r6, lr}
    1982:	0004      	movs	r4, r0
    1984:	000d      	movs	r5, r1
    1986:	0016      	movs	r6, r2
	ASSERT(device);
    1988:	1e43      	subs	r3, r0, #1
    198a:	4198      	sbcs	r0, r3
    198c:	b2c0      	uxtb	r0, r0
    198e:	2288      	movs	r2, #136	; 0x88
    1990:	0092      	lsls	r2, r2, #2
    1992:	4916      	ldr	r1, [pc, #88]	; (19ec <_usart_async_set_irq_state+0x6c>)
    1994:	4b16      	ldr	r3, [pc, #88]	; (19f0 <_usart_async_set_irq_state+0x70>)
    1996:	4798      	blx	r3
	if (USART_ASYNC_BYTE_SENT == type || USART_ASYNC_TX_DONE == type) {
    1998:	2302      	movs	r3, #2
    199a:	002a      	movs	r2, r5
    199c:	439a      	bics	r2, r3
    199e:	d10e      	bne.n	19be <_usart_async_set_irq_state+0x3e>
		hri_sercomusart_write_INTEN_DRE_bit(device->hw, state);
    19a0:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    19a2:	2e00      	cmp	r6, #0
    19a4:	d105      	bne.n	19b2 <_usart_async_set_irq_state+0x32>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    19a6:	2201      	movs	r2, #1
    19a8:	751a      	strb	r2, [r3, #20]
		hri_sercomusart_write_INTEN_TXC_bit(device->hw, state);
    19aa:	69a3      	ldr	r3, [r4, #24]
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    19ac:	3201      	adds	r2, #1
    19ae:	751a      	strb	r2, [r3, #20]
}
    19b0:	bd70      	pop	{r4, r5, r6, pc}
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    19b2:	2201      	movs	r2, #1
    19b4:	759a      	strb	r2, [r3, #22]
		hri_sercomusart_write_INTEN_TXC_bit(device->hw, state);
    19b6:	69a3      	ldr	r3, [r4, #24]
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    19b8:	3201      	adds	r2, #1
    19ba:	759a      	strb	r2, [r3, #22]
    19bc:	e7f8      	b.n	19b0 <_usart_async_set_irq_state+0x30>
	} else if (USART_ASYNC_RX_DONE == type) {
    19be:	2d01      	cmp	r5, #1
    19c0:	d007      	beq.n	19d2 <_usart_async_set_irq_state+0x52>
	} else if (USART_ASYNC_ERROR == type) {
    19c2:	2d03      	cmp	r5, #3
    19c4:	d1f4      	bne.n	19b0 <_usart_async_set_irq_state+0x30>
		hri_sercomusart_write_INTEN_ERROR_bit(device->hw, state);
    19c6:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    19c8:	2e00      	cmp	r6, #0
    19ca:	d00b      	beq.n	19e4 <_usart_async_set_irq_state+0x64>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_ERROR;
    19cc:	2280      	movs	r2, #128	; 0x80
    19ce:	759a      	strb	r2, [r3, #22]
}
    19d0:	e7ee      	b.n	19b0 <_usart_async_set_irq_state+0x30>
		hri_sercomusart_write_INTEN_RXC_bit(device->hw, state);
    19d2:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    19d4:	2e00      	cmp	r6, #0
    19d6:	d102      	bne.n	19de <_usart_async_set_irq_state+0x5e>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_RXC;
    19d8:	2204      	movs	r2, #4
    19da:	751a      	strb	r2, [r3, #20]
    19dc:	e7e8      	b.n	19b0 <_usart_async_set_irq_state+0x30>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_RXC;
    19de:	2204      	movs	r2, #4
    19e0:	759a      	strb	r2, [r3, #22]
    19e2:	e7e5      	b.n	19b0 <_usart_async_set_irq_state+0x30>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_ERROR;
    19e4:	2280      	movs	r2, #128	; 0x80
    19e6:	751a      	strb	r2, [r3, #20]
    19e8:	e7e2      	b.n	19b0 <_usart_async_set_irq_state+0x30>
    19ea:	46c0      	nop			; (mov r8, r8)
    19ec:	0000a074 	.word	0x0000a074
    19f0:	00000f5d 	.word	0x00000f5d

000019f4 <SERCOM0_Handler>:

	return NULL;
}

void SERCOM0_Handler(void)
{
    19f4:	b510      	push	{r4, lr}
	_sercom_usart_interrupt_handler(_sercom0_dev);
    19f6:	4b02      	ldr	r3, [pc, #8]	; (1a00 <SERCOM0_Handler+0xc>)
    19f8:	6818      	ldr	r0, [r3, #0]
    19fa:	4b02      	ldr	r3, [pc, #8]	; (1a04 <SERCOM0_Handler+0x10>)
    19fc:	4798      	blx	r3
}
    19fe:	bd10      	pop	{r4, pc}
    1a00:	20000134 	.word	0x20000134
    1a04:	00001649 	.word	0x00001649

00001a08 <SERCOM2_Handler>:

void SERCOM2_Handler(void)
{
    1a08:	b510      	push	{r4, lr}
	_sercom_usart_interrupt_handler(_sercom2_dev);
    1a0a:	4b02      	ldr	r3, [pc, #8]	; (1a14 <SERCOM2_Handler+0xc>)
    1a0c:	6858      	ldr	r0, [r3, #4]
    1a0e:	4b02      	ldr	r3, [pc, #8]	; (1a18 <SERCOM2_Handler+0x10>)
    1a10:	4798      	blx	r3
}
    1a12:	bd10      	pop	{r4, pc}
    1a14:	20000134 	.word	0x20000134
    1a18:	00001649 	.word	0x00001649

00001a1c <_sysctrl_init_sources>:
}

static inline void hri_sysctrl_set_OSC32K_ENABLE_bit(const void *const hw)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    1a1c:	4a02      	ldr	r2, [pc, #8]	; (1a28 <_sysctrl_init_sources+0xc>)
    1a1e:	6993      	ldr	r3, [r2, #24]
    1a20:	2102      	movs	r1, #2
    1a22:	430b      	orrs	r3, r1
    1a24:	6193      	str	r3, [r2, #24]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    1a26:	4770      	bx	lr
    1a28:	40000800 	.word	0x40000800

00001a2c <_sysctrl_init_referenced_generators>:
}

static inline void hri_sysctrl_clear_OSC32K_ENABLE_bit(const void *const hw)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    1a2c:	4a02      	ldr	r2, [pc, #8]	; (1a38 <_sysctrl_init_referenced_generators+0xc>)
    1a2e:	6993      	ldr	r3, [r2, #24]
    1a30:	2102      	movs	r1, #2
    1a32:	438b      	bics	r3, r1
    1a34:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    1a36:	4770      	bx	lr
    1a38:	40000800 	.word	0x40000800

00001a3c <_timer_init>:
static inline uint8_t _get_hardware_offset(const void *const hw);
/**
 * \brief Initialize TC
 */
int32_t _timer_init(struct _timer_device *const device, void *const hw)
{
    1a3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1a3e:	0007      	movs	r7, r0
    1a40:	000c      	movs	r4, r1
 * \param[in] hw The pointer to hardware instance
 */
static uint8_t tc_get_hardware_index(const void *const hw)
{
#ifndef _UNIT_TEST_
	return ((uint32_t)hw - TC_HW_BASE_ADDR) >> 10;
    1a42:	4b3c      	ldr	r3, [pc, #240]	; (1b34 <_timer_init+0xf8>)
    1a44:	18cd      	adds	r5, r1, r3
    1a46:	0aad      	lsrs	r5, r5, #10
    1a48:	b2ed      	uxtb	r5, r5
{
	uint8_t tc_offset = tc_get_hardware_index(hw) + TC_NUMBER_OFFSET;
	uint8_t i;

	for (i = 0; i < ARRAY_SIZE(_tcs); i++) {
		if (_tcs[i].number == tc_offset) {
    1a4a:	2d00      	cmp	r5, #0
    1a4c:	d051      	beq.n	1af2 <_timer_init+0xb6>
			return i;
		}
	}

	ASSERT(false);
    1a4e:	229f      	movs	r2, #159	; 0x9f
    1a50:	0052      	lsls	r2, r2, #1
    1a52:	4939      	ldr	r1, [pc, #228]	; (1b38 <_timer_init+0xfc>)
    1a54:	2000      	movs	r0, #0
    1a56:	4b39      	ldr	r3, [pc, #228]	; (1b3c <_timer_init+0x100>)
    1a58:	4798      	blx	r3
	return -1;
    1a5a:	2601      	movs	r6, #1
    1a5c:	4276      	negs	r6, r6
	device->hw = hw;
    1a5e:	60fc      	str	r4, [r7, #12]
	ASSERT(ARRAY_SIZE(_tcs));
    1a60:	228b      	movs	r2, #139	; 0x8b
    1a62:	4935      	ldr	r1, [pc, #212]	; (1b38 <_timer_init+0xfc>)
    1a64:	2001      	movs	r0, #1
    1a66:	4b35      	ldr	r3, [pc, #212]	; (1b3c <_timer_init+0x100>)
    1a68:	4798      	blx	r3
typedef uint8_t  hri_tccount8_count_reg_t;
typedef uint8_t  hri_tccount8_per_reg_t;

static inline void hri_tc_wait_for_sync(const void *const hw)
{
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    1a6a:	7be3      	ldrb	r3, [r4, #15]
    1a6c:	09db      	lsrs	r3, r3, #7
    1a6e:	d1fc      	bne.n	1a6a <_timer_init+0x2e>
}

static inline hri_tc_ctrla_reg_t hri_tc_get_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t mask)
{
	uint16_t tmp;
	tmp = ((Tc *)hw)->COUNT16.CTRLA.reg;
    1a70:	8823      	ldrh	r3, [r4, #0]
	if (hri_tc_get_CTRLA_reg(hw, TC_CTRLA_ENABLE)) {
    1a72:	079b      	lsls	r3, r3, #30
    1a74:	d504      	bpl.n	1a80 <_timer_init+0x44>
}

static inline void hri_tc_write_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1a76:	2300      	movs	r3, #0
    1a78:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    1a7a:	7be3      	ldrb	r3, [r4, #15]
    1a7c:	09db      	lsrs	r3, r3, #7
    1a7e:	d1fc      	bne.n	1a7a <_timer_init+0x3e>
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1a80:	2301      	movs	r3, #1
    1a82:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    1a84:	7be3      	ldrb	r3, [r4, #15]
    1a86:	09db      	lsrs	r3, r3, #7
    1a88:	d1fc      	bne.n	1a84 <_timer_init+0x48>
	hri_tc_write_CTRLA_reg(hw, _tcs[i].ctrl_a);
    1a8a:	00b3      	lsls	r3, r6, #2
    1a8c:	199b      	adds	r3, r3, r6
    1a8e:	009a      	lsls	r2, r3, #2
    1a90:	4b2b      	ldr	r3, [pc, #172]	; (1b40 <_timer_init+0x104>)
    1a92:	189b      	adds	r3, r3, r2
    1a94:	885a      	ldrh	r2, [r3, #2]
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1a96:	8022      	strh	r2, [r4, #0]
	hri_tc_write_DBGCTRL_reg(hw, _tcs[i].dbg_ctrl);
    1a98:	7918      	ldrb	r0, [r3, #4]
}

static inline void hri_tc_write_DBGCTRL_reg(const void *const hw, hri_tc_dbgctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.DBGCTRL.reg = data;
    1a9a:	7220      	strb	r0, [r4, #8]
	hri_tc_write_EVCTRL_reg(hw, _tcs[i].event_ctrl);
    1a9c:	88db      	ldrh	r3, [r3, #6]
}

static inline void hri_tc_write_EVCTRL_reg(const void *const hw, hri_tc_evctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.EVCTRL.reg = data;
    1a9e:	8163      	strh	r3, [r4, #10]
    1aa0:	230c      	movs	r3, #12
    1aa2:	4013      	ands	r3, r2
	if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT32) {
    1aa4:	2b08      	cmp	r3, #8
    1aa6:	d026      	beq.n	1af6 <_timer_init+0xba>
	} else if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT16) {
    1aa8:	2b00      	cmp	r3, #0
    1aaa:	d12e      	bne.n	1b0a <_timer_init+0xce>
		hri_tccount16_write_CC_reg(hw, 0, (hri_tccount16_cc_reg_t)_tcs[i].cc0);
    1aac:	00b3      	lsls	r3, r6, #2
    1aae:	199b      	adds	r3, r3, r6
    1ab0:	009b      	lsls	r3, r3, #2
    1ab2:	4a23      	ldr	r2, [pc, #140]	; (1b40 <_timer_init+0x104>)
    1ab4:	18d3      	adds	r3, r2, r3
    1ab6:	899b      	ldrh	r3, [r3, #12]
}

static inline void hri_tccount16_write_CC_reg(const void *const hw, uint8_t index, hri_tccount16_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CC[index].reg = data;
    1ab8:	8323      	strh	r3, [r4, #24]
    1aba:	2300      	movs	r3, #0
    1abc:	8363      	strh	r3, [r4, #26]
	((Tc *)hw)->COUNT16.INTENSET.reg = TC_INTENSET_OVF;
    1abe:	2301      	movs	r3, #1
    1ac0:	7363      	strb	r3, [r4, #13]
/**
 * \brief Init irq param with the given tc hardware instance
 */
static void _tc_init_irq_param(const void *const hw, void *dev)
{
	if (hw == TC3) {
    1ac2:	4b20      	ldr	r3, [pc, #128]	; (1b44 <_timer_init+0x108>)
    1ac4:	429c      	cmp	r4, r3
    1ac6:	d031      	beq.n	1b2c <_timer_init+0xf0>
	NVIC_DisableIRQ((IRQn_Type)((uint8_t)TC_IRQ_BASE_INDEX + tc_get_hardware_index(hw)));
    1ac8:	3512      	adds	r5, #18
  if ((int32_t)(IRQn) >= 0)
    1aca:	b2eb      	uxtb	r3, r5
    1acc:	062a      	lsls	r2, r5, #24
    1ace:	d40e      	bmi.n	1aee <_timer_init+0xb2>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1ad0:	221f      	movs	r2, #31
    1ad2:	401a      	ands	r2, r3
    1ad4:	2301      	movs	r3, #1
    1ad6:	4093      	lsls	r3, r2
    1ad8:	4a1b      	ldr	r2, [pc, #108]	; (1b48 <_timer_init+0x10c>)
    1ada:	2180      	movs	r1, #128	; 0x80
    1adc:	5053      	str	r3, [r2, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    1ade:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    1ae2:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1ae6:	3101      	adds	r1, #1
    1ae8:	31ff      	adds	r1, #255	; 0xff
    1aea:	5053      	str	r3, [r2, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1aec:	6013      	str	r3, [r2, #0]
}
    1aee:	2000      	movs	r0, #0
    1af0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return i;
    1af2:	2600      	movs	r6, #0
    1af4:	e7b3      	b.n	1a5e <_timer_init+0x22>
		hri_tccount32_write_CC_reg(hw, 0, _tcs[i].cc0);
    1af6:	00b3      	lsls	r3, r6, #2
    1af8:	199e      	adds	r6, r3, r6
    1afa:	00b6      	lsls	r6, r6, #2
    1afc:	4b10      	ldr	r3, [pc, #64]	; (1b40 <_timer_init+0x104>)
    1afe:	199e      	adds	r6, r3, r6
    1b00:	68f3      	ldr	r3, [r6, #12]
}

static inline void hri_tccount32_write_CC_reg(const void *const hw, uint8_t index, hri_tccount32_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT32.CC[index].reg = data;
    1b02:	61a3      	str	r3, [r4, #24]
    1b04:	2300      	movs	r3, #0
    1b06:	61e3      	str	r3, [r4, #28]
    1b08:	e7d9      	b.n	1abe <_timer_init+0x82>
	} else if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT8) {
    1b0a:	2b04      	cmp	r3, #4
    1b0c:	d1d7      	bne.n	1abe <_timer_init+0x82>
		hri_tccount8_write_CC_reg(hw, 0, (hri_tccount8_cc_reg_t)_tcs[i].cc0);
    1b0e:	480c      	ldr	r0, [pc, #48]	; (1b40 <_timer_init+0x104>)
    1b10:	00b3      	lsls	r3, r6, #2
    1b12:	199a      	adds	r2, r3, r6
    1b14:	0092      	lsls	r2, r2, #2
    1b16:	1882      	adds	r2, r0, r2
    1b18:	7b12      	ldrb	r2, [r2, #12]
	((Tc *)hw)->COUNT8.CC[index].reg = data;
    1b1a:	7622      	strb	r2, [r4, #24]
    1b1c:	2200      	movs	r2, #0
    1b1e:	7662      	strb	r2, [r4, #25]
		hri_tccount8_write_PER_reg(hw, _tcs[i].per);
    1b20:	199b      	adds	r3, r3, r6
    1b22:	009b      	lsls	r3, r3, #2
    1b24:	18c3      	adds	r3, r0, r3
    1b26:	7a1b      	ldrb	r3, [r3, #8]
	((Tc *)hw)->COUNT8.PER.reg = data;
    1b28:	7523      	strb	r3, [r4, #20]
    1b2a:	e7c8      	b.n	1abe <_timer_init+0x82>
		_tc3_dev = (struct _timer_device *)dev;
    1b2c:	4b07      	ldr	r3, [pc, #28]	; (1b4c <_timer_init+0x110>)
    1b2e:	601f      	str	r7, [r3, #0]
    1b30:	e7ca      	b.n	1ac8 <_timer_init+0x8c>
    1b32:	46c0      	nop			; (mov r8, r8)
    1b34:	bdffd400 	.word	0xbdffd400
    1b38:	0000a0a8 	.word	0x0000a0a8
    1b3c:	00000f5d 	.word	0x00000f5d
    1b40:	0000a094 	.word	0x0000a094
    1b44:	42002c00 	.word	0x42002c00
    1b48:	e000e100 	.word	0xe000e100
    1b4c:	2000013c 	.word	0x2000013c

00001b50 <_timer_start>:
	hri_tc_set_CTRLA_ENABLE_bit(device->hw);
    1b50:	68c2      	ldr	r2, [r0, #12]
	((Tc *)hw)->COUNT16.CTRLA.reg |= TC_CTRLA_ENABLE;
    1b52:	8813      	ldrh	r3, [r2, #0]
    1b54:	2102      	movs	r1, #2
    1b56:	430b      	orrs	r3, r1
    1b58:	8013      	strh	r3, [r2, #0]
}
    1b5a:	4770      	bx	lr

00001b5c <_timer_is_started>:
	return hri_tc_get_CTRLA_ENABLE_bit(device->hw);
    1b5c:	68c3      	ldr	r3, [r0, #12]
	tmp = ((Tc *)hw)->COUNT16.CTRLA.reg;
    1b5e:	8818      	ldrh	r0, [r3, #0]
	return (bool)tmp;
    1b60:	0780      	lsls	r0, r0, #30
    1b62:	0fc0      	lsrs	r0, r0, #31
}
    1b64:	4770      	bx	lr

00001b66 <_tc_get_timer>:
}
    1b66:	2000      	movs	r0, #0
    1b68:	4770      	bx	lr
	...

00001b6c <_timer_set_irq>:
{
    1b6c:	b510      	push	{r4, lr}
	return ((uint32_t)hw - TC_HW_BASE_ADDR) >> 10;
    1b6e:	68c0      	ldr	r0, [r0, #12]
    1b70:	4b04      	ldr	r3, [pc, #16]	; (1b84 <_timer_set_irq+0x18>)
    1b72:	469c      	mov	ip, r3
    1b74:	4460      	add	r0, ip
    1b76:	0a80      	lsrs	r0, r0, #10
	_irq_set((IRQn_Type)((uint8_t)TC_IRQ_BASE_INDEX + tc_get_hardware_index(device->hw)));
    1b78:	3012      	adds	r0, #18
    1b7a:	b2c0      	uxtb	r0, r0
    1b7c:	4b02      	ldr	r3, [pc, #8]	; (1b88 <_timer_set_irq+0x1c>)
    1b7e:	4798      	blx	r3
}
    1b80:	bd10      	pop	{r4, pc}
    1b82:	46c0      	nop			; (mov r8, r8)
    1b84:	bdffd400 	.word	0xbdffd400
    1b88:	00001405 	.word	0x00001405

00001b8c <TC3_Handler>:
{
    1b8c:	b510      	push	{r4, lr}
	tc_interrupt_handler(_tc3_dev);
    1b8e:	4b06      	ldr	r3, [pc, #24]	; (1ba8 <TC3_Handler+0x1c>)
    1b90:	6818      	ldr	r0, [r3, #0]
	void *const hw = device->hw;
    1b92:	68c3      	ldr	r3, [r0, #12]
	return (((Tc *)hw)->COUNT16.INTFLAG.reg & TC_INTFLAG_OVF) >> TC_INTFLAG_OVF_Pos;
    1b94:	7b9a      	ldrb	r2, [r3, #14]
	if (hri_tc_get_interrupt_OVF_bit(hw)) {
    1b96:	07d2      	lsls	r2, r2, #31
    1b98:	d400      	bmi.n	1b9c <TC3_Handler+0x10>
}
    1b9a:	bd10      	pop	{r4, pc}
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_OVF;
    1b9c:	2201      	movs	r2, #1
    1b9e:	739a      	strb	r2, [r3, #14]
		device->timer_cb.period_expired(device);
    1ba0:	6803      	ldr	r3, [r0, #0]
    1ba2:	4798      	blx	r3
}
    1ba4:	e7f9      	b.n	1b9a <TC3_Handler+0xe>
    1ba6:	46c0      	nop			; (mov r8, r8)
    1ba8:	2000013c 	.word	0x2000013c

00001bac <_read>:
#include <stdio.h>

int __attribute__((weak)) _read(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _read(int file, char *ptr, int len)
{
    1bac:	b510      	push	{r4, lr}
    1bae:	000b      	movs	r3, r1
	int n = 0;

	if (file != 0) {
    1bb0:	2800      	cmp	r0, #0
    1bb2:	d109      	bne.n	1bc8 <_read+0x1c>
		return -1;
	}

	n = stdio_io_read((uint8_t *)ptr, len);
    1bb4:	0011      	movs	r1, r2
    1bb6:	0018      	movs	r0, r3
    1bb8:	4b05      	ldr	r3, [pc, #20]	; (1bd0 <_read+0x24>)
    1bba:	4798      	blx	r3
    1bbc:	2800      	cmp	r0, #0
    1bbe:	db00      	blt.n	1bc2 <_read+0x16>
	if (n < 0) {
		return -1;
	}

	return n;
}
    1bc0:	bd10      	pop	{r4, pc}
    1bc2:	2001      	movs	r0, #1
    1bc4:	4240      	negs	r0, r0
    1bc6:	e7fb      	b.n	1bc0 <_read+0x14>
		return -1;
    1bc8:	2001      	movs	r0, #1
    1bca:	4240      	negs	r0, r0
    1bcc:	e7f8      	b.n	1bc0 <_read+0x14>
    1bce:	46c0      	nop			; (mov r8, r8)
    1bd0:	00001c29 	.word	0x00001c29

00001bd4 <_write>:
#include <stdio.h>

int __attribute__((weak)) _write(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _write(int file, char *ptr, int len)
{
    1bd4:	b510      	push	{r4, lr}
    1bd6:	000b      	movs	r3, r1
	int n = 0;

	if ((file != 1) && (file != 2) && (file != 3)) {
    1bd8:	3801      	subs	r0, #1
    1bda:	2802      	cmp	r0, #2
    1bdc:	d809      	bhi.n	1bf2 <_write+0x1e>
		return -1;
	}

	n = stdio_io_write((const uint8_t *)ptr, len);
    1bde:	0011      	movs	r1, r2
    1be0:	0018      	movs	r0, r3
    1be2:	4b05      	ldr	r3, [pc, #20]	; (1bf8 <_write+0x24>)
    1be4:	4798      	blx	r3
    1be6:	2800      	cmp	r0, #0
    1be8:	db00      	blt.n	1bec <_write+0x18>
	if (n < 0) {
		return -1;
	}

	return n;
}
    1bea:	bd10      	pop	{r4, pc}
    1bec:	2001      	movs	r0, #1
    1bee:	4240      	negs	r0, r0
    1bf0:	e7fb      	b.n	1bea <_write+0x16>
		return -1;
    1bf2:	2001      	movs	r0, #1
    1bf4:	4240      	negs	r0, r0
    1bf6:	e7f8      	b.n	1bea <_write+0x16>
    1bf8:	00001c4d 	.word	0x00001c4d

00001bfc <stdio_io_init>:

/** IO descriptor for STDIO access. */
static struct io_descriptor *stdio_io = NULL;

void stdio_io_init(struct io_descriptor *io)
{
    1bfc:	b570      	push	{r4, r5, r6, lr}
    1bfe:	0006      	movs	r6, r0
#if defined(__GNUC__)
	/* Specify that stdout and stdin should not be buffered. */
	setbuf(stdout, NULL);
    1c00:	4d06      	ldr	r5, [pc, #24]	; (1c1c <stdio_io_init+0x20>)
    1c02:	682b      	ldr	r3, [r5, #0]
    1c04:	6898      	ldr	r0, [r3, #8]
    1c06:	2100      	movs	r1, #0
    1c08:	4c05      	ldr	r4, [pc, #20]	; (1c20 <stdio_io_init+0x24>)
    1c0a:	47a0      	blx	r4
	setbuf(stdin, NULL);
    1c0c:	682b      	ldr	r3, [r5, #0]
    1c0e:	6858      	ldr	r0, [r3, #4]
    1c10:	2100      	movs	r1, #0
    1c12:	47a0      	blx	r4
	 * and AVR GCC library:
	 * - printf() emits one character at a time.
	 * - getchar() requests only 1 byte to exit.
	 */
#endif
	stdio_io = io;
    1c14:	4b03      	ldr	r3, [pc, #12]	; (1c24 <stdio_io_init+0x28>)
    1c16:	601e      	str	r6, [r3, #0]
}
    1c18:	bd70      	pop	{r4, r5, r6, pc}
    1c1a:	46c0      	nop			; (mov r8, r8)
    1c1c:	2000007c 	.word	0x2000007c
    1c20:	00008c99 	.word	0x00008c99
    1c24:	20000140 	.word	0x20000140

00001c28 <stdio_io_read>:
{
	stdio_io = io;
}

int32_t stdio_io_read(uint8_t *buf, const int32_t len)
{
    1c28:	b510      	push	{r4, lr}
    1c2a:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    1c2c:	4b05      	ldr	r3, [pc, #20]	; (1c44 <stdio_io_read+0x1c>)
    1c2e:	6818      	ldr	r0, [r3, #0]
    1c30:	2800      	cmp	r0, #0
    1c32:	d004      	beq.n	1c3e <stdio_io_read+0x16>
		return 0;
	}
	return io_read(stdio_io, buf, len);
    1c34:	b28a      	uxth	r2, r1
    1c36:	0021      	movs	r1, r4
    1c38:	4b03      	ldr	r3, [pc, #12]	; (1c48 <stdio_io_read+0x20>)
    1c3a:	4798      	blx	r3
}
    1c3c:	bd10      	pop	{r4, pc}
		return 0;
    1c3e:	2000      	movs	r0, #0
    1c40:	e7fc      	b.n	1c3c <stdio_io_read+0x14>
    1c42:	46c0      	nop			; (mov r8, r8)
    1c44:	20000140 	.word	0x20000140
    1c48:	00000721 	.word	0x00000721

00001c4c <stdio_io_write>:

int32_t stdio_io_write(const uint8_t *buf, const int32_t len)
{
    1c4c:	b510      	push	{r4, lr}
    1c4e:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
    1c50:	4b05      	ldr	r3, [pc, #20]	; (1c68 <stdio_io_write+0x1c>)
    1c52:	6818      	ldr	r0, [r3, #0]
    1c54:	2800      	cmp	r0, #0
    1c56:	d004      	beq.n	1c62 <stdio_io_write+0x16>
		return 0;
	}
	return io_write(stdio_io, buf, len);
    1c58:	b28a      	uxth	r2, r1
    1c5a:	0021      	movs	r1, r4
    1c5c:	4b03      	ldr	r3, [pc, #12]	; (1c6c <stdio_io_write+0x20>)
    1c5e:	4798      	blx	r3
}
    1c60:	bd10      	pop	{r4, pc}
		return 0;
    1c62:	2000      	movs	r0, #0
    1c64:	e7fc      	b.n	1c60 <stdio_io_write+0x14>
    1c66:	46c0      	nop			; (mov r8, r8)
    1c68:	20000140 	.word	0x20000140
    1c6c:	000006ed 	.word	0x000006ed

00001c70 <hid_prf_disconnect_event_handler>:

/**
 * \HID device disconnected handler function
 */
at_ble_status_t hid_prf_disconnect_event_handler(void *params)
{
    1c70:	b510      	push	{r4, lr}
    1c72:	b084      	sub	sp, #16
	if (at_ble_adv_start(AT_BLE_ADV_TYPE_UNDIRECTED,
    1c74:	2300      	movs	r3, #0
    1c76:	9302      	str	r3, [sp, #8]
    1c78:	4b0e      	ldr	r3, [pc, #56]	; (1cb4 <hid_prf_disconnect_event_handler+0x44>)
    1c7a:	9301      	str	r3, [sp, #4]
    1c7c:	23c8      	movs	r3, #200	; 0xc8
    1c7e:	00db      	lsls	r3, r3, #3
    1c80:	9300      	str	r3, [sp, #0]
    1c82:	2300      	movs	r3, #0
    1c84:	2200      	movs	r2, #0
    1c86:	2101      	movs	r1, #1
    1c88:	2000      	movs	r0, #0
    1c8a:	4c0b      	ldr	r4, [pc, #44]	; (1cb8 <hid_prf_disconnect_event_handler+0x48>)
    1c8c:	47a0      	blx	r4
    1c8e:	2800      	cmp	r0, #0
    1c90:	d108      	bne.n	1ca4 <hid_prf_disconnect_event_handler+0x34>
	                     APP_HID_ADV_TIMEOUT,
	                     0)
	    != AT_BLE_SUCCESS) {
		DBG_LOG("Device Advertisement Failed");
	} else {
		DBG_LOG("Device Started Advertisement");
    1c92:	480a      	ldr	r0, [pc, #40]	; (1cbc <hid_prf_disconnect_event_handler+0x4c>)
    1c94:	4b0a      	ldr	r3, [pc, #40]	; (1cc0 <hid_prf_disconnect_event_handler+0x50>)
    1c96:	4798      	blx	r3
    1c98:	480a      	ldr	r0, [pc, #40]	; (1cc4 <hid_prf_disconnect_event_handler+0x54>)
    1c9a:	4b0b      	ldr	r3, [pc, #44]	; (1cc8 <hid_prf_disconnect_event_handler+0x58>)
    1c9c:	4798      	blx	r3
	}
	ALL_UNUSED(&params);
	return AT_BLE_SUCCESS;
}
    1c9e:	2000      	movs	r0, #0
    1ca0:	b004      	add	sp, #16
    1ca2:	bd10      	pop	{r4, pc}
		DBG_LOG("Device Advertisement Failed");
    1ca4:	4805      	ldr	r0, [pc, #20]	; (1cbc <hid_prf_disconnect_event_handler+0x4c>)
    1ca6:	4b06      	ldr	r3, [pc, #24]	; (1cc0 <hid_prf_disconnect_event_handler+0x50>)
    1ca8:	4798      	blx	r3
    1caa:	4808      	ldr	r0, [pc, #32]	; (1ccc <hid_prf_disconnect_event_handler+0x5c>)
    1cac:	4b06      	ldr	r3, [pc, #24]	; (1cc8 <hid_prf_disconnect_event_handler+0x58>)
    1cae:	4798      	blx	r3
    1cb0:	e7f5      	b.n	1c9e <hid_prf_disconnect_event_handler+0x2e>
    1cb2:	46c0      	nop			; (mov r8, r8)
    1cb4:	0000028f 	.word	0x0000028f
    1cb8:	00004e21 	.word	0x00004e21
    1cbc:	00009f84 	.word	0x00009f84
    1cc0:	00008bad 	.word	0x00008bad
    1cc4:	0000a150 	.word	0x0000a150
    1cc8:	00008a91 	.word	0x00008a91
    1ccc:	0000a134 	.word	0x0000a134

00001cd0 <hid_prf_char_changed_handler>:

/**
 * \Service characteristic change handler function
 */
at_ble_status_t hid_prf_char_changed_handler(void *params)
{
    1cd0:	b570      	push	{r4, r5, r6, lr}
    1cd2:	4c30      	ldr	r4, [pc, #192]	; (1d94 <hid_prf_char_changed_handler+0xc4>)
    1cd4:	44a5      	add	sp, r4
    1cd6:	0001      	movs	r1, r0
	hid_control_mode_ntf_t          control_point;
	at_ble_characteristic_changed_t change_params;
	uint8_t                         ntf_op;
	uint8_t                         serv_inst;

	memcpy((uint8_t *)&change_params, change_char, sizeof(at_ble_characteristic_changed_t));
    1cd8:	4a2f      	ldr	r2, [pc, #188]	; (1d98 <hid_prf_char_changed_handler+0xc8>)
    1cda:	4668      	mov	r0, sp
    1cdc:	4b2f      	ldr	r3, [pc, #188]	; (1d9c <hid_prf_char_changed_handler+0xcc>)
    1cde:	4798      	blx	r3
	serv_inst = hid_serv_get_instance(change_params.char_handle);
    1ce0:	466b      	mov	r3, sp
    1ce2:	885d      	ldrh	r5, [r3, #2]
    1ce4:	0028      	movs	r0, r5
    1ce6:	4b2e      	ldr	r3, [pc, #184]	; (1da0 <hid_prf_char_changed_handler+0xd0>)
    1ce8:	4798      	blx	r3
    1cea:	0004      	movs	r4, r0
	DBG_LOG_DEV("hid_prf_char_changed_handler : Service Instance %d", serv_inst);
	ntf_op = hid_ntf_instance(serv_inst, change_params.char_handle);
    1cec:	0029      	movs	r1, r5
    1cee:	4b2d      	ldr	r3, [pc, #180]	; (1da4 <hid_prf_char_changed_handler+0xd4>)
    1cf0:	4798      	blx	r3
	DBG_LOG_DEV("hid_prf_char_changed_handler : Notification Operation %d", ntf_op);

	switch (ntf_op) {
    1cf2:	2801      	cmp	r0, #1
    1cf4:	d030      	beq.n	1d58 <hid_prf_char_changed_handler+0x88>
    1cf6:	2800      	cmp	r0, #0
    1cf8:	d008      	beq.n	1d0c <hid_prf_char_changed_handler+0x3c>
    1cfa:	2803      	cmp	r0, #3
    1cfc:	d016      	beq.n	1d2c <hid_prf_char_changed_handler+0x5c>
    1cfe:	2808      	cmp	r0, #8
    1d00:	d03b      	beq.n	1d7a <hid_prf_char_changed_handler+0xaa>
	default: {
		DBG_LOG_DEV("Unhandled Notification");
	} break;
	}
	return AT_BLE_SUCCESS;
}
    1d02:	2000      	movs	r0, #0
    1d04:	238a      	movs	r3, #138	; 0x8a
    1d06:	009b      	lsls	r3, r3, #2
    1d08:	449d      	add	sp, r3
    1d0a:	bd70      	pop	{r4, r5, r6, pc}
		protocol_mode.serv_inst                   = serv_inst;
    1d0c:	a888      	add	r0, sp, #544	; 0x220
    1d0e:	7084      	strb	r4, [r0, #2]
		protocol_mode.mode                        = change_params.char_new_value[0];
    1d10:	466b      	mov	r3, sp
    1d12:	7a1b      	ldrb	r3, [r3, #8]
    1d14:	8083      	strh	r3, [r0, #4]
		hid_prf_dataref[serv_inst]->protocol_mode = change_params.char_new_value[0];
    1d16:	00a4      	lsls	r4, r4, #2
    1d18:	4a23      	ldr	r2, [pc, #140]	; (1da8 <hid_prf_char_changed_handler+0xd8>)
    1d1a:	58a2      	ldr	r2, [r4, r2]
    1d1c:	7113      	strb	r3, [r2, #4]
		protocol_mode.conn_handle                 = change_params.conn_handle;
    1d1e:	466b      	mov	r3, sp
    1d20:	781b      	ldrb	r3, [r3, #0]
    1d22:	8003      	strh	r3, [r0, #0]
		mode_ntf_cb(&protocol_mode);
    1d24:	4b21      	ldr	r3, [pc, #132]	; (1dac <hid_prf_char_changed_handler+0xdc>)
    1d26:	681b      	ldr	r3, [r3, #0]
    1d28:	4798      	blx	r3
	} break;
    1d2a:	e7ea      	b.n	1d02 <hid_prf_char_changed_handler+0x32>
		reportinfo.serv_inst   = serv_inst;
    1d2c:	ae86      	add	r6, sp, #536	; 0x218
    1d2e:	7034      	strb	r4, [r6, #0]
		reportinfo.report_ID   = hid_get_reportid(serv_inst, change_params.char_handle, HID_NUM_OF_REPORT);
    1d30:	2201      	movs	r2, #1
    1d32:	0029      	movs	r1, r5
    1d34:	0020      	movs	r0, r4
    1d36:	4b1e      	ldr	r3, [pc, #120]	; (1db0 <hid_prf_char_changed_handler+0xe0>)
    1d38:	4798      	blx	r3
    1d3a:	7070      	strb	r0, [r6, #1]
		reportinfo.ntf_conf    = (change_params.char_new_value[1] << 8 | change_params.char_new_value[0]);
    1d3c:	466b      	mov	r3, sp
    1d3e:	7a5a      	ldrb	r2, [r3, #9]
    1d40:	0212      	lsls	r2, r2, #8
    1d42:	7a1b      	ldrb	r3, [r3, #8]
    1d44:	4313      	orrs	r3, r2
    1d46:	8073      	strh	r3, [r6, #2]
		reportinfo.conn_handle = change_params.conn_handle;
    1d48:	466b      	mov	r3, sp
    1d4a:	781b      	ldrb	r3, [r3, #0]
    1d4c:	80b3      	strh	r3, [r6, #4]
		report_ntf_cb(&reportinfo);
    1d4e:	4b19      	ldr	r3, [pc, #100]	; (1db4 <hid_prf_char_changed_handler+0xe4>)
    1d50:	681b      	ldr	r3, [r3, #0]
    1d52:	0030      	movs	r0, r6
    1d54:	4798      	blx	r3
	} break;
    1d56:	e7d4      	b.n	1d02 <hid_prf_char_changed_handler+0x32>
		boot_info.serv_inst   = serv_inst;
    1d58:	a884      	add	r0, sp, #528	; 0x210
    1d5a:	7004      	strb	r4, [r0, #0]
		boot_info.boot_value  = ntf_op;
    1d5c:	2301      	movs	r3, #1
    1d5e:	7043      	strb	r3, [r0, #1]
		boot_info.ntf_conf    = (change_params.char_new_value[1] << 8 | change_params.char_new_value[0]);
    1d60:	466b      	mov	r3, sp
    1d62:	7a5a      	ldrb	r2, [r3, #9]
    1d64:	0212      	lsls	r2, r2, #8
    1d66:	7a1b      	ldrb	r3, [r3, #8]
    1d68:	4313      	orrs	r3, r2
    1d6a:	8043      	strh	r3, [r0, #2]
		boot_info.conn_handle = change_params.conn_handle;
    1d6c:	466b      	mov	r3, sp
    1d6e:	781b      	ldrb	r3, [r3, #0]
    1d70:	8083      	strh	r3, [r0, #4]
		boot_ntf_cb(&boot_info);
    1d72:	4b11      	ldr	r3, [pc, #68]	; (1db8 <hid_prf_char_changed_handler+0xe8>)
    1d74:	681b      	ldr	r3, [r3, #0]
    1d76:	4798      	blx	r3
	} break;
    1d78:	e7c3      	b.n	1d02 <hid_prf_char_changed_handler+0x32>
		control_point.serv_inst     = serv_inst;
    1d7a:	a883      	add	r0, sp, #524	; 0x20c
    1d7c:	7004      	strb	r4, [r0, #0]
		control_point.control_value = (change_params.char_new_value[1] << 8 | change_params.char_new_value[0]);
    1d7e:	466b      	mov	r3, sp
    1d80:	7a5a      	ldrb	r2, [r3, #9]
    1d82:	0212      	lsls	r2, r2, #8
    1d84:	7a1b      	ldrb	r3, [r3, #8]
    1d86:	4313      	orrs	r3, r2
    1d88:	8043      	strh	r3, [r0, #2]
		control_point_ntf_cb(&control_point);
    1d8a:	4b0c      	ldr	r3, [pc, #48]	; (1dbc <hid_prf_char_changed_handler+0xec>)
    1d8c:	681b      	ldr	r3, [r3, #0]
    1d8e:	4798      	blx	r3
	} break;
    1d90:	e7b7      	b.n	1d02 <hid_prf_char_changed_handler+0x32>
    1d92:	46c0      	nop			; (mov r8, r8)
    1d94:	fffffdd8 	.word	0xfffffdd8
    1d98:	0000020a 	.word	0x0000020a
    1d9c:	00008a6f 	.word	0x00008a6f
    1da0:	00003c21 	.word	0x00003c21
    1da4:	00003c5d 	.word	0x00003c5d
    1da8:	20000f6c 	.word	0x20000f6c
    1dac:	20000f68 	.word	0x20000f68
    1db0:	00003cc5 	.word	0x00003cc5
    1db4:	20000f60 	.word	0x20000f60
    1db8:	20000f64 	.word	0x20000f64
    1dbc:	20000f74 	.word	0x20000f74

00001dc0 <hid_prf_conf>:
	if (ref != NULL) {
    1dc0:	2800      	cmp	r0, #0
    1dc2:	d016      	beq.n	1df2 <hid_prf_conf+0x32>
		if (ref->hid_serv_instance && (ref->hid_serv_instance <= HID_MAX_SERV_INST)) {
    1dc4:	7883      	ldrb	r3, [r0, #2]
    1dc6:	1e59      	subs	r1, r3, #1
			return HID_PRF_INSTANCE_OUT_RANGE;
    1dc8:	2201      	movs	r2, #1
		if (ref->hid_serv_instance && (ref->hid_serv_instance <= HID_MAX_SERV_INST)) {
    1dca:	2901      	cmp	r1, #1
    1dcc:	d901      	bls.n	1dd2 <hid_prf_conf+0x12>
}
    1dce:	0010      	movs	r0, r2
    1dd0:	4770      	bx	lr
			if (hid_prf_dataref[ref->hid_serv_instance - 1] != NULL) {
    1dd2:	0089      	lsls	r1, r1, #2
    1dd4:	4a08      	ldr	r2, [pc, #32]	; (1df8 <hid_prf_conf+0x38>)
    1dd6:	588a      	ldr	r2, [r1, r2]
    1dd8:	2a00      	cmp	r2, #0
    1dda:	d003      	beq.n	1de4 <hid_prf_conf+0x24>
				hid_prf_dataref[ref->hid_serv_instance - 1] = NULL;
    1ddc:	000b      	movs	r3, r1
    1dde:	2100      	movs	r1, #0
    1de0:	4a05      	ldr	r2, [pc, #20]	; (1df8 <hid_prf_conf+0x38>)
    1de2:	5099      	str	r1, [r3, r2]
			hid_prf_dataref[ref->hid_serv_instance - 1] = ref;
    1de4:	7883      	ldrb	r3, [r0, #2]
    1de6:	3b01      	subs	r3, #1
    1de8:	009b      	lsls	r3, r3, #2
    1dea:	4a03      	ldr	r2, [pc, #12]	; (1df8 <hid_prf_conf+0x38>)
    1dec:	5098      	str	r0, [r3, r2]
			return HID_PRF_SUCESS;
    1dee:	2200      	movs	r2, #0
    1df0:	e7ed      	b.n	1dce <hid_prf_conf+0xe>
		return HID_PRF_NO_INSTANCE;
    1df2:	2202      	movs	r2, #2
    1df4:	e7eb      	b.n	1dce <hid_prf_conf+0xe>
    1df6:	46c0      	nop			; (mov r8, r8)
    1df8:	20000f6c 	.word	0x20000f6c

00001dfc <hid_prf_dev_adv>:
{
    1dfc:	b510      	push	{r4, lr}
    1dfe:	b084      	sub	sp, #16
	if (!(ble_advertisement_data_set() == AT_BLE_SUCCESS)) {
    1e00:	4b14      	ldr	r3, [pc, #80]	; (1e54 <hid_prf_dev_adv+0x58>)
    1e02:	4798      	blx	r3
    1e04:	2800      	cmp	r0, #0
    1e06:	d116      	bne.n	1e36 <hid_prf_dev_adv+0x3a>
	if (at_ble_adv_start(AT_BLE_ADV_TYPE_UNDIRECTED,
    1e08:	2300      	movs	r3, #0
    1e0a:	9302      	str	r3, [sp, #8]
    1e0c:	4b12      	ldr	r3, [pc, #72]	; (1e58 <hid_prf_dev_adv+0x5c>)
    1e0e:	9301      	str	r3, [sp, #4]
    1e10:	23c8      	movs	r3, #200	; 0xc8
    1e12:	00db      	lsls	r3, r3, #3
    1e14:	9300      	str	r3, [sp, #0]
    1e16:	2300      	movs	r3, #0
    1e18:	2200      	movs	r2, #0
    1e1a:	2101      	movs	r1, #1
    1e1c:	2000      	movs	r0, #0
    1e1e:	4c0f      	ldr	r4, [pc, #60]	; (1e5c <hid_prf_dev_adv+0x60>)
    1e20:	47a0      	blx	r4
    1e22:	2800      	cmp	r0, #0
    1e24:	d00e      	beq.n	1e44 <hid_prf_dev_adv+0x48>
		DBG_LOG("Device Advertisement Failed");
    1e26:	480e      	ldr	r0, [pc, #56]	; (1e60 <hid_prf_dev_adv+0x64>)
    1e28:	4b0e      	ldr	r3, [pc, #56]	; (1e64 <hid_prf_dev_adv+0x68>)
    1e2a:	4798      	blx	r3
    1e2c:	480e      	ldr	r0, [pc, #56]	; (1e68 <hid_prf_dev_adv+0x6c>)
    1e2e:	4b0f      	ldr	r3, [pc, #60]	; (1e6c <hid_prf_dev_adv+0x70>)
    1e30:	4798      	blx	r3
}
    1e32:	b004      	add	sp, #16
    1e34:	bd10      	pop	{r4, pc}
		DBG_LOG("Fail to set Advertisement data");
    1e36:	480a      	ldr	r0, [pc, #40]	; (1e60 <hid_prf_dev_adv+0x64>)
    1e38:	4b0a      	ldr	r3, [pc, #40]	; (1e64 <hid_prf_dev_adv+0x68>)
    1e3a:	4798      	blx	r3
    1e3c:	480c      	ldr	r0, [pc, #48]	; (1e70 <hid_prf_dev_adv+0x74>)
    1e3e:	4b0b      	ldr	r3, [pc, #44]	; (1e6c <hid_prf_dev_adv+0x70>)
    1e40:	4798      	blx	r3
    1e42:	e7e1      	b.n	1e08 <hid_prf_dev_adv+0xc>
		DBG_LOG("Device Started Advertisement");
    1e44:	4806      	ldr	r0, [pc, #24]	; (1e60 <hid_prf_dev_adv+0x64>)
    1e46:	4b07      	ldr	r3, [pc, #28]	; (1e64 <hid_prf_dev_adv+0x68>)
    1e48:	4798      	blx	r3
    1e4a:	480a      	ldr	r0, [pc, #40]	; (1e74 <hid_prf_dev_adv+0x78>)
    1e4c:	4b07      	ldr	r3, [pc, #28]	; (1e6c <hid_prf_dev_adv+0x70>)
    1e4e:	4798      	blx	r3
    1e50:	e7ef      	b.n	1e32 <hid_prf_dev_adv+0x36>
    1e52:	46c0      	nop			; (mov r8, r8)
    1e54:	000030c9 	.word	0x000030c9
    1e58:	0000028f 	.word	0x0000028f
    1e5c:	00004e21 	.word	0x00004e21
    1e60:	00009f84 	.word	0x00009f84
    1e64:	00008bad 	.word	0x00008bad
    1e68:	0000a134 	.word	0x0000a134
    1e6c:	00008a91 	.word	0x00008a91
    1e70:	0000a170 	.word	0x0000a170
    1e74:	0000a150 	.word	0x0000a150

00001e78 <hid_prf_init>:
{
    1e78:	b5f0      	push	{r4, r5, r6, r7, lr}
    1e7a:	4c28      	ldr	r4, [pc, #160]	; (1f1c <hid_prf_init+0xa4>)
    1e7c:	44a5      	add	sp, r4
    1e7e:	4d28      	ldr	r5, [pc, #160]	; (1f20 <hid_prf_init+0xa8>)
	for (serv_num = 0; serv_num < HID_MAX_SERV_INST; serv_num++) {
    1e80:	2400      	movs	r4, #0
    1e82:	e007      	b.n	1e94 <hid_prf_init+0x1c>
				hid_prf_dataref[serv_num]->serv_handle_info = 0;
    1e84:	682b      	ldr	r3, [r5, #0]
    1e86:	2200      	movs	r2, #0
    1e88:	801a      	strh	r2, [r3, #0]
	for (serv_num = 0; serv_num < HID_MAX_SERV_INST; serv_num++) {
    1e8a:	3401      	adds	r4, #1
    1e8c:	b2e4      	uxtb	r4, r4
    1e8e:	3504      	adds	r5, #4
    1e90:	2c02      	cmp	r4, #2
    1e92:	d02c      	beq.n	1eee <hid_prf_init+0x76>
		if (hid_prf_dataref[serv_num] != NULL) {
    1e94:	682b      	ldr	r3, [r5, #0]
    1e96:	2b00      	cmp	r3, #0
    1e98:	d025      	beq.n	1ee6 <hid_prf_init+0x6e>
			hid_serv_def_init(serv_num);
    1e9a:	0020      	movs	r0, r4
    1e9c:	4b21      	ldr	r3, [pc, #132]	; (1f24 <hid_prf_init+0xac>)
    1e9e:	4798      	blx	r3
			              hid_prf_dataref[serv_num]->hid_device,
    1ea0:	6828      	ldr	r0, [r5, #0]
			hid_serv_init(serv_num,
    1ea2:	7943      	ldrb	r3, [r0, #5]
    1ea4:	1d02      	adds	r2, r0, #4
    1ea6:	78c1      	ldrb	r1, [r0, #3]
    1ea8:	0007      	movs	r7, r0
    1eaa:	3758      	adds	r7, #88	; 0x58
    1eac:	9703      	str	r7, [sp, #12]
			              (uint8_t *)&hid_prf_dataref[serv_num]->report_len,
    1eae:	3f14      	subs	r7, #20
			hid_serv_init(serv_num,
    1eb0:	9702      	str	r7, [sp, #8]
    1eb2:	3f28      	subs	r7, #40	; 0x28
    1eb4:	9701      	str	r7, [sp, #4]
			              (uint8_t *)&hid_prf_dataref[serv_num]->report_type,
    1eb6:	3010      	adds	r0, #16
			hid_serv_init(serv_num,
    1eb8:	9000      	str	r0, [sp, #0]
    1eba:	0020      	movs	r0, r4
    1ebc:	4f1a      	ldr	r7, [pc, #104]	; (1f28 <hid_prf_init+0xb0>)
    1ebe:	47b8      	blx	r7
			                    hid_prf_dataref[serv_num]->report_map_info.report_map,
    1ec0:	682b      	ldr	r3, [r5, #0]
			hid_serv_report_map(serv_num,
    1ec2:	2254      	movs	r2, #84	; 0x54
    1ec4:	5a9a      	ldrh	r2, [r3, r2]
    1ec6:	6d19      	ldr	r1, [r3, #80]	; 0x50
    1ec8:	0020      	movs	r0, r4
    1eca:	4b18      	ldr	r3, [pc, #96]	; (1f2c <hid_prf_init+0xb4>)
    1ecc:	4798      	blx	r3
			                                (uint8_t *)&hid_prf_dataref[serv_num]->report_type,
    1ece:	6829      	ldr	r1, [r5, #0]
			serv_handle = hid_service_dbreg(serv_num,
    1ed0:	794b      	ldrb	r3, [r1, #5]
			                                (uint8_t *)&hid_prf_dataref[serv_num]->report_id,
    1ed2:	1d8a      	adds	r2, r1, #6
			                                (uint8_t *)&hid_prf_dataref[serv_num]->report_type,
    1ed4:	3110      	adds	r1, #16
			serv_handle = hid_service_dbreg(serv_num,
    1ed6:	0020      	movs	r0, r4
    1ed8:	4f15      	ldr	r7, [pc, #84]	; (1f30 <hid_prf_init+0xb8>)
    1eda:	47b8      	blx	r7
			if (serv_handle) {
    1edc:	2800      	cmp	r0, #0
    1ede:	d0d1      	beq.n	1e84 <hid_prf_init+0xc>
				hid_prf_dataref[serv_num]->serv_handle_info = serv_handle;
    1ee0:	682b      	ldr	r3, [r5, #0]
    1ee2:	8018      	strh	r0, [r3, #0]
    1ee4:	e7d1      	b.n	1e8a <hid_prf_init+0x12>
			hid_serv_def_init(serv_num);
    1ee6:	0020      	movs	r0, r4
    1ee8:	4b0e      	ldr	r3, [pc, #56]	; (1f24 <hid_prf_init+0xac>)
    1eea:	4798      	blx	r3
    1eec:	e7cd      	b.n	1e8a <hid_prf_init+0x12>
	dis_init_service(&device_info_serv);
    1eee:	a804      	add	r0, sp, #16
    1ef0:	4b10      	ldr	r3, [pc, #64]	; (1f34 <hid_prf_init+0xbc>)
    1ef2:	4798      	blx	r3
	dis_primary_service_define(&device_info_serv);
    1ef4:	a804      	add	r0, sp, #16
    1ef6:	4b10      	ldr	r3, [pc, #64]	; (1f38 <hid_prf_init+0xc0>)
    1ef8:	4798      	blx	r3
	hid_prf_dev_adv();
    1efa:	4b10      	ldr	r3, [pc, #64]	; (1f3c <hid_prf_init+0xc4>)
    1efc:	4798      	blx	r3
	ble_mgr_events_callback_handler(REGISTER_CALL_BACK, BLE_GAP_EVENT_TYPE, hid_gap_handle);
    1efe:	4c10      	ldr	r4, [pc, #64]	; (1f40 <hid_prf_init+0xc8>)
    1f00:	0022      	movs	r2, r4
    1f02:	2100      	movs	r1, #0
    1f04:	2000      	movs	r0, #0
    1f06:	4d0f      	ldr	r5, [pc, #60]	; (1f44 <hid_prf_init+0xcc>)
    1f08:	47a8      	blx	r5
	ble_mgr_events_callback_handler(REGISTER_CALL_BACK, BLE_GATT_SERVER_EVENT_TYPE, hid_gatt_server_handle);
    1f0a:	0022      	movs	r2, r4
    1f0c:	324c      	adds	r2, #76	; 0x4c
    1f0e:	2102      	movs	r1, #2
    1f10:	2000      	movs	r0, #0
    1f12:	47a8      	blx	r5
}
    1f14:	2391      	movs	r3, #145	; 0x91
    1f16:	009b      	lsls	r3, r3, #2
    1f18:	449d      	add	sp, r3
    1f1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1f1c:	fffffdbc 	.word	0xfffffdbc
    1f20:	20000f6c 	.word	0x20000f6c
    1f24:	000035b1 	.word	0x000035b1
    1f28:	000035dd 	.word	0x000035dd
    1f2c:	00003b55 	.word	0x00003b55
    1f30:	00003b89 	.word	0x00003b89
    1f34:	00003169 	.word	0x00003169
    1f38:	0000358d 	.word	0x0000358d
    1f3c:	00001dfd 	.word	0x00001dfd
    1f40:	0000a0c0 	.word	0x0000a0c0
    1f44:	000028bd 	.word	0x000028bd

00001f48 <notify_report_ntf_handler>:
/**
 * \Notify to user about the new notification configuration set by HID host for report mode
 */
void notify_report_ntf_handler(report_ntf_callback_t report_ntf_fn)
{
	report_ntf_cb = report_ntf_fn;
    1f48:	4b01      	ldr	r3, [pc, #4]	; (1f50 <notify_report_ntf_handler+0x8>)
    1f4a:	6018      	str	r0, [r3, #0]
}
    1f4c:	4770      	bx	lr
    1f4e:	46c0      	nop			; (mov r8, r8)
    1f50:	20000f60 	.word	0x20000f60

00001f54 <notify_boot_ntf_handler>:
/**
 * \Notify to user about the new notification configuration set by HID host for boot mode
 */
void notify_boot_ntf_handler(boot_ntf_callback_t boot_ntf_fn)
{
	boot_ntf_cb = boot_ntf_fn;
    1f54:	4b01      	ldr	r3, [pc, #4]	; (1f5c <notify_boot_ntf_handler+0x8>)
    1f56:	6018      	str	r0, [r3, #0]
}
    1f58:	4770      	bx	lr
    1f5a:	46c0      	nop			; (mov r8, r8)
    1f5c:	20000f64 	.word	0x20000f64

00001f60 <notify_protocol_mode_handler>:
/**
 * \Notify to user about the new protocol mode set by HID host for boot mode
 */
void notify_protocol_mode_handler(protocol_mode_ntf_callback_t proto_mode_ntf_fn)
{
	mode_ntf_cb = proto_mode_ntf_fn;
    1f60:	4b01      	ldr	r3, [pc, #4]	; (1f68 <notify_protocol_mode_handler+0x8>)
    1f62:	6018      	str	r0, [r3, #0]
}
    1f64:	4770      	bx	lr
    1f66:	46c0      	nop			; (mov r8, r8)
    1f68:	20000f68 	.word	0x20000f68

00001f6c <notify_control_point_handler>:
/**
 * \Notify to user about the control point set by HID host for boot mode
 */
void notify_control_point_handler(control_point_ntf_callback_t control_mode_ntf_fn)
{
	control_point_ntf_cb = control_mode_ntf_fn;
    1f6c:	4b01      	ldr	r3, [pc, #4]	; (1f74 <notify_control_point_handler+0x8>)
    1f6e:	6018      	str	r0, [r3, #0]
}
    1f70:	4770      	bx	lr
    1f72:	46c0      	nop			; (mov r8, r8)
    1f74:	20000f74 	.word	0x20000f74

00001f78 <hid_prf_report_update>:
/**
 * \Notify report to HID host
 */
void hid_prf_report_update(at_ble_handle_t conn_handle, uint8_t serv_inst, uint8_t reportid, uint8_t *report,
                           uint16_t len)
{
    1f78:	b510      	push	{r4, lr}
    1f7a:	b082      	sub	sp, #8
    1f7c:	ac04      	add	r4, sp, #16
    1f7e:	8824      	ldrh	r4, [r4, #0]
	hid_serv_report_update(conn_handle, serv_inst, reportid, report, len);
    1f80:	9400      	str	r4, [sp, #0]
    1f82:	4c02      	ldr	r4, [pc, #8]	; (1f8c <hid_prf_report_update+0x14>)
    1f84:	47a0      	blx	r4
}
    1f86:	b002      	add	sp, #8
    1f88:	bd10      	pop	{r4, pc}
    1f8a:	46c0      	nop			; (mov r8, r8)
    1f8c:	00003d81 	.word	0x00003d81

00001f90 <ble_undefined_event_handler>:
at_ble_status_t ble_undefined_event_handler(void *params)
{
	DBG_LOG_DEV("Undefined Event Received");
	ALL_UNUSED(params);
	return AT_BLE_SUCCESS;
}
    1f90:	2000      	movs	r0, #0
    1f92:	4770      	bx	lr

00001f94 <ble_mtu_changed_indication_handler>:
	at_ble_mtu_changed_ind_t *mtu_changed_ind;
	mtu_changed_ind = (at_ble_mtu_changed_ind_t *)params;
	DBG_LOG_DEV(
	    "BLE-MTU Changed, Connection Handle: %d, New Value: %d", mtu_changed_ind->conhdl, mtu_changed_ind->mtu_value);
	return AT_BLE_SUCCESS;
}
    1f94:	2000      	movs	r0, #0
    1f96:	4770      	bx	lr

00001f98 <ble_characteristic_write_cmd_complete_handler>:

at_ble_status_t ble_characteristic_write_cmd_complete_handler(void *params)
{
	at_ble_cmd_complete_event_t *cmd_complete_event;
	cmd_complete_event = (at_ble_cmd_complete_event_t *)params;
	if (cmd_complete_event->status == AT_BLE_SUCCESS) {
    1f98:	78c0      	ldrb	r0, [r0, #3]
    1f9a:	2800      	cmp	r0, #0
    1f9c:	d000      	beq.n	1fa0 <ble_characteristic_write_cmd_complete_handler+0x8>
	} else {
		DBG_LOG_DEV("Char Write Cmd Failed, Connection Handle:%d, Operation:%d",
		            cmd_complete_event->conn_handle,
		            cmd_complete_event->operation);
	}
	return AT_BLE_FAILURE;
    1f9e:	20e2      	movs	r0, #226	; 0xe2
}
    1fa0:	4770      	bx	lr

00001fa2 <ble_conn_param_update>:
	at_ble_conn_param_update_done_t *conn_param_update;
	conn_param_update = (at_ble_conn_param_update_done_t *)params;
	DBG_LOG_DEV("AT_BLE_CONN_PARAM_UPDATE ");
	ALL_UNUSED(conn_param_update); // To avoid compiler warning
	return AT_BLE_SUCCESS;
}
    1fa2:	2000      	movs	r0, #0
    1fa4:	4770      	bx	lr
	...

00001fa8 <ble_scan_report_handler>:
{
    1fa8:	b510      	push	{r4, lr}
	if (scan_report->status == AT_BLE_SUCCESS) {
    1faa:	7800      	ldrb	r0, [r0, #0]
    1fac:	2800      	cmp	r0, #0
    1fae:	d100      	bne.n	1fb2 <ble_scan_report_handler+0xa>
}
    1fb0:	bd10      	pop	{r4, pc}
		DBG_LOG("Scanning  failed");
    1fb2:	4804      	ldr	r0, [pc, #16]	; (1fc4 <ble_scan_report_handler+0x1c>)
    1fb4:	4b04      	ldr	r3, [pc, #16]	; (1fc8 <ble_scan_report_handler+0x20>)
    1fb6:	4798      	blx	r3
    1fb8:	4804      	ldr	r0, [pc, #16]	; (1fcc <ble_scan_report_handler+0x24>)
    1fba:	4b05      	ldr	r3, [pc, #20]	; (1fd0 <ble_scan_report_handler+0x28>)
    1fbc:	4798      	blx	r3
	return AT_BLE_FAILURE;
    1fbe:	20e2      	movs	r0, #226	; 0xe2
    1fc0:	e7f6      	b.n	1fb0 <ble_scan_report_handler+0x8>
    1fc2:	46c0      	nop			; (mov r8, r8)
    1fc4:	00009f84 	.word	0x00009f84
    1fc8:	00008bad 	.word	0x00008bad
    1fcc:	0000a34c 	.word	0x0000a34c
    1fd0:	00008a91 	.word	0x00008a91

00001fd4 <ble_mtu_changed_cmd_complete_handler>:
{
    1fd4:	b510      	push	{r4, lr}
    1fd6:	0004      	movs	r4, r0
	if (cmd_complete_event->status == AT_BLE_SUCCESS) {
    1fd8:	78c0      	ldrb	r0, [r0, #3]
    1fda:	2800      	cmp	r0, #0
    1fdc:	d100      	bne.n	1fe0 <ble_mtu_changed_cmd_complete_handler+0xc>
}
    1fde:	bd10      	pop	{r4, pc}
		DBG_LOG("MTU Change Failed, Connection Handle:%d, Operation:%d",
    1fe0:	4804      	ldr	r0, [pc, #16]	; (1ff4 <ble_mtu_changed_cmd_complete_handler+0x20>)
    1fe2:	4b05      	ldr	r3, [pc, #20]	; (1ff8 <ble_mtu_changed_cmd_complete_handler+0x24>)
    1fe4:	4798      	blx	r3
    1fe6:	78a2      	ldrb	r2, [r4, #2]
    1fe8:	8821      	ldrh	r1, [r4, #0]
    1fea:	4804      	ldr	r0, [pc, #16]	; (1ffc <ble_mtu_changed_cmd_complete_handler+0x28>)
    1fec:	4b04      	ldr	r3, [pc, #16]	; (2000 <STACK_SIZE>)
    1fee:	4798      	blx	r3
	return AT_BLE_FAILURE;
    1ff0:	20e2      	movs	r0, #226	; 0xe2
    1ff2:	e7f4      	b.n	1fde <ble_mtu_changed_cmd_complete_handler+0xa>
    1ff4:	00009f84 	.word	0x00009f84
    1ff8:	00008bad 	.word	0x00008bad
    1ffc:	0000a360 	.word	0x0000a360
    2000:	00008a91 	.word	0x00008a91

00002004 <ble_disconnected_state_handler>:
{
    2004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2006:	0004      	movs	r4, r0
    2008:	4b1a      	ldr	r3, [pc, #104]	; (2074 <ble_disconnected_state_handler+0x70>)
    200a:	229b      	movs	r2, #155	; 0x9b
    200c:	0092      	lsls	r2, r2, #2
    200e:	189d      	adds	r5, r3, r2
			ble_dev_info[idx].conn_state = BLE_DEVICE_DISCONNECTED;
    2010:	2701      	movs	r7, #1
				ble_dev_info[idx].conn_state = BLE_DEVICE_DEFAULT_IDLE;
    2012:	2600      	movs	r6, #0
    2014:	e003      	b.n	201e <ble_disconnected_state_handler+0x1a>
			ble_dev_info[idx].conn_state = BLE_DEVICE_DISCONNECTED;
    2016:	7007      	strb	r7, [r0, #0]
    2018:	337c      	adds	r3, #124	; 0x7c
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    201a:	42ab      	cmp	r3, r5
    201c:	d01f      	beq.n	205e <ble_disconnected_state_handler+0x5a>
    201e:	0018      	movs	r0, r3
		if ((ble_dev_info[idx].conn_info.handle == disconnect->handle)
    2020:	001a      	movs	r2, r3
    2022:	3a56      	subs	r2, #86	; 0x56
    2024:	8811      	ldrh	r1, [r2, #0]
    2026:	8822      	ldrh	r2, [r4, #0]
    2028:	4291      	cmp	r1, r2
    202a:	d1f5      	bne.n	2018 <ble_disconnected_state_handler+0x14>
		    && ((ble_dev_info[idx].conn_state == BLE_DEVICE_PAIRED)
    202c:	781a      	ldrb	r2, [r3, #0]
    202e:	2a05      	cmp	r2, #5
    2030:	d0f1      	beq.n	2016 <ble_disconnected_state_handler+0x12>
		        || (ble_dev_info[idx].conn_state == BLE_DEVICE_ENCRYPTION_COMPLETED))) {
    2032:	2a08      	cmp	r2, #8
    2034:	d0ef      	beq.n	2016 <ble_disconnected_state_handler+0x12>
			switch (ble_dev_info[idx].conn_state) {
    2036:	2a07      	cmp	r2, #7
    2038:	d80f      	bhi.n	205a <ble_disconnected_state_handler+0x56>
    203a:	0092      	lsls	r2, r2, #2
    203c:	490e      	ldr	r1, [pc, #56]	; (2078 <ble_disconnected_state_handler+0x74>)
    203e:	588a      	ldr	r2, [r1, r2]
    2040:	4697      	mov	pc, r2
				ble_dev_info[idx].conn_state = BLE_DEVICE_DEFAULT_IDLE;
    2042:	701e      	strb	r6, [r3, #0]
				if (ble_device_count > 0) {
    2044:	4a0d      	ldr	r2, [pc, #52]	; (207c <ble_disconnected_state_handler+0x78>)
    2046:	7812      	ldrb	r2, [r2, #0]
    2048:	2a00      	cmp	r2, #0
    204a:	d0e5      	beq.n	2018 <ble_disconnected_state_handler+0x14>
					ble_device_count--;
    204c:	4a0b      	ldr	r2, [pc, #44]	; (207c <ble_disconnected_state_handler+0x78>)
    204e:	7812      	ldrb	r2, [r2, #0]
    2050:	3a01      	subs	r2, #1
    2052:	b2d2      	uxtb	r2, r2
    2054:	4909      	ldr	r1, [pc, #36]	; (207c <ble_disconnected_state_handler+0x78>)
    2056:	700a      	strb	r2, [r1, #0]
    2058:	e7de      	b.n	2018 <ble_disconnected_state_handler+0x14>
				ble_dev_info[idx].conn_state = BLE_DEVICE_DEFAULT_IDLE;
    205a:	7006      	strb	r6, [r0, #0]
				break;
    205c:	e7dc      	b.n	2018 <ble_disconnected_state_handler+0x14>
	DBG_LOG("Device disconnected Reason:0x%02x Handle=0x%x", disconnect->reason, disconnect->handle);
    205e:	4808      	ldr	r0, [pc, #32]	; (2080 <ble_disconnected_state_handler+0x7c>)
    2060:	4b08      	ldr	r3, [pc, #32]	; (2084 <ble_disconnected_state_handler+0x80>)
    2062:	4798      	blx	r3
    2064:	8822      	ldrh	r2, [r4, #0]
    2066:	78e1      	ldrb	r1, [r4, #3]
    2068:	4807      	ldr	r0, [pc, #28]	; (2088 <ble_disconnected_state_handler+0x84>)
    206a:	4b08      	ldr	r3, [pc, #32]	; (208c <ble_disconnected_state_handler+0x88>)
    206c:	4798      	blx	r3
}
    206e:	2000      	movs	r0, #0
    2070:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2072:	46c0      	nop			; (mov r8, r8)
    2074:	20000fee 	.word	0x20000fee
    2078:	0000a190 	.word	0x0000a190
    207c:	200011fc 	.word	0x200011fc
    2080:	00009f84 	.word	0x00009f84
    2084:	00008bad 	.word	0x00008bad
    2088:	0000a398 	.word	0x0000a398
    208c:	00008a91 	.word	0x00008a91

00002090 <ble_encryption_status_change_handler>:
	return AT_BLE_SUCCESS;
}

/** @brief function handles encryption status change */
at_ble_status_t ble_encryption_status_change_handler(void *params)
{
    2090:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2092:	0006      	movs	r6, r0
	bool                                device_found = false;

	enc_status = (at_ble_encryption_status_changed_t *)params;

	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
		if ((ble_dev_info[idx].conn_info.handle == enc_status->handle)
    2094:	8801      	ldrh	r1, [r0, #0]
    2096:	4b26      	ldr	r3, [pc, #152]	; (2130 <ble_encryption_status_change_handler+0xa0>)
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    2098:	2400      	movs	r4, #0
    209a:	e004      	b.n	20a6 <ble_encryption_status_change_handler+0x16>
    209c:	3401      	adds	r4, #1
    209e:	b2e4      	uxtb	r4, r4
    20a0:	337c      	adds	r3, #124	; 0x7c
    20a2:	2c05      	cmp	r4, #5
    20a4:	d02e      	beq.n	2104 <ble_encryption_status_change_handler+0x74>
		if ((ble_dev_info[idx].conn_info.handle == enc_status->handle)
    20a6:	891a      	ldrh	r2, [r3, #8]
    20a8:	428a      	cmp	r2, r1
    20aa:	d1f7      	bne.n	209c <ble_encryption_status_change_handler+0xc>
		    && (ble_dev_info[idx].conn_state == BLE_DEVICE_ENCRYPTION_STATE)) {
    20ac:	001a      	movs	r2, r3
    20ae:	325e      	adds	r2, #94	; 0x5e
    20b0:	7812      	ldrb	r2, [r2, #0]
    20b2:	2a06      	cmp	r2, #6
    20b4:	d1f2      	bne.n	209c <ble_encryption_status_change_handler+0xc>
			device_found = true;
			break;
		}
	}

	if (enc_status->status == AT_BLE_SUCCESS) {
    20b6:	78b5      	ldrb	r5, [r6, #2]
    20b8:	2d00      	cmp	r5, #0
    20ba:	d126      	bne.n	210a <ble_encryption_status_change_handler+0x7a>
		DBG_LOG("Encryption completed successfully");
    20bc:	481d      	ldr	r0, [pc, #116]	; (2134 <ble_encryption_status_change_handler+0xa4>)
    20be:	4b1e      	ldr	r3, [pc, #120]	; (2138 <ble_encryption_status_change_handler+0xa8>)
    20c0:	4798      	blx	r3
    20c2:	481e      	ldr	r0, [pc, #120]	; (213c <ble_encryption_status_change_handler+0xac>)
    20c4:	4b1e      	ldr	r3, [pc, #120]	; (2140 <ble_encryption_status_change_handler+0xb0>)
    20c6:	4798      	blx	r3
		if (device_found) {
			ble_dev_info[idx].conn_state       = BLE_DEVICE_ENCRYPTION_COMPLETED;
    20c8:	4919      	ldr	r1, [pc, #100]	; (2130 <ble_encryption_status_change_handler+0xa0>)
    20ca:	0163      	lsls	r3, r4, #5
    20cc:	1b1a      	subs	r2, r3, r4
    20ce:	0092      	lsls	r2, r2, #2
    20d0:	188a      	adds	r2, r1, r2
    20d2:	0010      	movs	r0, r2
    20d4:	305e      	adds	r0, #94	; 0x5e
    20d6:	2708      	movs	r7, #8
    20d8:	7007      	strb	r7, [r0, #0]
			ble_dev_info[idx].bond_info.auth   = enc_status->authen;
    20da:	78f0      	ldrb	r0, [r6, #3]
    20dc:	7510      	strb	r0, [r2, #20]
			ble_dev_info[idx].bond_info.status = enc_status->status;
    20de:	78b2      	ldrb	r2, [r6, #2]
    20e0:	1b1c      	subs	r4, r3, r4
    20e2:	00a4      	lsls	r4, r4, #2
    20e4:	190c      	adds	r4, r1, r4
    20e6:	7622      	strb	r2, [r4, #24]
		ble_dev_info[idx].bond_info.status = enc_status->status;
		ble_dev_info[idx].conn_state       = BLE_DEVICE_ENCRYPTION_FAILED;
		DBG_LOG("Encryption failed");
		return AT_BLE_FAILURE;
	}
	return AT_BLE_SUCCESS;
    20e8:	e020      	b.n	212c <ble_encryption_status_change_handler+0x9c>
		DBG_LOG("Encryption completed successfully");
    20ea:	4e12      	ldr	r6, [pc, #72]	; (2134 <ble_encryption_status_change_handler+0xa4>)
    20ec:	0030      	movs	r0, r6
    20ee:	4d12      	ldr	r5, [pc, #72]	; (2138 <ble_encryption_status_change_handler+0xa8>)
    20f0:	47a8      	blx	r5
    20f2:	4812      	ldr	r0, [pc, #72]	; (213c <ble_encryption_status_change_handler+0xac>)
    20f4:	4c12      	ldr	r4, [pc, #72]	; (2140 <ble_encryption_status_change_handler+0xb0>)
    20f6:	47a0      	blx	r4
			DBG_LOG("BLE Device not found encryption info");
    20f8:	0030      	movs	r0, r6
    20fa:	47a8      	blx	r5
    20fc:	4811      	ldr	r0, [pc, #68]	; (2144 <ble_encryption_status_change_handler+0xb4>)
    20fe:	47a0      	blx	r4
			return AT_BLE_FAILURE;
    2100:	25e2      	movs	r5, #226	; 0xe2
    2102:	e013      	b.n	212c <ble_encryption_status_change_handler+0x9c>
	if (enc_status->status == AT_BLE_SUCCESS) {
    2104:	78b5      	ldrb	r5, [r6, #2]
    2106:	2d00      	cmp	r5, #0
    2108:	d0ef      	beq.n	20ea <ble_encryption_status_change_handler+0x5a>
		ble_dev_info[idx].bond_info.status = enc_status->status;
    210a:	4b09      	ldr	r3, [pc, #36]	; (2130 <ble_encryption_status_change_handler+0xa0>)
    210c:	0162      	lsls	r2, r4, #5
    210e:	1b11      	subs	r1, r2, r4
    2110:	0089      	lsls	r1, r1, #2
    2112:	1859      	adds	r1, r3, r1
    2114:	760d      	strb	r5, [r1, #24]
		ble_dev_info[idx].conn_state       = BLE_DEVICE_ENCRYPTION_FAILED;
    2116:	000b      	movs	r3, r1
    2118:	335e      	adds	r3, #94	; 0x5e
    211a:	2207      	movs	r2, #7
    211c:	701a      	strb	r2, [r3, #0]
		DBG_LOG("Encryption failed");
    211e:	4805      	ldr	r0, [pc, #20]	; (2134 <ble_encryption_status_change_handler+0xa4>)
    2120:	4b05      	ldr	r3, [pc, #20]	; (2138 <ble_encryption_status_change_handler+0xa8>)
    2122:	4798      	blx	r3
    2124:	4808      	ldr	r0, [pc, #32]	; (2148 <ble_encryption_status_change_handler+0xb8>)
    2126:	4b06      	ldr	r3, [pc, #24]	; (2140 <ble_encryption_status_change_handler+0xb0>)
    2128:	4798      	blx	r3
		return AT_BLE_FAILURE;
    212a:	25e2      	movs	r5, #226	; 0xe2
}
    212c:	0028      	movs	r0, r5
    212e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2130:	20000f90 	.word	0x20000f90
    2134:	00009f84 	.word	0x00009f84
    2138:	00008bad 	.word	0x00008bad
    213c:	0000a3dc 	.word	0x0000a3dc
    2140:	00008a91 	.word	0x00008a91
    2144:	0000a400 	.word	0x0000a400
    2148:	0000a3c8 	.word	0x0000a3c8

0000214c <ble_scan_info_handler>:
{
    214c:	b510      	push	{r4, lr}
	if (scan_response_count < MAX_SCAN_DEVICE) {
    214e:	4b17      	ldr	r3, [pc, #92]	; (21ac <ble_scan_info_handler+0x60>)
    2150:	781b      	ldrb	r3, [r3, #0]
    2152:	b2db      	uxtb	r3, r3
    2154:	2b09      	cmp	r3, #9
    2156:	d90c      	bls.n	2172 <ble_scan_info_handler+0x26>
		DBG_LOG("Info:maximum no.of scan device reached...Stopping Scan");
    2158:	4815      	ldr	r0, [pc, #84]	; (21b0 <ble_scan_info_handler+0x64>)
    215a:	4b16      	ldr	r3, [pc, #88]	; (21b4 <ble_scan_info_handler+0x68>)
    215c:	4798      	blx	r3
    215e:	4816      	ldr	r0, [pc, #88]	; (21b8 <ble_scan_info_handler+0x6c>)
    2160:	4b16      	ldr	r3, [pc, #88]	; (21bc <ble_scan_info_handler+0x70>)
    2162:	4798      	blx	r3
		if (at_ble_scan_stop() != AT_BLE_SUCCESS) {
    2164:	4b16      	ldr	r3, [pc, #88]	; (21c0 <ble_scan_info_handler+0x74>)
    2166:	4798      	blx	r3
		return AT_BLE_FAILURE;
    2168:	23e2      	movs	r3, #226	; 0xe2
		if (at_ble_scan_stop() != AT_BLE_SUCCESS) {
    216a:	2800      	cmp	r0, #0
    216c:	d116      	bne.n	219c <ble_scan_info_handler+0x50>
}
    216e:	0018      	movs	r0, r3
    2170:	bd10      	pop	{r4, pc}
		memcpy((uint8_t *)&scan_info[scan_response_count], scan_param, sizeof(at_ble_scan_info_t));
    2172:	4c0e      	ldr	r4, [pc, #56]	; (21ac <ble_scan_info_handler+0x60>)
    2174:	7822      	ldrb	r2, [r4, #0]
    2176:	b2d2      	uxtb	r2, r2
    2178:	0093      	lsls	r3, r2, #2
    217a:	189b      	adds	r3, r3, r2
    217c:	00db      	lsls	r3, r3, #3
    217e:	189b      	adds	r3, r3, r2
    2180:	4a10      	ldr	r2, [pc, #64]	; (21c4 <ble_scan_info_handler+0x78>)
    2182:	189b      	adds	r3, r3, r2
    2184:	2229      	movs	r2, #41	; 0x29
    2186:	0001      	movs	r1, r0
    2188:	0018      	movs	r0, r3
    218a:	4b0f      	ldr	r3, [pc, #60]	; (21c8 <ble_scan_info_handler+0x7c>)
    218c:	4798      	blx	r3
		DBG_LOG_DEV("Info:Device found address [%d]  0x%02X%02X%02X%02X%02X%02X ",
    218e:	7823      	ldrb	r3, [r4, #0]
		scan_response_count++;
    2190:	7823      	ldrb	r3, [r4, #0]
    2192:	3301      	adds	r3, #1
    2194:	b2db      	uxtb	r3, r3
    2196:	7023      	strb	r3, [r4, #0]
		return AT_BLE_SUCCESS;
    2198:	2300      	movs	r3, #0
    219a:	e7e8      	b.n	216e <ble_scan_info_handler+0x22>
			DBG_LOG("Failed to stop scanning");
    219c:	4804      	ldr	r0, [pc, #16]	; (21b0 <ble_scan_info_handler+0x64>)
    219e:	4b05      	ldr	r3, [pc, #20]	; (21b4 <ble_scan_info_handler+0x68>)
    21a0:	4798      	blx	r3
    21a2:	480a      	ldr	r0, [pc, #40]	; (21cc <ble_scan_info_handler+0x80>)
    21a4:	4b05      	ldr	r3, [pc, #20]	; (21bc <ble_scan_info_handler+0x70>)
    21a6:	4798      	blx	r3
		return AT_BLE_FAILURE;
    21a8:	23e2      	movs	r3, #226	; 0xe2
    21aa:	e7e0      	b.n	216e <ble_scan_info_handler+0x22>
    21ac:	20000144 	.word	0x20000144
    21b0:	00009f84 	.word	0x00009f84
    21b4:	00008bad 	.word	0x00008bad
    21b8:	0000a428 	.word	0x0000a428
    21bc:	00008a91 	.word	0x00008a91
    21c0:	00004f5d 	.word	0x00004f5d
    21c4:	20001288 	.word	0x20001288
    21c8:	00008a6f 	.word	0x00008a6f
    21cc:	0000a460 	.word	0x0000a460

000021d0 <ble_pair_done_handler>:
{
    21d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    21d2:	46c6      	mov	lr, r8
    21d4:	b500      	push	{lr}
    21d6:	0007      	movs	r7, r0
		if ((ble_dev_info[idx].conn_info.handle == pairing_params->handle)
    21d8:	8845      	ldrh	r5, [r0, #2]
    21da:	4b3c      	ldr	r3, [pc, #240]	; (22cc <ble_pair_done_handler+0xfc>)
    21dc:	2200      	movs	r2, #0
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    21de:	2400      	movs	r4, #0
    21e0:	e005      	b.n	21ee <ble_pair_done_handler+0x1e>
    21e2:	3401      	adds	r4, #1
    21e4:	b2e4      	uxtb	r4, r4
    21e6:	3201      	adds	r2, #1
    21e8:	337c      	adds	r3, #124	; 0x7c
    21ea:	2c05      	cmp	r4, #5
    21ec:	d04f      	beq.n	228e <ble_pair_done_handler+0xbe>
		if ((ble_dev_info[idx].conn_info.handle == pairing_params->handle)
    21ee:	8918      	ldrh	r0, [r3, #8]
    21f0:	42a8      	cmp	r0, r5
    21f2:	d1f6      	bne.n	21e2 <ble_pair_done_handler+0x12>
		    && (ble_dev_info[idx].conn_state == BLE_DEVICE_PAIRING)) {
    21f4:	0019      	movs	r1, r3
    21f6:	315e      	adds	r1, #94	; 0x5e
    21f8:	7809      	ldrb	r1, [r1, #0]
    21fa:	2903      	cmp	r1, #3
    21fc:	d1f1      	bne.n	21e2 <ble_pair_done_handler+0x12>
			ble_dev_info[idx].conn_state = BLE_DEVICE_PAIRED;
    21fe:	0153      	lsls	r3, r2, #5
    2200:	1a9e      	subs	r6, r3, r2
    2202:	00b6      	lsls	r6, r6, #2
    2204:	4b31      	ldr	r3, [pc, #196]	; (22cc <ble_pair_done_handler+0xfc>)
    2206:	199b      	adds	r3, r3, r6
    2208:	335e      	adds	r3, #94	; 0x5e
    220a:	2205      	movs	r2, #5
    220c:	701a      	strb	r2, [r3, #0]
	if (pairing_params->status == AT_BLE_SUCCESS) {
    220e:	793d      	ldrb	r5, [r7, #4]
    2210:	2d00      	cmp	r5, #0
    2212:	d13f      	bne.n	2294 <ble_pair_done_handler+0xc4>
		DBG_LOG("Pairing procedure completed successfully");
    2214:	482e      	ldr	r0, [pc, #184]	; (22d0 <ble_pair_done_handler+0x100>)
    2216:	4b2f      	ldr	r3, [pc, #188]	; (22d4 <ble_pair_done_handler+0x104>)
    2218:	4798      	blx	r3
    221a:	482f      	ldr	r0, [pc, #188]	; (22d8 <ble_pair_done_handler+0x108>)
    221c:	4b2f      	ldr	r3, [pc, #188]	; (22dc <ble_pair_done_handler+0x10c>)
    221e:	4798      	blx	r3
			ble_dev_info[idx].bond_info.auth   = pairing_params->auth;
    2220:	7839      	ldrb	r1, [r7, #0]
    2222:	4e2a      	ldr	r6, [pc, #168]	; (22cc <ble_pair_done_handler+0xfc>)
    2224:	0163      	lsls	r3, r4, #5
    2226:	1b1a      	subs	r2, r3, r4
    2228:	0092      	lsls	r2, r2, #2
    222a:	18b2      	adds	r2, r6, r2
    222c:	7511      	strb	r1, [r2, #20]
			ble_dev_info[idx].bond_info.status = pairing_params->status;
    222e:	7939      	ldrb	r1, [r7, #4]
    2230:	1b1a      	subs	r2, r3, r4
    2232:	0092      	lsls	r2, r2, #2
    2234:	18b2      	adds	r2, r6, r2
    2236:	7611      	strb	r1, [r2, #24]
    2238:	1b1c      	subs	r4, r3, r4
    223a:	00a4      	lsls	r4, r4, #2
			memcpy((uint8_t *)&ble_dev_info[idx].bond_info.peer_csrk,
    223c:	0020      	movs	r0, r4
    223e:	3036      	adds	r0, #54	; 0x36
    2240:	1980      	adds	r0, r0, r6
    2242:	0039      	movs	r1, r7
    2244:	3122      	adds	r1, #34	; 0x22
    2246:	2210      	movs	r2, #16
    2248:	4b25      	ldr	r3, [pc, #148]	; (22e0 <ble_pair_done_handler+0x110>)
    224a:	4698      	mov	r8, r3
    224c:	4798      	blx	r3
			memcpy((uint8_t *)&ble_dev_info[idx].bond_info.peer_irk,
    224e:	0020      	movs	r0, r4
    2250:	3046      	adds	r0, #70	; 0x46
    2252:	1980      	adds	r0, r0, r6
    2254:	0039      	movs	r1, r7
    2256:	3132      	adds	r1, #50	; 0x32
    2258:	2217      	movs	r2, #23
    225a:	47c0      	blx	r8
			memcpy((uint8_t *)&ble_dev_info[idx].bond_info.peer_ltk,
    225c:	341a      	adds	r4, #26
    225e:	19a0      	adds	r0, r4, r6
    2260:	1db9      	adds	r1, r7, #6
    2262:	221c      	movs	r2, #28
    2264:	47c0      	blx	r8
			ble_dev_info->conn_state = BLE_DEVICE_PAIRED;
    2266:	2205      	movs	r2, #5
    2268:	235e      	movs	r3, #94	; 0x5e
    226a:	54f2      	strb	r2, [r6, r3]
    226c:	e00b      	b.n	2286 <ble_pair_done_handler+0xb6>
		DBG_LOG("Pairing procedure completed successfully");
    226e:	4e18      	ldr	r6, [pc, #96]	; (22d0 <ble_pair_done_handler+0x100>)
    2270:	0030      	movs	r0, r6
    2272:	4d18      	ldr	r5, [pc, #96]	; (22d4 <ble_pair_done_handler+0x104>)
    2274:	47a8      	blx	r5
    2276:	4818      	ldr	r0, [pc, #96]	; (22d8 <ble_pair_done_handler+0x108>)
    2278:	4c18      	ldr	r4, [pc, #96]	; (22dc <ble_pair_done_handler+0x10c>)
    227a:	47a0      	blx	r4
			DBG_LOG("BLE Device not found to store the pairing info");
    227c:	0030      	movs	r0, r6
    227e:	47a8      	blx	r5
    2280:	4818      	ldr	r0, [pc, #96]	; (22e4 <ble_pair_done_handler+0x114>)
    2282:	47a0      	blx	r4
			return AT_BLE_FAILURE;
    2284:	25e2      	movs	r5, #226	; 0xe2
}
    2286:	0028      	movs	r0, r5
    2288:	bc04      	pop	{r2}
    228a:	4690      	mov	r8, r2
    228c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (pairing_params->status == AT_BLE_SUCCESS) {
    228e:	793b      	ldrb	r3, [r7, #4]
    2290:	2b00      	cmp	r3, #0
    2292:	d0ec      	beq.n	226e <ble_pair_done_handler+0x9e>
		ble_dev_info[idx].conn_state = BLE_DEVICE_PAIRING_FAILED;
    2294:	0163      	lsls	r3, r4, #5
    2296:	1b1b      	subs	r3, r3, r4
    2298:	009b      	lsls	r3, r3, #2
    229a:	4c0c      	ldr	r4, [pc, #48]	; (22cc <ble_pair_done_handler+0xfc>)
    229c:	18e4      	adds	r4, r4, r3
    229e:	345e      	adds	r4, #94	; 0x5e
    22a0:	2304      	movs	r3, #4
    22a2:	7023      	strb	r3, [r4, #0]
		DBG_LOG("Pairing failed...Disconnecting");
    22a4:	480a      	ldr	r0, [pc, #40]	; (22d0 <ble_pair_done_handler+0x100>)
    22a6:	4b0b      	ldr	r3, [pc, #44]	; (22d4 <ble_pair_done_handler+0x104>)
    22a8:	4798      	blx	r3
    22aa:	480f      	ldr	r0, [pc, #60]	; (22e8 <ble_pair_done_handler+0x118>)
    22ac:	4b0b      	ldr	r3, [pc, #44]	; (22dc <ble_pair_done_handler+0x10c>)
    22ae:	4798      	blx	r3
		if (!(at_ble_disconnect(pairing_params->handle, AT_BLE_TERMINATED_BY_USER) == AT_BLE_SUCCESS)) {
    22b0:	8878      	ldrh	r0, [r7, #2]
    22b2:	2113      	movs	r1, #19
    22b4:	4b0d      	ldr	r3, [pc, #52]	; (22ec <ble_pair_done_handler+0x11c>)
    22b6:	4798      	blx	r3
    22b8:	1e05      	subs	r5, r0, #0
    22ba:	d0e4      	beq.n	2286 <ble_pair_done_handler+0xb6>
			DBG_LOG("Disconnect Request Failed");
    22bc:	4804      	ldr	r0, [pc, #16]	; (22d0 <ble_pair_done_handler+0x100>)
    22be:	4b05      	ldr	r3, [pc, #20]	; (22d4 <ble_pair_done_handler+0x104>)
    22c0:	4798      	blx	r3
    22c2:	480b      	ldr	r0, [pc, #44]	; (22f0 <ble_pair_done_handler+0x120>)
    22c4:	4b05      	ldr	r3, [pc, #20]	; (22dc <ble_pair_done_handler+0x10c>)
    22c6:	4798      	blx	r3
			return AT_BLE_FAILURE;
    22c8:	25e2      	movs	r5, #226	; 0xe2
    22ca:	e7dc      	b.n	2286 <ble_pair_done_handler+0xb6>
    22cc:	20000f90 	.word	0x20000f90
    22d0:	00009f84 	.word	0x00009f84
    22d4:	00008bad 	.word	0x00008bad
    22d8:	0000a4b4 	.word	0x0000a4b4
    22dc:	00008a91 	.word	0x00008a91
    22e0:	00008a6f 	.word	0x00008a6f
    22e4:	0000a4e0 	.word	0x0000a4e0
    22e8:	0000a478 	.word	0x0000a478
    22ec:	00004f7d 	.word	0x00004f7d
    22f0:	0000a498 	.word	0x0000a498

000022f4 <ble_conn_param_update_req>:
{
    22f4:	b510      	push	{r4, lr}
	at_ble_conn_update_reply(conn_param_req->handle, true, 1, 120);
    22f6:	8800      	ldrh	r0, [r0, #0]
    22f8:	2378      	movs	r3, #120	; 0x78
    22fa:	2201      	movs	r2, #1
    22fc:	2101      	movs	r1, #1
    22fe:	4c02      	ldr	r4, [pc, #8]	; (2308 <ble_conn_param_update_req+0x14>)
    2300:	47a0      	blx	r4
}
    2302:	2000      	movs	r0, #0
    2304:	bd10      	pop	{r4, pc}
    2306:	46c0      	nop			; (mov r8, r8)
    2308:	00004f9d 	.word	0x00004f9d

0000230c <ble_slave_security_request_handler>:
{
    230c:	b5f0      	push	{r4, r5, r6, r7, lr}
    230e:	46de      	mov	lr, fp
    2310:	4657      	mov	r7, sl
    2312:	464e      	mov	r6, r9
    2314:	4645      	mov	r5, r8
    2316:	b5e0      	push	{r5, r6, r7, lr}
    2318:	b085      	sub	sp, #20
    231a:	0006      	movs	r6, r0
		if ((ble_dev_info[idx].conn_info.handle == slave_sec_req->handle)
    231c:	8804      	ldrh	r4, [r0, #0]
    231e:	496e      	ldr	r1, [pc, #440]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    2320:	000a      	movs	r2, r1
    2322:	2300      	movs	r3, #0
    2324:	e003      	b.n	232e <ble_slave_security_request_handler+0x22>
    2326:	3301      	adds	r3, #1
    2328:	327c      	adds	r2, #124	; 0x7c
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    232a:	2b05      	cmp	r3, #5
    232c:	d020      	beq.n	2370 <ble_slave_security_request_handler+0x64>
		if ((ble_dev_info[idx].conn_info.handle == slave_sec_req->handle)
    232e:	8910      	ldrh	r0, [r2, #8]
    2330:	42a0      	cmp	r0, r4
    2332:	d1f8      	bne.n	2326 <ble_slave_security_request_handler+0x1a>
		    && (ble_dev_info[idx].conn_state == BLE_DEVICE_CONNECTED)) {
    2334:	0010      	movs	r0, r2
    2336:	305e      	adds	r0, #94	; 0x5e
    2338:	7800      	ldrb	r0, [r0, #0]
    233a:	2802      	cmp	r0, #2
    233c:	d1f3      	bne.n	2326 <ble_slave_security_request_handler+0x1a>
			ble_dev_info[idx].conn_state = BLE_DEVICE_ENCRYPTION_STATE;
    233e:	4866      	ldr	r0, [pc, #408]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    2340:	015a      	lsls	r2, r3, #5
    2342:	1ad5      	subs	r5, r2, r3
    2344:	00ad      	lsls	r5, r5, #2
    2346:	1945      	adds	r5, r0, r5
    2348:	355e      	adds	r5, #94	; 0x5e
    234a:	2206      	movs	r2, #6
    234c:	702a      	strb	r2, [r5, #0]
    234e:	32f9      	adds	r2, #249	; 0xf9
    2350:	4013      	ands	r3, r2
		if ((ble_dev_info[idx].bond_info.auth & AT_BLE_AUTH_NO_MITM_BOND) && (slave_sec_req->bond == true)) {
    2352:	015a      	lsls	r2, r3, #5
    2354:	1ad2      	subs	r2, r2, r3
    2356:	0092      	lsls	r2, r2, #2
    2358:	1882      	adds	r2, r0, r2
    235a:	7d12      	ldrb	r2, [r2, #20]
    235c:	07d0      	lsls	r0, r2, #31
    235e:	d40b      	bmi.n	2378 <ble_slave_security_request_handler+0x6c>
			ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
    2360:	015a      	lsls	r2, r3, #5
    2362:	1ad2      	subs	r2, r2, r3
    2364:	0092      	lsls	r2, r2, #2
    2366:	4b5c      	ldr	r3, [pc, #368]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    2368:	189b      	adds	r3, r3, r2
    236a:	335e      	adds	r3, #94	; 0x5e
    236c:	2202      	movs	r2, #2
    236e:	701a      	strb	r2, [r3, #0]
		if ((ble_dev_info[idx].conn_info.handle == slave_sec_req->handle)
    2370:	8830      	ldrh	r0, [r6, #0]
    2372:	2300      	movs	r3, #0
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    2374:	2400      	movs	r4, #0
    2376:	e01b      	b.n	23b0 <ble_slave_security_request_handler+0xa4>
		if ((ble_dev_info[idx].bond_info.auth & AT_BLE_AUTH_NO_MITM_BOND) && (slave_sec_req->bond == true)) {
    2378:	78f0      	ldrb	r0, [r6, #3]
    237a:	2800      	cmp	r0, #0
    237c:	d0f0      	beq.n	2360 <ble_slave_security_request_handler+0x54>
			if (at_ble_encryption_start(
    237e:	0159      	lsls	r1, r3, #5
    2380:	1ac9      	subs	r1, r1, r3
    2382:	0089      	lsls	r1, r1, #2
    2384:	311a      	adds	r1, #26
    2386:	4b54      	ldr	r3, [pc, #336]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    2388:	18c9      	adds	r1, r1, r3
    238a:	8830      	ldrh	r0, [r6, #0]
    238c:	4b53      	ldr	r3, [pc, #332]	; (24dc <ble_slave_security_request_handler+0x1d0>)
    238e:	4798      	blx	r3
    2390:	2800      	cmp	r0, #0
    2392:	d050      	beq.n	2436 <ble_slave_security_request_handler+0x12a>
				DBG_LOG("Encryption Not started");
    2394:	4852      	ldr	r0, [pc, #328]	; (24e0 <ble_slave_security_request_handler+0x1d4>)
    2396:	4b53      	ldr	r3, [pc, #332]	; (24e4 <ble_slave_security_request_handler+0x1d8>)
    2398:	4798      	blx	r3
    239a:	4853      	ldr	r0, [pc, #332]	; (24e8 <ble_slave_security_request_handler+0x1dc>)
    239c:	4b53      	ldr	r3, [pc, #332]	; (24ec <ble_slave_security_request_handler+0x1e0>)
    239e:	4798      	blx	r3
				return AT_BLE_FAILURE;
    23a0:	20e2      	movs	r0, #226	; 0xe2
    23a2:	e048      	b.n	2436 <ble_slave_security_request_handler+0x12a>
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    23a4:	3401      	adds	r4, #1
    23a6:	b2e4      	uxtb	r4, r4
    23a8:	3301      	adds	r3, #1
    23aa:	317c      	adds	r1, #124	; 0x7c
    23ac:	2c05      	cmp	r4, #5
    23ae:	d010      	beq.n	23d2 <ble_slave_security_request_handler+0xc6>
		if ((ble_dev_info[idx].conn_info.handle == slave_sec_req->handle)
    23b0:	001d      	movs	r5, r3
    23b2:	890a      	ldrh	r2, [r1, #8]
    23b4:	4282      	cmp	r2, r0
    23b6:	d1f5      	bne.n	23a4 <ble_slave_security_request_handler+0x98>
		    && (ble_dev_info[idx].conn_state == BLE_DEVICE_CONNECTED)) {
    23b8:	000a      	movs	r2, r1
    23ba:	325e      	adds	r2, #94	; 0x5e
    23bc:	7812      	ldrb	r2, [r2, #0]
    23be:	2a02      	cmp	r2, #2
    23c0:	d1f0      	bne.n	23a4 <ble_slave_security_request_handler+0x98>
			ble_dev_info[idx].conn_state = BLE_DEVICE_PAIRING;
    23c2:	015b      	lsls	r3, r3, #5
    23c4:	1b5d      	subs	r5, r3, r5
    23c6:	00ad      	lsls	r5, r5, #2
    23c8:	4b43      	ldr	r3, [pc, #268]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    23ca:	195b      	adds	r3, r3, r5
    23cc:	335e      	adds	r3, #94	; 0x5e
    23ce:	3201      	adds	r2, #1
    23d0:	701a      	strb	r2, [r3, #0]
	features.desired_auth    = BLE_AUTHENTICATION_LEVEL;
    23d2:	ab01      	add	r3, sp, #4
    23d4:	2202      	movs	r2, #2
    23d6:	721a      	strb	r2, [r3, #8]
	features.bond            = slave_sec_req->bond;
    23d8:	78f2      	ldrb	r2, [r6, #3]
    23da:	709a      	strb	r2, [r3, #2]
	features.mitm_protection = true;
    23dc:	2201      	movs	r2, #1
    23de:	705a      	strb	r2, [r3, #1]
	features.io_cababilities = AT_BLE_IO_CAP_KB_DISPLAY;
    23e0:	3203      	adds	r2, #3
    23e2:	701a      	strb	r2, [r3, #0]
	features.oob_avaiable = false;
    23e4:	2200      	movs	r2, #0
    23e6:	70da      	strb	r2, [r3, #3]
	if (ble_dev_info[idx].conn_info.peer_addr.type == AT_BLE_ADDRESS_RANDOM_PRIVATE_RESOLVABLE) {
    23e8:	46a0      	mov	r8, r4
    23ea:	0163      	lsls	r3, r4, #5
    23ec:	1b1b      	subs	r3, r3, r4
    23ee:	009b      	lsls	r3, r3, #2
    23f0:	4a39      	ldr	r2, [pc, #228]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    23f2:	5c9b      	ldrb	r3, [r3, r2]
    23f4:	2b02      	cmp	r3, #2
    23f6:	d025      	beq.n	2444 <ble_slave_security_request_handler+0x138>
		features.initiator_keys = AT_BLE_KEY_DIST_ENC;
    23f8:	ab01      	add	r3, sp, #4
    23fa:	2201      	movs	r2, #1
    23fc:	719a      	strb	r2, [r3, #6]
		features.responder_keys = AT_BLE_KEY_DIST_ENC;
    23fe:	71da      	strb	r2, [r3, #7]
	features.max_key_size = 16;
    2400:	ab01      	add	r3, sp, #4
    2402:	2210      	movs	r2, #16
    2404:	715a      	strb	r2, [r3, #5]
	features.min_key_size = 16;
    2406:	711a      	strb	r2, [r3, #4]
	if (ble_dev_info[idx].bond_info.status == AT_BLE_GAP_INVALID_PARAM) {
    2408:	4643      	mov	r3, r8
    240a:	015b      	lsls	r3, r3, #5
    240c:	4642      	mov	r2, r8
    240e:	1a9b      	subs	r3, r3, r2
    2410:	009b      	lsls	r3, r3, #2
    2412:	4a31      	ldr	r2, [pc, #196]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    2414:	18d3      	adds	r3, r2, r3
    2416:	7e1b      	ldrb	r3, [r3, #24]
    2418:	2b40      	cmp	r3, #64	; 0x40
    241a:	d018      	beq.n	244e <ble_slave_security_request_handler+0x142>
	if (at_ble_authenticate(slave_sec_req->handle, &features, &ble_dev_info[idx].host_ltk, NULL) != AT_BLE_SUCCESS) {
    241c:	0162      	lsls	r2, r4, #5
    241e:	1b12      	subs	r2, r2, r4
    2420:	0092      	lsls	r2, r2, #2
    2422:	3260      	adds	r2, #96	; 0x60
    2424:	4c2c      	ldr	r4, [pc, #176]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    2426:	1912      	adds	r2, r2, r4
    2428:	8830      	ldrh	r0, [r6, #0]
    242a:	2300      	movs	r3, #0
    242c:	a901      	add	r1, sp, #4
    242e:	4c30      	ldr	r4, [pc, #192]	; (24f0 <ble_slave_security_request_handler+0x1e4>)
    2430:	47a0      	blx	r4
    2432:	2800      	cmp	r0, #0
    2434:	d144      	bne.n	24c0 <ble_slave_security_request_handler+0x1b4>
}
    2436:	b005      	add	sp, #20
    2438:	bc3c      	pop	{r2, r3, r4, r5}
    243a:	4690      	mov	r8, r2
    243c:	4699      	mov	r9, r3
    243e:	46a2      	mov	sl, r4
    2440:	46ab      	mov	fp, r5
    2442:	bdf0      	pop	{r4, r5, r6, r7, pc}
		features.initiator_keys = (at_ble_key_dis_t)(AT_BLE_KEY_DIST_ENC | AT_BLE_KEY_DIST_ID);
    2444:	ab01      	add	r3, sp, #4
    2446:	2203      	movs	r2, #3
    2448:	719a      	strb	r2, [r3, #6]
		features.responder_keys = (at_ble_key_dis_t)(AT_BLE_KEY_DIST_ENC | AT_BLE_KEY_DIST_ID);
    244a:	71da      	strb	r2, [r3, #7]
    244c:	e7d8      	b.n	2400 <ble_slave_security_request_handler+0xf4>
    244e:	0167      	lsls	r7, r4, #5
    2450:	1b3f      	subs	r7, r7, r4
    2452:	00bb      	lsls	r3, r7, #2
    2454:	469b      	mov	fp, r3
    2456:	001d      	movs	r5, r3
    2458:	3560      	adds	r5, #96	; 0x60
    245a:	0013      	movs	r3, r2
    245c:	18ad      	adds	r5, r5, r2
    245e:	465a      	mov	r2, fp
    2460:	3268      	adds	r2, #104	; 0x68
    2462:	4692      	mov	sl, r2
    2464:	449a      	add	sl, r3
			ble_dev_info[idx].host_ltk.key[i] = rand() & 0x0f;
    2466:	4b23      	ldr	r3, [pc, #140]	; (24f4 <ble_slave_security_request_handler+0x1e8>)
    2468:	4699      	mov	r9, r3
    246a:	270f      	movs	r7, #15
    246c:	47c8      	blx	r9
    246e:	4038      	ands	r0, r7
    2470:	7028      	strb	r0, [r5, #0]
			ble_dev_info[idx].host_ltk.nb[i]  = rand() & 0x0f;
    2472:	47c8      	blx	r9
    2474:	4038      	ands	r0, r7
    2476:	74a8      	strb	r0, [r5, #18]
    2478:	3501      	adds	r5, #1
		for (i = 0; i < 8; i++) {
    247a:	4555      	cmp	r5, sl
    247c:	d1f6      	bne.n	246c <ble_slave_security_request_handler+0x160>
    247e:	465f      	mov	r7, fp
    2480:	3770      	adds	r7, #112	; 0x70
    2482:	4b15      	ldr	r3, [pc, #84]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    2484:	18ff      	adds	r7, r7, r3
			ble_dev_info[idx].host_ltk.key[i] = rand() & 0x0f;
    2486:	4b1b      	ldr	r3, [pc, #108]	; (24f4 <ble_slave_security_request_handler+0x1e8>)
    2488:	469a      	mov	sl, r3
    248a:	230f      	movs	r3, #15
    248c:	4699      	mov	r9, r3
    248e:	47d0      	blx	sl
    2490:	464b      	mov	r3, r9
    2492:	4018      	ands	r0, r3
    2494:	7028      	strb	r0, [r5, #0]
    2496:	3501      	adds	r5, #1
		for (i = 8; i < 16; i++) {
    2498:	42bd      	cmp	r5, r7
    249a:	d1f8      	bne.n	248e <ble_slave_security_request_handler+0x182>
		ble_dev_info[idx].host_ltk.ediv     = rand() & 0xffff;
    249c:	4b15      	ldr	r3, [pc, #84]	; (24f4 <ble_slave_security_request_handler+0x1e8>)
    249e:	4798      	blx	r3
    24a0:	4a0d      	ldr	r2, [pc, #52]	; (24d8 <ble_slave_security_request_handler+0x1cc>)
    24a2:	4643      	mov	r3, r8
    24a4:	0159      	lsls	r1, r3, #5
    24a6:	1acb      	subs	r3, r1, r3
    24a8:	009b      	lsls	r3, r3, #2
    24aa:	18d3      	adds	r3, r2, r3
    24ac:	3370      	adds	r3, #112	; 0x70
    24ae:	8018      	strh	r0, [r3, #0]
		ble_dev_info[idx].host_ltk.key_size = 16;
    24b0:	4643      	mov	r3, r8
    24b2:	1ac9      	subs	r1, r1, r3
    24b4:	0089      	lsls	r1, r1, #2
    24b6:	1852      	adds	r2, r2, r1
    24b8:	327a      	adds	r2, #122	; 0x7a
    24ba:	2310      	movs	r3, #16
    24bc:	7013      	strb	r3, [r2, #0]
    24be:	e7ad      	b.n	241c <ble_slave_security_request_handler+0x110>
		features.bond            = false;
    24c0:	ab01      	add	r3, sp, #4
    24c2:	2200      	movs	r2, #0
    24c4:	709a      	strb	r2, [r3, #2]
		features.mitm_protection = false;
    24c6:	705a      	strb	r2, [r3, #1]
		DBG_LOG("Slave Security Req - Authentication Failed");
    24c8:	4805      	ldr	r0, [pc, #20]	; (24e0 <ble_slave_security_request_handler+0x1d4>)
    24ca:	4b06      	ldr	r3, [pc, #24]	; (24e4 <ble_slave_security_request_handler+0x1d8>)
    24cc:	4798      	blx	r3
    24ce:	480a      	ldr	r0, [pc, #40]	; (24f8 <ble_slave_security_request_handler+0x1ec>)
    24d0:	4b06      	ldr	r3, [pc, #24]	; (24ec <ble_slave_security_request_handler+0x1e0>)
    24d2:	4798      	blx	r3
		return AT_BLE_FAILURE;
    24d4:	20e2      	movs	r0, #226	; 0xe2
    24d6:	e7ae      	b.n	2436 <ble_slave_security_request_handler+0x12a>
    24d8:	20000f90 	.word	0x20000f90
    24dc:	000068dd 	.word	0x000068dd
    24e0:	00009f84 	.word	0x00009f84
    24e4:	00008bad 	.word	0x00008bad
    24e8:	0000a510 	.word	0x0000a510
    24ec:	00008a91 	.word	0x00008a91
    24f0:	000065a5 	.word	0x000065a5
    24f4:	00008bc1 	.word	0x00008bc1
    24f8:	0000a528 	.word	0x0000a528

000024fc <ble_pair_request_handler>:
{
    24fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    24fe:	46de      	mov	lr, fp
    2500:	4657      	mov	r7, sl
    2502:	464e      	mov	r6, r9
    2504:	4645      	mov	r5, r8
    2506:	b5e0      	push	{r5, r6, r7, lr}
    2508:	b087      	sub	sp, #28
    250a:	9001      	str	r0, [sp, #4]
		if ((ble_dev_info[idx].conn_info.handle == pair_req->handle)
    250c:	8800      	ldrh	r0, [r0, #0]
    250e:	4b4d      	ldr	r3, [pc, #308]	; (2644 <ble_pair_request_handler+0x148>)
    2510:	2200      	movs	r2, #0
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    2512:	2400      	movs	r4, #0
    2514:	e005      	b.n	2522 <ble_pair_request_handler+0x26>
    2516:	3401      	adds	r4, #1
    2518:	b2e4      	uxtb	r4, r4
    251a:	3201      	adds	r2, #1
    251c:	337c      	adds	r3, #124	; 0x7c
    251e:	2c05      	cmp	r4, #5
    2520:	d00f      	beq.n	2542 <ble_pair_request_handler+0x46>
		if ((ble_dev_info[idx].conn_info.handle == pair_req->handle)
    2522:	8919      	ldrh	r1, [r3, #8]
    2524:	4281      	cmp	r1, r0
    2526:	d1f6      	bne.n	2516 <ble_pair_request_handler+0x1a>
		    && (ble_dev_info[idx].conn_state == BLE_DEVICE_CONNECTED)) {
    2528:	0019      	movs	r1, r3
    252a:	315e      	adds	r1, #94	; 0x5e
    252c:	7809      	ldrb	r1, [r1, #0]
    252e:	2902      	cmp	r1, #2
    2530:	d1f1      	bne.n	2516 <ble_pair_request_handler+0x1a>
			ble_dev_info[idx].conn_state = BLE_DEVICE_PAIRING;
    2532:	0153      	lsls	r3, r2, #5
    2534:	1a9d      	subs	r5, r3, r2
    2536:	00ad      	lsls	r5, r5, #2
    2538:	4b42      	ldr	r3, [pc, #264]	; (2644 <ble_pair_request_handler+0x148>)
    253a:	195b      	adds	r3, r3, r5
    253c:	335e      	adds	r3, #94	; 0x5e
    253e:	2203      	movs	r2, #3
    2540:	701a      	strb	r2, [r3, #0]
	features.desired_auth    = BLE_AUTHENTICATION_LEVEL;
    2542:	ab03      	add	r3, sp, #12
    2544:	2202      	movs	r2, #2
    2546:	721a      	strb	r2, [r3, #8]
	features.bond            = BLE_BOND_REQ;
    2548:	3a01      	subs	r2, #1
    254a:	709a      	strb	r2, [r3, #2]
	features.mitm_protection = BLE_MITM_REQ;
    254c:	705a      	strb	r2, [r3, #1]
	features.io_cababilities = BLE_IO_CAPABALITIES;
    254e:	2200      	movs	r2, #0
    2550:	701a      	strb	r2, [r3, #0]
	features.oob_avaiable    = BLE_OOB_REQ;
    2552:	70da      	strb	r2, [r3, #3]
	if (ble_dev_info[idx].conn_info.peer_addr.type == AT_BLE_ADDRESS_RANDOM_PRIVATE_RESOLVABLE) {
    2554:	46a0      	mov	r8, r4
    2556:	0163      	lsls	r3, r4, #5
    2558:	1b1b      	subs	r3, r3, r4
    255a:	009b      	lsls	r3, r3, #2
    255c:	4a39      	ldr	r2, [pc, #228]	; (2644 <ble_pair_request_handler+0x148>)
    255e:	5c9b      	ldrb	r3, [r3, r2]
    2560:	2b02      	cmp	r3, #2
    2562:	d026      	beq.n	25b2 <ble_pair_request_handler+0xb6>
		features.initiator_keys = AT_BLE_KEY_DIST_ENC;
    2564:	ab03      	add	r3, sp, #12
    2566:	2201      	movs	r2, #1
    2568:	719a      	strb	r2, [r3, #6]
		features.responder_keys = AT_BLE_KEY_DIST_ENC;
    256a:	71da      	strb	r2, [r3, #7]
	features.max_key_size = 16;
    256c:	ab03      	add	r3, sp, #12
    256e:	2210      	movs	r2, #16
    2570:	715a      	strb	r2, [r3, #5]
	features.min_key_size = 16;
    2572:	711a      	strb	r2, [r3, #4]
	if (ble_dev_info[idx].bond_info.status == AT_BLE_GAP_INVALID_PARAM) {
    2574:	4643      	mov	r3, r8
    2576:	015b      	lsls	r3, r3, #5
    2578:	4642      	mov	r2, r8
    257a:	1a9b      	subs	r3, r3, r2
    257c:	009b      	lsls	r3, r3, #2
    257e:	4a31      	ldr	r2, [pc, #196]	; (2644 <ble_pair_request_handler+0x148>)
    2580:	18d3      	adds	r3, r2, r3
    2582:	7e1b      	ldrb	r3, [r3, #24]
    2584:	2b40      	cmp	r3, #64	; 0x40
    2586:	d019      	beq.n	25bc <ble_pair_request_handler+0xc0>
	if (at_ble_authenticate(pair_req->handle, &features, &ble_dev_info[idx].host_ltk, NULL) != AT_BLE_SUCCESS) {
    2588:	0162      	lsls	r2, r4, #5
    258a:	1b12      	subs	r2, r2, r4
    258c:	0092      	lsls	r2, r2, #2
    258e:	3260      	adds	r2, #96	; 0x60
    2590:	4c2c      	ldr	r4, [pc, #176]	; (2644 <ble_pair_request_handler+0x148>)
    2592:	1912      	adds	r2, r2, r4
    2594:	9b01      	ldr	r3, [sp, #4]
    2596:	8818      	ldrh	r0, [r3, #0]
    2598:	2300      	movs	r3, #0
    259a:	a903      	add	r1, sp, #12
    259c:	4c2a      	ldr	r4, [pc, #168]	; (2648 <ble_pair_request_handler+0x14c>)
    259e:	47a0      	blx	r4
    25a0:	2800      	cmp	r0, #0
    25a2:	d143      	bne.n	262c <ble_pair_request_handler+0x130>
}
    25a4:	b007      	add	sp, #28
    25a6:	bc3c      	pop	{r2, r3, r4, r5}
    25a8:	4690      	mov	r8, r2
    25aa:	4699      	mov	r9, r3
    25ac:	46a2      	mov	sl, r4
    25ae:	46ab      	mov	fp, r5
    25b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
		features.initiator_keys = (at_ble_key_dis_t)(AT_BLE_KEY_DIST_ENC | AT_BLE_KEY_DIST_ID);
    25b2:	ab03      	add	r3, sp, #12
    25b4:	2203      	movs	r2, #3
    25b6:	719a      	strb	r2, [r3, #6]
		features.responder_keys = (at_ble_key_dis_t)(AT_BLE_KEY_DIST_ENC | AT_BLE_KEY_DIST_ID);
    25b8:	71da      	strb	r2, [r3, #7]
    25ba:	e7d7      	b.n	256c <ble_pair_request_handler+0x70>
    25bc:	0167      	lsls	r7, r4, #5
    25be:	1b3f      	subs	r7, r7, r4
    25c0:	00bb      	lsls	r3, r7, #2
    25c2:	469b      	mov	fp, r3
    25c4:	001d      	movs	r5, r3
    25c6:	3560      	adds	r5, #96	; 0x60
    25c8:	0013      	movs	r3, r2
    25ca:	18ad      	adds	r5, r5, r2
    25cc:	465a      	mov	r2, fp
    25ce:	3268      	adds	r2, #104	; 0x68
    25d0:	4692      	mov	sl, r2
    25d2:	449a      	add	sl, r3
			ble_dev_info[idx].host_ltk.key[i] = rand() & 0x0f;
    25d4:	4e1d      	ldr	r6, [pc, #116]	; (264c <ble_pair_request_handler+0x150>)
    25d6:	270f      	movs	r7, #15
    25d8:	47b0      	blx	r6
    25da:	4038      	ands	r0, r7
    25dc:	7028      	strb	r0, [r5, #0]
			ble_dev_info[idx].host_ltk.nb[i]  = rand() & 0x0f;
    25de:	47b0      	blx	r6
    25e0:	4038      	ands	r0, r7
    25e2:	74a8      	strb	r0, [r5, #18]
    25e4:	3501      	adds	r5, #1
		for (i = 0; i < 8; i++) {
    25e6:	45aa      	cmp	sl, r5
    25e8:	d1f6      	bne.n	25d8 <ble_pair_request_handler+0xdc>
    25ea:	465f      	mov	r7, fp
    25ec:	3770      	adds	r7, #112	; 0x70
    25ee:	4b15      	ldr	r3, [pc, #84]	; (2644 <ble_pair_request_handler+0x148>)
    25f0:	18ff      	adds	r7, r7, r3
			ble_dev_info[idx].host_ltk.key[i] = rand() & 0x0f;
    25f2:	4b16      	ldr	r3, [pc, #88]	; (264c <ble_pair_request_handler+0x150>)
    25f4:	469a      	mov	sl, r3
    25f6:	230f      	movs	r3, #15
    25f8:	4699      	mov	r9, r3
    25fa:	47d0      	blx	sl
    25fc:	464b      	mov	r3, r9
    25fe:	4018      	ands	r0, r3
    2600:	7028      	strb	r0, [r5, #0]
    2602:	3501      	adds	r5, #1
		for (i = 8; i < 16; i++) {
    2604:	42bd      	cmp	r5, r7
    2606:	d1f8      	bne.n	25fa <ble_pair_request_handler+0xfe>
		ble_dev_info[idx].host_ltk.ediv     = rand() & 0xffff;
    2608:	4b10      	ldr	r3, [pc, #64]	; (264c <ble_pair_request_handler+0x150>)
    260a:	4798      	blx	r3
    260c:	4a0d      	ldr	r2, [pc, #52]	; (2644 <ble_pair_request_handler+0x148>)
    260e:	4643      	mov	r3, r8
    2610:	0159      	lsls	r1, r3, #5
    2612:	1acb      	subs	r3, r1, r3
    2614:	009b      	lsls	r3, r3, #2
    2616:	18d3      	adds	r3, r2, r3
    2618:	3370      	adds	r3, #112	; 0x70
    261a:	8018      	strh	r0, [r3, #0]
		ble_dev_info[idx].host_ltk.key_size = 16;
    261c:	4643      	mov	r3, r8
    261e:	1ac9      	subs	r1, r1, r3
    2620:	0089      	lsls	r1, r1, #2
    2622:	1852      	adds	r2, r2, r1
    2624:	327a      	adds	r2, #122	; 0x7a
    2626:	2310      	movs	r3, #16
    2628:	7013      	strb	r3, [r2, #0]
    262a:	e7ad      	b.n	2588 <ble_pair_request_handler+0x8c>
		features.bond            = false;
    262c:	ab03      	add	r3, sp, #12
    262e:	2200      	movs	r2, #0
    2630:	709a      	strb	r2, [r3, #2]
		features.mitm_protection = false;
    2632:	705a      	strb	r2, [r3, #1]
		DBG_LOG("Pair Request - Authentication Failed");
    2634:	4806      	ldr	r0, [pc, #24]	; (2650 <ble_pair_request_handler+0x154>)
    2636:	4b07      	ldr	r3, [pc, #28]	; (2654 <ble_pair_request_handler+0x158>)
    2638:	4798      	blx	r3
    263a:	4807      	ldr	r0, [pc, #28]	; (2658 <ble_pair_request_handler+0x15c>)
    263c:	4b07      	ldr	r3, [pc, #28]	; (265c <ble_pair_request_handler+0x160>)
    263e:	4798      	blx	r3
		return AT_BLE_FAILURE;
    2640:	20e2      	movs	r0, #226	; 0xe2
    2642:	e7af      	b.n	25a4 <ble_pair_request_handler+0xa8>
    2644:	20000f90 	.word	0x20000f90
    2648:	000065a5 	.word	0x000065a5
    264c:	00008bc1 	.word	0x00008bc1
    2650:	00009f84 	.word	0x00009f84
    2654:	00008bad 	.word	0x00008bad
    2658:	0000a554 	.word	0x0000a554
    265c:	00008a91 	.word	0x00008a91

00002660 <ble_pair_key_request_handler>:
{
    2660:	b5f0      	push	{r4, r5, r6, r7, lr}
    2662:	b085      	sub	sp, #20
    2664:	0005      	movs	r5, r0
	uint8_t passkey[6] = {'1', '2', '3', '4', '5', '6'};
    2666:	4b48      	ldr	r3, [pc, #288]	; (2788 <ble_pair_key_request_handler+0x128>)
    2668:	681a      	ldr	r2, [r3, #0]
    266a:	9202      	str	r2, [sp, #8]
    266c:	889a      	ldrh	r2, [r3, #4]
    266e:	ab02      	add	r3, sp, #8
    2670:	809a      	strh	r2, [r3, #4]
	memcpy((uint8_t *)&pair_key_request, pair_key, sizeof(at_ble_pair_key_request_t));
    2672:	ac01      	add	r4, sp, #4
    2674:	2204      	movs	r2, #4
    2676:	0001      	movs	r1, r0
    2678:	0020      	movs	r0, r4
    267a:	4b44      	ldr	r3, [pc, #272]	; (278c <ble_pair_key_request_handler+0x12c>)
    267c:	4798      	blx	r3
	if (pair_key_request.passkey_type == AT_BLE_PAIR_PASSKEY_ENTRY) {
    267e:	78e3      	ldrb	r3, [r4, #3]
    2680:	2b00      	cmp	r3, #0
    2682:	d00c      	beq.n	269e <ble_pair_key_request_handler+0x3e>
	if (((pair_key_request.passkey_type == AT_BLE_PAIR_PASSKEY_DISPLAY)
    2684:	2380      	movs	r3, #128	; 0x80
    2686:	005b      	lsls	r3, r3, #1
    2688:	aa01      	add	r2, sp, #4
    268a:	8852      	ldrh	r2, [r2, #2]
    268c:	429a      	cmp	r2, r3
    268e:	d052      	beq.n	2736 <ble_pair_key_request_handler+0xd6>
		if (pair_key_request.type == AT_BLE_PAIR_OOB) {
    2690:	ab01      	add	r3, sp, #4
    2692:	789b      	ldrb	r3, [r3, #2]
    2694:	2b01      	cmp	r3, #1
    2696:	d100      	bne.n	269a <ble_pair_key_request_handler+0x3a>
    2698:	e06d      	b.n	2776 <ble_pair_key_request_handler+0x116>
	return AT_BLE_SUCCESS;
    269a:	2000      	movs	r0, #0
    269c:	e061      	b.n	2762 <ble_pair_key_request_handler+0x102>
		DBG_LOG("Enter the Passkey(6-Digit) in Terminal:");
    269e:	483c      	ldr	r0, [pc, #240]	; (2790 <ble_pair_key_request_handler+0x130>)
    26a0:	4b3c      	ldr	r3, [pc, #240]	; (2794 <ble_pair_key_request_handler+0x134>)
    26a2:	4798      	blx	r3
    26a4:	483c      	ldr	r0, [pc, #240]	; (2798 <ble_pair_key_request_handler+0x138>)
    26a6:	4b3d      	ldr	r3, [pc, #244]	; (279c <ble_pair_key_request_handler+0x13c>)
    26a8:	4798      	blx	r3
    26aa:	2700      	movs	r7, #0
			pin = getchar();
    26ac:	4c3c      	ldr	r4, [pc, #240]	; (27a0 <ble_pair_key_request_handler+0x140>)
		for (idx = 0; idx < 6;) {
    26ae:	b2fe      	uxtb	r6, r7
			pin = getchar();
    26b0:	6820      	ldr	r0, [r4, #0]
    26b2:	6842      	ldr	r2, [r0, #4]
    26b4:	6853      	ldr	r3, [r2, #4]
    26b6:	3b01      	subs	r3, #1
    26b8:	6053      	str	r3, [r2, #4]
    26ba:	2b00      	cmp	r3, #0
    26bc:	db13      	blt.n	26e6 <ble_pair_key_request_handler+0x86>
    26be:	6842      	ldr	r2, [r0, #4]
    26c0:	6813      	ldr	r3, [r2, #0]
    26c2:	1c59      	adds	r1, r3, #1
    26c4:	6011      	str	r1, [r2, #0]
    26c6:	7818      	ldrb	r0, [r3, #0]
			if (!pin) {
    26c8:	2800      	cmp	r0, #0
    26ca:	d011      	beq.n	26f0 <ble_pair_key_request_handler+0x90>
			if ((pin >= '0') && (pin <= '9')) {
    26cc:	0003      	movs	r3, r0
    26ce:	3b30      	subs	r3, #48	; 0x30
    26d0:	2b09      	cmp	r3, #9
    26d2:	d928      	bls.n	2726 <ble_pair_key_request_handler+0xc6>
		for (idx = 0; idx < 6;) {
    26d4:	2e05      	cmp	r6, #5
    26d6:	d9eb      	bls.n	26b0 <ble_pair_key_request_handler+0x50>
			DBG_LOG("Entered Pass-code:");
    26d8:	482d      	ldr	r0, [pc, #180]	; (2790 <ble_pair_key_request_handler+0x130>)
    26da:	4b2e      	ldr	r3, [pc, #184]	; (2794 <ble_pair_key_request_handler+0x134>)
    26dc:	4798      	blx	r3
    26de:	4831      	ldr	r0, [pc, #196]	; (27a4 <ble_pair_key_request_handler+0x144>)
    26e0:	4b2e      	ldr	r3, [pc, #184]	; (279c <ble_pair_key_request_handler+0x13c>)
    26e2:	4798      	blx	r3
    26e4:	e02d      	b.n	2742 <ble_pair_key_request_handler+0xe2>
			pin = getchar();
    26e6:	6841      	ldr	r1, [r0, #4]
    26e8:	4b2f      	ldr	r3, [pc, #188]	; (27a8 <ble_pair_key_request_handler+0x148>)
    26ea:	4798      	blx	r3
    26ec:	b2c0      	uxtb	r0, r0
    26ee:	e7eb      	b.n	26c8 <ble_pair_key_request_handler+0x68>
				DBG_LOG("Pin Timeout");
    26f0:	4f27      	ldr	r7, [pc, #156]	; (2790 <ble_pair_key_request_handler+0x130>)
    26f2:	0038      	movs	r0, r7
    26f4:	4e27      	ldr	r6, [pc, #156]	; (2794 <ble_pair_key_request_handler+0x134>)
    26f6:	47b0      	blx	r6
    26f8:	482c      	ldr	r0, [pc, #176]	; (27ac <ble_pair_key_request_handler+0x14c>)
    26fa:	4c28      	ldr	r4, [pc, #160]	; (279c <ble_pair_key_request_handler+0x13c>)
    26fc:	47a0      	blx	r4
				DBG_LOG("Disconnecting ...");
    26fe:	0038      	movs	r0, r7
    2700:	47b0      	blx	r6
    2702:	482b      	ldr	r0, [pc, #172]	; (27b0 <ble_pair_key_request_handler+0x150>)
    2704:	47a0      	blx	r4
				if (!(at_ble_disconnect(pair_key->handle, AT_BLE_TERMINATED_BY_USER) == AT_BLE_SUCCESS)) {
    2706:	8828      	ldrh	r0, [r5, #0]
    2708:	2113      	movs	r1, #19
    270a:	4b2a      	ldr	r3, [pc, #168]	; (27b4 <ble_pair_key_request_handler+0x154>)
    270c:	4798      	blx	r3
    270e:	0003      	movs	r3, r0
				return AT_BLE_FAILURE;
    2710:	20e2      	movs	r0, #226	; 0xe2
				if (!(at_ble_disconnect(pair_key->handle, AT_BLE_TERMINATED_BY_USER) == AT_BLE_SUCCESS)) {
    2712:	2b00      	cmp	r3, #0
    2714:	d025      	beq.n	2762 <ble_pair_key_request_handler+0x102>
					DBG_LOG("Disconnect Request Failed");
    2716:	481e      	ldr	r0, [pc, #120]	; (2790 <ble_pair_key_request_handler+0x130>)
    2718:	4b1e      	ldr	r3, [pc, #120]	; (2794 <ble_pair_key_request_handler+0x134>)
    271a:	4798      	blx	r3
    271c:	4826      	ldr	r0, [pc, #152]	; (27b8 <ble_pair_key_request_handler+0x158>)
    271e:	4b1f      	ldr	r3, [pc, #124]	; (279c <ble_pair_key_request_handler+0x13c>)
    2720:	4798      	blx	r3
				return AT_BLE_FAILURE;
    2722:	20e2      	movs	r0, #226	; 0xe2
    2724:	e01d      	b.n	2762 <ble_pair_key_request_handler+0x102>
				passkey[idx++] = pin;
    2726:	ab02      	add	r3, sp, #8
    2728:	54f8      	strb	r0, [r7, r3]
				DBG_LOG_CONT("%c", pin);
    272a:	4b24      	ldr	r3, [pc, #144]	; (27bc <ble_pair_key_request_handler+0x15c>)
    272c:	4798      	blx	r3
    272e:	3701      	adds	r7, #1
		for (idx = 0; idx < 6;) {
    2730:	2f06      	cmp	r7, #6
    2732:	d0d1      	beq.n	26d8 <ble_pair_key_request_handler+0x78>
    2734:	e7bb      	b.n	26ae <ble_pair_key_request_handler+0x4e>
			DBG_LOG("Please Enter the following Pass-code(on other Device):");
    2736:	4816      	ldr	r0, [pc, #88]	; (2790 <ble_pair_key_request_handler+0x130>)
    2738:	4b16      	ldr	r3, [pc, #88]	; (2794 <ble_pair_key_request_handler+0x134>)
    273a:	4798      	blx	r3
    273c:	4820      	ldr	r0, [pc, #128]	; (27c0 <ble_pair_key_request_handler+0x160>)
    273e:	4b17      	ldr	r3, [pc, #92]	; (279c <ble_pair_key_request_handler+0x13c>)
    2740:	4798      	blx	r3
		DBG_LOG("Enter the Passkey(6-Digit) in Terminal:");
    2742:	2400      	movs	r4, #0
			passkey[idx] = (passkey[idx]);
    2744:	ae02      	add	r6, sp, #8
			DBG_LOG_CONT("%c", passkey[idx]);
    2746:	4f1d      	ldr	r7, [pc, #116]	; (27bc <ble_pair_key_request_handler+0x15c>)
    2748:	5da0      	ldrb	r0, [r4, r6]
    274a:	47b8      	blx	r7
    274c:	3401      	adds	r4, #1
		for (idx = 0; idx < AT_BLE_PASSKEY_LEN; idx++) {
    274e:	2c06      	cmp	r4, #6
    2750:	d1fa      	bne.n	2748 <ble_pair_key_request_handler+0xe8>
		if (!(at_ble_pair_key_reply(pair_key->handle, pair_key_request.type, passkey)) == AT_BLE_SUCCESS) {
    2752:	ab01      	add	r3, sp, #4
    2754:	7899      	ldrb	r1, [r3, #2]
    2756:	8828      	ldrh	r0, [r5, #0]
    2758:	aa02      	add	r2, sp, #8
    275a:	4b1a      	ldr	r3, [pc, #104]	; (27c4 <ble_pair_key_request_handler+0x164>)
    275c:	4798      	blx	r3
    275e:	2800      	cmp	r0, #0
    2760:	d101      	bne.n	2766 <ble_pair_key_request_handler+0x106>
}
    2762:	b005      	add	sp, #20
    2764:	bdf0      	pop	{r4, r5, r6, r7, pc}
			DBG_LOG("Pair-key reply failed");
    2766:	480a      	ldr	r0, [pc, #40]	; (2790 <ble_pair_key_request_handler+0x130>)
    2768:	4b0a      	ldr	r3, [pc, #40]	; (2794 <ble_pair_key_request_handler+0x134>)
    276a:	4798      	blx	r3
    276c:	4816      	ldr	r0, [pc, #88]	; (27c8 <ble_pair_key_request_handler+0x168>)
    276e:	4b0b      	ldr	r3, [pc, #44]	; (279c <ble_pair_key_request_handler+0x13c>)
    2770:	4798      	blx	r3
	return AT_BLE_SUCCESS;
    2772:	2000      	movs	r0, #0
    2774:	e7f5      	b.n	2762 <ble_pair_key_request_handler+0x102>
			DBG_LOG("OOB Feature Not supported");
    2776:	4806      	ldr	r0, [pc, #24]	; (2790 <ble_pair_key_request_handler+0x130>)
    2778:	4b06      	ldr	r3, [pc, #24]	; (2794 <ble_pair_key_request_handler+0x134>)
    277a:	4798      	blx	r3
    277c:	4813      	ldr	r0, [pc, #76]	; (27cc <ble_pair_key_request_handler+0x16c>)
    277e:	4b07      	ldr	r3, [pc, #28]	; (279c <ble_pair_key_request_handler+0x13c>)
    2780:	4798      	blx	r3
	return AT_BLE_SUCCESS;
    2782:	2000      	movs	r0, #0
    2784:	e7ed      	b.n	2762 <ble_pair_key_request_handler+0x102>
    2786:	46c0      	nop			; (mov r8, r8)
    2788:	0000a33c 	.word	0x0000a33c
    278c:	00008a6f 	.word	0x00008a6f
    2790:	00009f84 	.word	0x00009f84
    2794:	00008bad 	.word	0x00008bad
    2798:	0000a57c 	.word	0x0000a57c
    279c:	00008a91 	.word	0x00008a91
    27a0:	2000007c 	.word	0x2000007c
    27a4:	0000a630 	.word	0x0000a630
    27a8:	00008c39 	.word	0x00008c39
    27ac:	0000a5a4 	.word	0x0000a5a4
    27b0:	0000a5b0 	.word	0x0000a5b0
    27b4:	00004f7d 	.word	0x00004f7d
    27b8:	0000a498 	.word	0x0000a498
    27bc:	00008ac5 	.word	0x00008ac5
    27c0:	0000a5c4 	.word	0x0000a5c4
    27c4:	000067b1 	.word	0x000067b1
    27c8:	0000a5fc 	.word	0x0000a5fc
    27cc:	0000a614 	.word	0x0000a614

000027d0 <ble_encryption_request_handler>:

/** @brief function handles encryption requests */
at_ble_status_t ble_encryption_request_handler(void *params)
{
    27d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    27d2:	0006      	movs	r6, r0
	bool                         device_found = false;
	uint8_t                      idx;
	enc_req = (at_ble_encryption_request_t *)params;

	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
		if ((ble_dev_info[idx].conn_info.handle == enc_req->handle)
    27d4:	8805      	ldrh	r5, [r0, #0]
    27d6:	4b2f      	ldr	r3, [pc, #188]	; (2894 <ble_encryption_request_handler+0xc4>)
    27d8:	2200      	movs	r2, #0
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    27da:	2400      	movs	r4, #0
    27dc:	e005      	b.n	27ea <ble_encryption_request_handler+0x1a>
    27de:	3401      	adds	r4, #1
    27e0:	b2e4      	uxtb	r4, r4
    27e2:	3201      	adds	r2, #1
    27e4:	337c      	adds	r3, #124	; 0x7c
    27e6:	2c05      	cmp	r4, #5
    27e8:	d019      	beq.n	281e <ble_encryption_request_handler+0x4e>
		if ((ble_dev_info[idx].conn_info.handle == enc_req->handle)
    27ea:	0010      	movs	r0, r2
    27ec:	8919      	ldrh	r1, [r3, #8]
    27ee:	42a9      	cmp	r1, r5
    27f0:	d1f5      	bne.n	27de <ble_encryption_request_handler+0xe>
		    && (ble_dev_info[idx].conn_state != BLE_DEVICE_DISCONNECTED)
    27f2:	0019      	movs	r1, r3
    27f4:	315e      	adds	r1, #94	; 0x5e
		    && (ble_dev_info[idx].conn_state != BLE_DEVICE_DEFAULT_IDLE)) {
    27f6:	7809      	ldrb	r1, [r1, #0]
    27f8:	2901      	cmp	r1, #1
    27fa:	d9f0      	bls.n	27de <ble_encryption_request_handler+0xe>
			device_found                 = true;
			ble_dev_info[idx].conn_state = BLE_DEVICE_ENCRYPTION_STATE;
    27fc:	4a25      	ldr	r2, [pc, #148]	; (2894 <ble_encryption_request_handler+0xc4>)
    27fe:	0143      	lsls	r3, r0, #5
    2800:	1a18      	subs	r0, r3, r0
    2802:	0080      	lsls	r0, r0, #2
    2804:	1810      	adds	r0, r2, r0
    2806:	305e      	adds	r0, #94	; 0x5e
    2808:	2306      	movs	r3, #6
    280a:	7003      	strb	r3, [r0, #0]
	if (device_found) {
		DBG_LOG_DEV("host device ediv %x", ble_dev_info[idx].host_ltk.ediv);
		DBG_LOG_DEV("peer device ediv %x", ble_dev_info[idx].bond_info.peer_ltk.ediv);
		DBG_LOG_DEV("enc_req ediv %x", enc_req->ediv);
		DBG_LOG_DEV("The index is %d", idx);
		if ((ble_dev_info[idx].host_ltk.ediv == enc_req->ediv)
    280c:	0163      	lsls	r3, r4, #5
    280e:	1b1b      	subs	r3, r3, r4
    2810:	009b      	lsls	r3, r3, #2
    2812:	18d2      	adds	r2, r2, r3
    2814:	3270      	adds	r2, #112	; 0x70
    2816:	8812      	ldrh	r2, [r2, #0]
    2818:	8873      	ldrh	r3, [r6, #2]
    281a:	429a      	cmp	r2, r3
    281c:	d015      	beq.n	284a <ble_encryption_request_handler+0x7a>
			DBG_LOG_DEV("ENC-Req: Key Found");
		}
	}

	if (key_found == false) {
		DBG_LOG("Pairing information of peer device is not available.");
    281e:	4f1e      	ldr	r7, [pc, #120]	; (2898 <ble_encryption_request_handler+0xc8>)
    2820:	0038      	movs	r0, r7
    2822:	4e1e      	ldr	r6, [pc, #120]	; (289c <ble_encryption_request_handler+0xcc>)
    2824:	47b0      	blx	r6
    2826:	481e      	ldr	r0, [pc, #120]	; (28a0 <ble_encryption_request_handler+0xd0>)
    2828:	4d1e      	ldr	r5, [pc, #120]	; (28a4 <ble_encryption_request_handler+0xd4>)
    282a:	47a8      	blx	r5
		DBG_LOG("Please unpair the device from peer device(mobile) settings menu and start pairing again");
    282c:	0038      	movs	r0, r7
    282e:	47b0      	blx	r6
    2830:	481d      	ldr	r0, [pc, #116]	; (28a8 <ble_encryption_request_handler+0xd8>)
    2832:	47a8      	blx	r5
		at_ble_disconnect(ble_dev_info[idx].conn_info.handle, AT_BLE_AUTH_FAILURE);
    2834:	0163      	lsls	r3, r4, #5
    2836:	1b1c      	subs	r4, r3, r4
    2838:	00a4      	lsls	r4, r4, #2
    283a:	4b16      	ldr	r3, [pc, #88]	; (2894 <ble_encryption_request_handler+0xc4>)
    283c:	191c      	adds	r4, r3, r4
    283e:	8920      	ldrh	r0, [r4, #8]
    2840:	2105      	movs	r1, #5
    2842:	4b1a      	ldr	r3, [pc, #104]	; (28ac <ble_encryption_request_handler+0xdc>)
    2844:	4798      	blx	r3
		return AT_BLE_FAILURE;
    2846:	20e2      	movs	r0, #226	; 0xe2
		DBG_LOG("Encryption Request Reply Failed");
	} else {
		DBG_LOG_DEV("Encryption Request Reply");
	}
	return AT_BLE_SUCCESS;
}
    2848:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		    && !memcmp(&enc_req->nb[0], &ble_dev_info[idx].host_ltk.nb[0], 8)) {
    284a:	0161      	lsls	r1, r4, #5
    284c:	1b09      	subs	r1, r1, r4
    284e:	0089      	lsls	r1, r1, #2
    2850:	3172      	adds	r1, #114	; 0x72
    2852:	4b10      	ldr	r3, [pc, #64]	; (2894 <ble_encryption_request_handler+0xc4>)
    2854:	18c9      	adds	r1, r1, r3
    2856:	1d30      	adds	r0, r6, #4
    2858:	2208      	movs	r2, #8
    285a:	4b15      	ldr	r3, [pc, #84]	; (28b0 <ble_encryption_request_handler+0xe0>)
    285c:	4798      	blx	r3
	if (key_found == false) {
    285e:	2800      	cmp	r0, #0
    2860:	d1dd      	bne.n	281e <ble_encryption_request_handler+0x4e>
	if (!(at_ble_encryption_request_reply(
    2862:	0162      	lsls	r2, r4, #5
    2864:	1b13      	subs	r3, r2, r4
    2866:	009b      	lsls	r3, r3, #2
    2868:	3360      	adds	r3, #96	; 0x60
    286a:	490a      	ldr	r1, [pc, #40]	; (2894 <ble_encryption_request_handler+0xc4>)
    286c:	185b      	adds	r3, r3, r1
    286e:	1b14      	subs	r4, r2, r4
    2870:	00a4      	lsls	r4, r4, #2
    2872:	190c      	adds	r4, r1, r4
    2874:	7d21      	ldrb	r1, [r4, #20]
    2876:	8830      	ldrh	r0, [r6, #0]
    2878:	2201      	movs	r2, #1
    287a:	4c0e      	ldr	r4, [pc, #56]	; (28b4 <ble_encryption_request_handler+0xe4>)
    287c:	47a0      	blx	r4
    287e:	2800      	cmp	r0, #0
    2880:	d0e2      	beq.n	2848 <ble_encryption_request_handler+0x78>
		DBG_LOG("Encryption Request Reply Failed");
    2882:	4805      	ldr	r0, [pc, #20]	; (2898 <ble_encryption_request_handler+0xc8>)
    2884:	4b05      	ldr	r3, [pc, #20]	; (289c <ble_encryption_request_handler+0xcc>)
    2886:	4798      	blx	r3
    2888:	480b      	ldr	r0, [pc, #44]	; (28b8 <ble_encryption_request_handler+0xe8>)
    288a:	4b06      	ldr	r3, [pc, #24]	; (28a4 <ble_encryption_request_handler+0xd4>)
    288c:	4798      	blx	r3
	return AT_BLE_SUCCESS;
    288e:	2000      	movs	r0, #0
    2890:	e7da      	b.n	2848 <ble_encryption_request_handler+0x78>
    2892:	46c0      	nop			; (mov r8, r8)
    2894:	20000f90 	.word	0x20000f90
    2898:	00009f84 	.word	0x00009f84
    289c:	00008bad 	.word	0x00008bad
    28a0:	0000a644 	.word	0x0000a644
    28a4:	00008a91 	.word	0x00008a91
    28a8:	0000a67c 	.word	0x0000a67c
    28ac:	00004f7d 	.word	0x00004f7d
    28b0:	00008a51 	.word	0x00008a51
    28b4:	000069a1 	.word	0x000069a1
    28b8:	0000a6d4 	.word	0x0000a6d4

000028bc <ble_mgr_events_callback_handler>:
{
    28bc:	b530      	push	{r4, r5, lr}
	if (ble_event_handler != NULL) {
    28be:	2a00      	cmp	r2, #0
    28c0:	d043      	beq.n	294a <ble_mgr_events_callback_handler+0x8e>
		switch (event_type) {
    28c2:	2906      	cmp	r1, #6
    28c4:	d843      	bhi.n	294e <ble_mgr_events_callback_handler+0x92>
    28c6:	0089      	lsls	r1, r1, #2
    28c8:	4b25      	ldr	r3, [pc, #148]	; (2960 <ble_mgr_events_callback_handler+0xa4>)
    28ca:	585b      	ldr	r3, [r3, r1]
    28cc:	469f      	mov	pc, r3
			ble_event_cb_ptr  = ble_mgr_gatt_server_event_cb;
    28ce:	4c25      	ldr	r4, [pc, #148]	; (2964 <ble_mgr_events_callback_handler+0xa8>)
			max_event_handler = MAX_GATT_SERVER_SUBSCRIBERS;
    28d0:	2505      	movs	r5, #5
    28d2:	e00a      	b.n	28ea <ble_mgr_events_callback_handler+0x2e>
			ble_event_cb_ptr  = ble_mgr_htpt_event_cb;
    28d4:	4c24      	ldr	r4, [pc, #144]	; (2968 <ble_mgr_events_callback_handler+0xac>)
			max_event_handler = MAX_HTPT_EVENT_SUBSCRIBERS;
    28d6:	2501      	movs	r5, #1
		} break;
    28d8:	e007      	b.n	28ea <ble_mgr_events_callback_handler+0x2e>
			ble_event_cb_ptr  = ble_mgr_dtm_event_cb;
    28da:	4c24      	ldr	r4, [pc, #144]	; (296c <ble_mgr_events_callback_handler+0xb0>)
			max_event_handler = MAX_DTM_EVENT_SUBSCRIBERS;
    28dc:	2505      	movs	r5, #5
		} break;
    28de:	e004      	b.n	28ea <ble_mgr_events_callback_handler+0x2e>
			ble_event_cb_ptr  = ble_mgr_custom_event_cb;
    28e0:	4c23      	ldr	r4, [pc, #140]	; (2970 <ble_mgr_events_callback_handler+0xb4>)
			max_event_handler = MAX_CUSTOM_EVENT_SUBSCRIBERS;
    28e2:	2501      	movs	r5, #1
		} break;
    28e4:	e001      	b.n	28ea <ble_mgr_events_callback_handler+0x2e>
			ble_event_cb_ptr  = ble_mgr_gap_event_cb;
    28e6:	4c23      	ldr	r4, [pc, #140]	; (2974 <ble_mgr_events_callback_handler+0xb8>)
			max_event_handler = MAX_GAP_EVENT_SUBSCRIBERS;
    28e8:	2505      	movs	r5, #5
			if (event_cb_type == REGISTER_CALL_BACK) {
    28ea:	2800      	cmp	r0, #0
    28ec:	d113      	bne.n	2916 <ble_mgr_events_callback_handler+0x5a>
					if (ble_event_cb_ptr[idx] == NULL) {
    28ee:	6823      	ldr	r3, [r4, #0]
    28f0:	2b00      	cmp	r3, #0
    28f2:	d00b      	beq.n	290c <ble_mgr_events_callback_handler+0x50>
    28f4:	1d21      	adds	r1, r4, #4
    28f6:	2300      	movs	r3, #0
				for (idx = 0; idx < max_event_handler; idx++) {
    28f8:	3301      	adds	r3, #1
    28fa:	b2db      	uxtb	r3, r3
    28fc:	42ab      	cmp	r3, r5
    28fe:	d208      	bcs.n	2912 <ble_mgr_events_callback_handler+0x56>
					if (ble_event_cb_ptr[idx] == NULL) {
    2900:	000c      	movs	r4, r1
    2902:	3104      	adds	r1, #4
    2904:	1f08      	subs	r0, r1, #4
    2906:	6800      	ldr	r0, [r0, #0]
    2908:	2800      	cmp	r0, #0
    290a:	d1f5      	bne.n	28f8 <ble_mgr_events_callback_handler+0x3c>
						ble_event_cb_ptr[idx] = ble_event_handler;
    290c:	6022      	str	r2, [r4, #0]
						status = true; // Successfully registered to table
    290e:	2301      	movs	r3, #1
						break;
    2910:	e004      	b.n	291c <ble_mgr_events_callback_handler+0x60>
			status = false; // Defaults to Failure[No Space to register, Not Found, Invalid Type]scenario
    2912:	2300      	movs	r3, #0
    2914:	e002      	b.n	291c <ble_mgr_events_callback_handler+0x60>
    2916:	2300      	movs	r3, #0
			} else if (event_cb_type == UNREGISTER_CALL_BACK) {
    2918:	2801      	cmp	r0, #1
    291a:	d001      	beq.n	2920 <ble_mgr_events_callback_handler+0x64>
}
    291c:	0018      	movs	r0, r3
    291e:	bd30      	pop	{r4, r5, pc}
					if (ble_event_cb_ptr[idx] == ble_event_handler) {
    2920:	6823      	ldr	r3, [r4, #0]
    2922:	429a      	cmp	r2, r3
    2924:	d00b      	beq.n	293e <ble_mgr_events_callback_handler+0x82>
    2926:	1d21      	adds	r1, r4, #4
    2928:	2300      	movs	r3, #0
				for (idx = 0; idx < max_event_handler; idx++) {
    292a:	3301      	adds	r3, #1
    292c:	b2db      	uxtb	r3, r3
    292e:	42ab      	cmp	r3, r5
    2930:	d209      	bcs.n	2946 <ble_mgr_events_callback_handler+0x8a>
					if (ble_event_cb_ptr[idx] == ble_event_handler) {
    2932:	000c      	movs	r4, r1
    2934:	3104      	adds	r1, #4
    2936:	1f08      	subs	r0, r1, #4
    2938:	6800      	ldr	r0, [r0, #0]
    293a:	4282      	cmp	r2, r0
    293c:	d1f5      	bne.n	292a <ble_mgr_events_callback_handler+0x6e>
						ble_event_cb_ptr[idx] = NULL;
    293e:	2300      	movs	r3, #0
    2940:	6023      	str	r3, [r4, #0]
						status = true; // Successfully unregistered from table
    2942:	3301      	adds	r3, #1
						break;
    2944:	e7ea      	b.n	291c <ble_mgr_events_callback_handler+0x60>
			status = false; // Defaults to Failure[No Space to register, Not Found, Invalid Type]scenario
    2946:	2300      	movs	r3, #0
    2948:	e7e8      	b.n	291c <ble_mgr_events_callback_handler+0x60>
		status = false; // Invalid parameter
    294a:	2300      	movs	r3, #0
    294c:	e7e6      	b.n	291c <ble_mgr_events_callback_handler+0x60>
		switch (event_type) {
    294e:	2300      	movs	r3, #0
    2950:	e7e4      	b.n	291c <ble_mgr_events_callback_handler+0x60>
			ble_event_cb_ptr  = ble_mgr_gatt_client_event_cb;
    2952:	4c09      	ldr	r4, [pc, #36]	; (2978 <ble_mgr_events_callback_handler+0xbc>)
			max_event_handler = MAX_GATT_CLIENT_SUBSCRIBERS;
    2954:	2505      	movs	r5, #5
    2956:	e7c8      	b.n	28ea <ble_mgr_events_callback_handler+0x2e>
			ble_event_cb_ptr  = ble_mgr_l2cap_event_cb;
    2958:	4c08      	ldr	r4, [pc, #32]	; (297c <ble_mgr_events_callback_handler+0xc0>)
			max_event_handler = MAX_L2CAP_EVENT_SUBSCRIBERS;
    295a:	2501      	movs	r5, #1
    295c:	e7c5      	b.n	28ea <ble_mgr_events_callback_handler+0x2e>
    295e:	46c0      	nop			; (mov r8, r8)
    2960:	0000a1b0 	.word	0x0000a1b0
    2964:	20000f7c 	.word	0x20000f7c
    2968:	20000f78 	.word	0x20000f78
    296c:	20001200 	.word	0x20001200
    2970:	20001630 	.word	0x20001630
    2974:	20001214 	.word	0x20001214
    2978:	20001228 	.word	0x20001228
    297c:	20001284 	.word	0x20001284

00002980 <ble_device_init>:
{
    2980:	b5f0      	push	{r4, r5, r6, r7, lr}
    2982:	46c6      	mov	lr, r8
    2984:	b500      	push	{lr}
    2986:	b090      	sub	sp, #64	; 0x40
    2988:	0005      	movs	r5, r0
		ble_mgr_gap_event_cb[idx] = NULL;
    298a:	4a6e      	ldr	r2, [pc, #440]	; (2b44 <ble_device_init+0x1c4>)
    298c:	2300      	movs	r3, #0
    298e:	6013      	str	r3, [r2, #0]
    2990:	6053      	str	r3, [r2, #4]
    2992:	6093      	str	r3, [r2, #8]
    2994:	60d3      	str	r3, [r2, #12]
    2996:	6113      	str	r3, [r2, #16]
		ble_mgr_gatt_client_event_cb[idx] = NULL;
    2998:	4a6b      	ldr	r2, [pc, #428]	; (2b48 <ble_device_init+0x1c8>)
    299a:	6013      	str	r3, [r2, #0]
    299c:	6053      	str	r3, [r2, #4]
    299e:	6093      	str	r3, [r2, #8]
    29a0:	60d3      	str	r3, [r2, #12]
    29a2:	6113      	str	r3, [r2, #16]
		ble_mgr_gatt_server_event_cb[idx] = NULL;
    29a4:	4a69      	ldr	r2, [pc, #420]	; (2b4c <ble_device_init+0x1cc>)
    29a6:	6013      	str	r3, [r2, #0]
    29a8:	6053      	str	r3, [r2, #4]
    29aa:	6093      	str	r3, [r2, #8]
    29ac:	60d3      	str	r3, [r2, #12]
    29ae:	6113      	str	r3, [r2, #16]
		ble_mgr_l2cap_event_cb[idx] = NULL;
    29b0:	4a67      	ldr	r2, [pc, #412]	; (2b50 <ble_device_init+0x1d0>)
    29b2:	6013      	str	r3, [r2, #0]
		ble_mgr_htpt_event_cb[idx] = NULL;
    29b4:	4a67      	ldr	r2, [pc, #412]	; (2b54 <ble_device_init+0x1d4>)
    29b6:	6013      	str	r3, [r2, #0]
		ble_mgr_dtm_event_cb[idx] = NULL;
    29b8:	4a67      	ldr	r2, [pc, #412]	; (2b58 <ble_device_init+0x1d8>)
    29ba:	6013      	str	r3, [r2, #0]
    29bc:	6053      	str	r3, [r2, #4]
    29be:	6093      	str	r3, [r2, #8]
    29c0:	60d3      	str	r3, [r2, #12]
    29c2:	6113      	str	r3, [r2, #16]
		ble_mgr_custom_event_cb[idx] = NULL;
    29c4:	4a65      	ldr	r2, [pc, #404]	; (2b5c <ble_device_init+0x1dc>)
    29c6:	6013      	str	r3, [r2, #0]
    29c8:	4c65      	ldr	r4, [pc, #404]	; (2b60 <ble_device_init+0x1e0>)
    29ca:	239b      	movs	r3, #155	; 0x9b
    29cc:	009b      	lsls	r3, r3, #2
    29ce:	4698      	mov	r8, r3
    29d0:	44a0      	add	r8, r4
		memset(&ble_dev_info[idx], 0, sizeof(ble_connected_dev_info_t));
    29d2:	4f64      	ldr	r7, [pc, #400]	; (2b64 <ble_device_init+0x1e4>)
		ble_dev_info[idx].bond_info.status = AT_BLE_GAP_INVALID_PARAM;
    29d4:	2640      	movs	r6, #64	; 0x40
		memset(&ble_dev_info[idx], 0, sizeof(ble_connected_dev_info_t));
    29d6:	227c      	movs	r2, #124	; 0x7c
    29d8:	2100      	movs	r1, #0
    29da:	0020      	movs	r0, r4
    29dc:	47b8      	blx	r7
		ble_dev_info[idx].conn_state = BLE_DEVICE_DEFAULT_IDLE;
    29de:	0023      	movs	r3, r4
    29e0:	335e      	adds	r3, #94	; 0x5e
    29e2:	2200      	movs	r2, #0
    29e4:	701a      	strb	r2, [r3, #0]
		ble_dev_info[idx].bond_info.status = AT_BLE_GAP_INVALID_PARAM;
    29e6:	7626      	strb	r6, [r4, #24]
    29e8:	347c      	adds	r4, #124	; 0x7c
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    29ea:	45a0      	cmp	r8, r4
    29ec:	d1f3      	bne.n	29d6 <ble_device_init+0x56>
	ble_device_count = 0;
    29ee:	4b5e      	ldr	r3, [pc, #376]	; (2b68 <ble_device_init+0x1e8>)
    29f0:	701a      	strb	r2, [r3, #0]
	pf_cfg.memPool.memSize     = BLE_ATT_DB_MEMORY_SIZE;
    29f2:	4c5e      	ldr	r4, [pc, #376]	; (2b6c <ble_device_init+0x1ec>)
    29f4:	4b5e      	ldr	r3, [pc, #376]	; (2b70 <ble_device_init+0x1f0>)
    29f6:	6063      	str	r3, [r4, #4]
	pf_cfg.memPool.memStartAdd = (uint8_t *)&att_db_data;
    29f8:	4b5e      	ldr	r3, [pc, #376]	; (2b74 <ble_device_init+0x1f4>)
    29fa:	3304      	adds	r3, #4
    29fc:	6023      	str	r3, [r4, #0]
	pf_cfg.bus_info.bus_type = AT_BLE_UART;
    29fe:	2301      	movs	r3, #1
    2a00:	322c      	adds	r2, #44	; 0x2c
    2a02:	54a3      	strb	r3, [r4, r2]
	pf_cfg.bus_info.bus_flow_control_enabled = true; // enable flow control
    2a04:	3201      	adds	r2, #1
    2a06:	54a3      	strb	r3, [r4, r2]
	pf_cfg.platform_api_list.at_ble_create_timer      = platform_create_timer;
    2a08:	4b5b      	ldr	r3, [pc, #364]	; (2b78 <ble_device_init+0x1f8>)
    2a0a:	60a3      	str	r3, [r4, #8]
	pf_cfg.platform_api_list.at_ble_delete_timer      = platform_delete_timer;
    2a0c:	4b5b      	ldr	r3, [pc, #364]	; (2b7c <ble_device_init+0x1fc>)
    2a0e:	60e3      	str	r3, [r4, #12]
	pf_cfg.platform_api_list.at_ble_start_timer       = platform_start_timer;
    2a10:	4b5b      	ldr	r3, [pc, #364]	; (2b80 <ble_device_init+0x200>)
    2a12:	6123      	str	r3, [r4, #16]
	pf_cfg.platform_api_list.at_ble_stop_timer        = platform_stop_timer;
    2a14:	4b5b      	ldr	r3, [pc, #364]	; (2b84 <ble_device_init+0x204>)
    2a16:	6163      	str	r3, [r4, #20]
	pf_cfg.platform_api_list.at_ble_sleep             = platform_sleep;
    2a18:	4b5b      	ldr	r3, [pc, #364]	; (2b88 <ble_device_init+0x208>)
    2a1a:	61a3      	str	r3, [r4, #24]
	pf_cfg.platform_api_list.at_ble_gpio_set          = platform_gpio_set;
    2a1c:	4b5b      	ldr	r3, [pc, #364]	; (2b8c <ble_device_init+0x20c>)
    2a1e:	61e3      	str	r3, [r4, #28]
	pf_cfg.platform_api_list.at_ble_send_sync         = platform_send_sync;
    2a20:	4b5b      	ldr	r3, [pc, #364]	; (2b90 <ble_device_init+0x210>)
    2a22:	6223      	str	r3, [r4, #32]
	pf_cfg.platform_api_list.at_ble_recv_async        = platform_recv_async;
    2a24:	4b5b      	ldr	r3, [pc, #364]	; (2b94 <ble_device_init+0x214>)
    2a26:	6263      	str	r3, [r4, #36]	; 0x24
	pf_cfg.platform_api_list.at_ble_reconfigure_usart = platform_configure_hw_fc_uart;
    2a28:	4b5b      	ldr	r3, [pc, #364]	; (2b98 <ble_device_init+0x218>)
    2a2a:	62a3      	str	r3, [r4, #40]	; 0x28
	platform_init(pf_cfg.bus_info.bus_type, pf_cfg.bus_info.bus_flow_control_enabled);
    2a2c:	2101      	movs	r1, #1
    2a2e:	2001      	movs	r0, #1
    2a30:	4b5a      	ldr	r3, [pc, #360]	; (2b9c <ble_device_init+0x21c>)
    2a32:	4798      	blx	r3
	DBG_LOG("Initializing BTLC1000");
    2a34:	485a      	ldr	r0, [pc, #360]	; (2ba0 <ble_device_init+0x220>)
    2a36:	4b5b      	ldr	r3, [pc, #364]	; (2ba4 <ble_device_init+0x224>)
    2a38:	4798      	blx	r3
    2a3a:	485b      	ldr	r0, [pc, #364]	; (2ba8 <ble_device_init+0x228>)
    2a3c:	4b5b      	ldr	r3, [pc, #364]	; (2bac <ble_device_init+0x22c>)
    2a3e:	4798      	blx	r3
	if (at_ble_init(args) != AT_BLE_SUCCESS) {
    2a40:	0020      	movs	r0, r4
    2a42:	4b5b      	ldr	r3, [pc, #364]	; (2bb0 <ble_device_init+0x230>)
    2a44:	4798      	blx	r3
    2a46:	2800      	cmp	r0, #0
    2a48:	d162      	bne.n	2b10 <ble_device_init+0x190>
	ble_mgr_events_callback_handler(REGISTER_CALL_BACK, BLE_GAP_EVENT_TYPE, ble_mgr_gap_handle);
    2a4a:	4c5a      	ldr	r4, [pc, #360]	; (2bb4 <ble_device_init+0x234>)
    2a4c:	0022      	movs	r2, r4
    2a4e:	2100      	movs	r1, #0
    2a50:	2000      	movs	r0, #0
    2a52:	4e59      	ldr	r6, [pc, #356]	; (2bb8 <ble_device_init+0x238>)
    2a54:	47b0      	blx	r6
	ble_mgr_events_callback_handler(REGISTER_CALL_BACK, BLE_GATT_SERVER_EVENT_TYPE, ble_mgr_gatt_server_handle);
    2a56:	0022      	movs	r2, r4
    2a58:	324c      	adds	r2, #76	; 0x4c
    2a5a:	2102      	movs	r1, #2
    2a5c:	2000      	movs	r0, #0
    2a5e:	47b0      	blx	r6
	return at_ble_device_name_set(name, name_len);
    2a60:	2109      	movs	r1, #9
    2a62:	4856      	ldr	r0, [pc, #344]	; (2bbc <ble_device_init+0x23c>)
    2a64:	4b56      	ldr	r3, [pc, #344]	; (2bc0 <ble_device_init+0x240>)
    2a66:	4798      	blx	r3
	if (ble_set_device_name((uint8_t *)dev_name, strlen(dev_name)) != AT_BLE_SUCCESS) {
    2a68:	2800      	cmp	r0, #0
    2a6a:	d005      	beq.n	2a78 <ble_device_init+0xf8>
		DBG_LOG("Device name set failed");
    2a6c:	484c      	ldr	r0, [pc, #304]	; (2ba0 <ble_device_init+0x220>)
    2a6e:	4b4d      	ldr	r3, [pc, #308]	; (2ba4 <ble_device_init+0x224>)
    2a70:	4798      	blx	r3
    2a72:	4854      	ldr	r0, [pc, #336]	; (2bc4 <ble_device_init+0x244>)
    2a74:	4b4d      	ldr	r3, [pc, #308]	; (2bac <ble_device_init+0x22c>)
    2a76:	4798      	blx	r3
	at_ble_addr_t       address = {AT_BLE_ADDRESS_PUBLIC, {0xAB, 0xCD, 0xEF, 0xAB, 0xCD, 0xEF}};
    2a78:	ab04      	add	r3, sp, #16
    2a7a:	4953      	ldr	r1, [pc, #332]	; (2bc8 <ble_device_init+0x248>)
    2a7c:	000a      	movs	r2, r1
    2a7e:	6889      	ldr	r1, [r1, #8]
    2a80:	9104      	str	r1, [sp, #16]
    2a82:	8991      	ldrh	r1, [r2, #12]
    2a84:	3208      	adds	r2, #8
    2a86:	8099      	strh	r1, [r3, #4]
    2a88:	7992      	ldrb	r2, [r2, #6]
    2a8a:	719a      	strb	r2, [r3, #6]
	if (addr == NULL) {
    2a8c:	2d00      	cmp	r5, #0
    2a8e:	d04b      	beq.n	2b28 <ble_device_init+0x1a8>
	DBG_LOG("BD Address:0x%02X%02X%02X%02X%02X%02X, Address Type:%d",
    2a90:	4843      	ldr	r0, [pc, #268]	; (2ba0 <ble_device_init+0x220>)
    2a92:	4b44      	ldr	r3, [pc, #272]	; (2ba4 <ble_device_init+0x224>)
    2a94:	4798      	blx	r3
    2a96:	792b      	ldrb	r3, [r5, #4]
    2a98:	796a      	ldrb	r2, [r5, #5]
    2a9a:	79a9      	ldrb	r1, [r5, #6]
    2a9c:	7828      	ldrb	r0, [r5, #0]
    2a9e:	9003      	str	r0, [sp, #12]
    2aa0:	7868      	ldrb	r0, [r5, #1]
    2aa2:	9002      	str	r0, [sp, #8]
    2aa4:	78a8      	ldrb	r0, [r5, #2]
    2aa6:	9001      	str	r0, [sp, #4]
    2aa8:	78e8      	ldrb	r0, [r5, #3]
    2aaa:	9000      	str	r0, [sp, #0]
    2aac:	4847      	ldr	r0, [pc, #284]	; (2bcc <ble_device_init+0x24c>)
    2aae:	4c3f      	ldr	r4, [pc, #252]	; (2bac <ble_device_init+0x22c>)
    2ab0:	47a0      	blx	r4
	stDevConfig.role = (at_ble_dev_role_t)BLE_DEVICE_ROLE;
    2ab2:	ac06      	add	r4, sp, #24
    2ab4:	230a      	movs	r3, #10
    2ab6:	7023      	strb	r3, [r4, #0]
	stDevConfig.renew_dur = AT_RENEW_DUR_VAL_MIN;
    2ab8:	4b45      	ldr	r3, [pc, #276]	; (2bd0 <ble_device_init+0x250>)
    2aba:	8063      	strh	r3, [r4, #2]
	memcpy((uint8_t *)&stDevConfig.address, (uint8_t *)addr, sizeof(at_ble_addr_t));
    2abc:	2207      	movs	r2, #7
    2abe:	0029      	movs	r1, r5
    2ac0:	a807      	add	r0, sp, #28
    2ac2:	4b44      	ldr	r3, [pc, #272]	; (2bd4 <ble_device_init+0x254>)
    2ac4:	4798      	blx	r3
	stDevConfig.att_cfg.b2NamePerm             = AT_BLE_WRITE_DISABLE;
    2ac6:	2300      	movs	r3, #0
    2ac8:	76e3      	strb	r3, [r4, #27]
	stDevConfig.att_cfg.b2AppearancePerm       = AT_BLE_WRITE_DISABLE;
    2aca:	7723      	strb	r3, [r4, #28]
	stDevConfig.att_cfg.b1EnableSpcs           = 0;
    2acc:	7763      	strb	r3, [r4, #29]
	stDevConfig.att_cfg.b1EnableServiceChanged = 0;
    2ace:	77a3      	strb	r3, [r4, #30]
	stDevConfig.att_cfg.b2Rfu                  = AT_BLE_WRITE_DISABLE;
    2ad0:	77e3      	strb	r3, [r4, #31]
	stDevConfig.gap_start_hdl  = AT_BLE_AUTO_ALLOC_HANDLE;
    2ad2:	8423      	strh	r3, [r4, #32]
	stDevConfig.gatt_start_hdl = AT_BLE_AUTO_ALLOC_HANDLE;
    2ad4:	8463      	strh	r3, [r4, #34]	; 0x22
	stDevConfig.max_mtu = AT_MTU_VAL_RECOMMENDED;
    2ad6:	2380      	movs	r3, #128	; 0x80
    2ad8:	009b      	lsls	r3, r3, #2
    2ada:	84a3      	strh	r3, [r4, #36]	; 0x24
	if (at_ble_set_dev_config(&stDevConfig) != AT_BLE_SUCCESS) {
    2adc:	0020      	movs	r0, r4
    2ade:	4b3e      	ldr	r3, [pc, #248]	; (2bd8 <ble_device_init+0x258>)
    2ae0:	4798      	blx	r3
    2ae2:	2800      	cmp	r0, #0
    2ae4:	d005      	beq.n	2af2 <ble_device_init+0x172>
		DBG_LOG("Set BLE Device configuration failed");
    2ae6:	482e      	ldr	r0, [pc, #184]	; (2ba0 <ble_device_init+0x220>)
    2ae8:	4b2e      	ldr	r3, [pc, #184]	; (2ba4 <ble_device_init+0x224>)
    2aea:	4798      	blx	r3
    2aec:	483b      	ldr	r0, [pc, #236]	; (2bdc <ble_device_init+0x25c>)
    2aee:	4b2f      	ldr	r3, [pc, #188]	; (2bac <ble_device_init+0x22c>)
    2af0:	4798      	blx	r3
	if (at_ble_addr_set(addr) != AT_BLE_SUCCESS) {
    2af2:	0028      	movs	r0, r5
    2af4:	4b3a      	ldr	r3, [pc, #232]	; (2be0 <ble_device_init+0x260>)
    2af6:	4798      	blx	r3
    2af8:	2800      	cmp	r0, #0
    2afa:	d005      	beq.n	2b08 <ble_device_init+0x188>
		DBG_LOG("Set BLE Device Address failed");
    2afc:	4828      	ldr	r0, [pc, #160]	; (2ba0 <ble_device_init+0x220>)
    2afe:	4b29      	ldr	r3, [pc, #164]	; (2ba4 <ble_device_init+0x224>)
    2b00:	4798      	blx	r3
    2b02:	4838      	ldr	r0, [pc, #224]	; (2be4 <ble_device_init+0x264>)
    2b04:	4b29      	ldr	r3, [pc, #164]	; (2bac <ble_device_init+0x22c>)
    2b06:	4798      	blx	r3
}
    2b08:	b010      	add	sp, #64	; 0x40
    2b0a:	bc04      	pop	{r2}
    2b0c:	4690      	mov	r8, r2
    2b0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
		DBG_LOG("BTLC1000 Initialization failed");
    2b10:	4e23      	ldr	r6, [pc, #140]	; (2ba0 <ble_device_init+0x220>)
    2b12:	0030      	movs	r0, r6
    2b14:	4d23      	ldr	r5, [pc, #140]	; (2ba4 <ble_device_init+0x224>)
    2b16:	47a8      	blx	r5
    2b18:	4833      	ldr	r0, [pc, #204]	; (2be8 <ble_device_init+0x268>)
    2b1a:	4c24      	ldr	r4, [pc, #144]	; (2bac <ble_device_init+0x22c>)
    2b1c:	47a0      	blx	r4
		DBG_LOG("Please check the power and connection / hardware connector");
    2b1e:	0030      	movs	r0, r6
    2b20:	47a8      	blx	r5
    2b22:	4832      	ldr	r0, [pc, #200]	; (2bec <ble_device_init+0x26c>)
    2b24:	47a0      	blx	r4
    2b26:	e7fe      	b.n	2b26 <ble_device_init+0x1a6>
		if (at_ble_addr_get(&address) != AT_BLE_SUCCESS) {
    2b28:	0018      	movs	r0, r3
    2b2a:	4b31      	ldr	r3, [pc, #196]	; (2bf0 <ble_device_init+0x270>)
    2b2c:	4798      	blx	r3
		addr = &address;
    2b2e:	ad04      	add	r5, sp, #16
		if (at_ble_addr_get(&address) != AT_BLE_SUCCESS) {
    2b30:	2800      	cmp	r0, #0
    2b32:	d0ad      	beq.n	2a90 <ble_device_init+0x110>
			DBG_LOG("BD address get failed");
    2b34:	481a      	ldr	r0, [pc, #104]	; (2ba0 <ble_device_init+0x220>)
    2b36:	4b1b      	ldr	r3, [pc, #108]	; (2ba4 <ble_device_init+0x224>)
    2b38:	4798      	blx	r3
    2b3a:	482e      	ldr	r0, [pc, #184]	; (2bf4 <ble_device_init+0x274>)
    2b3c:	4b1b      	ldr	r3, [pc, #108]	; (2bac <ble_device_init+0x22c>)
    2b3e:	4798      	blx	r3
		addr = &address;
    2b40:	ad04      	add	r5, sp, #16
    2b42:	e7a5      	b.n	2a90 <ble_device_init+0x110>
    2b44:	20001214 	.word	0x20001214
    2b48:	20001228 	.word	0x20001228
    2b4c:	20000f7c 	.word	0x20000f7c
    2b50:	20001284 	.word	0x20001284
    2b54:	20000f78 	.word	0x20000f78
    2b58:	20001200 	.word	0x20001200
    2b5c:	20001630 	.word	0x20001630
    2b60:	20000f90 	.word	0x20000f90
    2b64:	00008a81 	.word	0x00008a81
    2b68:	200011fc 	.word	0x200011fc
    2b6c:	20001250 	.word	0x20001250
    2b70:	000004e2 	.word	0x000004e2
    2b74:	20000144 	.word	0x20000144
    2b78:	00004259 	.word	0x00004259
    2b7c:	0000426d 	.word	0x0000426d
    2b80:	00004279 	.word	0x00004279
    2b84:	00004299 	.word	0x00004299
    2b88:	000042b5 	.word	0x000042b5
    2b8c:	000041a5 	.word	0x000041a5
    2b90:	00004189 	.word	0x00004189
    2b94:	000041e1 	.word	0x000041e1
    2b98:	0000424d 	.word	0x0000424d
    2b9c:	00004161 	.word	0x00004161
    2ba0:	00009f84 	.word	0x00009f84
    2ba4:	00008bad 	.word	0x00008bad
    2ba8:	0000a6f4 	.word	0x0000a6f4
    2bac:	00008a91 	.word	0x00008a91
    2bb0:	00004be1 	.word	0x00004be1
    2bb4:	0000a2b8 	.word	0x0000a2b8
    2bb8:	000028bd 	.word	0x000028bd
    2bbc:	0000a768 	.word	0x0000a768
    2bc0:	00004a5d 	.word	0x00004a5d
    2bc4:	0000a774 	.word	0x0000a774
    2bc8:	0000a33c 	.word	0x0000a33c
    2bcc:	0000a7a4 	.word	0x0000a7a4
    2bd0:	00003a98 	.word	0x00003a98
    2bd4:	00008a6f 	.word	0x00008a6f
    2bd8:	00004add 	.word	0x00004add
    2bdc:	0000a7dc 	.word	0x0000a7dc
    2be0:	00004d49 	.word	0x00004d49
    2be4:	0000a800 	.word	0x0000a800
    2be8:	0000a70c 	.word	0x0000a70c
    2bec:	0000a72c 	.word	0x0000a72c
    2bf0:	00004ab9 	.word	0x00004ab9
    2bf4:	0000a78c 	.word	0x0000a78c

00002bf8 <ble_send_slave_sec_request>:
{
    2bf8:	b510      	push	{r4, lr}
	if (at_ble_send_slave_sec_request(conn_handle, BLE_MITM_REQ, BLE_BOND_REQ) == AT_BLE_SUCCESS) {
    2bfa:	2201      	movs	r2, #1
    2bfc:	2101      	movs	r1, #1
    2bfe:	4b06      	ldr	r3, [pc, #24]	; (2c18 <ble_send_slave_sec_request+0x20>)
    2c00:	4798      	blx	r3
    2c02:	2800      	cmp	r0, #0
    2c04:	d100      	bne.n	2c08 <ble_send_slave_sec_request+0x10>
}
    2c06:	bd10      	pop	{r4, pc}
		DBG_LOG("Slave security request failed");
    2c08:	4804      	ldr	r0, [pc, #16]	; (2c1c <ble_send_slave_sec_request+0x24>)
    2c0a:	4b05      	ldr	r3, [pc, #20]	; (2c20 <ble_send_slave_sec_request+0x28>)
    2c0c:	4798      	blx	r3
    2c0e:	4805      	ldr	r0, [pc, #20]	; (2c24 <ble_send_slave_sec_request+0x2c>)
    2c10:	4b05      	ldr	r3, [pc, #20]	; (2c28 <ble_send_slave_sec_request+0x30>)
    2c12:	4798      	blx	r3
	return AT_BLE_FAILURE;
    2c14:	20e2      	movs	r0, #226	; 0xe2
    2c16:	e7f6      	b.n	2c06 <ble_send_slave_sec_request+0xe>
    2c18:	00006859 	.word	0x00006859
    2c1c:	00009f84 	.word	0x00009f84
    2c20:	00008bad 	.word	0x00008bad
    2c24:	0000a83c 	.word	0x0000a83c
    2c28:	00008a91 	.word	0x00008a91

00002c2c <ble_connected_state_handler>:
{
    2c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c2e:	46de      	mov	lr, fp
    2c30:	464f      	mov	r7, r9
    2c32:	4646      	mov	r6, r8
    2c34:	b5c0      	push	{r6, r7, lr}
    2c36:	b09a      	sub	sp, #104	; 0x68
    2c38:	0005      	movs	r5, r0
	if (conn_params->conn_status == AT_BLE_SUCCESS) {
    2c3a:	7a83      	ldrb	r3, [r0, #10]
    2c3c:	4699      	mov	r9, r3
    2c3e:	2b00      	cmp	r3, #0
    2c40:	d000      	beq.n	2c44 <ble_connected_state_handler+0x18>
    2c42:	e0cf      	b.n	2de4 <ble_connected_state_handler+0x1b8>
		DBG_LOG("Connected to peer device with address 0x%02x%02x%02x%02x%02x%02x",
    2c44:	4e6f      	ldr	r6, [pc, #444]	; (2e04 <ble_connected_state_handler+0x1d8>)
    2c46:	0030      	movs	r0, r6
    2c48:	4f6f      	ldr	r7, [pc, #444]	; (2e08 <ble_connected_state_handler+0x1dc>)
    2c4a:	47b8      	blx	r7
    2c4c:	792b      	ldrb	r3, [r5, #4]
    2c4e:	796a      	ldrb	r2, [r5, #5]
    2c50:	79a9      	ldrb	r1, [r5, #6]
    2c52:	7868      	ldrb	r0, [r5, #1]
    2c54:	9002      	str	r0, [sp, #8]
    2c56:	78a8      	ldrb	r0, [r5, #2]
    2c58:	9001      	str	r0, [sp, #4]
    2c5a:	78e8      	ldrb	r0, [r5, #3]
    2c5c:	9000      	str	r0, [sp, #0]
    2c5e:	486b      	ldr	r0, [pc, #428]	; (2e0c <ble_connected_state_handler+0x1e0>)
    2c60:	4c6b      	ldr	r4, [pc, #428]	; (2e10 <ble_connected_state_handler+0x1e4>)
    2c62:	47a0      	blx	r4
		DBG_LOG("Connection Handle %d", conn_params->handle);
    2c64:	0030      	movs	r0, r6
    2c66:	47b8      	blx	r7
    2c68:	8929      	ldrh	r1, [r5, #8]
    2c6a:	486a      	ldr	r0, [pc, #424]	; (2e14 <ble_connected_state_handler+0x1e8>)
    2c6c:	47a0      	blx	r4
		memcpy((uint8_t *)&connected_state_info, (uint8_t *)conn_params, sizeof(at_ble_connected_t));
    2c6e:	2212      	movs	r2, #18
    2c70:	0029      	movs	r1, r5
    2c72:	4869      	ldr	r0, [pc, #420]	; (2e18 <ble_connected_state_handler+0x1ec>)
    2c74:	4b69      	ldr	r3, [pc, #420]	; (2e1c <ble_connected_state_handler+0x1f0>)
    2c76:	4798      	blx	r3
		if (memcmp((uint8_t *)&ble_peripheral_dev_address, (uint8_t *)&conn_params->peer_addr, sizeof(at_ble_addr_t))) {
    2c78:	9504      	str	r5, [sp, #16]
    2c7a:	2207      	movs	r2, #7
    2c7c:	0029      	movs	r1, r5
    2c7e:	4868      	ldr	r0, [pc, #416]	; (2e20 <ble_connected_state_handler+0x1f4>)
    2c80:	3064      	adds	r0, #100	; 0x64
    2c82:	4b68      	ldr	r3, [pc, #416]	; (2e24 <ble_connected_state_handler+0x1f8>)
    2c84:	4798      	blx	r3
    2c86:	2800      	cmp	r0, #0
    2c88:	d002      	beq.n	2c90 <ble_connected_state_handler+0x64>
			if (conn_params->peer_addr.type == AT_BLE_ADDRESS_RANDOM_PRIVATE_RESOLVABLE) {
    2c8a:	782b      	ldrb	r3, [r5, #0]
    2c8c:	2b02      	cmp	r3, #2
    2c8e:	d03b      	beq.n	2d08 <ble_connected_state_handler+0xdc>
    2c90:	4e65      	ldr	r6, [pc, #404]	; (2e28 <ble_connected_state_handler+0x1fc>)
						return AT_BLE_FAILURE;
    2c92:	2400      	movs	r4, #0
				if (!memcmp((uint8_t *)&ble_dev_info[idx].conn_info.peer_addr,
    2c94:	4b63      	ldr	r3, [pc, #396]	; (2e24 <ble_connected_state_handler+0x1f8>)
    2c96:	469b      	mov	fp, r3
    2c98:	b2e7      	uxtb	r7, r4
    2c9a:	9405      	str	r4, [sp, #20]
    2c9c:	2207      	movs	r2, #7
    2c9e:	9904      	ldr	r1, [sp, #16]
    2ca0:	0030      	movs	r0, r6
    2ca2:	47d8      	blx	fp
    2ca4:	2800      	cmp	r0, #0
    2ca6:	d058      	beq.n	2d5a <ble_connected_state_handler+0x12e>
    2ca8:	3401      	adds	r4, #1
    2caa:	367c      	adds	r6, #124	; 0x7c
			for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    2cac:	2c05      	cmp	r4, #5
    2cae:	d1f3      	bne.n	2c98 <ble_connected_state_handler+0x6c>
				if (ble_device_count == BLE_MAX_DEVICE_CONNECTED) {
    2cb0:	4b5e      	ldr	r3, [pc, #376]	; (2e2c <ble_connected_state_handler+0x200>)
    2cb2:	781b      	ldrb	r3, [r3, #0]
    2cb4:	2b05      	cmp	r3, #5
    2cb6:	d05a      	beq.n	2d6e <ble_connected_state_handler+0x142>
					if (ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE) {
    2cb8:	235e      	movs	r3, #94	; 0x5e
    2cba:	4a5b      	ldr	r2, [pc, #364]	; (2e28 <ble_connected_state_handler+0x1fc>)
    2cbc:	5cd3      	ldrb	r3, [r2, r3]
    2cbe:	2b00      	cmp	r3, #0
    2cc0:	d065      	beq.n	2d8e <ble_connected_state_handler+0x162>
    2cc2:	4a5b      	ldr	r2, [pc, #364]	; (2e30 <ble_connected_state_handler+0x204>)
    2cc4:	2301      	movs	r3, #1
				for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    2cc6:	2701      	movs	r7, #1
					if (ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE) {
    2cc8:	001c      	movs	r4, r3
    2cca:	7811      	ldrb	r1, [r2, #0]
    2ccc:	2900      	cmp	r1, #0
    2cce:	d060      	beq.n	2d92 <ble_connected_state_handler+0x166>
				for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    2cd0:	3701      	adds	r7, #1
    2cd2:	b2ff      	uxtb	r7, r7
    2cd4:	3301      	adds	r3, #1
    2cd6:	327c      	adds	r2, #124	; 0x7c
    2cd8:	2f05      	cmp	r7, #5
    2cda:	d1f5      	bne.n	2cc8 <ble_connected_state_handler+0x9c>
			if (!memcmp((uint8_t *)&ble_peripheral_dev_address,
    2cdc:	2207      	movs	r2, #7
    2cde:	0029      	movs	r1, r5
    2ce0:	484f      	ldr	r0, [pc, #316]	; (2e20 <ble_connected_state_handler+0x1f4>)
    2ce2:	3064      	adds	r0, #100	; 0x64
    2ce4:	4b4f      	ldr	r3, [pc, #316]	; (2e24 <ble_connected_state_handler+0x1f8>)
    2ce6:	4798      	blx	r3
    2ce8:	2800      	cmp	r0, #0
    2cea:	d16a      	bne.n	2dc2 <ble_connected_state_handler+0x196>
				ble_dev_info[idx].dev_role = AT_BLE_ROLE_CENTRAL;
    2cec:	017b      	lsls	r3, r7, #5
    2cee:	1bdb      	subs	r3, r3, r7
    2cf0:	009b      	lsls	r3, r3, #2
    2cf2:	4a4d      	ldr	r2, [pc, #308]	; (2e28 <ble_connected_state_handler+0x1fc>)
    2cf4:	18d3      	adds	r3, r2, r3
    2cf6:	2205      	movs	r2, #5
    2cf8:	749a      	strb	r2, [r3, #18]
			memset((uint8_t *)&ble_peripheral_dev_address, 0, sizeof(at_ble_addr_t));
    2cfa:	3202      	adds	r2, #2
    2cfc:	2100      	movs	r1, #0
    2cfe:	4848      	ldr	r0, [pc, #288]	; (2e20 <ble_connected_state_handler+0x1f4>)
    2d00:	3064      	adds	r0, #100	; 0x64
    2d02:	4b4c      	ldr	r3, [pc, #304]	; (2e34 <ble_connected_state_handler+0x208>)
    2d04:	4798      	blx	r3
    2d06:	e076      	b.n	2df6 <ble_connected_state_handler+0x1ca>
				uint8_t  irk_key[BLE_MAX_DEVICE_CONNECTED * AT_BLE_MAX_KEY_LEN] = {
    2d08:	2250      	movs	r2, #80	; 0x50
    2d0a:	2100      	movs	r1, #0
    2d0c:	a806      	add	r0, sp, #24
    2d0e:	4b49      	ldr	r3, [pc, #292]	; (2e34 <ble_connected_state_handler+0x208>)
    2d10:	4798      	blx	r3
    2d12:	4f49      	ldr	r7, [pc, #292]	; (2e38 <ble_connected_state_handler+0x20c>)
				uint16_t key_len                                                = 0;
    2d14:	2300      	movs	r3, #0
						irk_key[key_len++] = ble_dev_info[idx1].bond_info.peer_irk.key[idx2];
    2d16:	ae06      	add	r6, sp, #24
    2d18:	001c      	movs	r4, r3
    2d1a:	3410      	adds	r4, #16
    2d1c:	b2a4      	uxth	r4, r4
{
    2d1e:	0039      	movs	r1, r7
    2d20:	001a      	movs	r2, r3
						irk_key[key_len++] = ble_dev_info[idx1].bond_info.peer_irk.key[idx2];
    2d22:	1c53      	adds	r3, r2, #1
    2d24:	b29b      	uxth	r3, r3
    2d26:	7808      	ldrb	r0, [r1, #0]
    2d28:	54b0      	strb	r0, [r6, r2]
    2d2a:	3101      	adds	r1, #1
    2d2c:	001a      	movs	r2, r3
					for (idx2 = 0; idx2 < AT_BLE_MAX_KEY_LEN; idx2++) {
    2d2e:	42a3      	cmp	r3, r4
    2d30:	d1f7      	bne.n	2d22 <ble_connected_state_handler+0xf6>
    2d32:	377c      	adds	r7, #124	; 0x7c
				for (idx1 = 0; idx1 < BLE_MAX_DEVICE_CONNECTED; idx1++) {
    2d34:	2b50      	cmp	r3, #80	; 0x50
    2d36:	d1ef      	bne.n	2d18 <ble_connected_state_handler+0xec>
					if (at_ble_random_address_resolve(BLE_MAX_DEVICE_CONNECTED, &conn_params->peer_addr, irk_key)
    2d38:	aa06      	add	r2, sp, #24
    2d3a:	0029      	movs	r1, r5
    2d3c:	2005      	movs	r0, #5
    2d3e:	4b3f      	ldr	r3, [pc, #252]	; (2e3c <ble_connected_state_handler+0x210>)
    2d40:	4798      	blx	r3
    2d42:	4681      	mov	r9, r0
    2d44:	2800      	cmp	r0, #0
    2d46:	d056      	beq.n	2df6 <ble_connected_state_handler+0x1ca>
						DBG_LOG("Resolving Random address failed**");
    2d48:	482e      	ldr	r0, [pc, #184]	; (2e04 <ble_connected_state_handler+0x1d8>)
    2d4a:	4b2f      	ldr	r3, [pc, #188]	; (2e08 <ble_connected_state_handler+0x1dc>)
    2d4c:	4798      	blx	r3
    2d4e:	483c      	ldr	r0, [pc, #240]	; (2e40 <ble_connected_state_handler+0x214>)
    2d50:	4b2f      	ldr	r3, [pc, #188]	; (2e10 <ble_connected_state_handler+0x1e4>)
    2d52:	4798      	blx	r3
						return AT_BLE_FAILURE;
    2d54:	23e2      	movs	r3, #226	; 0xe2
    2d56:	4699      	mov	r9, r3
    2d58:	e04d      	b.n	2df6 <ble_connected_state_handler+0x1ca>
					ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
    2d5a:	9b05      	ldr	r3, [sp, #20]
    2d5c:	015a      	lsls	r2, r3, #5
    2d5e:	1ad2      	subs	r2, r2, r3
    2d60:	0092      	lsls	r2, r2, #2
    2d62:	4b31      	ldr	r3, [pc, #196]	; (2e28 <ble_connected_state_handler+0x1fc>)
    2d64:	189b      	adds	r3, r3, r2
    2d66:	335e      	adds	r3, #94	; 0x5e
    2d68:	2202      	movs	r2, #2
    2d6a:	701a      	strb	r2, [r3, #0]
    2d6c:	e7b6      	b.n	2cdc <ble_connected_state_handler+0xb0>
					DBG_LOG("Max number of connection reached: %d ===>Disconnecting...", ble_device_count);
    2d6e:	4825      	ldr	r0, [pc, #148]	; (2e04 <ble_connected_state_handler+0x1d8>)
    2d70:	4b25      	ldr	r3, [pc, #148]	; (2e08 <ble_connected_state_handler+0x1dc>)
    2d72:	4798      	blx	r3
    2d74:	4b2d      	ldr	r3, [pc, #180]	; (2e2c <ble_connected_state_handler+0x200>)
    2d76:	7819      	ldrb	r1, [r3, #0]
    2d78:	b2c9      	uxtb	r1, r1
    2d7a:	4832      	ldr	r0, [pc, #200]	; (2e44 <ble_connected_state_handler+0x218>)
    2d7c:	4b24      	ldr	r3, [pc, #144]	; (2e10 <ble_connected_state_handler+0x1e4>)
    2d7e:	4798      	blx	r3
					at_ble_disconnect(conn_params->handle, AT_BLE_TERMINATED_BY_USER);
    2d80:	8928      	ldrh	r0, [r5, #8]
    2d82:	2113      	movs	r1, #19
    2d84:	4b30      	ldr	r3, [pc, #192]	; (2e48 <ble_connected_state_handler+0x21c>)
    2d86:	4798      	blx	r3
					return AT_BLE_FAILURE;
    2d88:	23e2      	movs	r3, #226	; 0xe2
    2d8a:	4699      	mov	r9, r3
    2d8c:	e033      	b.n	2df6 <ble_connected_state_handler+0x1ca>
					if (ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE) {
    2d8e:	2400      	movs	r4, #0
    2d90:	2700      	movs	r7, #0
						memcpy(&ble_dev_info[idx].conn_info, (uint8_t *)conn_params, sizeof(at_ble_connected_t));
    2d92:	0163      	lsls	r3, r4, #5
    2d94:	4698      	mov	r8, r3
    2d96:	1b18      	subs	r0, r3, r4
    2d98:	0080      	lsls	r0, r0, #2
    2d9a:	4e23      	ldr	r6, [pc, #140]	; (2e28 <ble_connected_state_handler+0x1fc>)
    2d9c:	1980      	adds	r0, r0, r6
    2d9e:	2212      	movs	r2, #18
    2da0:	0029      	movs	r1, r5
    2da2:	4b1e      	ldr	r3, [pc, #120]	; (2e1c <ble_connected_state_handler+0x1f0>)
    2da4:	4798      	blx	r3
						ble_device_count++;
    2da6:	4a21      	ldr	r2, [pc, #132]	; (2e2c <ble_connected_state_handler+0x200>)
    2da8:	7813      	ldrb	r3, [r2, #0]
    2daa:	3301      	adds	r3, #1
    2dac:	b2db      	uxtb	r3, r3
    2dae:	7013      	strb	r3, [r2, #0]
						ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
    2db0:	4643      	mov	r3, r8
    2db2:	1b1c      	subs	r4, r3, r4
    2db4:	00a4      	lsls	r4, r4, #2
    2db6:	1933      	adds	r3, r6, r4
    2db8:	335e      	adds	r3, #94	; 0x5e
    2dba:	001a      	movs	r2, r3
    2dbc:	2302      	movs	r3, #2
    2dbe:	7013      	strb	r3, [r2, #0]
						break;
    2dc0:	e78c      	b.n	2cdc <ble_connected_state_handler+0xb0>
				ble_dev_info[idx].dev_role = AT_BLE_ROLE_PERIPHERAL;
    2dc2:	017b      	lsls	r3, r7, #5
    2dc4:	1bdb      	subs	r3, r3, r7
    2dc6:	009b      	lsls	r3, r3, #2
    2dc8:	4a17      	ldr	r2, [pc, #92]	; (2e28 <ble_connected_state_handler+0x1fc>)
    2dca:	18d3      	adds	r3, r2, r3
    2dcc:	220a      	movs	r2, #10
    2dce:	749a      	strb	r2, [r3, #18]
			memset((uint8_t *)&ble_peripheral_dev_address, 0, sizeof(at_ble_addr_t));
    2dd0:	3a03      	subs	r2, #3
    2dd2:	2100      	movs	r1, #0
    2dd4:	4812      	ldr	r0, [pc, #72]	; (2e20 <ble_connected_state_handler+0x1f4>)
    2dd6:	3064      	adds	r0, #100	; 0x64
    2dd8:	4b16      	ldr	r3, [pc, #88]	; (2e34 <ble_connected_state_handler+0x208>)
    2dda:	4798      	blx	r3
			ble_send_slave_sec_request(conn_params->handle);
    2ddc:	8928      	ldrh	r0, [r5, #8]
    2dde:	4b1b      	ldr	r3, [pc, #108]	; (2e4c <ble_connected_state_handler+0x220>)
    2de0:	4798      	blx	r3
    2de2:	e008      	b.n	2df6 <ble_connected_state_handler+0x1ca>
		DBG_LOG("Device Connection Failed - Status: %d", conn_params->conn_status);
    2de4:	4807      	ldr	r0, [pc, #28]	; (2e04 <ble_connected_state_handler+0x1d8>)
    2de6:	4b08      	ldr	r3, [pc, #32]	; (2e08 <ble_connected_state_handler+0x1dc>)
    2de8:	4798      	blx	r3
    2dea:	7aa9      	ldrb	r1, [r5, #10]
    2dec:	4818      	ldr	r0, [pc, #96]	; (2e50 <ble_connected_state_handler+0x224>)
    2dee:	4b08      	ldr	r3, [pc, #32]	; (2e10 <ble_connected_state_handler+0x1e4>)
    2df0:	4798      	blx	r3
	return AT_BLE_SUCCESS;
    2df2:	2300      	movs	r3, #0
    2df4:	4699      	mov	r9, r3
}
    2df6:	4648      	mov	r0, r9
    2df8:	b01a      	add	sp, #104	; 0x68
    2dfa:	bc1c      	pop	{r2, r3, r4}
    2dfc:	4690      	mov	r8, r2
    2dfe:	4699      	mov	r9, r3
    2e00:	46a3      	mov	fp, r4
    2e02:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e04:	00009f84 	.word	0x00009f84
    2e08:	00008bad 	.word	0x00008bad
    2e0c:	0000a85c 	.word	0x0000a85c
    2e10:	00008a91 	.word	0x00008a91
    2e14:	0000a8a0 	.word	0x0000a8a0
    2e18:	2000123c 	.word	0x2000123c
    2e1c:	00008a6f 	.word	0x00008a6f
    2e20:	200005c4 	.word	0x200005c4
    2e24:	00008a51 	.word	0x00008a51
    2e28:	20000f90 	.word	0x20000f90
    2e2c:	200011fc 	.word	0x200011fc
    2e30:	2000106a 	.word	0x2000106a
    2e34:	00008a81 	.word	0x00008a81
    2e38:	20000fd6 	.word	0x20000fd6
    2e3c:	00004fdd 	.word	0x00004fdd
    2e40:	0000a8b8 	.word	0x0000a8b8
    2e44:	0000a8dc 	.word	0x0000a8dc
    2e48:	00004f7d 	.word	0x00004f7d
    2e4c:	00002bf9 	.word	0x00002bf9
    2e50:	0000a918 	.word	0x0000a918

00002e54 <ble_resolv_rand_addr_handler>:
{
    2e54:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e56:	46c6      	mov	lr, r8
    2e58:	b500      	push	{lr}
	if (ble_resolv_rand_addr_status->status == AT_BLE_SUCCESS) {
    2e5a:	7803      	ldrb	r3, [r0, #0]
    2e5c:	2b00      	cmp	r3, #0
    2e5e:	d10e      	bne.n	2e7e <ble_resolv_rand_addr_handler+0x2a>
    2e60:	4d37      	ldr	r5, [pc, #220]	; (2f40 <ble_resolv_rand_addr_handler+0xec>)
    2e62:	2400      	movs	r4, #0
			if (!memcmp((uint8_t *)ble_resolv_rand_addr_status->irk,
    2e64:	1c46      	adds	r6, r0, #1
    2e66:	4f37      	ldr	r7, [pc, #220]	; (2f44 <ble_resolv_rand_addr_handler+0xf0>)
    2e68:	2210      	movs	r2, #16
    2e6a:	0029      	movs	r1, r5
    2e6c:	0030      	movs	r0, r6
    2e6e:	47b8      	blx	r7
    2e70:	2800      	cmp	r0, #0
    2e72:	d04f      	beq.n	2f14 <ble_resolv_rand_addr_handler+0xc0>
		for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    2e74:	3401      	adds	r4, #1
    2e76:	b2e4      	uxtb	r4, r4
    2e78:	357c      	adds	r5, #124	; 0x7c
    2e7a:	2c05      	cmp	r4, #5
    2e7c:	d1f4      	bne.n	2e68 <ble_resolv_rand_addr_handler+0x14>
		if (ble_device_count == BLE_MAX_DEVICE_CONNECTED) {
    2e7e:	4b32      	ldr	r3, [pc, #200]	; (2f48 <ble_resolv_rand_addr_handler+0xf4>)
    2e80:	781b      	ldrb	r3, [r3, #0]
    2e82:	2b05      	cmp	r3, #5
    2e84:	d013      	beq.n	2eae <ble_resolv_rand_addr_handler+0x5a>
			if (ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE) {
    2e86:	235e      	movs	r3, #94	; 0x5e
    2e88:	4a30      	ldr	r2, [pc, #192]	; (2f4c <ble_resolv_rand_addr_handler+0xf8>)
    2e8a:	5cd3      	ldrb	r3, [r2, r3]
    2e8c:	2b00      	cmp	r3, #0
    2e8e:	d01e      	beq.n	2ece <ble_resolv_rand_addr_handler+0x7a>
    2e90:	4a2f      	ldr	r2, [pc, #188]	; (2f50 <ble_resolv_rand_addr_handler+0xfc>)
    2e92:	2301      	movs	r3, #1
    2e94:	b2dd      	uxtb	r5, r3
    2e96:	001c      	movs	r4, r3
    2e98:	7811      	ldrb	r1, [r2, #0]
    2e9a:	2900      	cmp	r1, #0
    2e9c:	d019      	beq.n	2ed2 <ble_resolv_rand_addr_handler+0x7e>
    2e9e:	3301      	adds	r3, #1
    2ea0:	327c      	adds	r2, #124	; 0x7c
		for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++) {
    2ea2:	2b05      	cmp	r3, #5
    2ea4:	d1f6      	bne.n	2e94 <ble_resolv_rand_addr_handler+0x40>
	return AT_BLE_SUCCESS;
    2ea6:	2000      	movs	r0, #0
}
    2ea8:	bc04      	pop	{r2}
    2eaa:	4690      	mov	r8, r2
    2eac:	bdf0      	pop	{r4, r5, r6, r7, pc}
			DBG_LOG("Max number of connection reached: %d ===>Disconnecting...", ble_device_count);
    2eae:	4829      	ldr	r0, [pc, #164]	; (2f54 <ble_resolv_rand_addr_handler+0x100>)
    2eb0:	4b29      	ldr	r3, [pc, #164]	; (2f58 <ble_resolv_rand_addr_handler+0x104>)
    2eb2:	4798      	blx	r3
    2eb4:	4b24      	ldr	r3, [pc, #144]	; (2f48 <ble_resolv_rand_addr_handler+0xf4>)
    2eb6:	7819      	ldrb	r1, [r3, #0]
    2eb8:	b2c9      	uxtb	r1, r1
    2eba:	4828      	ldr	r0, [pc, #160]	; (2f5c <ble_resolv_rand_addr_handler+0x108>)
    2ebc:	4b28      	ldr	r3, [pc, #160]	; (2f60 <ble_resolv_rand_addr_handler+0x10c>)
    2ebe:	4798      	blx	r3
			at_ble_disconnect(connected_state_info.handle, AT_BLE_TERMINATED_BY_USER);
    2ec0:	4b28      	ldr	r3, [pc, #160]	; (2f64 <ble_resolv_rand_addr_handler+0x110>)
    2ec2:	8918      	ldrh	r0, [r3, #8]
    2ec4:	2113      	movs	r1, #19
    2ec6:	4b28      	ldr	r3, [pc, #160]	; (2f68 <ble_resolv_rand_addr_handler+0x114>)
    2ec8:	4798      	blx	r3
			return AT_BLE_FAILURE;
    2eca:	20e2      	movs	r0, #226	; 0xe2
    2ecc:	e7ec      	b.n	2ea8 <ble_resolv_rand_addr_handler+0x54>
			if (ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE) {
    2ece:	2400      	movs	r4, #0
    2ed0:	2500      	movs	r5, #0
				memcpy(&ble_dev_info[idx].conn_info, (uint8_t *)&connected_state_info, sizeof(at_ble_connected_t));
    2ed2:	4b1e      	ldr	r3, [pc, #120]	; (2f4c <ble_resolv_rand_addr_handler+0xf8>)
    2ed4:	4698      	mov	r8, r3
    2ed6:	0166      	lsls	r6, r4, #5
    2ed8:	1b37      	subs	r7, r6, r4
    2eda:	00bf      	lsls	r7, r7, #2
    2edc:	4447      	add	r7, r8
    2ede:	2212      	movs	r2, #18
    2ee0:	4920      	ldr	r1, [pc, #128]	; (2f64 <ble_resolv_rand_addr_handler+0x110>)
    2ee2:	0038      	movs	r0, r7
    2ee4:	4b21      	ldr	r3, [pc, #132]	; (2f6c <ble_resolv_rand_addr_handler+0x118>)
    2ee6:	4798      	blx	r3
				ble_device_count++;
    2ee8:	4a17      	ldr	r2, [pc, #92]	; (2f48 <ble_resolv_rand_addr_handler+0xf4>)
    2eea:	7813      	ldrb	r3, [r2, #0]
    2eec:	3301      	adds	r3, #1
    2eee:	b2db      	uxtb	r3, r3
    2ef0:	7013      	strb	r3, [r2, #0]
				ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
    2ef2:	375e      	adds	r7, #94	; 0x5e
    2ef4:	2302      	movs	r3, #2
    2ef6:	703b      	strb	r3, [r7, #0]
				ble_dev_info[idx].dev_role   = AT_BLE_ROLE_PERIPHERAL;
    2ef8:	1b34      	subs	r4, r6, r4
    2efa:	00a4      	lsls	r4, r4, #2
    2efc:	4444      	add	r4, r8
    2efe:	3308      	adds	r3, #8
    2f00:	74a3      	strb	r3, [r4, #18]
	if ((ble_dev_info[idx].dev_role == AT_BLE_ROLE_PERIPHERAL) && (peripheral_device_added)) {
    2f02:	016b      	lsls	r3, r5, #5
    2f04:	1b5d      	subs	r5, r3, r5
    2f06:	00ad      	lsls	r5, r5, #2
    2f08:	4445      	add	r5, r8
    2f0a:	7cab      	ldrb	r3, [r5, #18]
    2f0c:	2b0a      	cmp	r3, #10
    2f0e:	d011      	beq.n	2f34 <ble_resolv_rand_addr_handler+0xe0>
	return AT_BLE_SUCCESS;
    2f10:	2000      	movs	r0, #0
    2f12:	e7c9      	b.n	2ea8 <ble_resolv_rand_addr_handler+0x54>
		ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
    2f14:	480d      	ldr	r0, [pc, #52]	; (2f4c <ble_resolv_rand_addr_handler+0xf8>)
    2f16:	0163      	lsls	r3, r4, #5
    2f18:	1b1a      	subs	r2, r3, r4
    2f1a:	0092      	lsls	r2, r2, #2
    2f1c:	1882      	adds	r2, r0, r2
    2f1e:	0011      	movs	r1, r2
    2f20:	315e      	adds	r1, #94	; 0x5e
    2f22:	2502      	movs	r5, #2
    2f24:	700d      	strb	r5, [r1, #0]
		ble_dev_info[idx].dev_role   = AT_BLE_ROLE_PERIPHERAL;
    2f26:	210a      	movs	r1, #10
    2f28:	7491      	strb	r1, [r2, #18]
		memcpy((uint8_t *)&ble_dev_info[idx].conn_info, (uint8_t *)&connected_state_info, sizeof(at_ble_connected_t));
    2f2a:	0010      	movs	r0, r2
    2f2c:	2212      	movs	r2, #18
    2f2e:	490d      	ldr	r1, [pc, #52]	; (2f64 <ble_resolv_rand_addr_handler+0x110>)
    2f30:	4b0e      	ldr	r3, [pc, #56]	; (2f6c <ble_resolv_rand_addr_handler+0x118>)
    2f32:	4798      	blx	r3
		ble_send_slave_sec_request(connected_state_info.handle);
    2f34:	4b0b      	ldr	r3, [pc, #44]	; (2f64 <ble_resolv_rand_addr_handler+0x110>)
    2f36:	8918      	ldrh	r0, [r3, #8]
    2f38:	4b0d      	ldr	r3, [pc, #52]	; (2f70 <ble_resolv_rand_addr_handler+0x11c>)
    2f3a:	4798      	blx	r3
	return AT_BLE_SUCCESS;
    2f3c:	2000      	movs	r0, #0
    2f3e:	e7b3      	b.n	2ea8 <ble_resolv_rand_addr_handler+0x54>
    2f40:	20000fd6 	.word	0x20000fd6
    2f44:	00008a51 	.word	0x00008a51
    2f48:	200011fc 	.word	0x200011fc
    2f4c:	20000f90 	.word	0x20000f90
    2f50:	2000106a 	.word	0x2000106a
    2f54:	00009f84 	.word	0x00009f84
    2f58:	00008bad 	.word	0x00008bad
    2f5c:	0000a8dc 	.word	0x0000a8dc
    2f60:	00008a91 	.word	0x00008a91
    2f64:	2000123c 	.word	0x2000123c
    2f68:	00004f7d 	.word	0x00004f7d
    2f6c:	00008a6f 	.word	0x00008a6f
    2f70:	00002bf9 	.word	0x00002bf9

00002f74 <ble_event_manager>:

void ble_event_manager(at_ble_events_t events, void *event_params)
{
    2f74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2f76:	000d      	movs	r5, r1
	DBG_LOG_DEV("BLE-Event:%d", events);
	switch (events) {
    2f78:	283a      	cmp	r0, #58	; 0x3a
    2f7a:	d870      	bhi.n	305e <ble_event_manager+0xea>
    2f7c:	0083      	lsls	r3, r0, #2
    2f7e:	4a3b      	ldr	r2, [pc, #236]	; (306c <ble_event_manager+0xf8>)
    2f80:	58d3      	ldr	r3, [r2, r3]
    2f82:	469f      	mov	pc, r3
	case AT_BLE_CON_CHANNEL_MAP_IND: {
		uint8_t idx;
		for (idx = 0; idx < MAX_GAP_EVENT_SUBSCRIBERS; idx++) {
			if (ble_mgr_gap_event_cb[idx] != NULL) {
				const ble_event_callback_t *event_cb_fn = ble_mgr_gap_event_cb[idx];
				if (event_cb_fn[events] != NULL) {
    2f84:	0084      	lsls	r4, r0, #2
    2f86:	2600      	movs	r6, #0
			if (ble_mgr_gap_event_cb[idx] != NULL) {
    2f88:	4f39      	ldr	r7, [pc, #228]	; (3070 <ble_event_manager+0xfc>)
    2f8a:	e002      	b.n	2f92 <ble_event_manager+0x1e>
    2f8c:	3604      	adds	r6, #4
		for (idx = 0; idx < MAX_GAP_EVENT_SUBSCRIBERS; idx++) {
    2f8e:	2e14      	cmp	r6, #20
    2f90:	d06b      	beq.n	306a <ble_event_manager+0xf6>
			if (ble_mgr_gap_event_cb[idx] != NULL) {
    2f92:	59bb      	ldr	r3, [r7, r6]
    2f94:	2b00      	cmp	r3, #0
    2f96:	d0f9      	beq.n	2f8c <ble_event_manager+0x18>
				if (event_cb_fn[events] != NULL) {
    2f98:	591b      	ldr	r3, [r3, r4]
    2f9a:	2b00      	cmp	r3, #0
    2f9c:	d0f6      	beq.n	2f8c <ble_event_manager+0x18>
					event_cb_fn[events](event_params);
    2f9e:	0028      	movs	r0, r5
    2fa0:	4798      	blx	r3
    2fa2:	e7f3      	b.n	2f8c <ble_event_manager+0x18>
	case AT_BLE_CHARACTERISTIC_READ_MULTIBLE_RESPONSE:
	case AT_BLE_CHARACTERISTIC_WRITE_RESPONSE:
	case AT_BLE_NOTIFICATION_RECIEVED:
	case AT_BLE_INDICATION_RECIEVED: {
		uint8_t idx;
		events -= (AT_BLE_CON_CHANNEL_MAP_IND + 1);
    2fa4:	3813      	subs	r0, #19
		for (idx = 0; idx < MAX_GATT_CLIENT_SUBSCRIBERS; idx++) {
			if (ble_mgr_gatt_client_event_cb[idx] != NULL) {
				const ble_event_callback_t *event_cb_fn = ble_mgr_gatt_client_event_cb[idx];
				if (event_cb_fn[events] != NULL) {
    2fa6:	b2c4      	uxtb	r4, r0
    2fa8:	00a4      	lsls	r4, r4, #2
    2faa:	2600      	movs	r6, #0
			if (ble_mgr_gatt_client_event_cb[idx] != NULL) {
    2fac:	4f31      	ldr	r7, [pc, #196]	; (3074 <ble_event_manager+0x100>)
    2fae:	e002      	b.n	2fb6 <ble_event_manager+0x42>
    2fb0:	3604      	adds	r6, #4
		for (idx = 0; idx < MAX_GATT_CLIENT_SUBSCRIBERS; idx++) {
    2fb2:	2e14      	cmp	r6, #20
    2fb4:	d059      	beq.n	306a <ble_event_manager+0xf6>
			if (ble_mgr_gatt_client_event_cb[idx] != NULL) {
    2fb6:	59bb      	ldr	r3, [r7, r6]
    2fb8:	2b00      	cmp	r3, #0
    2fba:	d0f9      	beq.n	2fb0 <ble_event_manager+0x3c>
				if (event_cb_fn[events] != NULL) {
    2fbc:	591b      	ldr	r3, [r3, r4]
    2fbe:	2b00      	cmp	r3, #0
    2fc0:	d0f6      	beq.n	2fb0 <ble_event_manager+0x3c>
					event_cb_fn[events](event_params);
    2fc2:	0028      	movs	r0, r5
    2fc4:	4798      	blx	r3
    2fc6:	e7f3      	b.n	2fb0 <ble_event_manager+0x3c>
	case AT_BLE_MTU_CHANGED_INDICATION:
	case AT_BLE_MTU_CHANGED_CMD_COMPLETE:
	case AT_BLE_CHARACTERISTIC_WRITE_CMD_CMP:
	case AT_BLE_READ_AUTHORIZE_REQUEST: {
		uint8_t idx;
		events -= (AT_BLE_INDICATION_RECIEVED + 1);
    2fc8:	381d      	subs	r0, #29
		DBG_LOG_DEV("GATT_Server Event:%d", events);
		for (idx = 0; idx < MAX_GATT_SERVER_SUBSCRIBERS; idx++) {
			if (ble_mgr_gatt_server_event_cb[idx] != NULL) {
				const ble_event_callback_t *event_cb_fn = ble_mgr_gatt_server_event_cb[idx];
				if (event_cb_fn[events] != NULL) {
    2fca:	b2c4      	uxtb	r4, r0
    2fcc:	00a4      	lsls	r4, r4, #2
    2fce:	2600      	movs	r6, #0
			if (ble_mgr_gatt_server_event_cb[idx] != NULL) {
    2fd0:	4f29      	ldr	r7, [pc, #164]	; (3078 <ble_event_manager+0x104>)
    2fd2:	e002      	b.n	2fda <ble_event_manager+0x66>
    2fd4:	3604      	adds	r6, #4
		for (idx = 0; idx < MAX_GATT_SERVER_SUBSCRIBERS; idx++) {
    2fd6:	2e14      	cmp	r6, #20
    2fd8:	d047      	beq.n	306a <ble_event_manager+0xf6>
			if (ble_mgr_gatt_server_event_cb[idx] != NULL) {
    2fda:	59bb      	ldr	r3, [r7, r6]
    2fdc:	2b00      	cmp	r3, #0
    2fde:	d0f9      	beq.n	2fd4 <ble_event_manager+0x60>
				if (event_cb_fn[events] != NULL) {
    2fe0:	591b      	ldr	r3, [r3, r4]
    2fe2:	2b00      	cmp	r3, #0
    2fe4:	d0f6      	beq.n	2fd4 <ble_event_manager+0x60>
					event_cb_fn[events](event_params);
    2fe6:	0028      	movs	r0, r5
    2fe8:	4798      	blx	r3
    2fea:	e7f3      	b.n	2fd4 <ble_event_manager+0x60>
	case AT_BLE_LECB_DISCONNECTED:
	case AT_BLE_LECB_ADD_CREDIT_IND:
	case AT_BLE_LECB_SEND_RESP:
	case AT_BLE_LECB_DATA_RECIEVED: {
		uint8_t idx;
		events -= (AT_BLE_READ_AUTHORIZE_REQUEST + 1);
    2fec:	3827      	subs	r0, #39	; 0x27
    2fee:	b2c0      	uxtb	r0, r0
		for (idx = 0; idx < MAX_L2CAP_EVENT_SUBSCRIBERS; idx++) {
			if (ble_mgr_l2cap_event_cb[idx] != NULL) {
    2ff0:	4b22      	ldr	r3, [pc, #136]	; (307c <ble_event_manager+0x108>)
    2ff2:	681b      	ldr	r3, [r3, #0]
    2ff4:	2b00      	cmp	r3, #0
    2ff6:	d038      	beq.n	306a <ble_event_manager+0xf6>
				const ble_event_callback_t *event_cb_fn = ble_mgr_l2cap_event_cb[idx];
				if (event_cb_fn[events] != NULL) {
    2ff8:	0080      	lsls	r0, r0, #2
    2ffa:	58c3      	ldr	r3, [r0, r3]
    2ffc:	2b00      	cmp	r3, #0
    2ffe:	d034      	beq.n	306a <ble_event_manager+0xf6>
					event_cb_fn[events](event_params);
    3000:	0008      	movs	r0, r1
    3002:	4798      	blx	r3
    3004:	e031      	b.n	306a <ble_event_manager+0xf6>
	case AT_BLE_HTPT_CFG_INDNTF_IND:
	case AT_BLE_HTPT_ENABLE_RSP:
	case AT_BLE_HTPT_MEAS_INTV_UPD_RSP:
	case AT_BLE_HTPT_MEAS_INTV_CHG_REQ: {
		uint8_t idx;
		events -= (AT_BLE_LECB_DATA_RECIEVED + 1);
    3006:	382d      	subs	r0, #45	; 0x2d
    3008:	b2c0      	uxtb	r0, r0
		for (idx = 0; idx < MAX_HTPT_EVENT_SUBSCRIBERS; idx++) {
			if (ble_mgr_htpt_event_cb[idx] != NULL) {
    300a:	4b1d      	ldr	r3, [pc, #116]	; (3080 <ble_event_manager+0x10c>)
    300c:	681b      	ldr	r3, [r3, #0]
    300e:	2b00      	cmp	r3, #0
    3010:	d02b      	beq.n	306a <ble_event_manager+0xf6>
				const ble_event_callback_t *event_cb_fn = ble_mgr_htpt_event_cb[idx];
				if (event_cb_fn[events] != NULL) {
    3012:	0080      	lsls	r0, r0, #2
    3014:	58c3      	ldr	r3, [r0, r3]
    3016:	2b00      	cmp	r3, #0
    3018:	d027      	beq.n	306a <ble_event_manager+0xf6>
					event_cb_fn[events](event_params);
    301a:	0008      	movs	r0, r1
    301c:	4798      	blx	r3
    301e:	e024      	b.n	306a <ble_event_manager+0xf6>
	} break;

	case AT_BLE_LE_TEST_STATUS:
	case AT_BLE_LE_PACKET_REPORT: {
		uint8_t idx;
		events -= (AT_BLE_HTPT_MEAS_INTV_CHG_REQ + 1);
    3020:	3836      	subs	r0, #54	; 0x36
		for (idx = 0; idx < MAX_DTM_EVENT_SUBSCRIBERS; idx++) {
			if (ble_mgr_dtm_event_cb[idx] != NULL) {
				const ble_event_callback_t *event_cb_fn = ble_mgr_dtm_event_cb[idx];
				if (event_cb_fn[events] != NULL) {
    3022:	b2c4      	uxtb	r4, r0
    3024:	00a4      	lsls	r4, r4, #2
    3026:	2600      	movs	r6, #0
			if (ble_mgr_dtm_event_cb[idx] != NULL) {
    3028:	4f16      	ldr	r7, [pc, #88]	; (3084 <ble_event_manager+0x110>)
    302a:	e002      	b.n	3032 <ble_event_manager+0xbe>
    302c:	3604      	adds	r6, #4
		for (idx = 0; idx < MAX_DTM_EVENT_SUBSCRIBERS; idx++) {
    302e:	2e14      	cmp	r6, #20
    3030:	d01b      	beq.n	306a <ble_event_manager+0xf6>
			if (ble_mgr_dtm_event_cb[idx] != NULL) {
    3032:	59bb      	ldr	r3, [r7, r6]
    3034:	2b00      	cmp	r3, #0
    3036:	d0f9      	beq.n	302c <ble_event_manager+0xb8>
				if (event_cb_fn[events] != NULL) {
    3038:	591b      	ldr	r3, [r3, r4]
    303a:	2b00      	cmp	r3, #0
    303c:	d0f6      	beq.n	302c <ble_event_manager+0xb8>
					event_cb_fn[events](event_params);
    303e:	0028      	movs	r0, r5
    3040:	4798      	blx	r3
    3042:	e7f3      	b.n	302c <ble_event_manager+0xb8>

	case AT_BLE_CUSTOM_EVENT:
	case AT_BLE_DEVICE_READY:
	case AT_BLE_EVENT_MAX: {
		uint8_t idx;
		events -= (AT_BLE_LE_PACKET_REPORT + 1);
    3044:	3838      	subs	r0, #56	; 0x38
    3046:	b2c0      	uxtb	r0, r0
		for (idx = 0; idx < MAX_CUSTOM_EVENT_SUBSCRIBERS; idx++) {
			if (ble_mgr_custom_event_cb[idx] != NULL) {
    3048:	4b0f      	ldr	r3, [pc, #60]	; (3088 <ble_event_manager+0x114>)
    304a:	681b      	ldr	r3, [r3, #0]
    304c:	2b00      	cmp	r3, #0
    304e:	d00c      	beq.n	306a <ble_event_manager+0xf6>
				const ble_event_callback_t *event_cb_fn = ble_mgr_custom_event_cb[idx];
				if (event_cb_fn[events] != NULL) {
    3050:	0080      	lsls	r0, r0, #2
    3052:	58c3      	ldr	r3, [r0, r3]
    3054:	2b00      	cmp	r3, #0
    3056:	d008      	beq.n	306a <ble_event_manager+0xf6>
					event_cb_fn[events](event_params);
    3058:	0008      	movs	r0, r1
    305a:	4798      	blx	r3
    305c:	e005      	b.n	306a <ble_event_manager+0xf6>
		}
	} break;

	default: {
		DBG_LOG_DEV("BLE-Manager:Unknown Event=0x%X", events);
		DBG_LOG("\r\n");
    305e:	4d0b      	ldr	r5, [pc, #44]	; (308c <ble_event_manager+0x118>)
    3060:	0028      	movs	r0, r5
    3062:	4c0b      	ldr	r4, [pc, #44]	; (3090 <ble_event_manager+0x11c>)
    3064:	47a0      	blx	r4
    3066:	0028      	movs	r0, r5
    3068:	47a0      	blx	r4
	} break;
	}
}
    306a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    306c:	0000a1cc 	.word	0x0000a1cc
    3070:	20001214 	.word	0x20001214
    3074:	20001228 	.word	0x20001228
    3078:	20000f7c 	.word	0x20000f7c
    307c:	20001284 	.word	0x20001284
    3080:	20000f78 	.word	0x20000f78
    3084:	20001200 	.word	0x20001200
    3088:	20001630 	.word	0x20001630
    308c:	00009f84 	.word	0x00009f84
    3090:	00008bad 	.word	0x00008bad

00003094 <ble_event_task>:
{
    3094:	b510      	push	{r4, lr}
	if (at_ble_event_get(&event, ble_event_params, BLE_EVENT_TIMEOUT) == AT_BLE_SUCCESS) {
    3096:	2214      	movs	r2, #20
    3098:	4907      	ldr	r1, [pc, #28]	; (30b8 <ble_event_task+0x24>)
    309a:	4808      	ldr	r0, [pc, #32]	; (30bc <ble_event_task+0x28>)
    309c:	4b08      	ldr	r3, [pc, #32]	; (30c0 <ble_event_task+0x2c>)
    309e:	4798      	blx	r3
    30a0:	1e04      	subs	r4, r0, #0
    30a2:	d002      	beq.n	30aa <ble_event_task+0x16>
	return AT_BLE_FAILURE;
    30a4:	24e2      	movs	r4, #226	; 0xe2
}
    30a6:	0020      	movs	r0, r4
    30a8:	bd10      	pop	{r4, pc}
		ble_event_manager(event, ble_event_params);
    30aa:	4b04      	ldr	r3, [pc, #16]	; (30bc <ble_event_task+0x28>)
    30ac:	7818      	ldrb	r0, [r3, #0]
    30ae:	4902      	ldr	r1, [pc, #8]	; (30b8 <ble_event_task+0x24>)
    30b0:	4b04      	ldr	r3, [pc, #16]	; (30c4 <ble_event_task+0x30>)
    30b2:	4798      	blx	r3
		return AT_BLE_SUCCESS;
    30b4:	e7f7      	b.n	30a6 <ble_event_task+0x12>
    30b6:	46c0      	nop			; (mov r8, r8)
    30b8:	20001424 	.word	0x20001424
    30bc:	20001280 	.word	0x20001280
    30c0:	000043e1 	.word	0x000043e1
    30c4:	00002f75 	.word	0x00002f75

000030c8 <ble_advertisement_data_set>:

/* Advertisement Data will be set based on the advertisement configuration */
at_ble_status_t ble_advertisement_data_set(void)
{
    30c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    30ca:	b091      	sub	sp, #68	; 0x44
		uint8_t length_field_ind;
		uint8_t adv_element_len;
		adv_buf[adv_data_element.len] = adv_data_element.len;
		length_field_ind              = adv_data_element.len;
		adv_data_element.len++;
		adv_buf[adv_data_element.len++] = COMPLETE_LIST_16BIT_SERV_UUIDS;
    30cc:	ac08      	add	r4, sp, #32
    30ce:	2103      	movs	r1, #3
    30d0:	7061      	strb	r1, [r4, #1]
		REPEAT_MACRO(_CONF_SERVICE_16BIT_UUID, &adv_data_element, SERVICE_UUID16_MAX_NUM);
    30d2:	230a      	movs	r3, #10
    30d4:	70a3      	strb	r3, [r4, #2]
    30d6:	2218      	movs	r2, #24
    30d8:	70e2      	strb	r2, [r4, #3]
    30da:	2012      	movs	r0, #18
    30dc:	7120      	strb	r0, [r4, #4]
    30de:	7162      	strb	r2, [r4, #5]
		adv_element_len = adv_data_element.len - (length_field_ind + ADV_ELEMENT_SIZE);
		if (adv_element_len) {
			adv_buf[length_field_ind] = adv_element_len + ADV_TYPE_SIZE;
    30e0:	3a13      	subs	r2, #19
    30e2:	7022      	strb	r2, [r4, #0]
#if (BLE_GAP_ADV_COMPLETE_LOCAL_NAME_ENABLE && !BLE_GAP_ADV_SHORTENED_LOCAL_NAME_ENABLE)
#if (BLE_GAP_ADV_COMPLETE_LOCAL_NAME_SCN_RSP_ENABLE != SCAN_RESPONSE_ONLY_ENABLE)
	if ((adv_data_element.len)
	    <= (AT_BLE_ADV_MAX_SIZE
	        - (ADV_TYPE_FLAG_SIZE + ADV_ELEMENT_SIZE + BLE_GAP_ADV_DATA_COMPLETE_LOCAL_NAME_LENGTH))) {
		adv_buf[adv_data_element.len++] = BLE_GAP_ADV_DATA_COMPLETE_LOCAL_NAME_LENGTH + ADV_TYPE_SIZE;
    30e4:	71a3      	strb	r3, [r4, #6]
		adv_buf[adv_data_element.len++] = COMPLETE_LOCAL_NAME;
    30e6:	2709      	movs	r7, #9
    30e8:	71e7      	strb	r7, [r4, #7]
		memcpy(&adv_buf[adv_data_element.len],
    30ea:	aa0a      	add	r2, sp, #40	; 0x28
    30ec:	4b16      	ldr	r3, [pc, #88]	; (3148 <ble_advertisement_data_set+0x80>)
    30ee:	cb21      	ldmia	r3!, {r0, r5}
    30f0:	c221      	stmia	r2!, {r0, r5}
    30f2:	781b      	ldrb	r3, [r3, #0]
    30f4:	7013      	strb	r3, [r2, #0]

#if BLE_GAP_ADV_APPEARANCE_ENABLE
#if (BLE_GAP_ADV_APPEARANCE_SCN_RSP_ENABLE != SCAN_RESPONSE_ONLY_ENABLE)
	if ((adv_data_element.len)
	    <= (AT_BLE_ADV_MAX_SIZE - (ADV_TYPE_FLAG_SIZE + ADV_ELEMENT_SIZE + BLE_GAP_ADV_DATA_APPEARANCE_SIZE))) {
		adv_buf[adv_data_element.len++] = BLE_GAP_ADV_DATA_APPEARANCE_SIZE + ADV_TYPE_SIZE;
    30f6:	7461      	strb	r1, [r4, #17]
		adv_buf[adv_data_element.len++] = APPEARANCE;
    30f8:	2319      	movs	r3, #25
    30fa:	74a3      	strb	r3, [r4, #18]
		memcpy(&adv_buf[adv_data_element.len], BLE_GAP_ADV_DATA_APPEARANCE, BLE_GAP_ADV_DATA_APPEARANCE_SIZE);
    30fc:	4d13      	ldr	r5, [pc, #76]	; (314c <ble_advertisement_data_set+0x84>)
    30fe:	0029      	movs	r1, r5
    3100:	3174      	adds	r1, #116	; 0x74
    3102:	2202      	movs	r2, #2
    3104:	2033      	movs	r0, #51	; 0x33
    3106:	4468      	add	r0, sp
    3108:	4e11      	ldr	r6, [pc, #68]	; (3150 <ble_advertisement_data_set+0x88>)
    310a:	47b0      	blx	r6
#endif
#if ((BLE_GAP_ADV_MANUFACTURER_SPECIFIC_DATA_SCN_RSP_ENABLE == SCAN_RESPONSE_ENABLE)                                   \
     || (BLE_GAP_ADV_MANUFACTURER_SPECIFIC_DATA_SCN_RSP_ENABLE == SCAN_RESPONSE_ONLY_ENABLE))
	else if ((scan_resp_data_element.len)
	         <= (AT_BLE_ADV_MAX_SIZE - (ADV_ELEMENT_SIZE + BLE_GAP_ADV_DATA_MANUFACTURER_SPECIFIC_DATA_SIZE))) {
		scn_resp[scan_resp_data_element.len++] = BLE_GAP_ADV_DATA_MANUFACTURER_SPECIFIC_DATA_SIZE + ADV_TYPE_SIZE;
    310c:	466b      	mov	r3, sp
    310e:	701f      	strb	r7, [r3, #0]
		scn_resp[scan_resp_data_element.len++] = MANUFACTURER_SPECIFIC_DATA;
    3110:	23ff      	movs	r3, #255	; 0xff
    3112:	466a      	mov	r2, sp
    3114:	7053      	strb	r3, [r2, #1]
		memcpy(&scn_resp[scan_resp_data_element.len],
    3116:	0029      	movs	r1, r5
    3118:	3178      	adds	r1, #120	; 0x78
    311a:	2208      	movs	r2, #8
    311c:	466b      	mov	r3, sp
    311e:	1c98      	adds	r0, r3, #2
    3120:	47b0      	blx	r6
		DBG_LOG_ADV("Failed to add Manufacturer specific data");
		return AT_BLE_GAP_INVALID_PARAM;
	}
#endif

	if (at_ble_adv_data_set(adv_buf, adv_data_element.len, scn_resp, scan_resp_data_element.len) != AT_BLE_SUCCESS) {
    3122:	230a      	movs	r3, #10
    3124:	466a      	mov	r2, sp
    3126:	2115      	movs	r1, #21
    3128:	0020      	movs	r0, r4
    312a:	4c0a      	ldr	r4, [pc, #40]	; (3154 <ble_advertisement_data_set+0x8c>)
    312c:	47a0      	blx	r4
    312e:	2800      	cmp	r0, #0
    3130:	d102      	bne.n	3138 <ble_advertisement_data_set+0x70>
		return status;
	} else {
		DBG_LOG_DEV("BLE Advertisement data set success");
		return AT_BLE_SUCCESS;
	}
}
    3132:	2000      	movs	r0, #0
    3134:	b011      	add	sp, #68	; 0x44
    3136:	bdf0      	pop	{r4, r5, r6, r7, pc}
		DBG_LOG("BLE Advertisement data set failed");
    3138:	4807      	ldr	r0, [pc, #28]	; (3158 <ble_advertisement_data_set+0x90>)
    313a:	4b08      	ldr	r3, [pc, #32]	; (315c <ble_advertisement_data_set+0x94>)
    313c:	4798      	blx	r3
    313e:	4808      	ldr	r0, [pc, #32]	; (3160 <ble_advertisement_data_set+0x98>)
    3140:	4b08      	ldr	r3, [pc, #32]	; (3164 <ble_advertisement_data_set+0x9c>)
    3142:	4798      	blx	r3
		return status;
    3144:	e7f5      	b.n	3132 <ble_advertisement_data_set+0x6a>
    3146:	46c0      	nop			; (mov r8, r8)
    3148:	0000a768 	.word	0x0000a768
    314c:	0000a2b8 	.word	0x0000a2b8
    3150:	00008a6f 	.word	0x00008a6f
    3154:	00004d9d 	.word	0x00004d9d
    3158:	00009f84 	.word	0x00009f84
    315c:	00008bad 	.word	0x00008bad
    3160:	0000a940 	.word	0x0000a940
    3164:	00008a91 	.word	0x00008a91

00003168 <dis_init_service>:

bool volatile dis_notification_flag[DIS_TOTAL_CHARATERISTIC_NUM] = {false};

/**@brief Initialize the dis service related information. */
void dis_init_service(dis_gatt_service_handler_t *device_info_serv)
{
    3168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    316a:	46de      	mov	lr, fp
    316c:	4657      	mov	r7, sl
    316e:	464e      	mov	r6, r9
    3170:	4645      	mov	r5, r8
    3172:	b5e0      	push	{r5, r6, r7, lr}
    3174:	0004      	movs	r4, r0
	device_info_serv->serv_handle       = 0;
    3176:	2500      	movs	r5, #0
    3178:	2600      	movs	r6, #0
    317a:	8245      	strh	r5, [r0, #18]
	device_info_serv->serv_uuid.type    = AT_BLE_UUID_16;
    317c:	7006      	strb	r6, [r0, #0]
	device_info_serv->serv_uuid.uuid[0] = (uint8_t)DIS_SERVICE_UUID;
    317e:	230a      	movs	r3, #10
    3180:	7043      	strb	r3, [r0, #1]
	device_info_serv->serv_uuid.uuid[1] = (uint8_t)(DIS_SERVICE_UUID >> 8);
    3182:	2318      	movs	r3, #24
    3184:	7083      	strb	r3, [r0, #2]

	// Characteristic Info for Manufacturer Name String
	device_info_serv->serv_chars[0].char_val_handle = 0; /* handle stored here */
    3186:	8285      	strh	r5, [r0, #20]
	device_info_serv->serv_chars[0].uuid.type       = AT_BLE_UUID_16;
    3188:	7586      	strb	r6, [r0, #22]
	device_info_serv->serv_chars[0].uuid.uuid[0]
	    = (uint8_t)DIS_CHAR_MANUFACTURER_NAME_UUID; /* UUID : Manufacturer Name String */
    318a:	3311      	adds	r3, #17
    318c:	75c3      	strb	r3, [r0, #23]
	device_info_serv->serv_chars[0].uuid.uuid[1]
	    = (uint8_t)(DIS_CHAR_MANUFACTURER_NAME_UUID >> 8);         /* UUID : Manufacturer Name String */
    318e:	3301      	adds	r3, #1
    3190:	4698      	mov	r8, r3
    3192:	7603      	strb	r3, [r0, #24]
	device_info_serv->serv_chars[0].properties = AT_BLE_CHAR_READ; /* Properties */
    3194:	2302      	movs	r3, #2
    3196:	469b      	mov	fp, r3
    3198:	8503      	strh	r3, [r0, #40]	; 0x28

	memcpy(char_value.manufacturer_name, DEFAULT_MANUFACTURER_NAME, DIS_CHAR_MANUFACTURER_NAME_INIT_LEN);
    319a:	4fe8      	ldr	r7, [pc, #928]	; (353c <dis_init_service+0x3d4>)
    319c:	2205      	movs	r2, #5
    319e:	49e8      	ldr	r1, [pc, #928]	; (3540 <dis_init_service+0x3d8>)
    31a0:	0038      	movs	r0, r7
    31a2:	4be8      	ldr	r3, [pc, #928]	; (3544 <dis_init_service+0x3dc>)
    31a4:	4699      	mov	r9, r3
    31a6:	4798      	blx	r3
	device_info_serv->serv_chars[0].init_value = char_value.manufacturer_name;
    31a8:	62e7      	str	r7, [r4, #44]	; 0x2c

	device_info_serv->serv_chars[0].value_init_len = DIS_CHAR_MANUFACTURER_NAME_INIT_LEN;
    31aa:	2305      	movs	r3, #5
    31ac:	8623      	strh	r3, [r4, #48]	; 0x30
	device_info_serv->serv_chars[0].value_max_len  = DIS_CHAR_MANUFACTURER_NAME_MAX_LEN;
    31ae:	2314      	movs	r3, #20
    31b0:	8663      	strh	r3, [r4, #50]	; 0x32
#if BLE_PAIR_ENABLE
	device_info_serv->serv_chars[0].value_permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR; /* permissions */
    31b2:	2303      	movs	r3, #3
    31b4:	469a      	mov	sl, r3
    31b6:	3331      	adds	r3, #49	; 0x31
    31b8:	4652      	mov	r2, sl
    31ba:	54e2      	strb	r2, [r4, r3]
#else
	device_info_serv->serv_chars[0].value_permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR; /* permissions */
#endif
	device_info_serv->serv_chars[0].user_desc             = NULL; /* user defined name */
    31bc:	63a5      	str	r5, [r4, #56]	; 0x38
	device_info_serv->serv_chars[0].user_desc_len         = 0;
    31be:	87a5      	strh	r5, [r4, #60]	; 0x3c
	device_info_serv->serv_chars[0].user_desc_max_len     = 0;
    31c0:	87e5      	strh	r5, [r4, #62]	; 0x3e
	device_info_serv->serv_chars[0].user_desc_permissions = AT_BLE_ATTR_NO_PERMISSIONS; /*user description permissions*/
    31c2:	3310      	adds	r3, #16
    31c4:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[0].client_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS; /*client config permissions*/
    31c6:	3301      	adds	r3, #1
    31c8:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[0].server_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS;                            /*server config permissions*/
    31ca:	3301      	adds	r3, #1
    31cc:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[0].user_desc_handle     = 0;    /*user desc handles*/
    31ce:	3302      	adds	r3, #2
    31d0:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[0].client_config_handle = 0;    /*client config handles*/
    31d2:	3302      	adds	r3, #2
    31d4:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[0].server_config_handle = 0;    /*server config handles*/
    31d6:	3302      	adds	r3, #2
    31d8:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[0].presentation_format  = NULL; /* presentation format */
    31da:	6425      	str	r5, [r4, #64]	; 0x40

	// Characterisitc Info for Model Number String
	device_info_serv->serv_chars[1].char_val_handle = 0; /* handle stored here */
    31dc:	3304      	adds	r3, #4
    31de:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[1].uuid.type       = AT_BLE_UUID_16;
    31e0:	3302      	adds	r3, #2
    31e2:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[1].uuid.uuid[0] = (uint8_t)DIS_CHAR_MODEL_NUMBER_UUID; /* UUID : Serial Number String*/
    31e4:	2224      	movs	r2, #36	; 0x24
    31e6:	3301      	adds	r3, #1
    31e8:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[1].uuid.uuid[1]
	    = (uint8_t)(DIS_CHAR_MODEL_NUMBER_UUID >> 8);              /* UUID : Serial Number String*/
    31ea:	3301      	adds	r3, #1
    31ec:	4642      	mov	r2, r8
    31ee:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[1].properties = AT_BLE_CHAR_READ; /* Properties */
    31f0:	3310      	adds	r3, #16
    31f2:	465a      	mov	r2, fp
    31f4:	52e2      	strh	r2, [r4, r3]

	memcpy(char_value.default_model_number, DEFAULT_MODEL_NUMBER, DIS_CHAR_MODEL_NUMBER_INIT_LEN);
    31f6:	220a      	movs	r2, #10
    31f8:	49d3      	ldr	r1, [pc, #844]	; (3548 <dis_init_service+0x3e0>)
    31fa:	48d4      	ldr	r0, [pc, #848]	; (354c <dis_init_service+0x3e4>)
    31fc:	47c8      	blx	r9
	device_info_serv->serv_chars[1].init_value = char_value.default_model_number;
    31fe:	4bd3      	ldr	r3, [pc, #844]	; (354c <dis_init_service+0x3e4>)
    3200:	66a3      	str	r3, [r4, #104]	; 0x68

	device_info_serv->serv_chars[1].value_init_len = DIS_CHAR_MODEL_NUMBER_INIT_LEN;
    3202:	236c      	movs	r3, #108	; 0x6c
    3204:	220a      	movs	r2, #10
    3206:	52e2      	strh	r2, [r4, r3]
	device_info_serv->serv_chars[1].value_max_len  = DIS_CHAR_MODEL_NUMBER_MAX_LEN;
    3208:	3302      	adds	r3, #2
    320a:	2214      	movs	r2, #20
    320c:	52e2      	strh	r2, [r4, r3]
#if BLE_PAIR_ENABLE
	device_info_serv->serv_chars[1].value_permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR; /* permissions */
    320e:	3302      	adds	r3, #2
    3210:	4652      	mov	r2, sl
    3212:	54e2      	strb	r2, [r4, r3]
#else
	device_info_serv->serv_chars[1].value_permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR; /* permissions */
#endif
	device_info_serv->serv_chars[1].user_desc             = NULL; /* user defined name */
    3214:	6765      	str	r5, [r4, #116]	; 0x74
	device_info_serv->serv_chars[1].user_desc_len         = 0;
    3216:	3308      	adds	r3, #8
    3218:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[1].user_desc_max_len     = 0;
    321a:	3302      	adds	r3, #2
    321c:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[1].user_desc_permissions = AT_BLE_ATTR_NO_PERMISSIONS; /*user description permissions*/
    321e:	3306      	adds	r3, #6
    3220:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[1].client_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS; /*client config permissions*/
    3222:	3301      	adds	r3, #1
    3224:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[1].server_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS;                            /*server config permissions*/
    3226:	3301      	adds	r3, #1
    3228:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[1].user_desc_handle     = 0;    /*user desc handles*/
    322a:	3302      	adds	r3, #2
    322c:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[1].client_config_handle = 0;    /*client config handles*/
    322e:	3302      	adds	r3, #2
    3230:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[1].server_config_handle = 0;    /*server config handles*/
    3232:	3302      	adds	r3, #2
    3234:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[1].presentation_format  = NULL; /* presentation format */
    3236:	67e5      	str	r5, [r4, #124]	; 0x7c

	// Characteristic Info for Serial String
	device_info_serv->serv_chars[2].char_val_handle = 0; /* handle stored here */
    3238:	3304      	adds	r3, #4
    323a:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[2].uuid.type       = AT_BLE_UUID_16;
    323c:	3302      	adds	r3, #2
    323e:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[2].uuid.uuid[0]
	    = (uint8_t)DIS_CHAR_SERIAL_NUMBER_UUID; /* UUID : Hardware Revision String*/
    3240:	2225      	movs	r2, #37	; 0x25
    3242:	3301      	adds	r3, #1
    3244:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[2].uuid.uuid[1]
	    = (uint8_t)(DIS_CHAR_SERIAL_NUMBER_UUID >> 8);             /* UUID : Hardware Revision String*/
    3246:	3301      	adds	r3, #1
    3248:	4642      	mov	r2, r8
    324a:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[2].properties = AT_BLE_CHAR_READ; /* Properties */
    324c:	3310      	adds	r3, #16
    324e:	465a      	mov	r2, fp
    3250:	52e2      	strh	r2, [r4, r3]

	memcpy(char_value.default_serial_number, DEFAULT_SERIAL_NUMBER, DIS_CHAR_SERIAL_NUMBER_INIT_LEN);
    3252:	220f      	movs	r2, #15
    3254:	49be      	ldr	r1, [pc, #760]	; (3550 <dis_init_service+0x3e8>)
    3256:	48bf      	ldr	r0, [pc, #764]	; (3554 <dis_init_service+0x3ec>)
    3258:	47c8      	blx	r9
	device_info_serv->serv_chars[2].init_value = char_value.default_serial_number;
    325a:	23a4      	movs	r3, #164	; 0xa4
    325c:	4abd      	ldr	r2, [pc, #756]	; (3554 <dis_init_service+0x3ec>)
    325e:	50e2      	str	r2, [r4, r3]

	device_info_serv->serv_chars[2].value_init_len = DIS_CHAR_SERIAL_NUMBER_INIT_LEN;
    3260:	3304      	adds	r3, #4
    3262:	220f      	movs	r2, #15
    3264:	52e2      	strh	r2, [r4, r3]
	device_info_serv->serv_chars[2].value_max_len  = DIS_CHAR_SERIAL_NUMBER_MAX_LEN;
    3266:	3302      	adds	r3, #2
    3268:	3205      	adds	r2, #5
    326a:	52e2      	strh	r2, [r4, r3]
#if BLE_PAIR_ENABLE
	device_info_serv->serv_chars[2].value_permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR; /* permissions */
    326c:	3302      	adds	r3, #2
    326e:	4652      	mov	r2, sl
    3270:	54e2      	strb	r2, [r4, r3]
#else
	device_info_serv->serv_chars[2].value_permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR; /* permissions */
#endif
	device_info_serv->serv_chars[2].user_desc             = NULL; /* user defined name */
    3272:	3304      	adds	r3, #4
    3274:	50e5      	str	r5, [r4, r3]
	device_info_serv->serv_chars[2].user_desc_len         = 0;
    3276:	3304      	adds	r3, #4
    3278:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[2].user_desc_max_len     = 0;
    327a:	3302      	adds	r3, #2
    327c:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[2].user_desc_permissions = AT_BLE_ATTR_NO_PERMISSIONS; /*user description permissions*/
    327e:	3306      	adds	r3, #6
    3280:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[2].client_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS; /*client config permissions*/
    3282:	3301      	adds	r3, #1
    3284:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[2].server_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS;                            /*server config permissions*/
    3286:	3301      	adds	r3, #1
    3288:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[2].user_desc_handle     = 0;    /*user desc handles*/
    328a:	3302      	adds	r3, #2
    328c:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[2].client_config_handle = 0;    /*client config handles*/
    328e:	3302      	adds	r3, #2
    3290:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[2].server_config_handle = 0;    /*server config handles*/
    3292:	3302      	adds	r3, #2
    3294:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[2].presentation_format  = NULL; /* presentation format */
    3296:	3b0c      	subs	r3, #12
    3298:	50e5      	str	r5, [r4, r3]

	// Characteristic Info for Hardware Revision String
	device_info_serv->serv_chars[3].char_val_handle = 0; /* handle stored here */
    329a:	3310      	adds	r3, #16
    329c:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[3].uuid.type       = AT_BLE_UUID_16;
    329e:	3302      	adds	r3, #2
    32a0:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[3].uuid.uuid[0]
	    = (uint8_t)DIS_CHAR_HARDWARE_REVISION_UUID; /* UUID : Firmware Revision String*/
    32a2:	2227      	movs	r2, #39	; 0x27
    32a4:	3301      	adds	r3, #1
    32a6:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[3].uuid.uuid[1]
	    = (uint8_t)(DIS_CHAR_HARDWARE_REVISION_UUID >> 8);         /* UUID : Firmware Revision String*/
    32a8:	3301      	adds	r3, #1
    32aa:	4642      	mov	r2, r8
    32ac:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[3].properties = AT_BLE_CHAR_READ; /* Properties */
    32ae:	3310      	adds	r3, #16
    32b0:	465a      	mov	r2, fp
    32b2:	52e2      	strh	r2, [r4, r3]

	memcpy(char_value.default_hardware_revision, DEFAULT_HARDWARE_REVISION, DIS_CHAR_HARDWARE_REVISION_INIT_LEN);
    32b4:	2205      	movs	r2, #5
    32b6:	49a8      	ldr	r1, [pc, #672]	; (3558 <dis_init_service+0x3f0>)
    32b8:	48a8      	ldr	r0, [pc, #672]	; (355c <dis_init_service+0x3f4>)
    32ba:	47c8      	blx	r9
	device_info_serv->serv_chars[3].init_value = char_value.default_hardware_revision;
    32bc:	23e0      	movs	r3, #224	; 0xe0
    32be:	4aa7      	ldr	r2, [pc, #668]	; (355c <dis_init_service+0x3f4>)
    32c0:	50e2      	str	r2, [r4, r3]

	device_info_serv->serv_chars[3].value_init_len = DIS_CHAR_HARDWARE_REVISION_INIT_LEN;
    32c2:	3304      	adds	r3, #4
    32c4:	2205      	movs	r2, #5
    32c6:	52e2      	strh	r2, [r4, r3]
	device_info_serv->serv_chars[3].value_max_len  = DIS_CHAR_HARDWARE_REVISION_MAX_LEN;
    32c8:	3302      	adds	r3, #2
    32ca:	2214      	movs	r2, #20
    32cc:	52e2      	strh	r2, [r4, r3]
#if BLE_PAIR_ENABLE
	device_info_serv->serv_chars[3].value_permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR; /* permissions */
    32ce:	3302      	adds	r3, #2
    32d0:	4652      	mov	r2, sl
    32d2:	54e2      	strb	r2, [r4, r3]
#else
	device_info_serv->serv_chars[3].value_permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR; /* permissions */
#endif
	device_info_serv->serv_chars[3].user_desc             = NULL; /* user defined name */
    32d4:	3304      	adds	r3, #4
    32d6:	50e5      	str	r5, [r4, r3]
	device_info_serv->serv_chars[3].user_desc_len         = 0;
    32d8:	3304      	adds	r3, #4
    32da:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[3].user_desc_max_len     = 0;
    32dc:	3302      	adds	r3, #2
    32de:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[3].user_desc_permissions = AT_BLE_ATTR_NO_PERMISSIONS; /*user description permissions*/
    32e0:	3306      	adds	r3, #6
    32e2:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[3].client_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS; /*client config permissions*/
    32e4:	3301      	adds	r3, #1
    32e6:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[3].server_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS;                            /*server config permissions*/
    32e8:	3301      	adds	r3, #1
    32ea:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[3].user_desc_handle     = 0;    /*user desc handles*/
    32ec:	3302      	adds	r3, #2
    32ee:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[3].client_config_handle = 0;    /*client config handles*/
    32f0:	3302      	adds	r3, #2
    32f2:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[3].server_config_handle = 0;    /*server config handles*/
    32f4:	3302      	adds	r3, #2
    32f6:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[3].presentation_format  = NULL; /* presentation format */
    32f8:	3b0c      	subs	r3, #12
    32fa:	50e5      	str	r5, [r4, r3]

	// Characteristic Info for Firmware  Revision
	device_info_serv->serv_chars[4].char_val_handle = 0; /* handle stored here */
    32fc:	3310      	adds	r3, #16
    32fe:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[4].uuid.type       = AT_BLE_UUID_16;
    3300:	3302      	adds	r3, #2
    3302:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[4].uuid.uuid[0]
	    = (uint8_t)DIS_CHAR_FIRMWARE_REIVSION_UUID; /* UUID : Software Revision */
    3304:	2226      	movs	r2, #38	; 0x26
    3306:	2308      	movs	r3, #8
    3308:	33ff      	adds	r3, #255	; 0xff
    330a:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[4].uuid.uuid[1]
	    = (uint8_t)(DIS_CHAR_FIRMWARE_REIVSION_UUID >> 8);         /* UUID : Software Revision */
    330c:	3301      	adds	r3, #1
    330e:	4642      	mov	r2, r8
    3310:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[4].properties = AT_BLE_CHAR_READ; /* Properties */
    3312:	3310      	adds	r3, #16
    3314:	465a      	mov	r2, fp
    3316:	52e2      	strh	r2, [r4, r3]

	memcpy(char_value.default_firmware_revision, DEFAULT_FIRMWARE_REIVSION, DIS_CHAR_FIRMWARE_REIVSION_INIT_LEN);
    3318:	2207      	movs	r2, #7
    331a:	4991      	ldr	r1, [pc, #580]	; (3560 <dis_init_service+0x3f8>)
    331c:	4891      	ldr	r0, [pc, #580]	; (3564 <dis_init_service+0x3fc>)
    331e:	47c8      	blx	r9
	device_info_serv->serv_chars[4].init_value = char_value.default_firmware_revision;
    3320:	238e      	movs	r3, #142	; 0x8e
    3322:	005b      	lsls	r3, r3, #1
    3324:	4a8f      	ldr	r2, [pc, #572]	; (3564 <dis_init_service+0x3fc>)
    3326:	50e2      	str	r2, [r4, r3]

	device_info_serv->serv_chars[4].value_init_len = DIS_CHAR_FIRMWARE_REIVSION_INIT_LEN;
    3328:	3304      	adds	r3, #4
    332a:	2207      	movs	r2, #7
    332c:	52e2      	strh	r2, [r4, r3]
	device_info_serv->serv_chars[4].value_max_len  = DIS_CHAR_FIRMWARE_REIVSION_MAX_LEN;
    332e:	3302      	adds	r3, #2
    3330:	2214      	movs	r2, #20
    3332:	52e2      	strh	r2, [r4, r3]
#if BLE_PAIR_ENABLE
	device_info_serv->serv_chars[4].value_permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR; /* permissions */
    3334:	3302      	adds	r3, #2
    3336:	4652      	mov	r2, sl
    3338:	54e2      	strb	r2, [r4, r3]
#else
	device_info_serv->serv_chars[4].value_permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR; /* permissions */
#endif
	device_info_serv->serv_chars[4].user_desc             = NULL; /* user defined name */
    333a:	3304      	adds	r3, #4
    333c:	50e5      	str	r5, [r4, r3]
	device_info_serv->serv_chars[4].user_desc_len         = 0;
    333e:	3304      	adds	r3, #4
    3340:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[4].user_desc_max_len     = 0;
    3342:	3302      	adds	r3, #2
    3344:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[4].user_desc_permissions = AT_BLE_ATTR_NO_PERMISSIONS; /*user description permissions*/
    3346:	3306      	adds	r3, #6
    3348:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[4].client_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS; /*client config permissions*/
    334a:	2336      	movs	r3, #54	; 0x36
    334c:	33ff      	adds	r3, #255	; 0xff
    334e:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[4].server_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS;                            /*server config permissions*/
    3350:	3301      	adds	r3, #1
    3352:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[4].user_desc_handle     = 0;    /*user desc handles*/
    3354:	3302      	adds	r3, #2
    3356:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[4].client_config_handle = 0;    /*client config handles*/
    3358:	3302      	adds	r3, #2
    335a:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[4].server_config_handle = 0;    /*server config handles*/
    335c:	3302      	adds	r3, #2
    335e:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[4].presentation_format  = NULL; /* presentation format */
    3360:	3b0c      	subs	r3, #12
    3362:	50e5      	str	r5, [r4, r3]

	// Characteristic Info for Software  Revision
	device_info_serv->serv_chars[5].char_val_handle = 0; /* handle stored here */
    3364:	3310      	adds	r3, #16
    3366:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[5].uuid.type       = AT_BLE_UUID_16;
    3368:	3302      	adds	r3, #2
    336a:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[5].uuid.uuid[0]
	    = (uint8_t)DIS_CHAR_SOFTWARE_REVISION_UUID; /* uuid : software revision */
    336c:	2228      	movs	r2, #40	; 0x28
    336e:	2344      	movs	r3, #68	; 0x44
    3370:	33ff      	adds	r3, #255	; 0xff
    3372:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[5].uuid.uuid[1]
	    = (uint8_t)(DIS_CHAR_SOFTWARE_REVISION_UUID >> 8);         /* uuid : software revision */
    3374:	3301      	adds	r3, #1
    3376:	4642      	mov	r2, r8
    3378:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[5].properties = AT_BLE_CHAR_READ; /* properties */
    337a:	3310      	adds	r3, #16
    337c:	465a      	mov	r2, fp
    337e:	52e2      	strh	r2, [r4, r3]

	memcpy(char_value.default_software_revision, DEFAULT_SOFTWARE_REVISION, DIS_CHAR_SOFTWARE_REVISION_INIT_LEN);
    3380:	2207      	movs	r2, #7
    3382:	4979      	ldr	r1, [pc, #484]	; (3568 <dis_init_service+0x400>)
    3384:	4879      	ldr	r0, [pc, #484]	; (356c <dis_init_service+0x404>)
    3386:	47c8      	blx	r9
	device_info_serv->serv_chars[5].init_value = char_value.default_software_revision;
    3388:	23ac      	movs	r3, #172	; 0xac
    338a:	005b      	lsls	r3, r3, #1
    338c:	4a77      	ldr	r2, [pc, #476]	; (356c <dis_init_service+0x404>)
    338e:	50e2      	str	r2, [r4, r3]

	device_info_serv->serv_chars[5].value_init_len = DIS_CHAR_SOFTWARE_REVISION_INIT_LEN;
    3390:	3304      	adds	r3, #4
    3392:	2207      	movs	r2, #7
    3394:	52e2      	strh	r2, [r4, r3]
	device_info_serv->serv_chars[5].value_max_len  = DIS_CHAR_SOFTWARE_REVISION_MAX_LEN;
    3396:	3302      	adds	r3, #2
    3398:	2214      	movs	r2, #20
    339a:	52e2      	strh	r2, [r4, r3]
#if BLE_PAIR_ENABLE
	device_info_serv->serv_chars[5].value_permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR; /* permissions */
    339c:	3302      	adds	r3, #2
    339e:	4652      	mov	r2, sl
    33a0:	54e2      	strb	r2, [r4, r3]
#else
	device_info_serv->serv_chars[5].value_permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR; /* permissions */
#endif
	device_info_serv->serv_chars[5].user_desc             = NULL; /* user defined name */
    33a2:	3304      	adds	r3, #4
    33a4:	50e5      	str	r5, [r4, r3]
	device_info_serv->serv_chars[5].user_desc_len         = 0;
    33a6:	3304      	adds	r3, #4
    33a8:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[5].user_desc_max_len     = 0;
    33aa:	3302      	adds	r3, #2
    33ac:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[5].user_desc_permissions = AT_BLE_ATTR_NO_PERMISSIONS; /*user description permissions*/
    33ae:	3306      	adds	r3, #6
    33b0:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[5].client_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS; /*client config permissions*/
    33b2:	2372      	movs	r3, #114	; 0x72
    33b4:	33ff      	adds	r3, #255	; 0xff
    33b6:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[5].server_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS;                            /*server config permissions*/
    33b8:	3301      	adds	r3, #1
    33ba:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[5].user_desc_handle     = 0;    /*user desc handles*/
    33bc:	3302      	adds	r3, #2
    33be:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[5].client_config_handle = 0;    /*client config handles*/
    33c0:	3302      	adds	r3, #2
    33c2:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[5].server_config_handle = 0;    /*server config handles*/
    33c4:	3302      	adds	r3, #2
    33c6:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[5].presentation_format  = NULL; /* presentation format */
    33c8:	3b0c      	subs	r3, #12
    33ca:	50e5      	str	r5, [r4, r3]

	// Characteristic Info for SystemID  Number
	device_info_serv->serv_chars[6].char_val_handle = 0; /* handle stored here */
    33cc:	3310      	adds	r3, #16
    33ce:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[6].uuid.type       = AT_BLE_UUID_16;
    33d0:	3302      	adds	r3, #2
    33d2:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[6].uuid.uuid[0]    = (uint8_t)DIS_CHAR_SYSTEM_ID_UUID; /* UUID : Software Revision */
    33d4:	2223      	movs	r2, #35	; 0x23
    33d6:	2380      	movs	r3, #128	; 0x80
    33d8:	33ff      	adds	r3, #255	; 0xff
    33da:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[6].uuid.uuid[1]
	    = (uint8_t)(DIS_CHAR_SYSTEM_ID_UUID >> 8);                 /* UUID : Software Revision */
    33dc:	3301      	adds	r3, #1
    33de:	4642      	mov	r2, r8
    33e0:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[6].properties = AT_BLE_CHAR_READ; /* Properties */
    33e2:	3310      	adds	r3, #16
    33e4:	465a      	mov	r2, fp
    33e6:	52e2      	strh	r2, [r4, r3]

	memcpy(char_value.default_system_id.manufacturer_id, SYSTEM_ID_MANUFACTURER_ID, SYSTEM_ID_MANUFACTURER_ID_LEN);
    33e8:	2205      	movs	r2, #5
    33ea:	4961      	ldr	r1, [pc, #388]	; (3570 <dis_init_service+0x408>)
    33ec:	4861      	ldr	r0, [pc, #388]	; (3574 <dis_init_service+0x40c>)
    33ee:	47c8      	blx	r9
	memcpy(char_value.default_system_id.org_unique_id, SYSTEM_ID_ORG_UNIQUE_ID, SYSTEM_ID_ORG_UNIQUE_ID_LEN);
    33f0:	0038      	movs	r0, r7
    33f2:	307d      	adds	r0, #125	; 0x7d
    33f4:	495e      	ldr	r1, [pc, #376]	; (3570 <dis_init_service+0x408>)
    33f6:	3108      	adds	r1, #8
    33f8:	2203      	movs	r2, #3
    33fa:	47c8      	blx	r9
	device_info_serv->serv_chars[6].init_value = (uint8_t *)&char_value.default_system_id; /*Initial Value*/
    33fc:	23ca      	movs	r3, #202	; 0xca
    33fe:	005b      	lsls	r3, r3, #1
    3400:	4a5c      	ldr	r2, [pc, #368]	; (3574 <dis_init_service+0x40c>)
    3402:	50e2      	str	r2, [r4, r3]

	device_info_serv->serv_chars[6].value_init_len = DIS_CHAR_SYSTEM_ID_INIT_LEN;
    3404:	3b8d      	subs	r3, #141	; 0x8d
    3406:	3bff      	subs	r3, #255	; 0xff
    3408:	22cc      	movs	r2, #204	; 0xcc
    340a:	0052      	lsls	r2, r2, #1
    340c:	52a3      	strh	r3, [r4, r2]
	device_info_serv->serv_chars[6].value_max_len  = DIS_CHAR_SYSTEM_ID_MAX_LEN;
    340e:	3202      	adds	r2, #2
    3410:	52a3      	strh	r3, [r4, r2]
#if BLE_PAIR_ENABLE
	device_info_serv->serv_chars[6].value_permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR; /* permissions */
    3412:	3395      	adds	r3, #149	; 0x95
    3414:	33ff      	adds	r3, #255	; 0xff
    3416:	4652      	mov	r2, sl
    3418:	54e2      	strb	r2, [r4, r3]
#else
	device_info_serv->serv_chars[6].value_permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR; /* permissions */
#endif
	device_info_serv->serv_chars[6].user_desc             = NULL; /* user defined name */
    341a:	3304      	adds	r3, #4
    341c:	50e5      	str	r5, [r4, r3]
	device_info_serv->serv_chars[6].user_desc_len         = 0;
    341e:	3304      	adds	r3, #4
    3420:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[6].user_desc_max_len     = 0;
    3422:	3302      	adds	r3, #2
    3424:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[6].user_desc_permissions = AT_BLE_ATTR_NO_PERMISSIONS; /*user description permissions*/
    3426:	3306      	adds	r3, #6
    3428:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[6].client_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS; /*client config permissions*/
    342a:	23ae      	movs	r3, #174	; 0xae
    342c:	33ff      	adds	r3, #255	; 0xff
    342e:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[6].server_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS;                            /*server config permissions*/
    3430:	3301      	adds	r3, #1
    3432:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[6].user_desc_handle     = 0;    /*user desc handles*/
    3434:	3302      	adds	r3, #2
    3436:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[6].client_config_handle = 0;    /*client config handles*/
    3438:	3302      	adds	r3, #2
    343a:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[6].server_config_handle = 0;    /*server config handles*/
    343c:	3302      	adds	r3, #2
    343e:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[6].presentation_format  = NULL; /* presentation format */
    3440:	3b0c      	subs	r3, #12
    3442:	50e5      	str	r5, [r4, r3]

	// Characteristic Info for PnP ID
	device_info_serv->serv_chars[7].char_val_handle = 0; /* handle stored here */
    3444:	3310      	adds	r3, #16
    3446:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[7].uuid.type       = AT_BLE_UUID_16;
    3448:	3302      	adds	r3, #2
    344a:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[7].uuid.uuid[0]    = (uint8_t)DIS_CHAR_PNP_ID_UUID;     /* UUID : Software Revision */
    344c:	23bc      	movs	r3, #188	; 0xbc
    344e:	33ff      	adds	r3, #255	; 0xff
    3450:	2250      	movs	r2, #80	; 0x50
    3452:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[7].uuid.uuid[1] = (uint8_t)(DIS_CHAR_PNP_ID_UUID >> 8); /* UUID : Software Revision */
    3454:	3301      	adds	r3, #1
    3456:	4642      	mov	r2, r8
    3458:	54e2      	strb	r2, [r4, r3]
	device_info_serv->serv_chars[7].properties   = AT_BLE_CHAR_READ;                     /* Properties */
    345a:	3310      	adds	r3, #16
    345c:	465a      	mov	r2, fp
    345e:	52e2      	strh	r2, [r4, r3]

	char_value.default_pnp_id.vendor_id_source = PNP_ID_VENDOR_ID_SOURCE; /*characteristic value initialization */
    3460:	3bcc      	subs	r3, #204	; 0xcc
    3462:	3bff      	subs	r3, #255	; 0xff
    3464:	2280      	movs	r2, #128	; 0x80
    3466:	54bb      	strb	r3, [r7, r2]
	char_value.default_pnp_id.vendor_id        = PNP_ID_VENDOR_ID;
    3468:	3a5e      	subs	r2, #94	; 0x5e
    346a:	2181      	movs	r1, #129	; 0x81
    346c:	547a      	strb	r2, [r7, r1]
    346e:	003a      	movs	r2, r7
    3470:	3281      	adds	r2, #129	; 0x81
    3472:	2122      	movs	r1, #34	; 0x22
    3474:	7051      	strb	r1, [r2, #1]
	char_value.default_pnp_id.product_id       = PNP_ID_PRODUCT_ID;
    3476:	2133      	movs	r1, #51	; 0x33
    3478:	2283      	movs	r2, #131	; 0x83
    347a:	54b9      	strb	r1, [r7, r2]
    347c:	003a      	movs	r2, r7
    347e:	3283      	adds	r2, #131	; 0x83
    3480:	7051      	strb	r1, [r2, #1]
	char_value.default_pnp_id.product_version  = PNP_ID_PRODUCT_VERSION;
    3482:	2285      	movs	r2, #133	; 0x85
    3484:	2101      	movs	r1, #1
    3486:	54b9      	strb	r1, [r7, r2]
    3488:	003a      	movs	r2, r7
    348a:	3285      	adds	r2, #133	; 0x85
    348c:	2100      	movs	r1, #0
    348e:	7051      	strb	r1, [r2, #1]
	device_info_serv->serv_chars[7].init_value = (uint8_t *)&char_value.default_pnp_id; /*Initial Value*/
    3490:	0039      	movs	r1, r7
    3492:	3180      	adds	r1, #128	; 0x80
    3494:	22e8      	movs	r2, #232	; 0xe8
    3496:	0052      	lsls	r2, r2, #1
    3498:	50a1      	str	r1, [r4, r2]

	device_info_serv->serv_chars[7].value_init_len = DIS_CHAR_PNP_ID_INIT_LEN;
    349a:	3204      	adds	r2, #4
    349c:	2107      	movs	r1, #7
    349e:	52a1      	strh	r1, [r4, r2]
	device_info_serv->serv_chars[7].value_max_len  = DIS_CHAR_PNP_ID_MAX_LEN;
    34a0:	3202      	adds	r2, #2
    34a2:	2107      	movs	r1, #7
    34a4:	52a1      	strh	r1, [r4, r2]
#if BLE_PAIR_ENABLE
	device_info_serv->serv_chars[7].value_permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR; /* permissions */
    34a6:	3202      	adds	r2, #2
    34a8:	4651      	mov	r1, sl
    34aa:	54a1      	strb	r1, [r4, r2]
#else
	device_info_serv->serv_chars[7].value_permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR; /* permissions */
#endif
	device_info_serv->serv_chars[7].user_desc             = NULL; /* user defined name */
    34ac:	3204      	adds	r2, #4
    34ae:	50a5      	str	r5, [r4, r2]
	device_info_serv->serv_chars[7].user_desc_len         = 0;
    34b0:	3204      	adds	r2, #4
    34b2:	52a5      	strh	r5, [r4, r2]
	device_info_serv->serv_chars[7].user_desc_max_len     = 0;
    34b4:	3202      	adds	r2, #2
    34b6:	52a5      	strh	r5, [r4, r2]
	device_info_serv->serv_chars[7].user_desc_permissions = AT_BLE_ATTR_NO_PERMISSIONS; /*user description permissions*/
    34b8:	3206      	adds	r2, #6
    34ba:	54a6      	strb	r6, [r4, r2]
	device_info_serv->serv_chars[7].client_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS; /*client config permissions*/
    34bc:	22ea      	movs	r2, #234	; 0xea
    34be:	32ff      	adds	r2, #255	; 0xff
    34c0:	54a6      	strb	r6, [r4, r2]
	device_info_serv->serv_chars[7].server_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS;                            /*server config permissions*/
    34c2:	3201      	adds	r2, #1
    34c4:	54a6      	strb	r6, [r4, r2]
	device_info_serv->serv_chars[7].user_desc_handle     = 0;    /*user desc handles*/
    34c6:	3202      	adds	r2, #2
    34c8:	52a5      	strh	r5, [r4, r2]
	device_info_serv->serv_chars[7].client_config_handle = 0;    /*client config handles*/
    34ca:	3202      	adds	r2, #2
    34cc:	52a5      	strh	r5, [r4, r2]
	device_info_serv->serv_chars[7].server_config_handle = 0;    /*server config handles*/
    34ce:	3202      	adds	r2, #2
    34d0:	52a5      	strh	r5, [r4, r2]
	device_info_serv->serv_chars[7].presentation_format  = NULL; /* presentation format */
    34d2:	3a0c      	subs	r2, #12
    34d4:	50a5      	str	r5, [r4, r2]

	// Characteristic Info for IEEE 11073-20601 Regulatory Certification Data List
	device_info_serv->serv_chars[8].char_val_handle = 0; /* handle stored here */
    34d6:	3210      	adds	r2, #16
    34d8:	52a5      	strh	r5, [r4, r2]
	device_info_serv->serv_chars[8].uuid.type       = AT_BLE_UUID_16;
    34da:	3202      	adds	r2, #2
    34dc:	54a6      	strb	r6, [r4, r2]
	device_info_serv->serv_chars[8].uuid.uuid[0]
	    = (uint8_t)DIS_CHAR_IEEE_REG_CERT_DATA_LIST_UUID; /* UUID : Software Revision */
    34de:	22f8      	movs	r2, #248	; 0xf8
    34e0:	32ff      	adds	r2, #255	; 0xff
    34e2:	4641      	mov	r1, r8
    34e4:	54a1      	strb	r1, [r4, r2]
	device_info_serv->serv_chars[8].uuid.uuid[1]
	    = (uint8_t)(DIS_CHAR_IEEE_REG_CERT_DATA_LIST_UUID >> 8);                         /* UUID : Software Revision */
    34e6:	3201      	adds	r2, #1
    34e8:	54a1      	strb	r1, [r4, r2]
	device_info_serv->serv_chars[8].properties     = AT_BLE_CHAR_READ;                   /* Properties */
    34ea:	3210      	adds	r2, #16
    34ec:	4659      	mov	r1, fp
    34ee:	52a1      	strh	r1, [r4, r2]
	device_info_serv->serv_chars[8].init_value     = char_value.ieee_reg_cert_data_list; /*Initial Value*/
    34f0:	3787      	adds	r7, #135	; 0x87
    34f2:	3204      	adds	r2, #4
    34f4:	50a7      	str	r7, [r4, r2]
	device_info_serv->serv_chars[8].value_init_len = DIS_CHAR_IEEE_REG_CERT_DATA_LIST_INIT_LEN;
    34f6:	3204      	adds	r2, #4
    34f8:	52a3      	strh	r3, [r4, r2]
	device_info_serv->serv_chars[8].value_max_len  = DIS_CHAR_IEEE_REG_CERT_DATA_LIST_MAX_LEN;
    34fa:	4b1f      	ldr	r3, [pc, #124]	; (3578 <dis_init_service+0x410>)
    34fc:	220a      	movs	r2, #10
    34fe:	52e2      	strh	r2, [r4, r3]
#if BLE_PAIR_ENABLE
	device_info_serv->serv_chars[8].value_permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR; /* permissions */
    3500:	3302      	adds	r3, #2
    3502:	4652      	mov	r2, sl
    3504:	54e2      	strb	r2, [r4, r3]
#else
	device_info_serv->serv_chars[8].value_permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR; /* permissions */
#endif
	device_info_serv->serv_chars[8].user_desc             = NULL; /* user defined name */
    3506:	3304      	adds	r3, #4
    3508:	50e5      	str	r5, [r4, r3]
	device_info_serv->serv_chars[8].user_desc_len         = 0;
    350a:	3304      	adds	r3, #4
    350c:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[8].user_desc_max_len     = 0;
    350e:	4b1b      	ldr	r3, [pc, #108]	; (357c <dis_init_service+0x414>)
    3510:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[8].user_desc_permissions = AT_BLE_ATTR_NO_PERMISSIONS; /*user description permissions*/
    3512:	3306      	adds	r3, #6
    3514:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[8].client_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS; /*client config permissions*/
    3516:	4b1a      	ldr	r3, [pc, #104]	; (3580 <dis_init_service+0x418>)
    3518:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[8].server_config_permissions
	    = AT_BLE_ATTR_NO_PERMISSIONS;                            /*server config permissions*/
    351a:	4b1a      	ldr	r3, [pc, #104]	; (3584 <dis_init_service+0x41c>)
    351c:	54e6      	strb	r6, [r4, r3]
	device_info_serv->serv_chars[8].user_desc_handle     = 0;    /*user desc handles*/
    351e:	3302      	adds	r3, #2
    3520:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[8].client_config_handle = 0;    /*client config handles*/
    3522:	4b19      	ldr	r3, [pc, #100]	; (3588 <dis_init_service+0x420>)
    3524:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[8].server_config_handle = 0;    /*server config handles*/
    3526:	3302      	adds	r3, #2
    3528:	52e5      	strh	r5, [r4, r3]
	device_info_serv->serv_chars[8].presentation_format  = NULL; /* presentation format */
    352a:	3b0c      	subs	r3, #12
    352c:	50e5      	str	r5, [r4, r3]
}
    352e:	bc3c      	pop	{r2, r3, r4, r5}
    3530:	4690      	mov	r8, r2
    3532:	4699      	mov	r9, r3
    3534:	46a2      	mov	sl, r4
    3536:	46ab      	mov	fp, r5
    3538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    353a:	46c0      	nop			; (mov r8, r8)
    353c:	20001634 	.word	0x20001634
    3540:	0000a970 	.word	0x0000a970
    3544:	00008a6f 	.word	0x00008a6f
    3548:	0000a984 	.word	0x0000a984
    354c:	20001648 	.word	0x20001648
    3550:	0000a998 	.word	0x0000a998
    3554:	2000165c 	.word	0x2000165c
    3558:	0000a9a0 	.word	0x0000a9a0
    355c:	20001670 	.word	0x20001670
    3560:	0000a9a8 	.word	0x0000a9a8
    3564:	20001684 	.word	0x20001684
    3568:	0000a9b0 	.word	0x0000a9b0
    356c:	20001698 	.word	0x20001698
    3570:	0000a964 	.word	0x0000a964
    3574:	200016ac 	.word	0x200016ac
    3578:	00000212 	.word	0x00000212
    357c:	0000021e 	.word	0x0000021e
    3580:	00000225 	.word	0x00000225
    3584:	00000226 	.word	0x00000226
    3588:	0000022a 	.word	0x0000022a

0000358c <dis_primary_service_define>:

/**@brief Register a dis service instance inside stack. */
at_ble_status_t dis_primary_service_define(dis_gatt_service_handler_t *dis_primary_service)
{
    358c:	b510      	push	{r4, lr}
    358e:	b082      	sub	sp, #8

	return (at_ble_primary_service_define(&dis_primary_service->serv_uuid,
    3590:	0001      	movs	r1, r0
    3592:	3112      	adds	r1, #18
    3594:	2309      	movs	r3, #9
    3596:	9301      	str	r3, [sp, #4]
	                                      &dis_primary_service->serv_handle,
	                                      NULL,
	                                      0,
	                                      dis_primary_service->serv_chars,
    3598:	0003      	movs	r3, r0
    359a:	3314      	adds	r3, #20
	return (at_ble_primary_service_define(&dis_primary_service->serv_uuid,
    359c:	9300      	str	r3, [sp, #0]
    359e:	2300      	movs	r3, #0
    35a0:	2200      	movs	r2, #0
    35a2:	4c02      	ldr	r4, [pc, #8]	; (35ac <dis_primary_service_define+0x20>)
    35a4:	47a0      	blx	r4
	                                      DIS_TOTAL_CHARATERISTIC_NUM));
}
    35a6:	b002      	add	sp, #8
    35a8:	bd10      	pop	{r4, pc}
    35aa:	46c0      	nop			; (mov r8, r8)
    35ac:	00005ad9 	.word	0x00005ad9

000035b0 <hid_serv_def_init>:

/**
 * \HID service definition initialization function
 */
void hid_serv_def_init(uint8_t servnum)
{
    35b0:	b510      	push	{r4, lr}
	uint8_t id                                     = 0;
	hid_serv_inst[servnum].hid_dev_serv_handle     = NULL;
    35b2:	4c09      	ldr	r4, [pc, #36]	; (35d8 <hid_serv_def_init+0x28>)
    35b4:	00c1      	lsls	r1, r0, #3
    35b6:	180b      	adds	r3, r1, r0
    35b8:	009b      	lsls	r3, r3, #2
    35ba:	2200      	movs	r2, #0
    35bc:	511a      	str	r2, [r3, r4]
	hid_serv_inst[servnum].hid_dev_serv_uuid       = NULL;
    35be:	180b      	adds	r3, r1, r0
    35c0:	009b      	lsls	r3, r3, #2
    35c2:	18e3      	adds	r3, r4, r3
    35c4:	605a      	str	r2, [r3, #4]
	hid_serv_inst[servnum].hid_dev_proto_mode_char = NULL;
    35c6:	609a      	str	r2, [r3, #8]
	hid_serv_inst[servnum].hid_dev_report_map_char = NULL;
    35c8:	60da      	str	r2, [r3, #12]
	for (; id < HID_NUM_OF_REPORT; id++) {
		hid_serv_inst[servnum].hid_dev_report_val_char[id] = NULL;
    35ca:	611a      	str	r2, [r3, #16]
	}
#ifdef HID_KEYBOARD_DEVICE
	hid_serv_inst[servnum].hid_dev_boot_keyboard_in_report  = NULL;
    35cc:	615a      	str	r2, [r3, #20]
	hid_serv_inst[servnum].hid_dev_boot_keyboard_out_report = NULL;
    35ce:	619a      	str	r2, [r3, #24]
#endif

#ifdef HID_MOUSE_DEVICE
	hid_serv_inst[servnum].hid_dev_boot_mouse_in_report = NULL;
#endif
	hid_serv_inst[servnum].hid_dev_info      = NULL;
    35d0:	61da      	str	r2, [r3, #28]
	hid_serv_inst[servnum].hid_control_point = NULL;
    35d2:	621a      	str	r2, [r3, #32]
}
    35d4:	bd10      	pop	{r4, pc}
    35d6:	46c0      	nop			; (mov r8, r8)
    35d8:	20001ae4 	.word	0x20001ae4

000035dc <hid_serv_init>:
/**
 * \HID service Configuration function
 */
void hid_serv_init(uint8_t servinst, uint8_t device, uint8_t *mode, uint8_t report_num, uint8_t *report_type,
                   uint8_t **report_val, uint8_t *report_len, hid_info_t *info)
{
    35dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    35de:	46de      	mov	lr, fp
    35e0:	4657      	mov	r7, sl
    35e2:	464e      	mov	r6, r9
    35e4:	4645      	mov	r5, r8
    35e6:	b5e0      	push	{r5, r6, r7, lr}
    35e8:	b08b      	sub	sp, #44	; 0x2c
    35ea:	0006      	movs	r6, r0
    35ec:	9109      	str	r1, [sp, #36]	; 0x24
    35ee:	4694      	mov	ip, r2
    35f0:	469a      	mov	sl, r3
    35f2:	9304      	str	r3, [sp, #16]
	uint8_t id = 0;
	/* Configure the HID service type */
	hid_inst[servinst].serv.type = PRIMARY_SERVICE;
    35f4:	9002      	str	r0, [sp, #8]
    35f6:	4bb9      	ldr	r3, [pc, #740]	; (38dc <hid_serv_init+0x300>)
    35f8:	469b      	mov	fp, r3
    35fa:	0240      	lsls	r0, r0, #9
    35fc:	2201      	movs	r2, #1
    35fe:	54c2      	strb	r2, [r0, r3]

	/* Configure the HID service permission */
	if (BLE_PAIR_ENABLE) {
		hid_inst[servinst].serv.perm
		    = (AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR | AT_BLE_ATTR_WRITABLE_REQ_AUTHN_NO_AUTHR);
    3600:	181b      	adds	r3, r3, r0
    3602:	2133      	movs	r1, #51	; 0x33
    3604:	7059      	strb	r1, [r3, #1]
		hid_inst[servinst].serv.perm
		    = (AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR | AT_BLE_ATTR_WRITABLE_NO_AUTHN_NO_AUTHR);
	}

	/* Configure the HID service handle */
	hid_inst[servinst].serv.handle = 0;
    3606:	2100      	movs	r1, #0
    3608:	2400      	movs	r4, #0
    360a:	8059      	strh	r1, [r3, #2]

	/* Configure HID Service */
	hid_inst[servinst].serv.uuid.type    = AT_BLE_UUID_16;
    360c:	711c      	strb	r4, [r3, #4]
	hid_inst[servinst].serv.uuid.uuid[0] = (uint8_t)HID_SERV_UUID;
    360e:	2512      	movs	r5, #18
    3610:	715d      	strb	r5, [r3, #5]
	hid_inst[servinst].serv.uuid.uuid[1] = (uint8_t)(HID_SERV_UUID >> 8);
    3612:	3506      	adds	r5, #6
    3614:	719d      	strb	r5, [r3, #6]

	/* Configure HID include service list */
	hid_inst[servinst].serv.inc_list = NULL;
    3616:	6199      	str	r1, [r3, #24]

	/* Configure the HID include service count */
	hid_inst[servinst].serv.included_count = 0;
    3618:	8399      	strh	r1, [r3, #28]
    361a:	9003      	str	r0, [sp, #12]

	/*Map the service UUID instance*/
	hid_serv_inst[servinst].hid_dev_serv_uuid = &hid_inst[servinst].serv.uuid;
    361c:	4db0      	ldr	r5, [pc, #704]	; (38e0 <hid_serv_init+0x304>)
    361e:	46a8      	mov	r8, r5
    3620:	0035      	movs	r5, r6
    3622:	00f7      	lsls	r7, r6, #3
    3624:	9701      	str	r7, [sp, #4]
    3626:	46b9      	mov	r9, r7
    3628:	444d      	add	r5, r9
    362a:	00ad      	lsls	r5, r5, #2
    362c:	4445      	add	r5, r8
    362e:	1d07      	adds	r7, r0, #4
    3630:	46b9      	mov	r9, r7
    3632:	44d9      	add	r9, fp
    3634:	464f      	mov	r7, r9
    3636:	9500      	str	r5, [sp, #0]
    3638:	606f      	str	r7, [r5, #4]

	/*Map the service UUID instance*/
	hid_serv_inst[servinst].hid_dev_serv_handle = &hid_inst[servinst].serv.handle;
    363a:	9607      	str	r6, [sp, #28]
    363c:	46b1      	mov	r9, r6
    363e:	9e01      	ldr	r6, [sp, #4]
    3640:	444e      	add	r6, r9
    3642:	00b7      	lsls	r7, r6, #2
    3644:	1c86      	adds	r6, r0, #2
    3646:	46b1      	mov	r9, r6
    3648:	44d9      	add	r9, fp
    364a:	4646      	mov	r6, r8
    364c:	464d      	mov	r5, r9
    364e:	51bd      	str	r5, [r7, r6]

	/*Configure HID Protocol Mode Characteristic : Value related info*/
	hid_inst[servinst].serv_chars[0].char_val.handle       = 0;
    3650:	8519      	strh	r1, [r3, #40]	; 0x28
	hid_inst[servinst].serv_chars[0].char_val.uuid.type    = AT_BLE_UUID_16;
    3652:	272a      	movs	r7, #42	; 0x2a
    3654:	252a      	movs	r5, #42	; 0x2a
    3656:	46a8      	mov	r8, r5
    3658:	4498      	add	r8, r3
    365a:	4645      	mov	r5, r8
    365c:	702c      	strb	r4, [r5, #0]
	hid_inst[servinst].serv_chars[0].char_val.uuid.uuid[0] = (uint8_t)HID_UUID_CHAR_PROTOCOL_MODE;
    365e:	252b      	movs	r5, #43	; 0x2b
    3660:	46a8      	mov	r8, r5
    3662:	4498      	add	r8, r3
    3664:	3523      	adds	r5, #35	; 0x23
    3666:	46a9      	mov	r9, r5
    3668:	4645      	mov	r5, r8
    366a:	464e      	mov	r6, r9
    366c:	702e      	strb	r6, [r5, #0]
	hid_inst[servinst].serv_chars[0].char_val.uuid.uuid[1] = (uint8_t)(HID_UUID_CHAR_PROTOCOL_MODE >> 8);
    366e:	252c      	movs	r5, #44	; 0x2c
    3670:	46a8      	mov	r8, r5
    3672:	4498      	add	r8, r3
    3674:	4645      	mov	r5, r8
    3676:	702f      	strb	r7, [r5, #0]
	hid_inst[servinst].serv_chars[0].char_val.properties   = (AT_BLE_CHAR_READ | AT_BLE_CHAR_WRITE_WITHOUT_RESPONSE);
    3678:	2506      	movs	r5, #6
    367a:	879d      	strh	r5, [r3, #60]	; 0x3c
	hid_inst[servinst].serv_chars[0].char_val.init_value   = mode;
    367c:	4665      	mov	r5, ip
    367e:	641d      	str	r5, [r3, #64]	; 0x40
	hid_inst[servinst].serv_chars[0].char_val.len          = sizeof(uint8_t);
    3680:	2544      	movs	r5, #68	; 0x44
    3682:	46ac      	mov	ip, r5
    3684:	449c      	add	ip, r3
    3686:	4665      	mov	r5, ip
    3688:	802a      	strh	r2, [r5, #0]

	/* Configure the HID characteristic value permission */
	hid_inst[servinst].serv_chars[0].char_val.permissions
	    = (AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR | AT_BLE_ATTR_WRITABLE_NO_AUTHN_NO_AUTHR);
    368a:	001a      	movs	r2, r3
    368c:	3246      	adds	r2, #70	; 0x46
    368e:	2511      	movs	r5, #17
    3690:	7015      	strb	r5, [r2, #0]

	/*Configure HID Protocol Mode Characteristic : user descriptor related info */
	hid_inst[servinst].serv_chars[0].user_desc.user_description = NULL;
    3692:	6499      	str	r1, [r3, #72]	; 0x48
	hid_inst[servinst].serv_chars[0].user_desc.len              = 0;
    3694:	3206      	adds	r2, #6
    3696:	8011      	strh	r1, [r2, #0]
	hid_inst[servinst].serv_chars[0].user_desc.handle           = 0;
    3698:	3202      	adds	r2, #2
    369a:	8011      	strh	r1, [r2, #0]
	hid_inst[servinst].serv_chars[0].user_desc.permissions      = AT_BLE_ATTR_NO_PERMISSIONS;
    369c:	3202      	adds	r2, #2
    369e:	7014      	strb	r4, [r2, #0]

	/*Configure HID Protocol Mode Characteristic : presentation format related info */
	hid_inst[servinst].serv_chars[0].presentation_format = NULL;
    36a0:	6559      	str	r1, [r3, #84]	; 0x54

	/*Configure HID Protocol Mode Characteristic : client config descriptor related info */
	hid_inst[servinst].serv_chars[0].client_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    36a2:	3208      	adds	r2, #8
    36a4:	7014      	strb	r4, [r2, #0]
	hid_inst[servinst].serv_chars[0].client_config_desc.handle = 0;
    36a6:	3202      	adds	r2, #2
    36a8:	8011      	strh	r1, [r2, #0]

	/*Configure HID Protocol Mode Characteristic : server config descriptor related info */
	hid_inst[servinst].serv_chars[0].server_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    36aa:	3202      	adds	r2, #2
    36ac:	7014      	strb	r4, [r2, #0]
	hid_inst[servinst].serv_chars[0].server_config_desc.handle = 0;
    36ae:	3202      	adds	r2, #2
    36b0:	8011      	strh	r1, [r2, #0]

	/*Configure HID Protocol Mode Characteristic : generic descriptor related info */
	hid_inst[servinst].serv_chars[0].additional_desc_list = NULL;
    36b2:	6619      	str	r1, [r3, #96]	; 0x60

	/*Configure HID Protocol Mode Characteristic : count of generic descriptor */
	hid_inst[servinst].serv_chars[0].additional_desc_count = 0;
    36b4:	3206      	adds	r2, #6
    36b6:	8011      	strh	r1, [r2, #0]

	/*Map the device protocol mode characteristic*/
	hid_serv_inst[servinst].hid_dev_proto_mode_char = &hid_inst[servinst].serv_chars[0];
    36b8:	0002      	movs	r2, r0
    36ba:	3228      	adds	r2, #40	; 0x28
    36bc:	445a      	add	r2, fp
    36be:	9208      	str	r2, [sp, #32]
    36c0:	9d00      	ldr	r5, [sp, #0]
    36c2:	60aa      	str	r2, [r5, #8]

	/*Configure HID Report Map Characteristic : Value related info*/
	hid_inst[servinst].serv_chars[1].char_val.handle       = 0;
    36c4:	001a      	movs	r2, r3
    36c6:	3268      	adds	r2, #104	; 0x68
    36c8:	8011      	strh	r1, [r2, #0]
	hid_inst[servinst].serv_chars[1].char_val.uuid.type    = AT_BLE_UUID_16;
    36ca:	3202      	adds	r2, #2
    36cc:	7014      	strb	r4, [r2, #0]
	hid_inst[servinst].serv_chars[1].char_val.uuid.uuid[0] = (uint8_t)HID_UUID_CHAR_REPORT_MAP;
    36ce:	3201      	adds	r2, #1
    36d0:	254b      	movs	r5, #75	; 0x4b
    36d2:	7015      	strb	r5, [r2, #0]
	hid_inst[servinst].serv_chars[1].char_val.uuid.uuid[1] = (uint8_t)(HID_UUID_CHAR_REPORT_MAP >> 8);
    36d4:	3201      	adds	r2, #1
    36d6:	7017      	strb	r7, [r2, #0]
	hid_inst[servinst].serv_chars[1].char_val.properties   = AT_BLE_CHAR_READ;
    36d8:	001f      	movs	r7, r3
    36da:	377c      	adds	r7, #124	; 0x7c
    36dc:	003a      	movs	r2, r7
    36de:	2702      	movs	r7, #2
    36e0:	8017      	strh	r7, [r2, #0]

	/* Configure the HID characteristic value permission */
	if (BLE_PAIR_ENABLE) {
		hid_inst[servinst].serv_chars[1].char_val.permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR;
    36e2:	001f      	movs	r7, r3
    36e4:	3786      	adds	r7, #134	; 0x86
    36e6:	003a      	movs	r2, r7
    36e8:	2703      	movs	r7, #3
    36ea:	7017      	strb	r7, [r2, #0]
	} else {
		hid_inst[servinst].serv_chars[1].char_val.permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR;
	}

	/*Configure HID Report Map Characteristic : user descriptor related info */
	hid_inst[servinst].serv_chars[1].user_desc.user_description = NULL;
    36ec:	001f      	movs	r7, r3
    36ee:	3788      	adds	r7, #136	; 0x88
    36f0:	6039      	str	r1, [r7, #0]
	hid_inst[servinst].serv_chars[1].user_desc.len              = 0;
    36f2:	3704      	adds	r7, #4
    36f4:	8039      	strh	r1, [r7, #0]
	hid_inst[servinst].serv_chars[1].user_desc.handle           = 0;
    36f6:	3702      	adds	r7, #2
    36f8:	8039      	strh	r1, [r7, #0]
	hid_inst[servinst].serv_chars[1].user_desc.permissions      = AT_BLE_ATTR_NO_PERMISSIONS;
    36fa:	3702      	adds	r7, #2
    36fc:	703c      	strb	r4, [r7, #0]

	/*Configure HID Report Map Characteristic : presentation format related info */
	hid_inst[servinst].serv_chars[1].presentation_format = NULL;
    36fe:	3704      	adds	r7, #4
    3700:	6039      	str	r1, [r7, #0]

	/*Configure HID Report Map Characteristic : client config descriptor related info */
	hid_inst[servinst].serv_chars[1].client_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    3702:	3704      	adds	r7, #4
    3704:	703c      	strb	r4, [r7, #0]
	hid_inst[servinst].serv_chars[1].client_config_desc.handle = 0;
    3706:	3702      	adds	r7, #2
    3708:	8039      	strh	r1, [r7, #0]

	/*Configure HID Report Map Characteristic : server config descriptor related info */
	hid_inst[servinst].serv_chars[1].server_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    370a:	3702      	adds	r7, #2
    370c:	703c      	strb	r4, [r7, #0]
	hid_inst[servinst].serv_chars[1].server_config_desc.handle = 0;
    370e:	001c      	movs	r4, r3
    3710:	349e      	adds	r4, #158	; 0x9e
    3712:	8021      	strh	r1, [r4, #0]

	/*Configure HID Report Map Characteristic : generic descriptor related info */
	hid_inst[servinst].serv_chars[1].additional_desc_list = NULL;
    3714:	3402      	adds	r4, #2
    3716:	6021      	str	r1, [r4, #0]

	/*Configure HID Report Map Characteristic : count of generic descriptor */
	hid_inst[servinst].serv_chars[1].additional_desc_count = 0;
    3718:	33a4      	adds	r3, #164	; 0xa4
    371a:	8019      	strh	r1, [r3, #0]

	/*Map the device Report Map characteristic*/
	hid_serv_inst[servinst].hid_dev_report_map_char = &hid_inst[servinst].serv_chars[1];
    371c:	3068      	adds	r0, #104	; 0x68
    371e:	4458      	add	r0, fp
    3720:	9b00      	ldr	r3, [sp, #0]
    3722:	60d8      	str	r0, [r3, #12]

	/*Configure number of HID report*/
	for (id = 1; id <= report_num; ++id) {
    3724:	4653      	mov	r3, sl
    3726:	2b00      	cmp	r3, #0
    3728:	d100      	bne.n	372c <hid_serv_init+0x150>
    372a:	e0dd      	b.n	38e8 <hid_serv_init+0x30c>
    372c:	9e07      	ldr	r6, [sp, #28]
    372e:	00f3      	lsls	r3, r6, #3
    3730:	9305      	str	r3, [sp, #20]
    3732:	2601      	movs	r6, #1
		/*Configure HID Report Characteristic : Value related info*/
		hid_inst[servinst].serv_chars[id + 1].char_val.handle       = 0;
    3734:	46d8      	mov	r8, fp
    3736:	9a02      	ldr	r2, [sp, #8]
    3738:	00d3      	lsls	r3, r2, #3
    373a:	469b      	mov	fp, r3
    373c:	2700      	movs	r7, #0
    373e:	2300      	movs	r3, #0
    3740:	469c      	mov	ip, r3

		/*Configure HID Report Characteristic : count of generic descriptor */
		hid_inst[servinst].serv_chars[id + 1].additional_desc_count = 1;

		/*Map the report characteristic*/
		hid_serv_inst[servinst].hid_dev_report_val_char[id - 1] = &hid_inst[servinst].serv_chars[id + 1];
    3742:	445a      	add	r2, fp
    3744:	9206      	str	r2, [sp, #24]
    3746:	e079      	b.n	383c <hid_serv_init+0x260>
			hid_inst[servinst].serv_chars[id + 1].char_val.properties = (AT_BLE_CHAR_READ | AT_BLE_CHAR_NOTIFY);
    3748:	465b      	mov	r3, fp
    374a:	185b      	adds	r3, r3, r1
    374c:	019a      	lsls	r2, r3, #6
    374e:	4c63      	ldr	r4, [pc, #396]	; (38dc <hid_serv_init+0x300>)
    3750:	46a1      	mov	r9, r4
    3752:	444a      	add	r2, r9
    3754:	2412      	movs	r4, #18
    3756:	8794      	strh	r4, [r2, #60]	; 0x3c
				hid_inst[servinst].serv_chars[id + 1].char_val.permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR;
    3758:	3301      	adds	r3, #1
    375a:	019b      	lsls	r3, r3, #6
    375c:	444b      	add	r3, r9
    375e:	2403      	movs	r4, #3
    3760:	719c      	strb	r4, [r3, #6]
			    = (AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR | AT_BLE_ATTR_WRITABLE_NO_AUTHN_NO_AUTHR);
    3762:	0013      	movs	r3, r2
    3764:	3358      	adds	r3, #88	; 0x58
    3766:	340e      	adds	r4, #14
    3768:	701c      	strb	r4, [r3, #0]
			hid_inst[servinst].serv_chars[id + 1].client_config_desc.handle = 0;
    376a:	325a      	adds	r2, #90	; 0x5a
    376c:	8017      	strh	r7, [r2, #0]
		hid_inst[servinst].serv_chars[id + 1].user_desc.user_description = NULL;
    376e:	4d5b      	ldr	r5, [pc, #364]	; (38dc <hid_serv_init+0x300>)
    3770:	465b      	mov	r3, fp
    3772:	185b      	adds	r3, r3, r1
    3774:	019b      	lsls	r3, r3, #6
    3776:	18eb      	adds	r3, r5, r3
    3778:	649f      	str	r7, [r3, #72]	; 0x48
		hid_inst[servinst].serv_chars[id + 1].user_desc.len              = 0;
    377a:	001a      	movs	r2, r3
    377c:	324c      	adds	r2, #76	; 0x4c
    377e:	8017      	strh	r7, [r2, #0]
		hid_inst[servinst].serv_chars[id + 1].user_desc.handle           = 0;
    3780:	3202      	adds	r2, #2
    3782:	8017      	strh	r7, [r2, #0]
		hid_inst[servinst].serv_chars[id + 1].user_desc.permissions      = AT_BLE_ATTR_NO_PERMISSIONS;
    3784:	3202      	adds	r2, #2
    3786:	4664      	mov	r4, ip
    3788:	7014      	strb	r4, [r2, #0]
		hid_inst[servinst].serv_chars[id + 1].presentation_format = NULL;
    378a:	655f      	str	r7, [r3, #84]	; 0x54
		hid_inst[servinst].serv_chars[id + 1].server_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    378c:	320c      	adds	r2, #12
    378e:	7014      	strb	r4, [r2, #0]
		hid_inst[servinst].serv_chars[id + 1].server_config_desc.handle = 0;
    3790:	3202      	adds	r2, #2
    3792:	8017      	strh	r7, [r2, #0]
		hid_inst[servinst].serv_desc[id - 1].desc_val_length = (sizeof(uint8_t) * 2);
    3794:	3801      	subs	r0, #1
    3796:	2416      	movs	r4, #22
    3798:	9000      	str	r0, [sp, #0]
    379a:	4360      	muls	r0, r4
    379c:	9a02      	ldr	r2, [sp, #8]
    379e:	0252      	lsls	r2, r2, #9
    37a0:	9001      	str	r0, [sp, #4]
    37a2:	4681      	mov	r9, r0
    37a4:	444a      	add	r2, r9
    37a6:	18aa      	adds	r2, r5, r2
    37a8:	20f4      	movs	r0, #244	; 0xf4
    37aa:	0040      	lsls	r0, r0, #1
    37ac:	4681      	mov	r9, r0
    37ae:	4491      	add	r9, r2
    37b0:	38e7      	subs	r0, #231	; 0xe7
    37b2:	38ff      	subs	r0, #255	; 0xff
    37b4:	4682      	mov	sl, r0
    37b6:	4648      	mov	r0, r9
    37b8:	4654      	mov	r4, sl
    37ba:	8004      	strh	r4, [r0, #0]
		hid_inst[servinst].serv_desc[id - 1].perm            = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR;
    37bc:	20f5      	movs	r0, #245	; 0xf5
    37be:	0040      	lsls	r0, r0, #1
    37c0:	4682      	mov	sl, r0
    37c2:	4492      	add	sl, r2
    37c4:	38ea      	subs	r0, #234	; 0xea
    37c6:	38ff      	subs	r0, #255	; 0xff
    37c8:	4681      	mov	r9, r0
    37ca:	4650      	mov	r0, sl
    37cc:	464c      	mov	r4, r9
    37ce:	7004      	strb	r4, [r0, #0]
		hid_inst[servinst].serv_desc[id - 1].uuid.type       = AT_BLE_UUID_16;
    37d0:	20ec      	movs	r0, #236	; 0xec
    37d2:	30ff      	adds	r0, #255	; 0xff
    37d4:	4682      	mov	sl, r0
    37d6:	4492      	add	sl, r2
    37d8:	4650      	mov	r0, sl
    37da:	4664      	mov	r4, ip
    37dc:	7004      	strb	r4, [r0, #0]
		hid_inst[servinst].serv_desc[id - 1].uuid.uuid[0]    = (uint8_t)HID_REPORT_REF_DESC;
    37de:	20f6      	movs	r0, #246	; 0xf6
    37e0:	0040      	lsls	r0, r0, #1
    37e2:	4682      	mov	sl, r0
    37e4:	4492      	add	sl, r2
    37e6:	4650      	mov	r0, sl
    37e8:	2408      	movs	r4, #8
    37ea:	7004      	strb	r4, [r0, #0]
		hid_inst[servinst].serv_desc[id - 1].uuid.uuid[1]    = (uint8_t)(HID_REPORT_REF_DESC >> 8);
    37ec:	20ee      	movs	r0, #238	; 0xee
    37ee:	30ff      	adds	r0, #255	; 0xff
    37f0:	4682      	mov	sl, r0
    37f2:	4492      	add	sl, r2
    37f4:	4650      	mov	r0, sl
    37f6:	2429      	movs	r4, #41	; 0x29
    37f8:	7004      	strb	r4, [r0, #0]
		hid_inst[servinst].serv_desc[id - 1].handle          = 0;
    37fa:	32fd      	adds	r2, #253	; 0xfd
    37fc:	32ff      	adds	r2, #255	; 0xff
    37fe:	8017      	strh	r7, [r2, #0]
		hid_inst[servinst].serv_chars[id + 1].additional_desc_list = &hid_inst[servinst].serv_desc[id - 1];
    3800:	9a03      	ldr	r2, [sp, #12]
    3802:	32e9      	adds	r2, #233	; 0xe9
    3804:	32ff      	adds	r2, #255	; 0xff
    3806:	9801      	ldr	r0, [sp, #4]
    3808:	1884      	adds	r4, r0, r2
    380a:	1964      	adds	r4, r4, r5
    380c:	661c      	str	r4, [r3, #96]	; 0x60
		hid_inst[servinst].serv_chars[id + 1].additional_desc_count = 1;
    380e:	3364      	adds	r3, #100	; 0x64
    3810:	464a      	mov	r2, r9
    3812:	801a      	strh	r2, [r3, #0]
		hid_serv_inst[servinst].hid_dev_report_val_char[id - 1] = &hid_inst[servinst].serv_chars[id + 1];
    3814:	9b06      	ldr	r3, [sp, #24]
    3816:	4699      	mov	r9, r3
    3818:	9b00      	ldr	r3, [sp, #0]
    381a:	444b      	add	r3, r9
    381c:	0018      	movs	r0, r3
    381e:	3004      	adds	r0, #4
    3820:	0080      	lsls	r0, r0, #2
    3822:	9b05      	ldr	r3, [sp, #20]
    3824:	4699      	mov	r9, r3
    3826:	4449      	add	r1, r9
    3828:	0189      	lsls	r1, r1, #6
    382a:	3128      	adds	r1, #40	; 0x28
    382c:	194d      	adds	r5, r1, r5
    382e:	4b2c      	ldr	r3, [pc, #176]	; (38e0 <hid_serv_init+0x304>)
    3830:	50c5      	str	r5, [r0, r3]
	for (id = 1; id <= report_num; ++id) {
    3832:	3601      	adds	r6, #1
    3834:	b2f6      	uxtb	r6, r6
    3836:	9b04      	ldr	r3, [sp, #16]
    3838:	42b3      	cmp	r3, r6
    383a:	d356      	bcc.n	38ea <hid_serv_init+0x30e>
		hid_inst[servinst].serv_chars[id + 1].char_val.handle       = 0;
    383c:	0030      	movs	r0, r6
    383e:	1c71      	adds	r1, r6, #1
    3840:	465b      	mov	r3, fp
    3842:	185b      	adds	r3, r3, r1
    3844:	019a      	lsls	r2, r3, #6
    3846:	4442      	add	r2, r8
    3848:	8517      	strh	r7, [r2, #40]	; 0x28
		hid_inst[servinst].serv_chars[id + 1].char_val.uuid.type    = AT_BLE_UUID_16;
    384a:	0014      	movs	r4, r2
    384c:	342a      	adds	r4, #42	; 0x2a
    384e:	4665      	mov	r5, ip
    3850:	7025      	strb	r5, [r4, #0]
		hid_inst[servinst].serv_chars[id + 1].char_val.uuid.uuid[0] = (uint8_t)HID_UUID_CHAR_REPORT;
    3852:	3401      	adds	r4, #1
    3854:	254d      	movs	r5, #77	; 0x4d
    3856:	7025      	strb	r5, [r4, #0]
		hid_inst[servinst].serv_chars[id + 1].char_val.uuid.uuid[1] = (uint8_t)(HID_UUID_CHAR_REPORT >> 8);
    3858:	322c      	adds	r2, #44	; 0x2c
    385a:	242a      	movs	r4, #42	; 0x2a
    385c:	7014      	strb	r4, [r2, #0]
		hid_inst[servinst].serv_chars[id + 1].char_val.init_value   = ((report_val[id - 1]));
    385e:	4a21      	ldr	r2, [pc, #132]	; (38e4 <hid_serv_init+0x308>)
    3860:	18b2      	adds	r2, r6, r2
    3862:	0092      	lsls	r2, r2, #2
    3864:	9c15      	ldr	r4, [sp, #84]	; 0x54
    3866:	5912      	ldr	r2, [r2, r4]
    3868:	3301      	adds	r3, #1
    386a:	019b      	lsls	r3, r3, #6
    386c:	4644      	mov	r4, r8
    386e:	511a      	str	r2, [r3, r4]
		hid_inst[servinst].serv_chars[id + 1].char_val.len          = report_len[id - 1];
    3870:	1e72      	subs	r2, r6, #1
    3872:	4443      	add	r3, r8
    3874:	9c16      	ldr	r4, [sp, #88]	; 0x58
    3876:	5ca4      	ldrb	r4, [r4, r2]
    3878:	809c      	strh	r4, [r3, #4]
		if (report_type[id - 1] == INPUT_REPORT) {
    387a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    387c:	5c9b      	ldrb	r3, [r3, r2]
    387e:	2b01      	cmp	r3, #1
    3880:	d100      	bne.n	3884 <hid_serv_init+0x2a8>
    3882:	e761      	b.n	3748 <hid_serv_init+0x16c>
		} else if (report_type[id - 1] == OUTPUT_REPORT) {
    3884:	2b02      	cmp	r3, #2
    3886:	d015      	beq.n	38b4 <hid_serv_init+0x2d8>
		} else if (report_type[id - 1] == FEATURE_REPORT) {
    3888:	2b03      	cmp	r3, #3
    388a:	d000      	beq.n	388e <hid_serv_init+0x2b2>
    388c:	e76f      	b.n	376e <hid_serv_init+0x192>
			hid_inst[servinst].serv_chars[id + 1].char_val.properties = (AT_BLE_CHAR_READ | AT_BLE_CHAR_WRITE);
    388e:	465b      	mov	r3, fp
    3890:	185b      	adds	r3, r3, r1
    3892:	019a      	lsls	r2, r3, #6
    3894:	4c11      	ldr	r4, [pc, #68]	; (38dc <hid_serv_init+0x300>)
    3896:	46a1      	mov	r9, r4
    3898:	444a      	add	r2, r9
    389a:	240a      	movs	r4, #10
    389c:	8794      	strh	r4, [r2, #60]	; 0x3c
				    = (AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR | AT_BLE_ATTR_WRITABLE_REQ_AUTHN_NO_AUTHR);
    389e:	3301      	adds	r3, #1
    38a0:	019b      	lsls	r3, r3, #6
    38a2:	444b      	add	r3, r9
    38a4:	2433      	movs	r4, #51	; 0x33
    38a6:	719c      	strb	r4, [r3, #6]
			hid_inst[servinst].serv_chars[id + 1].client_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    38a8:	0013      	movs	r3, r2
    38aa:	3358      	adds	r3, #88	; 0x58
    38ac:	701f      	strb	r7, [r3, #0]
			hid_inst[servinst].serv_chars[id + 1].client_config_desc.handle = 0;
    38ae:	325a      	adds	r2, #90	; 0x5a
    38b0:	8017      	strh	r7, [r2, #0]
    38b2:	e75c      	b.n	376e <hid_serv_init+0x192>
			    = (AT_BLE_CHAR_READ | AT_BLE_CHAR_WRITE_WITHOUT_RESPONSE | AT_BLE_CHAR_WRITE);
    38b4:	465b      	mov	r3, fp
    38b6:	185b      	adds	r3, r3, r1
    38b8:	019a      	lsls	r2, r3, #6
    38ba:	4c08      	ldr	r4, [pc, #32]	; (38dc <hid_serv_init+0x300>)
    38bc:	46a1      	mov	r9, r4
    38be:	444a      	add	r2, r9
    38c0:	240e      	movs	r4, #14
    38c2:	8794      	strh	r4, [r2, #60]	; 0x3c
				    = (AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR | AT_BLE_ATTR_WRITABLE_REQ_AUTHN_NO_AUTHR);
    38c4:	3301      	adds	r3, #1
    38c6:	019b      	lsls	r3, r3, #6
    38c8:	444b      	add	r3, r9
    38ca:	2433      	movs	r4, #51	; 0x33
    38cc:	719c      	strb	r4, [r3, #6]
			hid_inst[servinst].serv_chars[id + 1].client_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    38ce:	0013      	movs	r3, r2
    38d0:	3358      	adds	r3, #88	; 0x58
    38d2:	701f      	strb	r7, [r3, #0]
			hid_inst[servinst].serv_chars[id + 1].client_config_desc.handle = 0;
    38d4:	325a      	adds	r2, #90	; 0x5a
    38d6:	8017      	strh	r7, [r2, #0]
    38d8:	e749      	b.n	376e <hid_serv_init+0x192>
    38da:	46c0      	nop			; (mov r8, r8)
    38dc:	200016cc 	.word	0x200016cc
    38e0:	20001ae4 	.word	0x20001ae4
    38e4:	3fffffff 	.word	0x3fffffff
	for (id = 1; id <= report_num; ++id) {
    38e8:	2601      	movs	r6, #1

	} // End of for loop

	id++;
    38ea:	1c73      	adds	r3, r6, #1
    38ec:	b2db      	uxtb	r3, r3

		/*Map the boot mouse input report characteristic*/
		hid_serv_inst[servinst].hid_dev_boot_mouse_in_report = &hid_inst[servinst].serv_chars[id];
		id++;
#endif
	} else if (device == HID_KEYBOARD_MODE) {
    38ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
    38f0:	2a02      	cmp	r2, #2
    38f2:	d100      	bne.n	38f6 <hid_serv_init+0x31a>
    38f4:	e091      	b.n	3a1a <hid_serv_init+0x43e>
		id++;
#endif
	}

	/*Configure HID Information Characteristic : Value related info*/
	hid_inst[servinst].serv_chars[id].char_val.handle       = 0;
    38f6:	4d92      	ldr	r5, [pc, #584]	; (3b40 <hid_serv_init+0x564>)
    38f8:	9a07      	ldr	r2, [sp, #28]
    38fa:	00d4      	lsls	r4, r2, #3
    38fc:	18e6      	adds	r6, r4, r3
    38fe:	01b2      	lsls	r2, r6, #6
    3900:	18aa      	adds	r2, r5, r2
    3902:	2100      	movs	r1, #0
    3904:	2000      	movs	r0, #0
    3906:	4683      	mov	fp, r0
    3908:	8511      	strh	r1, [r2, #40]	; 0x28
	hid_inst[servinst].serv_chars[id].char_val.uuid.type    = AT_BLE_UUID_16;
    390a:	272a      	movs	r7, #42	; 0x2a
    390c:	46b8      	mov	r8, r7
    390e:	0017      	movs	r7, r2
    3910:	372a      	adds	r7, #42	; 0x2a
    3912:	7038      	strb	r0, [r7, #0]
	hid_inst[servinst].serv_chars[id].char_val.uuid.uuid[0] = (uint8_t)HID_UUID_CHAR_HID_INFORMATION;
    3914:	3701      	adds	r7, #1
    3916:	204a      	movs	r0, #74	; 0x4a
    3918:	7038      	strb	r0, [r7, #0]
	hid_inst[servinst].serv_chars[id].char_val.uuid.uuid[1] = (uint8_t)(HID_UUID_CHAR_HID_INFORMATION >> 8);
    391a:	3701      	adds	r7, #1
    391c:	4640      	mov	r0, r8
    391e:	7038      	strb	r0, [r7, #0]
	hid_inst[servinst].serv_chars[id].char_val.init_value   = (uint8_t *)info;
    3920:	3601      	adds	r6, #1
    3922:	01b6      	lsls	r6, r6, #6
    3924:	9817      	ldr	r0, [sp, #92]	; 0x5c
    3926:	5170      	str	r0, [r6, r5]
	hid_inst[servinst].serv_chars[id].char_val.len          = sizeof(hid_info_t);
    3928:	19ae      	adds	r6, r5, r6
    392a:	2004      	movs	r0, #4
    392c:	4684      	mov	ip, r0
    392e:	80b0      	strh	r0, [r6, #4]
	hid_inst[servinst].serv_chars[id].char_val.properties   = AT_BLE_CHAR_READ;
    3930:	2702      	movs	r7, #2
    3932:	8797      	strh	r7, [r2, #60]	; 0x3c

	/* Configure the HID characteristic value permission */
	if (BLE_PAIR_ENABLE) {
		hid_inst[servinst].serv_chars[id].char_val.permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR;
    3934:	3701      	adds	r7, #1
    3936:	71b7      	strb	r7, [r6, #6]
	} else {
		hid_inst[servinst].serv_chars[id].char_val.permissions = AT_BLE_ATTR_READABLE_NO_AUTHN_NO_AUTHR;
	}

	/*Configure HID Information Characteristic : user descriptor related info */
	hid_inst[servinst].serv_chars[id].user_desc.user_description = NULL;
    3938:	6491      	str	r1, [r2, #72]	; 0x48
	hid_inst[servinst].serv_chars[id].user_desc.len              = 0;
    393a:	0016      	movs	r6, r2
    393c:	364c      	adds	r6, #76	; 0x4c
    393e:	8031      	strh	r1, [r6, #0]
	hid_inst[servinst].serv_chars[id].user_desc.handle           = 0;
    3940:	3602      	adds	r6, #2
    3942:	8031      	strh	r1, [r6, #0]
	hid_inst[servinst].serv_chars[id].user_desc.permissions      = AT_BLE_ATTR_NO_PERMISSIONS;
    3944:	3602      	adds	r6, #2
    3946:	4658      	mov	r0, fp
    3948:	7030      	strb	r0, [r6, #0]

	/*Configure HID Information Characteristic : presentation format related info */
	hid_inst[servinst].serv_chars[id].presentation_format = NULL;
    394a:	6551      	str	r1, [r2, #84]	; 0x54

	/*Configure HID Information Characteristic : client config descriptor related info */
	hid_inst[servinst].serv_chars[id].client_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    394c:	3608      	adds	r6, #8
    394e:	7030      	strb	r0, [r6, #0]
	hid_inst[servinst].serv_chars[id].client_config_desc.handle = 0;
    3950:	3602      	adds	r6, #2
    3952:	8031      	strh	r1, [r6, #0]

	/*Configure HID Information Characteristic : server config descriptor related info */
	hid_inst[servinst].serv_chars[id].server_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    3954:	3602      	adds	r6, #2
    3956:	7030      	strb	r0, [r6, #0]
	hid_inst[servinst].serv_chars[id].server_config_desc.handle = 0;
    3958:	3602      	adds	r6, #2
    395a:	8031      	strh	r1, [r6, #0]

	/*Configure HID Information Characteristic : generic descriptor related info */
	hid_inst[servinst].serv_chars[id].additional_desc_list = NULL;
    395c:	6611      	str	r1, [r2, #96]	; 0x60

	/*Configure HID Information Characteristic : count of generic descriptor */
	hid_inst[servinst].serv_chars[id].additional_desc_count = 0;
    395e:	3264      	adds	r2, #100	; 0x64
    3960:	8011      	strh	r1, [r2, #0]
    3962:	9a07      	ldr	r2, [sp, #28]
    3964:	0026      	movs	r6, r4

	/*Map the HID Information characteristic*/
	hid_serv_inst[servinst].hid_dev_info = &hid_inst[servinst].serv_chars[id];
    3966:	18a7      	adds	r7, r4, r2
    3968:	00bf      	lsls	r7, r7, #2
    396a:	4a76      	ldr	r2, [pc, #472]	; (3b44 <hid_serv_init+0x568>)
    396c:	19d7      	adds	r7, r2, r7
    396e:	191a      	adds	r2, r3, r4
    3970:	0192      	lsls	r2, r2, #6
    3972:	3228      	adds	r2, #40	; 0x28
    3974:	1952      	adds	r2, r2, r5
    3976:	61fa      	str	r2, [r7, #28]

	id++;
    3978:	3301      	adds	r3, #1
    397a:	b2db      	uxtb	r3, r3

	/*Configure HID Control Point Characteristic : Value related info*/
	hid_inst[servinst].serv_chars[id].char_val.handle       = 0;
    397c:	9300      	str	r3, [sp, #0]
    397e:	4699      	mov	r9, r3
    3980:	444c      	add	r4, r9
    3982:	01a2      	lsls	r2, r4, #6
    3984:	18aa      	adds	r2, r5, r2
    3986:	8511      	strh	r1, [r2, #40]	; 0x28
	hid_inst[servinst].serv_chars[id].char_val.uuid.type    = AT_BLE_UUID_16;
    3988:	202a      	movs	r0, #42	; 0x2a
    398a:	4681      	mov	r9, r0
    398c:	4491      	add	r9, r2
    398e:	4648      	mov	r0, r9
    3990:	465b      	mov	r3, fp
    3992:	7003      	strb	r3, [r0, #0]
	hid_inst[servinst].serv_chars[id].char_val.uuid.uuid[0] = (uint8_t)HID_UUID_CHAR_HID_CONTROL_POINT;
    3994:	202b      	movs	r0, #43	; 0x2b
    3996:	4681      	mov	r9, r0
    3998:	4491      	add	r9, r2
    399a:	3021      	adds	r0, #33	; 0x21
    399c:	4682      	mov	sl, r0
    399e:	4648      	mov	r0, r9
    39a0:	4653      	mov	r3, sl
    39a2:	7003      	strb	r3, [r0, #0]
	hid_inst[servinst].serv_chars[id].char_val.uuid.uuid[1] = (uint8_t)(HID_UUID_CHAR_HID_CONTROL_POINT >> 8);
    39a4:	232c      	movs	r3, #44	; 0x2c
    39a6:	4699      	mov	r9, r3
    39a8:	4491      	add	r9, r2
    39aa:	464b      	mov	r3, r9
    39ac:	4640      	mov	r0, r8
    39ae:	7018      	strb	r0, [r3, #0]
	hid_inst[servinst].serv_chars[id].char_val.init_value   = (uint8_t *)&ctrl_point;
    39b0:	3401      	adds	r4, #1
    39b2:	01a4      	lsls	r4, r4, #6
    39b4:	4b64      	ldr	r3, [pc, #400]	; (3b48 <hid_serv_init+0x56c>)
    39b6:	5163      	str	r3, [r4, r5]
	hid_inst[servinst].serv_chars[id].char_val.len          = sizeof(uint8_t);
    39b8:	192c      	adds	r4, r5, r4
    39ba:	2301      	movs	r3, #1
    39bc:	80a3      	strh	r3, [r4, #4]
	hid_inst[servinst].serv_chars[id].char_val.properties   = AT_BLE_CHAR_WRITE_WITHOUT_RESPONSE;
    39be:	4663      	mov	r3, ip
    39c0:	8793      	strh	r3, [r2, #60]	; 0x3c

	/* Configure the HID characteristic value permission */
	hid_inst[servinst].serv_chars[id].char_val.permissions = AT_BLE_ATTR_WRITABLE_NO_AUTHN_NO_AUTHR;
    39c2:	2310      	movs	r3, #16
    39c4:	71a3      	strb	r3, [r4, #6]

	/*Configure HID Control Point Characteristic : user descriptor related info */
	hid_inst[servinst].serv_chars[id].user_desc.user_description = NULL;
    39c6:	6491      	str	r1, [r2, #72]	; 0x48
	hid_inst[servinst].serv_chars[id].user_desc.len              = 0;
    39c8:	0014      	movs	r4, r2
    39ca:	344c      	adds	r4, #76	; 0x4c
    39cc:	8021      	strh	r1, [r4, #0]
	hid_inst[servinst].serv_chars[id].user_desc.handle           = 0;
    39ce:	3402      	adds	r4, #2
    39d0:	8021      	strh	r1, [r4, #0]
	hid_inst[servinst].serv_chars[id].user_desc.permissions      = AT_BLE_ATTR_NO_PERMISSIONS;
    39d2:	3402      	adds	r4, #2
    39d4:	4658      	mov	r0, fp
    39d6:	7020      	strb	r0, [r4, #0]

	/*Configure HID Control Point Characteristic : presentation format related info */
	hid_inst[servinst].serv_chars[id].presentation_format = NULL;
    39d8:	6551      	str	r1, [r2, #84]	; 0x54

	/*Configure HID Control Point Characteristic : client config descriptor related info */
	hid_inst[servinst].serv_chars[id].client_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    39da:	3408      	adds	r4, #8
    39dc:	7020      	strb	r0, [r4, #0]
	hid_inst[servinst].serv_chars[id].client_config_desc.handle = 0;
    39de:	3402      	adds	r4, #2
    39e0:	8021      	strh	r1, [r4, #0]

	/*Configure HID Control Point Characteristic : server config descriptor related info */
	hid_inst[servinst].serv_chars[id].server_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    39e2:	3402      	adds	r4, #2
    39e4:	7020      	strb	r0, [r4, #0]
	hid_inst[servinst].serv_chars[id].server_config_desc.handle = 0;
    39e6:	0010      	movs	r0, r2
    39e8:	305e      	adds	r0, #94	; 0x5e
    39ea:	8001      	strh	r1, [r0, #0]

	/*Configure HID Control Point Characteristic : generic descriptor related info */
	hid_inst[servinst].serv_chars[id].additional_desc_list = NULL;
    39ec:	6611      	str	r1, [r2, #96]	; 0x60

	/*Configure HID Control Point Characteristic : count of generic descriptor */
	hid_inst[servinst].serv_chars[id].additional_desc_count = 0;
    39ee:	3264      	adds	r2, #100	; 0x64
    39f0:	8011      	strh	r1, [r2, #0]

	/*Map the HID Information characteristic*/
	hid_serv_inst[servinst].hid_control_point = &hid_inst[servinst].serv_chars[id];
    39f2:	9b00      	ldr	r3, [sp, #0]
    39f4:	199b      	adds	r3, r3, r6
    39f6:	019b      	lsls	r3, r3, #6
    39f8:	3328      	adds	r3, #40	; 0x28
    39fa:	195b      	adds	r3, r3, r5
    39fc:	623b      	str	r3, [r7, #32]

	/* Configure HID characteristic list */
	hid_inst[servinst].serv.char_list = hid_inst[servinst].serv_chars;
    39fe:	9a07      	ldr	r2, [sp, #28]
    3a00:	0250      	lsls	r0, r2, #9
    3a02:	1828      	adds	r0, r5, r0
    3a04:	9b08      	ldr	r3, [sp, #32]
    3a06:	6203      	str	r3, [r0, #32]

	/* Configure the HID characteristic count */
	hid_inst[servinst].serv.char_count = HID_CHARACTERISTIC_NUM;
    3a08:	2307      	movs	r3, #7
    3a0a:	8483      	strh	r3, [r0, #36]	; 0x24
}
    3a0c:	b00b      	add	sp, #44	; 0x2c
    3a0e:	bc3c      	pop	{r2, r3, r4, r5}
    3a10:	4690      	mov	r8, r2
    3a12:	4699      	mov	r9, r3
    3a14:	46a2      	mov	sl, r4
    3a16:	46ab      	mov	fp, r5
    3a18:	bdf0      	pop	{r4, r5, r6, r7, pc}
		hid_inst[servinst].serv_chars[id].char_val.handle       = 0;
    3a1a:	4a49      	ldr	r2, [pc, #292]	; (3b40 <hid_serv_init+0x564>)
    3a1c:	4693      	mov	fp, r2
    3a1e:	9a07      	ldr	r2, [sp, #28]
    3a20:	00d2      	lsls	r2, r2, #3
    3a22:	4692      	mov	sl, r2
    3a24:	18d7      	adds	r7, r2, r3
    3a26:	01b8      	lsls	r0, r7, #6
    3a28:	4458      	add	r0, fp
    3a2a:	2200      	movs	r2, #0
    3a2c:	2500      	movs	r5, #0
    3a2e:	8502      	strh	r2, [r0, #40]	; 0x28
		hid_inst[servinst].serv_chars[id].char_val.uuid.type    = AT_BLE_UUID_16;
    3a30:	242a      	movs	r4, #42	; 0x2a
    3a32:	46a0      	mov	r8, r4
    3a34:	46a4      	mov	ip, r4
    3a36:	4484      	add	ip, r0
    3a38:	4664      	mov	r4, ip
    3a3a:	7025      	strb	r5, [r4, #0]
		hid_inst[servinst].serv_chars[id].char_val.uuid.uuid[0] = (uint8_t)HID_UUID_CHAR_BOOT_KEY_OUTPUT_REPORT;
    3a3c:	242b      	movs	r4, #43	; 0x2b
    3a3e:	46a4      	mov	ip, r4
    3a40:	4484      	add	ip, r0
    3a42:	3407      	adds	r4, #7
    3a44:	46a1      	mov	r9, r4
    3a46:	4664      	mov	r4, ip
    3a48:	4649      	mov	r1, r9
    3a4a:	7021      	strb	r1, [r4, #0]
		hid_inst[servinst].serv_chars[id].char_val.uuid.uuid[1] = (uint8_t)(HID_UUID_CHAR_BOOT_KEY_OUTPUT_REPORT >> 8);
    3a4c:	212c      	movs	r1, #44	; 0x2c
    3a4e:	468c      	mov	ip, r1
    3a50:	4484      	add	ip, r0
    3a52:	4661      	mov	r1, ip
    3a54:	4644      	mov	r4, r8
    3a56:	700c      	strb	r4, [r1, #0]
		hid_inst[servinst].serv_chars[id].char_val.init_value   = (uint8_t *)&Keyb_out_report;
    3a58:	3701      	adds	r7, #1
    3a5a:	01bf      	lsls	r7, r7, #6
    3a5c:	493b      	ldr	r1, [pc, #236]	; (3b4c <hid_serv_init+0x570>)
    3a5e:	465c      	mov	r4, fp
    3a60:	5139      	str	r1, [r7, r4]
		hid_inst[servinst].serv_chars[id].char_val.len          = sizeof(uint8_t);
    3a62:	445f      	add	r7, fp
    3a64:	2101      	movs	r1, #1
    3a66:	80b9      	strh	r1, [r7, #4]
		    = (AT_BLE_CHAR_READ | AT_BLE_CHAR_WRITE_WITHOUT_RESPONSE | AT_BLE_CHAR_WRITE);
    3a68:	210e      	movs	r1, #14
    3a6a:	8781      	strh	r1, [r0, #60]	; 0x3c
			    = (AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR | AT_BLE_ATTR_WRITABLE_REQ_AUTHN_NO_AUTHR);
    3a6c:	2133      	movs	r1, #51	; 0x33
    3a6e:	71b9      	strb	r1, [r7, #6]
		hid_inst[servinst].serv_chars[id].user_desc.user_description = NULL;
    3a70:	6482      	str	r2, [r0, #72]	; 0x48
		hid_inst[servinst].serv_chars[id].user_desc.len              = 0;
    3a72:	0007      	movs	r7, r0
    3a74:	374c      	adds	r7, #76	; 0x4c
    3a76:	803a      	strh	r2, [r7, #0]
		hid_inst[servinst].serv_chars[id].user_desc.handle           = 0;
    3a78:	3702      	adds	r7, #2
    3a7a:	803a      	strh	r2, [r7, #0]
		hid_inst[servinst].serv_chars[id].user_desc.permissions      = AT_BLE_ATTR_NO_PERMISSIONS;
    3a7c:	3702      	adds	r7, #2
    3a7e:	703d      	strb	r5, [r7, #0]
		hid_inst[servinst].serv_chars[id].presentation_format = NULL;
    3a80:	6542      	str	r2, [r0, #84]	; 0x54
		hid_inst[servinst].serv_chars[id].client_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    3a82:	3708      	adds	r7, #8
    3a84:	703d      	strb	r5, [r7, #0]
		hid_inst[servinst].serv_chars[id].client_config_desc.handle = 0;
    3a86:	3702      	adds	r7, #2
    3a88:	803a      	strh	r2, [r7, #0]
		hid_inst[servinst].serv_chars[id].server_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    3a8a:	3702      	adds	r7, #2
    3a8c:	703d      	strb	r5, [r7, #0]
		hid_inst[servinst].serv_chars[id].server_config_desc.handle = 0;
    3a8e:	3702      	adds	r7, #2
    3a90:	803a      	strh	r2, [r7, #0]
		hid_inst[servinst].serv_chars[id].additional_desc_list = NULL;
    3a92:	6602      	str	r2, [r0, #96]	; 0x60
		hid_inst[servinst].serv_chars[id].additional_desc_count = 0;
    3a94:	3064      	adds	r0, #100	; 0x64
    3a96:	8002      	strh	r2, [r0, #0]
    3a98:	9f07      	ldr	r7, [sp, #28]
		hid_serv_inst[servinst].hid_dev_boot_keyboard_out_report = &hid_inst[servinst].serv_chars[id];
    3a9a:	4457      	add	r7, sl
    3a9c:	00bf      	lsls	r7, r7, #2
    3a9e:	4929      	ldr	r1, [pc, #164]	; (3b44 <hid_serv_init+0x568>)
    3aa0:	468c      	mov	ip, r1
    3aa2:	4467      	add	r7, ip
    3aa4:	46d4      	mov	ip, sl
    3aa6:	4453      	add	r3, sl
    3aa8:	019b      	lsls	r3, r3, #6
    3aaa:	3328      	adds	r3, #40	; 0x28
    3aac:	445b      	add	r3, fp
    3aae:	61bb      	str	r3, [r7, #24]
		id++;
    3ab0:	1cb0      	adds	r0, r6, #2
    3ab2:	b2c3      	uxtb	r3, r0
    3ab4:	9300      	str	r3, [sp, #0]
		hid_inst[servinst].serv_chars[id].char_val.handle       = 0;
    3ab6:	4699      	mov	r9, r3
    3ab8:	44ca      	add	sl, r9
    3aba:	4651      	mov	r1, sl
    3abc:	4650      	mov	r0, sl
    3abe:	018b      	lsls	r3, r1, #6
    3ac0:	445b      	add	r3, fp
    3ac2:	851a      	strh	r2, [r3, #40]	; 0x28
		hid_inst[servinst].serv_chars[id].char_val.uuid.type    = AT_BLE_UUID_16;
    3ac4:	242a      	movs	r4, #42	; 0x2a
    3ac6:	46a1      	mov	r9, r4
    3ac8:	4499      	add	r9, r3
    3aca:	464c      	mov	r4, r9
    3acc:	7025      	strb	r5, [r4, #0]
		hid_inst[servinst].serv_chars[id].char_val.uuid.uuid[0] = (uint8_t)HID_UUID_CHAR_BOOT_KEY_INPUT_REPORT;
    3ace:	242b      	movs	r4, #43	; 0x2b
    3ad0:	46a1      	mov	r9, r4
    3ad2:	4499      	add	r9, r3
    3ad4:	3c09      	subs	r4, #9
    3ad6:	46a2      	mov	sl, r4
    3ad8:	464c      	mov	r4, r9
    3ada:	4651      	mov	r1, sl
    3adc:	7021      	strb	r1, [r4, #0]
		hid_inst[servinst].serv_chars[id].char_val.uuid.uuid[1] = (uint8_t)(HID_UUID_CHAR_BOOT_KEY_INPUT_REPORT >> 8);
    3ade:	212c      	movs	r1, #44	; 0x2c
    3ae0:	4689      	mov	r9, r1
    3ae2:	4499      	add	r9, r3
    3ae4:	4649      	mov	r1, r9
    3ae6:	4644      	mov	r4, r8
    3ae8:	700c      	strb	r4, [r1, #0]
		hid_inst[servinst].serv_chars[id].char_val.init_value   = (uint8_t *)&keyb_in_report;
    3aea:	0001      	movs	r1, r0
    3aec:	3101      	adds	r1, #1
    3aee:	0189      	lsls	r1, r1, #6
    3af0:	4c17      	ldr	r4, [pc, #92]	; (3b50 <hid_serv_init+0x574>)
    3af2:	4658      	mov	r0, fp
    3af4:	500c      	str	r4, [r1, r0]
		hid_inst[servinst].serv_chars[id].char_val.len          = sizeof(keyb_in_report);
    3af6:	4459      	add	r1, fp
    3af8:	2408      	movs	r4, #8
    3afa:	808c      	strh	r4, [r1, #4]
		hid_inst[servinst].serv_chars[id].char_val.properties   = (AT_BLE_CHAR_READ | AT_BLE_CHAR_NOTIFY);
    3afc:	2412      	movs	r4, #18
    3afe:	879c      	strh	r4, [r3, #60]	; 0x3c
			hid_inst[servinst].serv_chars[id].char_val.permissions = AT_BLE_ATTR_READABLE_REQ_AUTHN_NO_AUTHR;
    3b00:	2403      	movs	r4, #3
    3b02:	718c      	strb	r4, [r1, #6]
		hid_inst[servinst].serv_chars[id].user_desc.user_description = NULL;
    3b04:	649a      	str	r2, [r3, #72]	; 0x48
		hid_inst[servinst].serv_chars[id].user_desc.len              = 0;
    3b06:	0019      	movs	r1, r3
    3b08:	314c      	adds	r1, #76	; 0x4c
    3b0a:	800a      	strh	r2, [r1, #0]
		hid_inst[servinst].serv_chars[id].user_desc.handle           = 0;
    3b0c:	3102      	adds	r1, #2
    3b0e:	800a      	strh	r2, [r1, #0]
		hid_inst[servinst].serv_chars[id].user_desc.permissions      = AT_BLE_ATTR_NO_PERMISSIONS;
    3b10:	3102      	adds	r1, #2
    3b12:	700d      	strb	r5, [r1, #0]
		hid_inst[servinst].serv_chars[id].presentation_format = NULL;
    3b14:	655a      	str	r2, [r3, #84]	; 0x54
		hid_inst[servinst].serv_chars[id].client_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    3b16:	3108      	adds	r1, #8
    3b18:	700d      	strb	r5, [r1, #0]
		hid_inst[servinst].serv_chars[id].client_config_desc.handle = 0;
    3b1a:	3102      	adds	r1, #2
    3b1c:	800a      	strh	r2, [r1, #0]
		hid_inst[servinst].serv_chars[id].server_config_desc.perm   = AT_BLE_ATTR_NO_PERMISSIONS;
    3b1e:	3102      	adds	r1, #2
    3b20:	700d      	strb	r5, [r1, #0]
		hid_inst[servinst].serv_chars[id].server_config_desc.handle = 0;
    3b22:	3102      	adds	r1, #2
    3b24:	800a      	strh	r2, [r1, #0]
		hid_inst[servinst].serv_chars[id].additional_desc_list = NULL;
    3b26:	661a      	str	r2, [r3, #96]	; 0x60
		hid_inst[servinst].serv_chars[id].additional_desc_count = 0;
    3b28:	3364      	adds	r3, #100	; 0x64
    3b2a:	801a      	strh	r2, [r3, #0]
		hid_serv_inst[servinst].hid_dev_boot_keyboard_in_report = &hid_inst[servinst].serv_chars[id];
    3b2c:	9b00      	ldr	r3, [sp, #0]
    3b2e:	4463      	add	r3, ip
    3b30:	0198      	lsls	r0, r3, #6
    3b32:	3028      	adds	r0, #40	; 0x28
    3b34:	4458      	add	r0, fp
    3b36:	6178      	str	r0, [r7, #20]
		id++;
    3b38:	3603      	adds	r6, #3
    3b3a:	b2f3      	uxtb	r3, r6
    3b3c:	e6db      	b.n	38f6 <hid_serv_init+0x31a>
    3b3e:	46c0      	nop			; (mov r8, r8)
    3b40:	200016cc 	.word	0x200016cc
    3b44:	20001ae4 	.word	0x20001ae4
    3b48:	20001b34 	.word	0x20001b34
    3b4c:	200016c8 	.word	0x200016c8
    3b50:	20001b2c 	.word	0x20001b2c

00003b54 <hid_serv_report_map>:

/**
 * \Function update the report descriptor for HID device
 */
void hid_serv_report_map(uint8_t servinst, uint8_t *report_info, uint16_t len)
{
    3b54:	b530      	push	{r4, r5, lr}
	hid_inst[servinst].serv_chars[1].char_val.init_value                 = report_info;
    3b56:	0243      	lsls	r3, r0, #9
    3b58:	4c09      	ldr	r4, [pc, #36]	; (3b80 <hid_serv_report_map+0x2c>)
    3b5a:	18e4      	adds	r4, r4, r3
    3b5c:	0023      	movs	r3, r4
    3b5e:	3380      	adds	r3, #128	; 0x80
    3b60:	6019      	str	r1, [r3, #0]
	hid_inst[servinst].serv_chars[1].char_val.len                        = len;
    3b62:	3484      	adds	r4, #132	; 0x84
    3b64:	8022      	strh	r2, [r4, #0]
	hid_serv_inst[servinst].hid_dev_report_map_char->char_val.init_value = report_info;
    3b66:	4d07      	ldr	r5, [pc, #28]	; (3b84 <hid_serv_report_map+0x30>)
    3b68:	00c3      	lsls	r3, r0, #3
    3b6a:	181c      	adds	r4, r3, r0
    3b6c:	00a4      	lsls	r4, r4, #2
    3b6e:	192c      	adds	r4, r5, r4
    3b70:	68e4      	ldr	r4, [r4, #12]
    3b72:	61a1      	str	r1, [r4, #24]
	hid_serv_inst[servinst].hid_dev_report_map_char->char_val.len        = len;
    3b74:	181b      	adds	r3, r3, r0
    3b76:	009b      	lsls	r3, r3, #2
    3b78:	18eb      	adds	r3, r5, r3
    3b7a:	68db      	ldr	r3, [r3, #12]
    3b7c:	839a      	strh	r2, [r3, #28]
}
    3b7e:	bd30      	pop	{r4, r5, pc}
    3b80:	200016cc 	.word	0x200016cc
    3b84:	20001ae4 	.word	0x20001ae4

00003b88 <hid_service_dbreg>:

/**
 * \Function register the HID service.
 */
uint16_t hid_service_dbreg(uint8_t inst, uint8_t *report_type, uint8_t *report_id, uint8_t report_num)
{
    3b88:	b5f0      	push	{r4, r5, r6, r7, lr}
    3b8a:	b083      	sub	sp, #12
    3b8c:	0007      	movs	r7, r0
    3b8e:	000c      	movs	r4, r1
    3b90:	0015      	movs	r5, r2
    3b92:	001e      	movs	r6, r3

	uint8_t         id         = 0;
	uint8_t         descval[2] = {0, 0};
    3b94:	ab01      	add	r3, sp, #4
    3b96:	2200      	movs	r2, #0
    3b98:	701a      	strb	r2, [r3, #0]
    3b9a:	705a      	strb	r2, [r3, #1]
	at_ble_status_t status;
	delay_ms(1);
    3b9c:	2001      	movs	r0, #1
    3b9e:	4b16      	ldr	r3, [pc, #88]	; (3bf8 <hid_service_dbreg+0x70>)
    3ba0:	4798      	blx	r3
	if (at_ble_service_define(&hid_inst[inst].serv) == AT_BLE_SUCCESS) {
    3ba2:	0278      	lsls	r0, r7, #9
    3ba4:	4b15      	ldr	r3, [pc, #84]	; (3bfc <hid_service_dbreg+0x74>)
    3ba6:	18c0      	adds	r0, r0, r3
    3ba8:	4b15      	ldr	r3, [pc, #84]	; (3c00 <hid_service_dbreg+0x78>)
    3baa:	4798      	blx	r3
    3bac:	2800      	cmp	r0, #0
    3bae:	d002      	beq.n	3bb6 <hid_service_dbreg+0x2e>
			}
		}
		return hid_inst[inst].serv.handle;
	} else {
		DBG_LOG_DEV("HID Service :: hid_service_dbreg :: HID Service Regisstration Fail");
		return (uint16_t)HID_SERV_FAILED;
    3bb0:	4814      	ldr	r0, [pc, #80]	; (3c04 <hid_service_dbreg+0x7c>)
	}
}
    3bb2:	b003      	add	sp, #12
    3bb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
		for (; id < report_num; id++) {
    3bb6:	2e00      	cmp	r6, #0
    3bb8:	d011      	beq.n	3bde <hid_service_dbreg+0x56>
			descval[0] = report_id[id];
    3bba:	a901      	add	r1, sp, #4
    3bbc:	782b      	ldrb	r3, [r5, #0]
    3bbe:	700b      	strb	r3, [r1, #0]
			descval[1] = report_type[id];
    3bc0:	7823      	ldrb	r3, [r4, #0]
    3bc2:	704b      	strb	r3, [r1, #1]
			         hid_serv_inst[inst].hid_dev_report_val_char[id]->additional_desc_list->handle, &descval[0], 2))
    3bc4:	00fb      	lsls	r3, r7, #3
    3bc6:	19db      	adds	r3, r3, r7
    3bc8:	009b      	lsls	r3, r3, #2
    3bca:	4a0f      	ldr	r2, [pc, #60]	; (3c08 <hid_service_dbreg+0x80>)
    3bcc:	18d3      	adds	r3, r2, r3
    3bce:	691b      	ldr	r3, [r3, #16]
			if ((status = at_ble_descriptor_value_set(
    3bd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    3bd2:	8a98      	ldrh	r0, [r3, #20]
    3bd4:	2202      	movs	r2, #2
    3bd6:	4b0d      	ldr	r3, [pc, #52]	; (3c0c <hid_service_dbreg+0x84>)
    3bd8:	4798      	blx	r3
    3bda:	1e04      	subs	r4, r0, #0
    3bdc:	d104      	bne.n	3be8 <hid_service_dbreg+0x60>
		return hid_inst[inst].serv.handle;
    3bde:	027f      	lsls	r7, r7, #9
    3be0:	4b06      	ldr	r3, [pc, #24]	; (3bfc <hid_service_dbreg+0x74>)
    3be2:	19df      	adds	r7, r3, r7
    3be4:	8878      	ldrh	r0, [r7, #2]
    3be6:	e7e4      	b.n	3bb2 <hid_service_dbreg+0x2a>
				DBG_LOG("HID Service :: hid_service_dbreg :: Report Reference Descriptor Value Set Fail Reason %d",
    3be8:	4809      	ldr	r0, [pc, #36]	; (3c10 <hid_service_dbreg+0x88>)
    3bea:	4b0a      	ldr	r3, [pc, #40]	; (3c14 <hid_service_dbreg+0x8c>)
    3bec:	4798      	blx	r3
    3bee:	0021      	movs	r1, r4
    3bf0:	4809      	ldr	r0, [pc, #36]	; (3c18 <hid_service_dbreg+0x90>)
    3bf2:	4b0a      	ldr	r3, [pc, #40]	; (3c1c <hid_service_dbreg+0x94>)
    3bf4:	4798      	blx	r3
    3bf6:	e7f2      	b.n	3bde <hid_service_dbreg+0x56>
    3bf8:	00000629 	.word	0x00000629
    3bfc:	200016cc 	.word	0x200016cc
    3c00:	00005641 	.word	0x00005641
    3c04:	0000ffff 	.word	0x0000ffff
    3c08:	20001ae4 	.word	0x20001ae4
    3c0c:	00005b89 	.word	0x00005b89
    3c10:	00009f84 	.word	0x00009f84
    3c14:	00008bad 	.word	0x00008bad
    3c18:	0000a9f8 	.word	0x0000a9f8
    3c1c:	00008a91 	.word	0x00008a91

00003c20 <hid_serv_get_instance>:
	DBG_LOG_DEV("HID Service :: hid_serv_get_instance :: Get service Instance Handle %d", handle);
	for (; id < HID_MAX_SERV_INST; id++) {
		DBG_LOG_DEV("HID Service :: hid_serv_get_instance :: Service Handle %d  Characteristic Handle %d",
		            *(hid_serv_inst[id].hid_dev_serv_handle),
		            hid_serv_inst[id].hid_control_point->char_val.handle);
		if ((handle > *(hid_serv_inst[id].hid_dev_serv_handle))
    3c20:	4b0d      	ldr	r3, [pc, #52]	; (3c58 <hid_serv_get_instance+0x38>)
    3c22:	681b      	ldr	r3, [r3, #0]
    3c24:	881b      	ldrh	r3, [r3, #0]
    3c26:	4283      	cmp	r3, r0
    3c28:	d204      	bcs.n	3c34 <hid_serv_get_instance+0x14>
		DBG_LOG_DEV("HID Service :: hid_serv_get_instance :: Service Handle %d  Characteristic Handle %d",
    3c2a:	4b0b      	ldr	r3, [pc, #44]	; (3c58 <hid_serv_get_instance+0x38>)
		    && (handle <= hid_serv_inst[id].hid_control_point->char_val.handle)) {
    3c2c:	6a1b      	ldr	r3, [r3, #32]
    3c2e:	881b      	ldrh	r3, [r3, #0]
    3c30:	4283      	cmp	r3, r0
    3c32:	d20f      	bcs.n	3c54 <hid_serv_get_instance+0x34>
		if ((handle > *(hid_serv_inst[id].hid_dev_serv_handle))
    3c34:	4b08      	ldr	r3, [pc, #32]	; (3c58 <hid_serv_get_instance+0x38>)
    3c36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3c38:	881a      	ldrh	r2, [r3, #0]
			DBG_LOG_DEV("HID Service :: hid_serv_get_instance :: Service Instance %d", id);
			return id;
		}
	}
	return 0xff;
    3c3a:	23ff      	movs	r3, #255	; 0xff
		if ((handle > *(hid_serv_inst[id].hid_dev_serv_handle))
    3c3c:	4282      	cmp	r2, r0
    3c3e:	d205      	bcs.n	3c4c <hid_serv_get_instance+0x2c>
		DBG_LOG_DEV("HID Service :: hid_serv_get_instance :: Service Handle %d  Characteristic Handle %d",
    3c40:	4b05      	ldr	r3, [pc, #20]	; (3c58 <hid_serv_get_instance+0x38>)
		    && (handle <= hid_serv_inst[id].hid_control_point->char_val.handle)) {
    3c42:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    3c44:	881a      	ldrh	r2, [r3, #0]
	return 0xff;
    3c46:	23ff      	movs	r3, #255	; 0xff
		    && (handle <= hid_serv_inst[id].hid_control_point->char_val.handle)) {
    3c48:	4282      	cmp	r2, r0
    3c4a:	d201      	bcs.n	3c50 <hid_serv_get_instance+0x30>
}
    3c4c:	0018      	movs	r0, r3
    3c4e:	4770      	bx	lr
	for (; id < HID_MAX_SERV_INST; id++) {
    3c50:	3bfe      	subs	r3, #254	; 0xfe
    3c52:	e7fb      	b.n	3c4c <hid_serv_get_instance+0x2c>
	uint8_t id = 0;
    3c54:	2300      	movs	r3, #0
    3c56:	e7f9      	b.n	3c4c <hid_serv_get_instance+0x2c>
    3c58:	20001ae4 	.word	0x20001ae4

00003c5c <hid_ntf_instance>:
 */
uint8_t hid_ntf_instance(uint8_t serv_num, uint16_t char_handle)
{
	uint8_t id = 0;
	DBG_LOG_DEV("HID Service :: hid_ntf_instance :: Search Handle %d", char_handle);
	DBG_LOG_DEV("HID Service :: hid_ntf_instance :: Protocol Mode Handle %d",
    3c5c:	00c3      	lsls	r3, r0, #3
    3c5e:	181b      	adds	r3, r3, r0
    3c60:	009b      	lsls	r3, r3, #2
    3c62:	4a17      	ldr	r2, [pc, #92]	; (3cc0 <hid_ntf_instance+0x64>)
    3c64:	18d3      	adds	r3, r2, r3
	            hid_serv_inst[serv_num].hid_dev_proto_mode_char->char_val.handle);
	if (hid_serv_inst[serv_num].hid_dev_proto_mode_char->char_val.handle == char_handle) {
    3c66:	689b      	ldr	r3, [r3, #8]
    3c68:	881b      	ldrh	r3, [r3, #0]
    3c6a:	428b      	cmp	r3, r1
    3c6c:	d020      	beq.n	3cb0 <hid_ntf_instance+0x54>
		return PROTOCOL_MODE;
	}

	for (; id < HID_NUM_OF_REPORT; id++) {
		DBG_LOG_DEV("HID Service :: hid_ntf_instance :: Report Handle %d",
    3c6e:	00c3      	lsls	r3, r0, #3
    3c70:	181b      	adds	r3, r3, r0
    3c72:	009b      	lsls	r3, r3, #2
    3c74:	18d3      	adds	r3, r2, r3
    3c76:	691b      	ldr	r3, [r3, #16]
		            hid_serv_inst[serv_num].hid_dev_report_val_char[id]->char_val.handle);
		if (char_handle == hid_serv_inst[serv_num].hid_dev_report_val_char[id]->char_val.handle) {
    3c78:	881a      	ldrh	r2, [r3, #0]
    3c7a:	428a      	cmp	r2, r1
    3c7c:	d01b      	beq.n	3cb6 <hid_ntf_instance+0x5a>
			return CHAR_REPORT;
		}
		DBG_LOG_DEV("HID Service :: hid_ntf_instance :: Report CCD Handle %d",
		            hid_serv_inst[serv_num].hid_dev_report_val_char[id]->client_config_desc.handle);
		if (char_handle == hid_serv_inst[serv_num].hid_dev_report_val_char[id]->client_config_desc.handle) {
    3c7e:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
    3c80:	428b      	cmp	r3, r1
    3c82:	d01a      	beq.n	3cba <hid_ntf_instance+0x5e>
			return CHAR_REPORT_CCD;
		}
	}

#ifdef HID_KEYBOARD_DEVICE
	DBG_LOG_DEV("HID Service :: hid_ntf_instance :: Boot Keyboard Handle %d",
    3c84:	00c3      	lsls	r3, r0, #3
    3c86:	181b      	adds	r3, r3, r0
    3c88:	009b      	lsls	r3, r3, #2
    3c8a:	4a0d      	ldr	r2, [pc, #52]	; (3cc0 <hid_ntf_instance+0x64>)
    3c8c:	18d3      	adds	r3, r2, r3
	            hid_serv_inst[serv_num].hid_dev_boot_keyboard_in_report->char_val.handle);
	if (hid_serv_inst[serv_num].hid_dev_boot_keyboard_in_report->char_val.handle == char_handle) {
    3c8e:	695b      	ldr	r3, [r3, #20]
    3c90:	881a      	ldrh	r2, [r3, #0]
		return BOOT_KEY_INPUT_REPORT;
    3c92:	2306      	movs	r3, #6
	if (hid_serv_inst[serv_num].hid_dev_boot_keyboard_in_report->char_val.handle == char_handle) {
    3c94:	428a      	cmp	r2, r1
    3c96:	d00c      	beq.n	3cb2 <hid_ntf_instance+0x56>
	if (hid_serv_inst[serv_num].hid_dev_boot_mouse_in_report->char_val.handle == char_handle) {
		return BOOT_MOUSE_INPUT_REPORT;
	}
#endif

	DBG_LOG_DEV("HID Service :: hid_ntf_instance :: Control Point Handle %d",
    3c98:	00c3      	lsls	r3, r0, #3
    3c9a:	1818      	adds	r0, r3, r0
    3c9c:	0080      	lsls	r0, r0, #2
    3c9e:	4b08      	ldr	r3, [pc, #32]	; (3cc0 <hid_ntf_instance+0x64>)
    3ca0:	1818      	adds	r0, r3, r0
	            hid_serv_inst[serv_num].hid_control_point->char_val.handle);
	if (hid_serv_inst[serv_num].hid_control_point->char_val.handle == char_handle) {
    3ca2:	6a03      	ldr	r3, [r0, #32]
    3ca4:	881b      	ldrh	r3, [r3, #0]
		return CONTROL_POINT;
	}
	return 0;
    3ca6:	1a5b      	subs	r3, r3, r1
    3ca8:	4259      	negs	r1, r3
    3caa:	414b      	adcs	r3, r1
    3cac:	00db      	lsls	r3, r3, #3
    3cae:	e000      	b.n	3cb2 <hid_ntf_instance+0x56>
		return PROTOCOL_MODE;
    3cb0:	2300      	movs	r3, #0
}
    3cb2:	0018      	movs	r0, r3
    3cb4:	4770      	bx	lr
			return CHAR_REPORT;
    3cb6:	2302      	movs	r3, #2
    3cb8:	e7fb      	b.n	3cb2 <hid_ntf_instance+0x56>
			return CHAR_REPORT_CCD;
    3cba:	2303      	movs	r3, #3
    3cbc:	e7f9      	b.n	3cb2 <hid_ntf_instance+0x56>
    3cbe:	46c0      	nop			; (mov r8, r8)
    3cc0:	20001ae4 	.word	0x20001ae4

00003cc4 <hid_get_reportid>:

/**
 * \Function to get the report ID.
 */
uint8_t hid_get_reportid(uint8_t serv, uint16_t handle, uint8_t reportnum)
{
    3cc4:	b510      	push	{r4, lr}
    3cc6:	b082      	sub	sp, #8
	uint8_t  status;
	uint8_t  id         = 0;
	uint8_t  descval[2] = {0, 0};
    3cc8:	ab01      	add	r3, sp, #4
    3cca:	2400      	movs	r4, #0
    3ccc:	701c      	strb	r4, [r3, #0]
    3cce:	705c      	strb	r4, [r3, #1]
	uint16_t len        = 2;
    3cd0:	3402      	adds	r4, #2
    3cd2:	466b      	mov	r3, sp
    3cd4:	805c      	strh	r4, [r3, #2]

	DBG_LOG_DEV("HID Service :: hid_get_reportid :: Report Number %d", reportnum);
	for (id = 0; id < reportnum; id++) {
    3cd6:	2a00      	cmp	r2, #0
    3cd8:	d028      	beq.n	3d2c <hid_get_reportid+0x68>
		DBG_LOG_DEV("HID Service :: hid_get_reportid :: id %d Search Handle %d, CCD Handle %d",
    3cda:	00c3      	lsls	r3, r0, #3
    3cdc:	181b      	adds	r3, r3, r0
    3cde:	009b      	lsls	r3, r3, #2
    3ce0:	4c14      	ldr	r4, [pc, #80]	; (3d34 <hid_get_reportid+0x70>)
    3ce2:	18e3      	adds	r3, r4, r3
    3ce4:	691b      	ldr	r3, [r3, #16]
		            id,
		            handle,
		            hid_serv_inst[serv].hid_dev_report_val_char[id]->client_config_desc.handle);
		if (handle == hid_serv_inst[serv].hid_dev_report_val_char[id]->client_config_desc.handle) {
    3ce6:	8e5c      	ldrh	r4, [r3, #50]	; 0x32
    3ce8:	428c      	cmp	r4, r1
    3cea:	d012      	beq.n	3d12 <hid_get_reportid+0x4e>
	for (id = 0; id < reportnum; id++) {
    3cec:	2a01      	cmp	r2, #1
    3cee:	d91f      	bls.n	3d30 <hid_get_reportid+0x6c>
		DBG_LOG_DEV("HID Service :: hid_get_reportid :: id %d Search Handle %d, CCD Handle %d",
    3cf0:	00c3      	lsls	r3, r0, #3
    3cf2:	181b      	adds	r3, r3, r0
    3cf4:	009b      	lsls	r3, r3, #2
    3cf6:	4c0f      	ldr	r4, [pc, #60]	; (3d34 <hid_get_reportid+0x70>)
    3cf8:	18e3      	adds	r3, r4, r3
    3cfa:	695b      	ldr	r3, [r3, #20]
		if (handle == hid_serv_inst[serv].hid_dev_report_val_char[id]->client_config_desc.handle) {
    3cfc:	8e5c      	ldrh	r4, [r3, #50]	; 0x32
    3cfe:	428c      	cmp	r4, r1
    3d00:	d007      	beq.n	3d12 <hid_get_reportid+0x4e>
	for (id = 0; id < reportnum; id++) {
    3d02:	2a02      	cmp	r2, #2
    3d04:	d910      	bls.n	3d28 <hid_get_reportid+0x64>
		DBG_LOG_DEV("HID Service :: hid_get_reportid :: id %d Search Handle %d, CCD Handle %d",
    3d06:	00c3      	lsls	r3, r0, #3
    3d08:	1818      	adds	r0, r3, r0
    3d0a:	0080      	lsls	r0, r0, #2
    3d0c:	4b09      	ldr	r3, [pc, #36]	; (3d34 <hid_get_reportid+0x70>)
    3d0e:	1818      	adds	r0, r3, r0
    3d10:	6983      	ldr	r3, [r0, #24]
			DBG_LOG_DEV("HID Service :: hid_get_reportid :: Report ID Descriptor Handle %d :: id %d :: serv %d",
			            hid_serv_inst[serv].hid_dev_report_val_char[id]->additional_desc_list->handle,
			            id,
			            serv);
			status = at_ble_descriptor_value_get(
    3d12:	ac01      	add	r4, sp, #4
    3d14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    3d16:	8a98      	ldrh	r0, [r3, #20]
    3d18:	466b      	mov	r3, sp
    3d1a:	1c9a      	adds	r2, r3, #2
    3d1c:	0021      	movs	r1, r4
    3d1e:	4b06      	ldr	r3, [pc, #24]	; (3d38 <hid_get_reportid+0x74>)
    3d20:	4798      	blx	r3
				DBG_LOG_DEV("HID Service :: hid_get_reportid :: Decriptor value get failed");
			} else {
				DBG_LOG_DEV(
				    "HID Service :: hid_get_reportid :: Descriptor value Report ID %d Type %d", descval[0], descval[1]);
			}
			return descval[0];
    3d22:	7820      	ldrb	r0, [r4, #0]
		}
	}
	return HID_INVALID_INST;
}
    3d24:	b002      	add	sp, #8
    3d26:	bd10      	pop	{r4, pc}
	return HID_INVALID_INST;
    3d28:	20ff      	movs	r0, #255	; 0xff
    3d2a:	e7fb      	b.n	3d24 <hid_get_reportid+0x60>
    3d2c:	20ff      	movs	r0, #255	; 0xff
    3d2e:	e7f9      	b.n	3d24 <hid_get_reportid+0x60>
    3d30:	20ff      	movs	r0, #255	; 0xff
    3d32:	e7f7      	b.n	3d24 <hid_get_reportid+0x60>
    3d34:	20001ae4 	.word	0x20001ae4
    3d38:	00005b95 	.word	0x00005b95

00003d3c <hid_get_reportchar>:

/**
 * \Function to get the report characteristic id.
 */
uint8_t hid_get_reportchar(uint16_t handle, uint8_t serv, uint8_t reportid)
{
    3d3c:	b530      	push	{r4, r5, lr}
    3d3e:	b083      	sub	sp, #12
    3d40:	0015      	movs	r5, r2
	uint8_t         id         = 0;
	uint8_t         descval[2] = {0, 0};
    3d42:	ac01      	add	r4, sp, #4
    3d44:	2300      	movs	r3, #0
    3d46:	7023      	strb	r3, [r4, #0]
    3d48:	7063      	strb	r3, [r4, #1]
	uint16_t        len        = 2;
    3d4a:	466b      	mov	r3, sp
    3d4c:	1c9a      	adds	r2, r3, #2
    3d4e:	2302      	movs	r3, #2
    3d50:	8013      	strh	r3, [r2, #0]
		DBG_LOG_DEV("HID Service :: hid_get_reportchar :: Report ID Descriptor Handle %d :: id %d :: serv %d",
		            hid_serv_inst[serv].hid_dev_report_val_char[id]->additional_desc_list->handle,
		            id,
		            serv);
		status = at_ble_descriptor_value_get(
		    hid_serv_inst[serv].hid_dev_report_val_char[id]->additional_desc_list->handle, &descval[0], &len);
    3d52:	00cb      	lsls	r3, r1, #3
    3d54:	1859      	adds	r1, r3, r1
    3d56:	0089      	lsls	r1, r1, #2
    3d58:	4b07      	ldr	r3, [pc, #28]	; (3d78 <hid_get_reportchar+0x3c>)
    3d5a:	1859      	adds	r1, r3, r1
    3d5c:	690b      	ldr	r3, [r1, #16]
		status = at_ble_descriptor_value_get(
    3d5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    3d60:	8a98      	ldrh	r0, [r3, #20]
    3d62:	0021      	movs	r1, r4
    3d64:	4b05      	ldr	r3, [pc, #20]	; (3d7c <hid_get_reportchar+0x40>)
    3d66:	4798      	blx	r3
		if (status != AT_BLE_SUCCESS) {
			DBG_LOG_DEV("HID Service :: hid_get_reportchar :: Decriptor value get failed Reason %d", status);
		} else {
			DBG_LOG_DEV("HID Service :: hid_get_reportchar :: Report Value ID %d Type %d", descval[0], descval[1]);
		}
		if (descval[0] == reportid) {
    3d68:	7820      	ldrb	r0, [r4, #0]
    3d6a:	1b40      	subs	r0, r0, r5
    3d6c:	1e43      	subs	r3, r0, #1
    3d6e:	4198      	sbcs	r0, r3
    3d70:	4240      	negs	r0, r0
    3d72:	b2c0      	uxtb	r0, r0
			DBG_LOG_DEV("HID Service :: hid_get_reportchar :: Report Characteristic ID %d", id);
			return id;
		}
	}
	return HID_INVALID_INST;
}
    3d74:	b003      	add	sp, #12
    3d76:	bd30      	pop	{r4, r5, pc}
    3d78:	20001ae4 	.word	0x20001ae4
    3d7c:	00005b95 	.word	0x00005b95

00003d80 <hid_serv_report_update>:

/**
 * \Function to update the report.
 */
void hid_serv_report_update(uint16_t conn_handle, uint8_t serv_inst, uint8_t reportid, uint8_t *report, uint16_t len)
{
    3d80:	b5f0      	push	{r4, r5, r6, r7, lr}
    3d82:	b083      	sub	sp, #12
    3d84:	0004      	movs	r4, r0
    3d86:	000e      	movs	r6, r1
    3d88:	9301      	str	r3, [sp, #4]
    3d8a:	ab08      	add	r3, sp, #32
    3d8c:	881d      	ldrh	r5, [r3, #0]
	uint8_t  id;
	uint16_t status = 0;

	id = hid_get_reportchar(conn_handle, serv_inst, reportid);
    3d8e:	4b14      	ldr	r3, [pc, #80]	; (3de0 <hid_serv_report_update+0x60>)
    3d90:	4798      	blx	r3
    3d92:	0007      	movs	r7, r0

	if (id != HID_INVALID_INST) {
    3d94:	28ff      	cmp	r0, #255	; 0xff
    3d96:	d014      	beq.n	3dc2 <hid_serv_report_update+0x42>
		DBG_LOG_DEV("HID Service :: hid_serv_report_update :: Send report");
		if ((status = at_ble_characteristic_value_set(
		         hid_serv_inst[serv_inst].hid_dev_report_val_char[id]->char_val.handle, report, len))
    3d98:	00f3      	lsls	r3, r6, #3
    3d9a:	199b      	adds	r3, r3, r6
    3d9c:	181b      	adds	r3, r3, r0
    3d9e:	3304      	adds	r3, #4
    3da0:	009b      	lsls	r3, r3, #2
		if ((status = at_ble_characteristic_value_set(
    3da2:	4a10      	ldr	r2, [pc, #64]	; (3de4 <hid_serv_report_update+0x64>)
    3da4:	589b      	ldr	r3, [r3, r2]
    3da6:	8818      	ldrh	r0, [r3, #0]
    3da8:	002a      	movs	r2, r5
    3daa:	9901      	ldr	r1, [sp, #4]
    3dac:	4b0e      	ldr	r3, [pc, #56]	; (3de8 <hid_serv_report_update+0x68>)
    3dae:	4798      	blx	r3
    3db0:	1e05      	subs	r5, r0, #0
    3db2:	d008      	beq.n	3dc6 <hid_serv_report_update+0x46>
			                                  hid_serv_inst[serv_inst].hid_dev_report_val_char[id]->char_val.handle);
			if (status != AT_BLE_SUCCESS) {
				DBG_LOG_DEV("HID Service :: hid_serv_report_update :: Send notification fail Reason %d", status);
			}
		} else {
			DBG_LOG("HID Service :: hid_serv_report_update :: Characteristic Value Set Failed Reason %d", status);
    3db4:	480d      	ldr	r0, [pc, #52]	; (3dec <hid_serv_report_update+0x6c>)
    3db6:	4b0e      	ldr	r3, [pc, #56]	; (3df0 <hid_serv_report_update+0x70>)
    3db8:	4798      	blx	r3
    3dba:	0029      	movs	r1, r5
    3dbc:	480d      	ldr	r0, [pc, #52]	; (3df4 <hid_serv_report_update+0x74>)
    3dbe:	4b0e      	ldr	r3, [pc, #56]	; (3df8 <hid_serv_report_update+0x78>)
    3dc0:	4798      	blx	r3
		}
	}
}
    3dc2:	b003      	add	sp, #12
    3dc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
			                                  hid_serv_inst[serv_inst].hid_dev_report_val_char[id]->char_val.handle);
    3dc6:	00f3      	lsls	r3, r6, #3
    3dc8:	199e      	adds	r6, r3, r6
    3dca:	19f7      	adds	r7, r6, r7
    3dcc:	3704      	adds	r7, #4
    3dce:	00bf      	lsls	r7, r7, #2
			status = at_ble_notification_send(conn_handle,
    3dd0:	4b04      	ldr	r3, [pc, #16]	; (3de4 <hid_serv_report_update+0x64>)
    3dd2:	58fb      	ldr	r3, [r7, r3]
    3dd4:	8819      	ldrh	r1, [r3, #0]
    3dd6:	0020      	movs	r0, r4
    3dd8:	4b08      	ldr	r3, [pc, #32]	; (3dfc <hid_serv_report_update+0x7c>)
    3dda:	4798      	blx	r3
    3ddc:	e7f1      	b.n	3dc2 <hid_serv_report_update+0x42>
    3dde:	46c0      	nop			; (mov r8, r8)
    3de0:	00003d3d 	.word	0x00003d3d
    3de4:	20001ae4 	.word	0x20001ae4
    3de8:	00005b0d 	.word	0x00005b0d
    3dec:	00009f84 	.word	0x00009f84
    3df0:	00008bad 	.word	0x00008bad
    3df4:	0000aa54 	.word	0x0000aa54
    3df8:	00008a91 	.word	0x00008a91
    3dfc:	00005cc5 	.word	0x00005cc5

00003e00 <ble_app_timer1_cb>:
		break;
	}
}

static void ble_app_timer1_cb(const struct timer_task *const timer_task)
{
    3e00:	b510      	push	{r4, lr}
	if (ble_timer_cb[BLE_APP_TIMER_ID1] == NULL) {
    3e02:	4b03      	ldr	r3, [pc, #12]	; (3e10 <ble_app_timer1_cb+0x10>)
    3e04:	681b      	ldr	r3, [r3, #0]
    3e06:	2b00      	cmp	r3, #0
    3e08:	d000      	beq.n	3e0c <ble_app_timer1_cb+0xc>
		return;
	} else {
		ble_timer_cb[BLE_APP_TIMER_ID1]();
    3e0a:	4798      	blx	r3
	}
}
    3e0c:	bd10      	pop	{r4, pc}
    3e0e:	46c0      	nop			; (mov r8, r8)
    3e10:	20000630 	.word	0x20000630

00003e14 <ble_app_timer2_cb>:

static void ble_app_timer2_cb(const struct timer_task *const timer_task)
{
    3e14:	b510      	push	{r4, lr}
	if (ble_timer_cb[BLE_APP_TIMER_ID2] == NULL) {
    3e16:	4b03      	ldr	r3, [pc, #12]	; (3e24 <ble_app_timer2_cb+0x10>)
    3e18:	685b      	ldr	r3, [r3, #4]
    3e1a:	2b00      	cmp	r3, #0
    3e1c:	d000      	beq.n	3e20 <ble_app_timer2_cb+0xc>
		return;
	} else {
		ble_timer_cb[BLE_APP_TIMER_ID2]();
    3e1e:	4798      	blx	r3
	}
}
    3e20:	bd10      	pop	{r4, pc}
    3e22:	46c0      	nop			; (mov r8, r8)
    3e24:	20000630 	.word	0x20000630

00003e28 <ble_app_timer3_cb>:

static void ble_app_timer3_cb(const struct timer_task *const timer_task)
{
    3e28:	b510      	push	{r4, lr}
	if (ble_timer_cb[BLE_APP_TIMER_ID3] == NULL) {
    3e2a:	4b03      	ldr	r3, [pc, #12]	; (3e38 <ble_app_timer3_cb+0x10>)
    3e2c:	689b      	ldr	r3, [r3, #8]
    3e2e:	2b00      	cmp	r3, #0
    3e30:	d000      	beq.n	3e34 <ble_app_timer3_cb+0xc>
		return;
	} else {
		ble_timer_cb[BLE_APP_TIMER_ID3]();
    3e32:	4798      	blx	r3
	}
}
    3e34:	bd10      	pop	{r4, pc}
    3e36:	46c0      	nop			; (mov r8, r8)
    3e38:	20000630 	.word	0x20000630

00003e3c <bsp_init>:
{
    3e3c:	b510      	push	{r4, lr}
	system_init();
    3e3e:	4b01      	ldr	r3, [pc, #4]	; (3e44 <bsp_init+0x8>)
    3e40:	4798      	blx	r3
}
    3e42:	bd10      	pop	{r4, pc}
    3e44:	000004f9 	.word	0x000004f9

00003e48 <serial_console_init>:
{
    3e48:	b510      	push	{r4, lr}
	usart_sync_enable(&CONSOLE_UART);
    3e4a:	4c04      	ldr	r4, [pc, #16]	; (3e5c <serial_console_init+0x14>)
    3e4c:	0020      	movs	r0, r4
    3e4e:	4b04      	ldr	r3, [pc, #16]	; (3e60 <serial_console_init+0x18>)
    3e50:	4798      	blx	r3
	stdio_io_init(&CONSOLE_UART.io);
    3e52:	0020      	movs	r0, r4
    3e54:	4b03      	ldr	r3, [pc, #12]	; (3e64 <serial_console_init+0x1c>)
    3e56:	4798      	blx	r3
}
    3e58:	bd10      	pop	{r4, pc}
    3e5a:	46c0      	nop			; (mov r8, r8)
    3e5c:	20000e70 	.word	0x20000e70
    3e60:	00000f31 	.word	0x00000f31
    3e64:	00001bfd 	.word	0x00001bfd

00003e68 <ble_timer_start>:
{
    3e68:	b510      	push	{r4, lr}
	if (MAX_SW_TIMER < timer_id) {
    3e6a:	2803      	cmp	r0, #3
    3e6c:	d808      	bhi.n	3e80 <ble_timer_start+0x18>
	switch (timer_id) {
    3e6e:	2801      	cmp	r0, #1
    3e70:	d019      	beq.n	3ea6 <ble_timer_start+0x3e>
    3e72:	2800      	cmp	r0, #0
    3e74:	d005      	beq.n	3e82 <ble_timer_start+0x1a>
    3e76:	2802      	cmp	r0, #2
    3e78:	d027      	beq.n	3eca <ble_timer_start+0x62>
	timer_start(&Timer);
    3e7a:	481d      	ldr	r0, [pc, #116]	; (3ef0 <ble_timer_start+0x88>)
    3e7c:	4b1d      	ldr	r3, [pc, #116]	; (3ef4 <ble_timer_start+0x8c>)
    3e7e:	4798      	blx	r3
}
    3e80:	bd10      	pop	{r4, pc}
		if (!bsp_timer_status[BLE_APP_TIMER_ID1]) {
    3e82:	481d      	ldr	r0, [pc, #116]	; (3ef8 <ble_timer_start+0x90>)
    3e84:	7c00      	ldrb	r0, [r0, #16]
    3e86:	2800      	cmp	r0, #0
    3e88:	d1f7      	bne.n	3e7a <ble_timer_start+0x12>
			ble_timer_cb[BLE_APP_TIMER_ID1] = timer_cb;
    3e8a:	4c1b      	ldr	r4, [pc, #108]	; (3ef8 <ble_timer_start+0x90>)
    3e8c:	6023      	str	r3, [r4, #0]
			app_timer_1_task.interval       = time;
    3e8e:	4b1b      	ldr	r3, [pc, #108]	; (3efc <ble_timer_start+0x94>)
    3e90:	6099      	str	r1, [r3, #8]
			app_timer_1_task.cb             = ble_app_timer1_cb;
    3e92:	491b      	ldr	r1, [pc, #108]	; (3f00 <ble_timer_start+0x98>)
    3e94:	60d9      	str	r1, [r3, #12]
			app_timer_1_task.mode           = timer_mode;
    3e96:	741a      	strb	r2, [r3, #16]
			timer_add_task(&Timer, &app_timer_1_task);
    3e98:	0019      	movs	r1, r3
    3e9a:	4815      	ldr	r0, [pc, #84]	; (3ef0 <ble_timer_start+0x88>)
    3e9c:	4b19      	ldr	r3, [pc, #100]	; (3f04 <ble_timer_start+0x9c>)
    3e9e:	4798      	blx	r3
			bsp_timer_status[BLE_APP_TIMER_ID1] = true;
    3ea0:	2301      	movs	r3, #1
    3ea2:	7423      	strb	r3, [r4, #16]
    3ea4:	e7e9      	b.n	3e7a <ble_timer_start+0x12>
		if (!bsp_timer_status[BLE_APP_TIMER_ID2]) {
    3ea6:	4814      	ldr	r0, [pc, #80]	; (3ef8 <ble_timer_start+0x90>)
    3ea8:	7c40      	ldrb	r0, [r0, #17]
    3eaa:	2800      	cmp	r0, #0
    3eac:	d1e5      	bne.n	3e7a <ble_timer_start+0x12>
			ble_timer_cb[BLE_APP_TIMER_ID2] = timer_cb;
    3eae:	4c12      	ldr	r4, [pc, #72]	; (3ef8 <ble_timer_start+0x90>)
    3eb0:	6063      	str	r3, [r4, #4]
			app_timer_2_task.interval       = time;
    3eb2:	4b15      	ldr	r3, [pc, #84]	; (3f08 <ble_timer_start+0xa0>)
    3eb4:	6099      	str	r1, [r3, #8]
			app_timer_2_task.cb             = ble_app_timer2_cb;
    3eb6:	4915      	ldr	r1, [pc, #84]	; (3f0c <ble_timer_start+0xa4>)
    3eb8:	60d9      	str	r1, [r3, #12]
			app_timer_2_task.mode           = timer_mode;
    3eba:	741a      	strb	r2, [r3, #16]
			timer_add_task(&Timer, &app_timer_2_task);
    3ebc:	0019      	movs	r1, r3
    3ebe:	480c      	ldr	r0, [pc, #48]	; (3ef0 <ble_timer_start+0x88>)
    3ec0:	4b10      	ldr	r3, [pc, #64]	; (3f04 <ble_timer_start+0x9c>)
    3ec2:	4798      	blx	r3
			bsp_timer_status[BLE_APP_TIMER_ID2] = true;
    3ec4:	2301      	movs	r3, #1
    3ec6:	7463      	strb	r3, [r4, #17]
    3ec8:	e7d7      	b.n	3e7a <ble_timer_start+0x12>
		if (!bsp_timer_status[BLE_APP_TIMER_ID3]) {
    3eca:	480b      	ldr	r0, [pc, #44]	; (3ef8 <ble_timer_start+0x90>)
    3ecc:	7c80      	ldrb	r0, [r0, #18]
    3ece:	2800      	cmp	r0, #0
    3ed0:	d1d3      	bne.n	3e7a <ble_timer_start+0x12>
			ble_timer_cb[BLE_APP_TIMER_ID3] = timer_cb;
    3ed2:	4c09      	ldr	r4, [pc, #36]	; (3ef8 <ble_timer_start+0x90>)
    3ed4:	60a3      	str	r3, [r4, #8]
			app_timer_3_task.interval       = time;
    3ed6:	4b0e      	ldr	r3, [pc, #56]	; (3f10 <ble_timer_start+0xa8>)
    3ed8:	6099      	str	r1, [r3, #8]
			app_timer_3_task.cb             = ble_app_timer3_cb;
    3eda:	490e      	ldr	r1, [pc, #56]	; (3f14 <ble_timer_start+0xac>)
    3edc:	60d9      	str	r1, [r3, #12]
			app_timer_3_task.mode           = timer_mode;
    3ede:	741a      	strb	r2, [r3, #16]
			timer_add_task(&Timer, &app_timer_3_task);
    3ee0:	0019      	movs	r1, r3
    3ee2:	4803      	ldr	r0, [pc, #12]	; (3ef0 <ble_timer_start+0x88>)
    3ee4:	4b07      	ldr	r3, [pc, #28]	; (3f04 <ble_timer_start+0x9c>)
    3ee6:	4798      	blx	r3
			bsp_timer_status[BLE_APP_TIMER_ID3] = true;
    3ee8:	2301      	movs	r3, #1
    3eea:	74a3      	strb	r3, [r4, #18]
    3eec:	e7c5      	b.n	3e7a <ble_timer_start+0x12>
    3eee:	46c0      	nop			; (mov r8, r8)
    3ef0:	20000e7c 	.word	0x20000e7c
    3ef4:	00000895 	.word	0x00000895
    3ef8:	20000630 	.word	0x20000630
    3efc:	20001b40 	.word	0x20001b40
    3f00:	00003e01 	.word	0x00003e01
    3f04:	000008d1 	.word	0x000008d1
    3f08:	20001c30 	.word	0x20001c30
    3f0c:	00003e15 	.word	0x00003e15
    3f10:	20001c1c 	.word	0x20001c1c
    3f14:	00003e29 	.word	0x00003e29

00003f18 <ble_timer_stop>:
{
    3f18:	b510      	push	{r4, lr}
	if (MAX_SW_TIMER < timer_id) {
    3f1a:	2803      	cmp	r0, #3
    3f1c:	d805      	bhi.n	3f2a <ble_timer_stop+0x12>
	switch (timer_id) {
    3f1e:	2801      	cmp	r0, #1
    3f20:	d010      	beq.n	3f44 <ble_timer_stop+0x2c>
    3f22:	2800      	cmp	r0, #0
    3f24:	d002      	beq.n	3f2c <ble_timer_stop+0x14>
    3f26:	2802      	cmp	r0, #2
    3f28:	d018      	beq.n	3f5c <ble_timer_stop+0x44>
}
    3f2a:	bd10      	pop	{r4, pc}
		if (bsp_timer_status[BLE_APP_TIMER_ID1]) {
    3f2c:	4b11      	ldr	r3, [pc, #68]	; (3f74 <ble_timer_stop+0x5c>)
    3f2e:	7c1b      	ldrb	r3, [r3, #16]
    3f30:	2b00      	cmp	r3, #0
    3f32:	d0fa      	beq.n	3f2a <ble_timer_stop+0x12>
			timer_remove_task(&Timer, &app_timer_1_task);
    3f34:	4910      	ldr	r1, [pc, #64]	; (3f78 <ble_timer_stop+0x60>)
    3f36:	4811      	ldr	r0, [pc, #68]	; (3f7c <ble_timer_stop+0x64>)
    3f38:	4b11      	ldr	r3, [pc, #68]	; (3f80 <ble_timer_stop+0x68>)
    3f3a:	4798      	blx	r3
			bsp_timer_status[BLE_APP_TIMER_ID1] = false;
    3f3c:	2200      	movs	r2, #0
    3f3e:	4b0d      	ldr	r3, [pc, #52]	; (3f74 <ble_timer_stop+0x5c>)
    3f40:	741a      	strb	r2, [r3, #16]
    3f42:	e7f2      	b.n	3f2a <ble_timer_stop+0x12>
		if (bsp_timer_status[BLE_APP_TIMER_ID2]) {
    3f44:	4b0b      	ldr	r3, [pc, #44]	; (3f74 <ble_timer_stop+0x5c>)
    3f46:	7c5b      	ldrb	r3, [r3, #17]
    3f48:	2b00      	cmp	r3, #0
    3f4a:	d0ee      	beq.n	3f2a <ble_timer_stop+0x12>
			timer_remove_task(&Timer, &app_timer_2_task);
    3f4c:	490d      	ldr	r1, [pc, #52]	; (3f84 <ble_timer_stop+0x6c>)
    3f4e:	480b      	ldr	r0, [pc, #44]	; (3f7c <ble_timer_stop+0x64>)
    3f50:	4b0b      	ldr	r3, [pc, #44]	; (3f80 <ble_timer_stop+0x68>)
    3f52:	4798      	blx	r3
			bsp_timer_status[BLE_APP_TIMER_ID2] = false;
    3f54:	2200      	movs	r2, #0
    3f56:	4b07      	ldr	r3, [pc, #28]	; (3f74 <ble_timer_stop+0x5c>)
    3f58:	745a      	strb	r2, [r3, #17]
    3f5a:	e7e6      	b.n	3f2a <ble_timer_stop+0x12>
		if (bsp_timer_status[BLE_APP_TIMER_ID3]) {
    3f5c:	4b05      	ldr	r3, [pc, #20]	; (3f74 <ble_timer_stop+0x5c>)
    3f5e:	7c9b      	ldrb	r3, [r3, #18]
    3f60:	2b00      	cmp	r3, #0
    3f62:	d0e2      	beq.n	3f2a <ble_timer_stop+0x12>
			timer_remove_task(&Timer, &app_timer_3_task);
    3f64:	4908      	ldr	r1, [pc, #32]	; (3f88 <ble_timer_stop+0x70>)
    3f66:	4805      	ldr	r0, [pc, #20]	; (3f7c <ble_timer_stop+0x64>)
    3f68:	4b05      	ldr	r3, [pc, #20]	; (3f80 <ble_timer_stop+0x68>)
    3f6a:	4798      	blx	r3
			bsp_timer_status[BLE_APP_TIMER_ID3] = false;
    3f6c:	2200      	movs	r2, #0
    3f6e:	4b01      	ldr	r3, [pc, #4]	; (3f74 <ble_timer_stop+0x5c>)
    3f70:	749a      	strb	r2, [r3, #18]
    3f72:	e7da      	b.n	3f2a <ble_timer_stop+0x12>
    3f74:	20000630 	.word	0x20000630
    3f78:	20001b40 	.word	0x20001b40
    3f7c:	20000e7c 	.word	0x20000e7c
    3f80:	0000097d 	.word	0x0000097d
    3f84:	20001c30 	.word	0x20001c30
    3f88:	20001c1c 	.word	0x20001c1c

00003f8c <platform_configure_timer>:

void platform_configure_timer(platform_hw_timer_callback_t bus_tc_cb_ptr)
{
	bus_timer_callback = bus_tc_cb_ptr;
    3f8c:	4b01      	ldr	r3, [pc, #4]	; (3f94 <platform_configure_timer+0x8>)
    3f8e:	6018      	str	r0, [r3, #0]
}
    3f90:	4770      	bx	lr
    3f92:	46c0      	nop			; (mov r8, r8)
    3f94:	20001b38 	.word	0x20001b38

00003f98 <platform_start_bus_timer>:

void platform_start_bus_timer(uint32_t timeout)
{
    3f98:	b510      	push	{r4, lr}
	if (timeout == 0xFFFFFFFF) {
    3f9a:	1c43      	adds	r3, r0, #1
    3f9c:	d008      	beq.n	3fb0 <platform_start_bus_timer+0x18>
		return;
	}
	ble_timer_start(BLE_APP_TIMER_ID1, MS_TIMER(timeout), BLE_TIMER_REPEAT, (ble_timer_cb_t)bus_timer_callback);
    3f9e:	4b05      	ldr	r3, [pc, #20]	; (3fb4 <platform_start_bus_timer+0x1c>)
    3fa0:	681b      	ldr	r3, [r3, #0]
    3fa2:	0041      	lsls	r1, r0, #1
    3fa4:	1809      	adds	r1, r1, r0
    3fa6:	0109      	lsls	r1, r1, #4
    3fa8:	2201      	movs	r2, #1
    3faa:	2000      	movs	r0, #0
    3fac:	4c02      	ldr	r4, [pc, #8]	; (3fb8 <platform_start_bus_timer+0x20>)
    3fae:	47a0      	blx	r4
}
    3fb0:	bd10      	pop	{r4, pc}
    3fb2:	46c0      	nop			; (mov r8, r8)
    3fb4:	20001b38 	.word	0x20001b38
    3fb8:	00003e69 	.word	0x00003e69

00003fbc <platform_stop_bus_timer>:

void platform_stop_bus_timer(void)
{
    3fbc:	b510      	push	{r4, lr}
	ble_timer_stop(BLE_APP_TIMER_ID1);
    3fbe:	2000      	movs	r0, #0
    3fc0:	4b01      	ldr	r3, [pc, #4]	; (3fc8 <platform_stop_bus_timer+0xc>)
    3fc2:	4798      	blx	r3
}
    3fc4:	bd10      	pop	{r4, pc}
    3fc6:	46c0      	nop			; (mov r8, r8)
    3fc8:	00003f19 	.word	0x00003f19

00003fcc <serial_drv_read_cb>:
}

extern void platform_process_rxdata(uint8_t *buf, uint16_t len);

static void serial_drv_read_cb(const struct usart_async_descriptor *const io_descr)
{
    3fcc:	b500      	push	{lr}
    3fce:	b0c1      	sub	sp, #260	; 0x104
	uint8_t  buf_data[250];
	uint16_t length;

	length = ringbuffer_num(&io_descr->rx);
    3fd0:	3034      	adds	r0, #52	; 0x34
    3fd2:	4b08      	ldr	r3, [pc, #32]	; (3ff4 <serial_drv_read_cb+0x28>)
    3fd4:	4798      	blx	r3
    3fd6:	b282      	uxth	r2, r0
	if (length) {
    3fd8:	2a00      	cmp	r2, #0
    3fda:	d101      	bne.n	3fe0 <serial_drv_read_cb+0x14>
		/* Enough Room to push all the data */
		length = usart_io->read(usart_io, buf_data, length);
		platform_process_rxdata(buf_data, length);
	}
}
    3fdc:	b041      	add	sp, #260	; 0x104
    3fde:	bd00      	pop	{pc}
		length = usart_io->read(usart_io, buf_data, length);
    3fe0:	4b05      	ldr	r3, [pc, #20]	; (3ff8 <serial_drv_read_cb+0x2c>)
    3fe2:	6818      	ldr	r0, [r3, #0]
    3fe4:	6843      	ldr	r3, [r0, #4]
    3fe6:	a901      	add	r1, sp, #4
    3fe8:	4798      	blx	r3
		platform_process_rxdata(buf_data, length);
    3fea:	b281      	uxth	r1, r0
    3fec:	a801      	add	r0, sp, #4
    3fee:	4b03      	ldr	r3, [pc, #12]	; (3ffc <serial_drv_read_cb+0x30>)
    3ff0:	4798      	blx	r3
}
    3ff2:	e7f3      	b.n	3fdc <serial_drv_read_cb+0x10>
    3ff4:	000010e9 	.word	0x000010e9
    3ff8:	20001c4c 	.word	0x20001c4c
    3ffc:	000041f5 	.word	0x000041f5

00004000 <configure_serial_drv>:
{
    4000:	b570      	push	{r4, r5, r6, lr}
	usart_async_register_callback(&BLE_COM_UART, USART_ASYNC_RXC_CB, serial_drv_read_cb);
    4002:	4c0b      	ldr	r4, [pc, #44]	; (4030 <configure_serial_drv+0x30>)
    4004:	4a0b      	ldr	r2, [pc, #44]	; (4034 <configure_serial_drv+0x34>)
    4006:	2100      	movs	r1, #0
    4008:	0020      	movs	r0, r4
    400a:	4d0b      	ldr	r5, [pc, #44]	; (4038 <configure_serial_drv+0x38>)
    400c:	47a8      	blx	r5
	usart_async_register_callback(&BLE_COM_UART, USART_ASYNC_TXC_CB, serial_drv_write_cb);
    400e:	4a0b      	ldr	r2, [pc, #44]	; (403c <configure_serial_drv+0x3c>)
    4010:	2101      	movs	r1, #1
    4012:	0020      	movs	r0, r4
    4014:	47a8      	blx	r5
	usart_async_get_io_descriptor(&BLE_COM_UART, &usart_io);
    4016:	490a      	ldr	r1, [pc, #40]	; (4040 <configure_serial_drv+0x40>)
    4018:	0020      	movs	r0, r4
    401a:	4b0a      	ldr	r3, [pc, #40]	; (4044 <configure_serial_drv+0x44>)
    401c:	4798      	blx	r3
	usart_async_enable(&BLE_COM_UART);
    401e:	0020      	movs	r0, r4
    4020:	4b09      	ldr	r3, [pc, #36]	; (4048 <configure_serial_drv+0x48>)
    4022:	4798      	blx	r3
	pf_uart_state_t = Before_patch;
    4024:	2200      	movs	r2, #0
    4026:	4b09      	ldr	r3, [pc, #36]	; (404c <configure_serial_drv+0x4c>)
    4028:	701a      	strb	r2, [r3, #0]
}
    402a:	2000      	movs	r0, #0
    402c:	bd70      	pop	{r4, r5, r6, pc}
    402e:	46c0      	nop			; (mov r8, r8)
    4030:	20000e98 	.word	0x20000e98
    4034:	00003fcd 	.word	0x00003fcd
    4038:	00000d31 	.word	0x00000d31
    403c:	000040f9 	.word	0x000040f9
    4040:	20001c4c 	.word	0x20001c4c
    4044:	00000d05 	.word	0x00000d05
    4048:	00000cad 	.word	0x00000cad
    404c:	20001c48 	.word	0x20001c48

00004050 <configure_usart_after_patch>:
{
    4050:	b570      	push	{r4, r5, r6, lr}
	usart_async_disable(&BLE_COM_UART);
    4052:	4c10      	ldr	r4, [pc, #64]	; (4094 <configure_usart_after_patch+0x44>)
    4054:	0020      	movs	r0, r4
    4056:	4b10      	ldr	r3, [pc, #64]	; (4098 <configure_usart_after_patch+0x48>)
    4058:	4798      	blx	r3
	usart_async_deinit(&BLE_COM_UART);
    405a:	0020      	movs	r0, r4
    405c:	4b0f      	ldr	r3, [pc, #60]	; (409c <configure_usart_after_patch+0x4c>)
    405e:	4798      	blx	r3
	usart_async_set_flow_control(&BLE_COM_FC_UART, fw_state);
    4060:	4c0f      	ldr	r4, [pc, #60]	; (40a0 <configure_usart_after_patch+0x50>)
    4062:	2103      	movs	r1, #3
    4064:	0020      	movs	r0, r4
    4066:	4b0f      	ldr	r3, [pc, #60]	; (40a4 <configure_usart_after_patch+0x54>)
    4068:	4798      	blx	r3
	usart_async_register_callback(&BLE_COM_FC_UART, USART_ASYNC_RXC_CB, serial_drv_read_cb);
    406a:	4a0f      	ldr	r2, [pc, #60]	; (40a8 <configure_usart_after_patch+0x58>)
    406c:	2100      	movs	r1, #0
    406e:	0020      	movs	r0, r4
    4070:	4d0e      	ldr	r5, [pc, #56]	; (40ac <configure_usart_after_patch+0x5c>)
    4072:	47a8      	blx	r5
	usart_async_register_callback(&BLE_COM_FC_UART, USART_ASYNC_TXC_CB, serial_drv_write_cb);
    4074:	4a0e      	ldr	r2, [pc, #56]	; (40b0 <configure_usart_after_patch+0x60>)
    4076:	2101      	movs	r1, #1
    4078:	0020      	movs	r0, r4
    407a:	47a8      	blx	r5
	usart_async_get_io_descriptor(&BLE_COM_FC_UART, &usart_io);
    407c:	490d      	ldr	r1, [pc, #52]	; (40b4 <configure_usart_after_patch+0x64>)
    407e:	0020      	movs	r0, r4
    4080:	4b0d      	ldr	r3, [pc, #52]	; (40b8 <configure_usart_after_patch+0x68>)
    4082:	4798      	blx	r3
	usart_async_enable(&BLE_COM_FC_UART);
    4084:	0020      	movs	r0, r4
    4086:	4b0d      	ldr	r3, [pc, #52]	; (40bc <configure_usart_after_patch+0x6c>)
    4088:	4798      	blx	r3
	pf_uart_state_t = After_patch;
    408a:	4b0d      	ldr	r3, [pc, #52]	; (40c0 <configure_usart_after_patch+0x70>)
    408c:	2201      	movs	r2, #1
    408e:	701a      	strb	r2, [r3, #0]
}
    4090:	bd70      	pop	{r4, r5, r6, pc}
    4092:	46c0      	nop			; (mov r8, r8)
    4094:	20000e98 	.word	0x20000e98
    4098:	00000cd9 	.word	0x00000cd9
    409c:	00000c7d 	.word	0x00000c7d
    40a0:	20000e20 	.word	0x20000e20
    40a4:	00000da9 	.word	0x00000da9
    40a8:	00003fcd 	.word	0x00003fcd
    40ac:	00000d31 	.word	0x00000d31
    40b0:	000040f9 	.word	0x000040f9
    40b4:	20001c4c 	.word	0x20001c4c
    40b8:	00000d05 	.word	0x00000d05
    40bc:	00000cad 	.word	0x00000cad
    40c0:	20001c48 	.word	0x20001c48

000040c4 <platform_serial_drv_tx_status>:
		;
	g_txdata = false;
}

uint32_t platform_serial_drv_tx_status(void)
{
    40c4:	b510      	push	{r4, lr}
#if UART_FLOWCONTROL_6WIRE_MODE == true
	if (pf_uart_state_t == After_patch)
    40c6:	4b08      	ldr	r3, [pc, #32]	; (40e8 <platform_serial_drv_tx_status+0x24>)
    40c8:	781b      	ldrb	r3, [r3, #0]
    40ca:	2b01      	cmp	r3, #1
    40cc:	d005      	beq.n	40da <platform_serial_drv_tx_status+0x16>
		return (!usart_async_is_tx_empty(&BLE_COM_FC_UART));
	else
		return (!usart_async_is_tx_empty(&BLE_COM_UART));
    40ce:	4807      	ldr	r0, [pc, #28]	; (40ec <platform_serial_drv_tx_status+0x28>)
    40d0:	4b07      	ldr	r3, [pc, #28]	; (40f0 <platform_serial_drv_tx_status+0x2c>)
    40d2:	4798      	blx	r3
    40d4:	4243      	negs	r3, r0
    40d6:	4158      	adcs	r0, r3
#else
	return (!usart_async_is_tx_empty(&BLE_COM_FC_UART));
#endif
}
    40d8:	bd10      	pop	{r4, pc}
		return (!usart_async_is_tx_empty(&BLE_COM_FC_UART));
    40da:	4806      	ldr	r0, [pc, #24]	; (40f4 <platform_serial_drv_tx_status+0x30>)
    40dc:	4b04      	ldr	r3, [pc, #16]	; (40f0 <platform_serial_drv_tx_status+0x2c>)
    40de:	4798      	blx	r3
    40e0:	4243      	negs	r3, r0
    40e2:	4158      	adcs	r0, r3
    40e4:	e7f8      	b.n	40d8 <platform_serial_drv_tx_status+0x14>
    40e6:	46c0      	nop			; (mov r8, r8)
    40e8:	20001c48 	.word	0x20001c48
    40ec:	20000e98 	.word	0x20000e98
    40f0:	00000dd9 	.word	0x00000dd9
    40f4:	20000e20 	.word	0x20000e20

000040f8 <serial_drv_write_cb>:
{
    40f8:	b510      	push	{r4, lr}
	while (platform_serial_drv_tx_status())
    40fa:	4c04      	ldr	r4, [pc, #16]	; (410c <serial_drv_write_cb+0x14>)
    40fc:	47a0      	blx	r4
    40fe:	2800      	cmp	r0, #0
    4100:	d1fc      	bne.n	40fc <serial_drv_write_cb+0x4>
	g_txdata = false;
    4102:	2200      	movs	r2, #0
    4104:	4b02      	ldr	r3, [pc, #8]	; (4110 <serial_drv_write_cb+0x18>)
    4106:	701a      	strb	r2, [r3, #0]
}
    4108:	bd10      	pop	{r4, pc}
    410a:	46c0      	nop			; (mov r8, r8)
    410c:	000040c5 	.word	0x000040c5
    4110:	20001c50 	.word	0x20001c50

00004114 <serial_drv_send>:
{
    4114:	b570      	push	{r4, r5, r6, lr}
    4116:	0006      	movs	r6, r0
    4118:	000d      	movs	r5, r1
	while (platform_serial_drv_tx_status())
    411a:	4c0d      	ldr	r4, [pc, #52]	; (4150 <serial_drv_send+0x3c>)
    411c:	47a0      	blx	r4
    411e:	2800      	cmp	r0, #0
    4120:	d1fc      	bne.n	411c <serial_drv_send+0x8>
	if (len) {
    4122:	2d00      	cmp	r5, #0
    4124:	d105      	bne.n	4132 <serial_drv_send+0x1e>
	while (g_txdata)
    4126:	4a0b      	ldr	r2, [pc, #44]	; (4154 <serial_drv_send+0x40>)
    4128:	7813      	ldrb	r3, [r2, #0]
    412a:	2b00      	cmp	r3, #0
    412c:	d1fc      	bne.n	4128 <serial_drv_send+0x14>
}
    412e:	2000      	movs	r0, #0
    4130:	bd70      	pop	{r4, r5, r6, pc}
		g_txdata = true;
    4132:	2201      	movs	r2, #1
    4134:	4b07      	ldr	r3, [pc, #28]	; (4154 <serial_drv_send+0x40>)
    4136:	701a      	strb	r2, [r3, #0]
		io_write(usart_io, data, len);
    4138:	4b07      	ldr	r3, [pc, #28]	; (4158 <serial_drv_send+0x44>)
    413a:	6818      	ldr	r0, [r3, #0]
    413c:	002a      	movs	r2, r5
    413e:	0031      	movs	r1, r6
    4140:	4b06      	ldr	r3, [pc, #24]	; (415c <serial_drv_send+0x48>)
    4142:	4798      	blx	r3
		while (platform_serial_drv_tx_status())
    4144:	4c02      	ldr	r4, [pc, #8]	; (4150 <serial_drv_send+0x3c>)
    4146:	47a0      	blx	r4
    4148:	2800      	cmp	r0, #0
    414a:	d1fc      	bne.n	4146 <serial_drv_send+0x32>
    414c:	e7eb      	b.n	4126 <serial_drv_send+0x12>
    414e:	46c0      	nop			; (mov r8, r8)
    4150:	000040c5 	.word	0x000040c5
    4154:	20001c50 	.word	0x20001c50
    4158:	20001c4c 	.word	0x20001c4c
    415c:	000006ed 	.word	0x000006ed

00004160 <platform_init>:
uint8_t  rx_buf[256];
uint16_t rx_buf_idx;
#endif

at_ble_status_t platform_init(uint8_t bus_type, uint8_t bus_flow_control_enabled)
{
    4160:	b510      	push	{r4, lr}
	platform_bus_type = bus_type;
    4162:	4b06      	ldr	r3, [pc, #24]	; (417c <platform_init+0x1c>)
    4164:	7018      	strb	r0, [r3, #0]
	if (platform_bus_type == AT_BLE_UART) {
		ble_configure_control_pin();
		configure_serial_drv();
		return AT_BLE_SUCCESS;
	}
	return AT_BLE_INVALID_PARAM;
    4166:	23cf      	movs	r3, #207	; 0xcf
	if (platform_bus_type == AT_BLE_UART) {
    4168:	2801      	cmp	r0, #1
    416a:	d001      	beq.n	4170 <platform_init+0x10>
}
    416c:	0018      	movs	r0, r3
    416e:	bd10      	pop	{r4, pc}
		ble_configure_control_pin();
    4170:	4b03      	ldr	r3, [pc, #12]	; (4180 <platform_init+0x20>)
    4172:	4798      	blx	r3
		configure_serial_drv();
    4174:	4b03      	ldr	r3, [pc, #12]	; (4184 <platform_init+0x24>)
    4176:	4798      	blx	r3
		return AT_BLE_SUCCESS;
    4178:	2300      	movs	r3, #0
    417a:	e7f7      	b.n	416c <platform_init+0xc>
    417c:	20000644 	.word	0x20000644
    4180:	00000145 	.word	0x00000145
    4184:	00004001 	.word	0x00004001

00004188 <platform_send_sync>:

void platform_send_sync(uint8_t *data, uint32_t len)
{
    4188:	b510      	push	{r4, lr}
	DBG_LOG_BLE("\r\nTxLen:%d: ", len);
	for (i = 0; i < len; i++) {
		DBG_LOG_CONT("0x%X, ", data[i]);
	}
#endif
	if (AT_BLE_UART == platform_bus_type) {
    418a:	4b04      	ldr	r3, [pc, #16]	; (419c <platform_send_sync+0x14>)
    418c:	781b      	ldrb	r3, [r3, #0]
    418e:	2b01      	cmp	r3, #1
    4190:	d000      	beq.n	4194 <platform_send_sync+0xc>
		serial_drv_send(data, (uint16_t)len);
	}
}
    4192:	bd10      	pop	{r4, pc}
		serial_drv_send(data, (uint16_t)len);
    4194:	b289      	uxth	r1, r1
    4196:	4b02      	ldr	r3, [pc, #8]	; (41a0 <platform_send_sync+0x18>)
    4198:	4798      	blx	r3
}
    419a:	e7fa      	b.n	4192 <platform_send_sync+0xa>
    419c:	20000644 	.word	0x20000644
    41a0:	00004115 	.word	0x00004115

000041a4 <platform_gpio_set>:

void platform_gpio_set(at_ble_gpio_pin_t pin, at_ble_gpio_status_t status)
{
    41a4:	b510      	push	{r4, lr}
	if (pin == AT_BLE_CHIP_ENABLE) {
    41a6:	2800      	cmp	r0, #0
    41a8:	d107      	bne.n	41ba <platform_gpio_set+0x16>
		if (status == AT_BLE_HIGH) {
    41aa:	2901      	cmp	r1, #1
    41ac:	d002      	beq.n	41b4 <platform_gpio_set+0x10>
			ble_enable_pin_set_high();
		} else {
			ble_enable_pin_set_low();
    41ae:	4b08      	ldr	r3, [pc, #32]	; (41d0 <platform_gpio_set+0x2c>)
    41b0:	4798      	blx	r3
			ble_wakeup_pin_set_high();
		} else {
			ble_wakeup_pin_set_low();
		}
	}
}
    41b2:	bd10      	pop	{r4, pc}
			ble_enable_pin_set_high();
    41b4:	4b07      	ldr	r3, [pc, #28]	; (41d4 <platform_gpio_set+0x30>)
    41b6:	4798      	blx	r3
    41b8:	e7fb      	b.n	41b2 <platform_gpio_set+0xe>
	} else if (pin == AT_BLE_EXTERNAL_WAKEUP) {
    41ba:	2801      	cmp	r0, #1
    41bc:	d1f9      	bne.n	41b2 <platform_gpio_set+0xe>
		if (status == AT_BLE_HIGH) {
    41be:	2901      	cmp	r1, #1
    41c0:	d002      	beq.n	41c8 <platform_gpio_set+0x24>
			ble_wakeup_pin_set_low();
    41c2:	4b05      	ldr	r3, [pc, #20]	; (41d8 <platform_gpio_set+0x34>)
    41c4:	4798      	blx	r3
}
    41c6:	e7f4      	b.n	41b2 <platform_gpio_set+0xe>
			ble_wakeup_pin_set_high();
    41c8:	4b04      	ldr	r3, [pc, #16]	; (41dc <platform_gpio_set+0x38>)
    41ca:	4798      	blx	r3
    41cc:	e7f1      	b.n	41b2 <platform_gpio_set+0xe>
    41ce:	46c0      	nop			; (mov r8, r8)
    41d0:	0000012d 	.word	0x0000012d
    41d4:	00000139 	.word	0x00000139
    41d8:	00000115 	.word	0x00000115
    41dc:	00000121 	.word	0x00000121

000041e0 <platform_recv_async>:

void platform_recv_async(void (*recv_async_callback)(uint8_t))
{
	if (AT_BLE_UART == platform_bus_type) {
    41e0:	4b03      	ldr	r3, [pc, #12]	; (41f0 <platform_recv_async+0x10>)
    41e2:	781b      	ldrb	r3, [r3, #0]
    41e4:	2b01      	cmp	r3, #1
    41e6:	d000      	beq.n	41ea <platform_recv_async+0xa>
		recv_async_cb = recv_async_callback;
	}
}
    41e8:	4770      	bx	lr
		recv_async_cb = recv_async_callback;
    41ea:	4b01      	ldr	r3, [pc, #4]	; (41f0 <platform_recv_async+0x10>)
    41ec:	6058      	str	r0, [r3, #4]
}
    41ee:	e7fb      	b.n	41e8 <platform_recv_async+0x8>
    41f0:	20000644 	.word	0x20000644

000041f4 <platform_process_rxdata>:

void platform_process_rxdata(uint8_t *buf, uint16_t len)
{
    41f4:	b570      	push	{r4, r5, r6, lr}
	if (AT_BLE_UART == platform_bus_type) {
    41f6:	4b0a      	ldr	r3, [pc, #40]	; (4220 <platform_process_rxdata+0x2c>)
    41f8:	781b      	ldrb	r3, [r3, #0]
    41fa:	2b01      	cmp	r3, #1
    41fc:	d000      	beq.n	4200 <platform_process_rxdata+0xc>
		for (uint16_t idx = 0; idx < len; idx++) {
			recv_async_cb(buf[idx]);
		}
	}
}
    41fe:	bd70      	pop	{r4, r5, r6, pc}
		for (uint16_t idx = 0; idx < len; idx++) {
    4200:	2900      	cmp	r1, #0
    4202:	d0fc      	beq.n	41fe <platform_process_rxdata+0xa>
    4204:	0004      	movs	r4, r0
    4206:	3901      	subs	r1, #1
    4208:	b28d      	uxth	r5, r1
    420a:	3501      	adds	r5, #1
    420c:	1945      	adds	r5, r0, r5
			recv_async_cb(buf[idx]);
    420e:	4e04      	ldr	r6, [pc, #16]	; (4220 <platform_process_rxdata+0x2c>)
    4210:	7820      	ldrb	r0, [r4, #0]
    4212:	6873      	ldr	r3, [r6, #4]
    4214:	4798      	blx	r3
    4216:	3401      	adds	r4, #1
		for (uint16_t idx = 0; idx < len; idx++) {
    4218:	42ac      	cmp	r4, r5
    421a:	d1f9      	bne.n	4210 <platform_process_rxdata+0x1c>
    421c:	e7ef      	b.n	41fe <platform_process_rxdata+0xa>
    421e:	46c0      	nop			; (mov r8, r8)
    4220:	20000644 	.word	0x20000644

00004224 <platform_enter_critical_section>:
  __ASM volatile ("cpsid i" : : : "memory");
    4224:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
    4226:	f3bf 8f5f 	dmb	sy
void platform_enter_critical_section(void)
{
	do {
		__disable_irq();
		__DMB();
		g_interrupt_enabled = false;
    422a:	2200      	movs	r2, #0
    422c:	4b01      	ldr	r3, [pc, #4]	; (4234 <platform_enter_critical_section+0x10>)
    422e:	701a      	strb	r2, [r3, #0]

	} while (0);
}
    4230:	4770      	bx	lr
    4232:	46c0      	nop			; (mov r8, r8)
    4234:	20000058 	.word	0x20000058

00004238 <platform_leave_critical_section>:

void platform_leave_critical_section(void)
{
	do {
		g_interrupt_enabled = true;
    4238:	2201      	movs	r2, #1
    423a:	4b03      	ldr	r3, [pc, #12]	; (4248 <platform_leave_critical_section+0x10>)
    423c:	701a      	strb	r2, [r3, #0]
    423e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    4242:	b662      	cpsie	i
		__DMB();
		__enable_irq();

	} while (0);
}
    4244:	4770      	bx	lr
    4246:	46c0      	nop			; (mov r8, r8)
    4248:	20000058 	.word	0x20000058

0000424c <platform_configure_hw_fc_uart>:

void platform_configure_hw_fc_uart(void)
{
    424c:	b510      	push	{r4, lr}
	configure_usart_after_patch();
    424e:	4b01      	ldr	r3, [pc, #4]	; (4254 <platform_configure_hw_fc_uart+0x8>)
    4250:	4798      	blx	r3
}
    4252:	bd10      	pop	{r4, pc}
    4254:	00004051 	.word	0x00004051

00004258 <platform_create_timer>:

void *platform_create_timer(void (*timer_cb)(void *))
{
    4258:	b510      	push	{r4, lr}
	platform_configure_timer(timer_cb);
    425a:	4b02      	ldr	r3, [pc, #8]	; (4264 <platform_create_timer+0xc>)
    425c:	4798      	blx	r3
	return (&(hw_timers[0]));
    425e:	4802      	ldr	r0, [pc, #8]	; (4268 <platform_create_timer+0x10>)
}
    4260:	3004      	adds	r0, #4
    4262:	bd10      	pop	{r4, pc}
    4264:	00003f8d 	.word	0x00003f8d
    4268:	20000058 	.word	0x20000058

0000426c <platform_delete_timer>:

void platform_delete_timer(void *timer_handle)
{
    426c:	b510      	push	{r4, lr}
	platform_stop_bus_timer();
    426e:	4b01      	ldr	r3, [pc, #4]	; (4274 <platform_delete_timer+0x8>)
    4270:	4798      	blx	r3
}
    4272:	bd10      	pop	{r4, pc}
    4274:	00003fbd 	.word	0x00003fbd

00004278 <platform_start_timer>:

void platform_start_timer(void *timer_handle, uint32_t ms)
{
    4278:	b510      	push	{r4, lr}
    427a:	000c      	movs	r4, r1
	platform_enter_critical_section();
    427c:	4b03      	ldr	r3, [pc, #12]	; (428c <platform_start_timer+0x14>)
    427e:	4798      	blx	r3
	platform_start_bus_timer(ms);
    4280:	0020      	movs	r0, r4
    4282:	4b03      	ldr	r3, [pc, #12]	; (4290 <platform_start_timer+0x18>)
    4284:	4798      	blx	r3
	platform_leave_critical_section();
    4286:	4b03      	ldr	r3, [pc, #12]	; (4294 <platform_start_timer+0x1c>)
    4288:	4798      	blx	r3
}
    428a:	bd10      	pop	{r4, pc}
    428c:	00004225 	.word	0x00004225
    4290:	00003f99 	.word	0x00003f99
    4294:	00004239 	.word	0x00004239

00004298 <platform_stop_timer>:

void platform_stop_timer(void *timer_handle)
{
    4298:	b510      	push	{r4, lr}
	platform_enter_critical_section();
    429a:	4b03      	ldr	r3, [pc, #12]	; (42a8 <platform_stop_timer+0x10>)
    429c:	4798      	blx	r3
	platform_stop_bus_timer();
    429e:	4b03      	ldr	r3, [pc, #12]	; (42ac <platform_stop_timer+0x14>)
    42a0:	4798      	blx	r3
	platform_leave_critical_section();
    42a2:	4b03      	ldr	r3, [pc, #12]	; (42b0 <platform_stop_timer+0x18>)
    42a4:	4798      	blx	r3
}
    42a6:	bd10      	pop	{r4, pc}
    42a8:	00004225 	.word	0x00004225
    42ac:	00003fbd 	.word	0x00003fbd
    42b0:	00004239 	.word	0x00004239

000042b4 <platform_sleep>:

void platform_sleep(uint32_t ms)
{
    42b4:	b510      	push	{r4, lr}
	delay_ms(ms);
    42b6:	b280      	uxth	r0, r0
    42b8:	4b01      	ldr	r3, [pc, #4]	; (42c0 <platform_sleep+0xc>)
    42ba:	4798      	blx	r3
}
    42bc:	bd10      	pop	{r4, pc}
    42be:	46c0      	nop			; (mov r8, r8)
    42c0:	00000629 	.word	0x00000629

000042c4 <internal_event_post>:
    42c4:	b570      	push	{r4, r5, r6, lr}
    42c6:	4d0c      	ldr	r5, [pc, #48]	; (42f8 <internal_event_post+0x34>)
    42c8:	682c      	ldr	r4, [r5, #0]
    42ca:	2c00      	cmp	r4, #0
    42cc:	d013      	beq.n	42f6 <internal_event_post+0x32>
    42ce:	6826      	ldr	r6, [r4, #0]
    42d0:	60e2      	str	r2, [r4, #12]
    42d2:	602e      	str	r6, [r5, #0]
    42d4:	2500      	movs	r5, #0
    42d6:	4a09      	ldr	r2, [pc, #36]	; (42fc <internal_event_post+0x38>)
    42d8:	8123      	strh	r3, [r4, #8]
    42da:	6813      	ldr	r3, [r2, #0]
    42dc:	6025      	str	r5, [r4, #0]
    42de:	80a0      	strh	r0, [r4, #4]
    42e0:	80e1      	strh	r1, [r4, #6]
    42e2:	42ab      	cmp	r3, r5
    42e4:	d101      	bne.n	42ea <internal_event_post+0x26>
    42e6:	6014      	str	r4, [r2, #0]
    42e8:	e005      	b.n	42f6 <internal_event_post+0x32>
    42ea:	681a      	ldr	r2, [r3, #0]
    42ec:	2a00      	cmp	r2, #0
    42ee:	d001      	beq.n	42f4 <internal_event_post+0x30>
    42f0:	1c13      	adds	r3, r2, #0
    42f2:	e7fa      	b.n	42ea <internal_event_post+0x26>
    42f4:	601c      	str	r4, [r3, #0]
    42f6:	bd70      	pop	{r4, r5, r6, pc}
    42f8:	200006f4 	.word	0x200006f4
    42fc:	200006ec 	.word	0x200006ec

00004300 <internal_event_init>:
    4300:	4b0a      	ldr	r3, [pc, #40]	; (432c <internal_event_init+0x2c>)
    4302:	2200      	movs	r2, #0
    4304:	1c19      	adds	r1, r3, #0
    4306:	b510      	push	{r4, lr}
    4308:	6818      	ldr	r0, [r3, #0]
    430a:	4b09      	ldr	r3, [pc, #36]	; (4330 <internal_event_init+0x30>)
    430c:	189c      	adds	r4, r3, r2
    430e:	50d0      	str	r0, [r2, r3]
    4310:	3210      	adds	r2, #16
    4312:	1c20      	adds	r0, r4, #0
    4314:	2aa0      	cmp	r2, #160	; 0xa0
    4316:	d1f8      	bne.n	430a <internal_event_init+0xa>
    4318:	3390      	adds	r3, #144	; 0x90
    431a:	600b      	str	r3, [r1, #0]
    431c:	4b05      	ldr	r3, [pc, #20]	; (4334 <internal_event_init+0x34>)
    431e:	3aa1      	subs	r2, #161	; 0xa1
    4320:	805a      	strh	r2, [r3, #2]
    4322:	801a      	strh	r2, [r3, #0]
    4324:	2200      	movs	r2, #0
    4326:	609a      	str	r2, [r3, #8]
    4328:	60da      	str	r2, [r3, #12]
    432a:	bd10      	pop	{r4, pc}
    432c:	200006f4 	.word	0x200006f4
    4330:	2000064c 	.word	0x2000064c
    4334:	20001c54 	.word	0x20001c54

00004338 <special_events_handler>:
    4338:	b538      	push	{r3, r4, r5, lr}
    433a:	4c20      	ldr	r4, [pc, #128]	; (43bc <special_events_handler+0x84>)
    433c:	1c05      	adds	r5, r0, #0
    433e:	1c08      	adds	r0, r1, #0
    4340:	8821      	ldrh	r1, [r4, #0]
    4342:	1c23      	adds	r3, r4, #0
    4344:	42a9      	cmp	r1, r5
    4346:	d10e      	bne.n	4366 <special_events_handler+0x2e>
    4348:	88a1      	ldrh	r1, [r4, #4]
    434a:	4281      	cmp	r1, r0
    434c:	d10b      	bne.n	4366 <special_events_handler+0x2e>
    434e:	2301      	movs	r3, #1
    4350:	425b      	negs	r3, r3
    4352:	8023      	strh	r3, [r4, #0]
    4354:	60a2      	str	r2, [r4, #8]
    4356:	4b1a      	ldr	r3, [pc, #104]	; (43c0 <special_events_handler+0x88>)
    4358:	8862      	ldrh	r2, [r4, #2]
    435a:	2101      	movs	r1, #1
    435c:	429a      	cmp	r2, r3
    435e:	d12b      	bne.n	43b8 <special_events_handler+0x80>
    4360:	4b18      	ldr	r3, [pc, #96]	; (43c4 <special_events_handler+0x8c>)
    4362:	4798      	blx	r3
    4364:	e01c      	b.n	43a0 <special_events_handler+0x68>
    4366:	8859      	ldrh	r1, [r3, #2]
    4368:	42a9      	cmp	r1, r5
    436a:	d10c      	bne.n	4386 <special_events_handler+0x4e>
    436c:	8899      	ldrh	r1, [r3, #4]
    436e:	4281      	cmp	r1, r0
    4370:	d109      	bne.n	4386 <special_events_handler+0x4e>
    4372:	2101      	movs	r1, #1
    4374:	4249      	negs	r1, r1
    4376:	8059      	strh	r1, [r3, #2]
    4378:	6899      	ldr	r1, [r3, #8]
    437a:	2900      	cmp	r1, #0
    437c:	d101      	bne.n	4382 <special_events_handler+0x4a>
    437e:	609a      	str	r2, [r3, #8]
    4380:	e7ee      	b.n	4360 <special_events_handler+0x28>
    4382:	60da      	str	r2, [r3, #12]
    4384:	e7ec      	b.n	4360 <special_events_handler+0x28>
    4386:	4b10      	ldr	r3, [pc, #64]	; (43c8 <special_events_handler+0x90>)
    4388:	429d      	cmp	r5, r3
    438a:	d00f      	beq.n	43ac <special_events_handler+0x74>
    438c:	4b0f      	ldr	r3, [pc, #60]	; (43cc <special_events_handler+0x94>)
    438e:	429d      	cmp	r5, r3
    4390:	d008      	beq.n	43a4 <special_events_handler+0x6c>
    4392:	4b0f      	ldr	r3, [pc, #60]	; (43d0 <special_events_handler+0x98>)
    4394:	2100      	movs	r1, #0
    4396:	429d      	cmp	r5, r3
    4398:	d10e      	bne.n	43b8 <special_events_handler+0x80>
    439a:	1c10      	adds	r0, r2, #0
    439c:	4b0d      	ldr	r3, [pc, #52]	; (43d4 <special_events_handler+0x9c>)
    439e:	4798      	blx	r3
    43a0:	2101      	movs	r1, #1
    43a2:	e009      	b.n	43b8 <special_events_handler+0x80>
    43a4:	1c11      	adds	r1, r2, #0
    43a6:	4b0c      	ldr	r3, [pc, #48]	; (43d8 <special_events_handler+0xa0>)
    43a8:	2200      	movs	r2, #0
    43aa:	e002      	b.n	43b2 <special_events_handler+0x7a>
    43ac:	1c11      	adds	r1, r2, #0
    43ae:	2200      	movs	r2, #0
    43b0:	4b0a      	ldr	r3, [pc, #40]	; (43dc <special_events_handler+0xa4>)
    43b2:	4798      	blx	r3
    43b4:	4241      	negs	r1, r0
    43b6:	4141      	adcs	r1, r0
    43b8:	1c08      	adds	r0, r1, #0
    43ba:	bd38      	pop	{r3, r4, r5, pc}
    43bc:	20001c54 	.word	0x20001c54
    43c0:	0000ffff 	.word	0x0000ffff
    43c4:	00006409 	.word	0x00006409
    43c8:	00000e13 	.word	0x00000e13
    43cc:	00000e15 	.word	0x00000e15
    43d0:	00000e01 	.word	0x00000e01
    43d4:	00006f4d 	.word	0x00006f4d
    43d8:	0000711d 	.word	0x0000711d
    43dc:	000071f5 	.word	0x000071f5

000043e0 <at_ble_event_get>:
    43e0:	2300      	movs	r3, #0
    43e2:	b5f0      	push	{r4, r5, r6, r7, lr}
    43e4:	1c0d      	adds	r5, r1, #0
    43e6:	b085      	sub	sp, #20
    43e8:	9002      	str	r0, [sp, #8]
    43ea:	9203      	str	r2, [sp, #12]
    43ec:	7003      	strb	r3, [r0, #0]
    43ee:	4bb8      	ldr	r3, [pc, #736]	; (46d0 <at_ble_event_get+0x2f0>)
    43f0:	9803      	ldr	r0, [sp, #12]
    43f2:	4798      	blx	r3
    43f4:	2300      	movs	r3, #0
    43f6:	9301      	str	r3, [sp, #4]
    43f8:	4cb6      	ldr	r4, [pc, #728]	; (46d4 <at_ble_event_get+0x2f4>)
    43fa:	6823      	ldr	r3, [r4, #0]
    43fc:	2b00      	cmp	r3, #0
    43fe:	d104      	bne.n	440a <at_ble_event_get+0x2a>
    4400:	4bb5      	ldr	r3, [pc, #724]	; (46d8 <at_ble_event_get+0x2f8>)
    4402:	4798      	blx	r3
    4404:	9001      	str	r0, [sp, #4]
    4406:	28d0      	cmp	r0, #208	; 0xd0
    4408:	d1f6      	bne.n	43f8 <at_ble_event_get+0x18>
    440a:	4bb4      	ldr	r3, [pc, #720]	; (46dc <at_ble_event_get+0x2fc>)
    440c:	4798      	blx	r3
    440e:	9b01      	ldr	r3, [sp, #4]
    4410:	2bd0      	cmp	r3, #208	; 0xd0
    4412:	d100      	bne.n	4416 <at_ble_event_get+0x36>
    4414:	e28b      	b.n	492e <at_ble_event_get+0x54e>
    4416:	6823      	ldr	r3, [r4, #0]
    4418:	681a      	ldr	r2, [r3, #0]
    441a:	68d9      	ldr	r1, [r3, #12]
    441c:	6022      	str	r2, [r4, #0]
    441e:	88da      	ldrh	r2, [r3, #6]
    4420:	9200      	str	r2, [sp, #0]
    4422:	4aaf      	ldr	r2, [pc, #700]	; (46e0 <at_ble_event_get+0x300>)
    4424:	889c      	ldrh	r4, [r3, #4]
    4426:	6810      	ldr	r0, [r2, #0]
    4428:	6013      	str	r3, [r2, #0]
    442a:	6018      	str	r0, [r3, #0]
    442c:	9b01      	ldr	r3, [sp, #4]
    442e:	2b00      	cmp	r3, #0
    4430:	d000      	beq.n	4434 <at_ble_event_get+0x54>
    4432:	e27c      	b.n	492e <at_ble_event_get+0x54e>
    4434:	4bab      	ldr	r3, [pc, #684]	; (46e4 <at_ble_event_get+0x304>)
    4436:	429c      	cmp	r4, r3
    4438:	d108      	bne.n	444c <at_ble_event_get+0x6c>
    443a:	9b00      	ldr	r3, [sp, #0]
    443c:	42a3      	cmp	r3, r4
    443e:	d000      	beq.n	4442 <at_ble_event_get+0x62>
    4440:	e265      	b.n	490e <at_ble_event_get+0x52e>
    4442:	2338      	movs	r3, #56	; 0x38
    4444:	9a02      	ldr	r2, [sp, #8]
    4446:	7013      	strb	r3, [r2, #0]
    4448:	6029      	str	r1, [r5, #0]
    444a:	e270      	b.n	492e <at_ble_event_get+0x54e>
    444c:	9b00      	ldr	r3, [sp, #0]
    444e:	2bbb      	cmp	r3, #187	; 0xbb
    4450:	d125      	bne.n	449e <at_ble_event_get+0xbe>
    4452:	2cbb      	cmp	r4, #187	; 0xbb
    4454:	d123      	bne.n	449e <at_ble_event_get+0xbe>
    4456:	466b      	mov	r3, sp
    4458:	889b      	ldrh	r3, [r3, #4]
    445a:	80ab      	strh	r3, [r5, #4]
    445c:	788b      	ldrb	r3, [r1, #2]
    445e:	784a      	ldrb	r2, [r1, #1]
    4460:	021b      	lsls	r3, r3, #8
    4462:	78cc      	ldrb	r4, [r1, #3]
    4464:	7908      	ldrb	r0, [r1, #4]
    4466:	4313      	orrs	r3, r2
    4468:	794a      	ldrb	r2, [r1, #5]
    446a:	499f      	ldr	r1, [pc, #636]	; (46e8 <at_ble_event_get+0x308>)
    446c:	70ac      	strb	r4, [r5, #2]
    446e:	802b      	strh	r3, [r5, #0]
    4470:	428b      	cmp	r3, r1
    4472:	d806      	bhi.n	4482 <at_ble_event_get+0xa2>
    4474:	4a9d      	ldr	r2, [pc, #628]	; (46ec <at_ble_event_get+0x30c>)
    4476:	4293      	cmp	r3, r2
    4478:	d20b      	bcs.n	4492 <at_ble_event_get+0xb2>
    447a:	4a9d      	ldr	r2, [pc, #628]	; (46f0 <at_ble_event_get+0x310>)
    447c:	4293      	cmp	r3, r2
    447e:	d008      	beq.n	4492 <at_ble_event_get+0xb2>
    4480:	e009      	b.n	4496 <at_ble_event_get+0xb6>
    4482:	499c      	ldr	r1, [pc, #624]	; (46f4 <at_ble_event_get+0x314>)
    4484:	428b      	cmp	r3, r1
    4486:	d106      	bne.n	4496 <at_ble_event_get+0xb6>
    4488:	0213      	lsls	r3, r2, #8
    448a:	4303      	orrs	r3, r0
    448c:	80ab      	strh	r3, [r5, #4]
    448e:	2337      	movs	r3, #55	; 0x37
    4490:	e002      	b.n	4498 <at_ble_event_get+0xb8>
    4492:	2336      	movs	r3, #54	; 0x36
    4494:	e000      	b.n	4498 <at_ble_event_get+0xb8>
    4496:	2300      	movs	r3, #0
    4498:	9a02      	ldr	r2, [sp, #8]
    449a:	7013      	strb	r3, [r2, #0]
    449c:	e247      	b.n	492e <at_ble_event_get+0x54e>
    449e:	4b96      	ldr	r3, [pc, #600]	; (46f8 <at_ble_event_get+0x318>)
    44a0:	429c      	cmp	r4, r3
    44a2:	d100      	bne.n	44a6 <at_ble_event_get+0xc6>
    44a4:	e1a2      	b.n	47ec <at_ble_event_get+0x40c>
    44a6:	d900      	bls.n	44aa <at_ble_event_get+0xca>
    44a8:	e083      	b.n	45b2 <at_ble_event_get+0x1d2>
    44aa:	4b94      	ldr	r3, [pc, #592]	; (46fc <at_ble_event_get+0x31c>)
    44ac:	429c      	cmp	r4, r3
    44ae:	d100      	bne.n	44b2 <at_ble_event_get+0xd2>
    44b0:	e1fd      	b.n	48ae <at_ble_event_get+0x4ce>
    44b2:	d83c      	bhi.n	452e <at_ble_event_get+0x14e>
    44b4:	4b92      	ldr	r3, [pc, #584]	; (4700 <at_ble_event_get+0x320>)
    44b6:	429c      	cmp	r4, r3
    44b8:	d100      	bne.n	44bc <at_ble_event_get+0xdc>
    44ba:	e1fc      	b.n	48b6 <at_ble_event_get+0x4d6>
    44bc:	d816      	bhi.n	44ec <at_ble_event_get+0x10c>
    44be:	4b91      	ldr	r3, [pc, #580]	; (4704 <at_ble_event_get+0x324>)
    44c0:	429c      	cmp	r4, r3
    44c2:	d100      	bne.n	44c6 <at_ble_event_get+0xe6>
    44c4:	e1d5      	b.n	4872 <at_ble_event_get+0x492>
    44c6:	d804      	bhi.n	44d2 <at_ble_event_get+0xf2>
    44c8:	2638      	movs	r6, #56	; 0x38
    44ca:	42b4      	cmp	r4, r6
    44cc:	d100      	bne.n	44d0 <at_ble_event_get+0xf0>
    44ce:	e22c      	b.n	492a <at_ble_event_get+0x54a>
    44d0:	e21d      	b.n	490e <at_ble_event_get+0x52e>
    44d2:	4b8d      	ldr	r3, [pc, #564]	; (4708 <at_ble_event_get+0x328>)
    44d4:	429c      	cmp	r4, r3
    44d6:	d100      	bne.n	44da <at_ble_event_get+0xfa>
    44d8:	e1d1      	b.n	487e <at_ble_event_get+0x49e>
    44da:	33fe      	adds	r3, #254	; 0xfe
    44dc:	33ff      	adds	r3, #255	; 0xff
    44de:	429c      	cmp	r4, r3
    44e0:	d000      	beq.n	44e4 <at_ble_event_get+0x104>
    44e2:	e214      	b.n	490e <at_ble_event_get+0x52e>
    44e4:	9800      	ldr	r0, [sp, #0]
    44e6:	1c2a      	adds	r2, r5, #0
    44e8:	4b88      	ldr	r3, [pc, #544]	; (470c <at_ble_event_get+0x32c>)
    44ea:	e194      	b.n	4816 <at_ble_event_get+0x436>
    44ec:	4b88      	ldr	r3, [pc, #544]	; (4710 <at_ble_event_get+0x330>)
    44ee:	429c      	cmp	r4, r3
    44f0:	d100      	bne.n	44f4 <at_ble_event_get+0x114>
    44f2:	e1d0      	b.n	4896 <at_ble_event_get+0x4b6>
    44f4:	d80d      	bhi.n	4512 <at_ble_event_get+0x132>
    44f6:	4b87      	ldr	r3, [pc, #540]	; (4714 <at_ble_event_get+0x334>)
    44f8:	429c      	cmp	r4, r3
    44fa:	d100      	bne.n	44fe <at_ble_event_get+0x11e>
    44fc:	e1c5      	b.n	488a <at_ble_event_get+0x4aa>
    44fe:	4b86      	ldr	r3, [pc, #536]	; (4718 <at_ble_event_get+0x338>)
    4500:	429c      	cmp	r4, r3
    4502:	d000      	beq.n	4506 <at_ble_event_get+0x126>
    4504:	e203      	b.n	490e <at_ble_event_get+0x52e>
    4506:	9800      	ldr	r0, [sp, #0]
    4508:	1c2a      	adds	r2, r5, #0
    450a:	4b84      	ldr	r3, [pc, #528]	; (471c <at_ble_event_get+0x33c>)
    450c:	4798      	blx	r3
    450e:	2614      	movs	r6, #20
    4510:	e20b      	b.n	492a <at_ble_event_get+0x54a>
    4512:	4b83      	ldr	r3, [pc, #524]	; (4720 <at_ble_event_get+0x340>)
    4514:	429c      	cmp	r4, r3
    4516:	d100      	bne.n	451a <at_ble_event_get+0x13a>
    4518:	e1c3      	b.n	48a2 <at_ble_event_get+0x4c2>
    451a:	4b82      	ldr	r3, [pc, #520]	; (4724 <at_ble_event_get+0x344>)
    451c:	429c      	cmp	r4, r3
    451e:	d000      	beq.n	4522 <at_ble_event_get+0x142>
    4520:	e1f5      	b.n	490e <at_ble_event_get+0x52e>
    4522:	9800      	ldr	r0, [sp, #0]
    4524:	1c2a      	adds	r2, r5, #0
    4526:	4b80      	ldr	r3, [pc, #512]	; (4728 <at_ble_event_get+0x348>)
    4528:	4798      	blx	r3
    452a:	2618      	movs	r6, #24
    452c:	e1fd      	b.n	492a <at_ble_event_get+0x54a>
    452e:	4b7f      	ldr	r3, [pc, #508]	; (472c <at_ble_event_get+0x34c>)
    4530:	429c      	cmp	r4, r3
    4532:	d100      	bne.n	4536 <at_ble_event_get+0x156>
    4534:	e1cc      	b.n	48d0 <at_ble_event_get+0x4f0>
    4536:	d81e      	bhi.n	4576 <at_ble_event_get+0x196>
    4538:	4b7d      	ldr	r3, [pc, #500]	; (4730 <at_ble_event_get+0x350>)
    453a:	429c      	cmp	r4, r3
    453c:	d100      	bne.n	4540 <at_ble_event_get+0x160>
    453e:	e1ce      	b.n	48de <at_ble_event_get+0x4fe>
    4540:	d80d      	bhi.n	455e <at_ble_event_get+0x17e>
    4542:	4b7c      	ldr	r3, [pc, #496]	; (4734 <at_ble_event_get+0x354>)
    4544:	429c      	cmp	r4, r3
    4546:	d000      	beq.n	454a <at_ble_event_get+0x16a>
    4548:	e1e1      	b.n	490e <at_ble_event_get+0x52e>
    454a:	9800      	ldr	r0, [sp, #0]
    454c:	1c2a      	adds	r2, r5, #0
    454e:	4b7a      	ldr	r3, [pc, #488]	; (4738 <at_ble_event_get+0x358>)
    4550:	4798      	blx	r3
    4552:	88a9      	ldrh	r1, [r5, #4]
    4554:	1c06      	adds	r6, r0, #0
    4556:	4b79      	ldr	r3, [pc, #484]	; (473c <at_ble_event_get+0x35c>)
    4558:	8828      	ldrh	r0, [r5, #0]
    455a:	4798      	blx	r3
    455c:	e1e5      	b.n	492a <at_ble_event_get+0x54a>
    455e:	4b78      	ldr	r3, [pc, #480]	; (4740 <at_ble_event_get+0x360>)
    4560:	429c      	cmp	r4, r3
    4562:	d100      	bne.n	4566 <at_ble_event_get+0x186>
    4564:	e1ad      	b.n	48c2 <at_ble_event_get+0x4e2>
    4566:	4b77      	ldr	r3, [pc, #476]	; (4744 <at_ble_event_get+0x364>)
    4568:	429c      	cmp	r4, r3
    456a:	d000      	beq.n	456e <at_ble_event_get+0x18e>
    456c:	e1cf      	b.n	490e <at_ble_event_get+0x52e>
    456e:	9800      	ldr	r0, [sp, #0]
    4570:	1c2a      	adds	r2, r5, #0
    4572:	4b75      	ldr	r3, [pc, #468]	; (4748 <at_ble_event_get+0x368>)
    4574:	e14f      	b.n	4816 <at_ble_event_get+0x436>
    4576:	4b75      	ldr	r3, [pc, #468]	; (474c <at_ble_event_get+0x36c>)
    4578:	429c      	cmp	r4, r3
    457a:	d100      	bne.n	457e <at_ble_event_get+0x19e>
    457c:	e12a      	b.n	47d4 <at_ble_event_get+0x3f4>
    457e:	d809      	bhi.n	4594 <at_ble_event_get+0x1b4>
    4580:	3b08      	subs	r3, #8
    4582:	429c      	cmp	r4, r3
    4584:	d100      	bne.n	4588 <at_ble_event_get+0x1a8>
    4586:	e09e      	b.n	46c6 <at_ble_event_get+0x2e6>
    4588:	4b71      	ldr	r3, [pc, #452]	; (4750 <at_ble_event_get+0x370>)
    458a:	2639      	movs	r6, #57	; 0x39
    458c:	429c      	cmp	r4, r3
    458e:	d100      	bne.n	4592 <at_ble_event_get+0x1b2>
    4590:	e1cb      	b.n	492a <at_ble_event_get+0x54a>
    4592:	e1bc      	b.n	490e <at_ble_event_get+0x52e>
    4594:	23d1      	movs	r3, #209	; 0xd1
    4596:	011b      	lsls	r3, r3, #4
    4598:	429c      	cmp	r4, r3
    459a:	d100      	bne.n	459e <at_ble_event_get+0x1be>
    459c:	e120      	b.n	47e0 <at_ble_event_get+0x400>
    459e:	4b6d      	ldr	r3, [pc, #436]	; (4754 <at_ble_event_get+0x374>)
    45a0:	429c      	cmp	r4, r3
    45a2:	d000      	beq.n	45a6 <at_ble_event_get+0x1c6>
    45a4:	e1b3      	b.n	490e <at_ble_event_get+0x52e>
    45a6:	1c08      	adds	r0, r1, #0
    45a8:	4b6b      	ldr	r3, [pc, #428]	; (4758 <at_ble_event_get+0x378>)
    45aa:	1c29      	adds	r1, r5, #0
    45ac:	4798      	blx	r3
    45ae:	260f      	movs	r6, #15
    45b0:	e1bb      	b.n	492a <at_ble_event_get+0x54a>
    45b2:	4b6a      	ldr	r3, [pc, #424]	; (475c <at_ble_event_get+0x37c>)
    45b4:	429c      	cmp	r4, r3
    45b6:	d100      	bne.n	45ba <at_ble_event_get+0x1da>
    45b8:	e135      	b.n	4826 <at_ble_event_get+0x446>
    45ba:	d83d      	bhi.n	4638 <at_ble_event_get+0x258>
    45bc:	4b68      	ldr	r3, [pc, #416]	; (4760 <at_ble_event_get+0x380>)
    45be:	429c      	cmp	r4, r3
    45c0:	d100      	bne.n	45c4 <at_ble_event_get+0x1e4>
    45c2:	e152      	b.n	486a <at_ble_event_get+0x48a>
    45c4:	d819      	bhi.n	45fa <at_ble_event_get+0x21a>
    45c6:	4b67      	ldr	r3, [pc, #412]	; (4764 <at_ble_event_get+0x384>)
    45c8:	429c      	cmp	r4, r3
    45ca:	d100      	bne.n	45ce <at_ble_event_get+0x1ee>
    45cc:	e11a      	b.n	4804 <at_ble_event_get+0x424>
    45ce:	d807      	bhi.n	45e0 <at_ble_event_get+0x200>
    45d0:	3b03      	subs	r3, #3
    45d2:	429c      	cmp	r4, r3
    45d4:	d000      	beq.n	45d8 <at_ble_event_get+0x1f8>
    45d6:	e19a      	b.n	490e <at_ble_event_get+0x52e>
    45d8:	9800      	ldr	r0, [sp, #0]
    45da:	1c2a      	adds	r2, r5, #0
    45dc:	4b62      	ldr	r3, [pc, #392]	; (4768 <at_ble_event_get+0x388>)
    45de:	e11a      	b.n	4816 <at_ble_event_get+0x436>
    45e0:	4b62      	ldr	r3, [pc, #392]	; (476c <at_ble_event_get+0x38c>)
    45e2:	429c      	cmp	r4, r3
    45e4:	d100      	bne.n	45e8 <at_ble_event_get+0x208>
    45e6:	e107      	b.n	47f8 <at_ble_event_get+0x418>
    45e8:	4b61      	ldr	r3, [pc, #388]	; (4770 <at_ble_event_get+0x390>)
    45ea:	429c      	cmp	r4, r3
    45ec:	d000      	beq.n	45f0 <at_ble_event_get+0x210>
    45ee:	e18e      	b.n	490e <at_ble_event_get+0x52e>
    45f0:	9800      	ldr	r0, [sp, #0]
    45f2:	1c2a      	adds	r2, r5, #0
    45f4:	4b5f      	ldr	r3, [pc, #380]	; (4774 <at_ble_event_get+0x394>)
    45f6:	4798      	blx	r3
    45f8:	e16f      	b.n	48da <at_ble_event_get+0x4fa>
    45fa:	4b5f      	ldr	r3, [pc, #380]	; (4778 <at_ble_event_get+0x398>)
    45fc:	429c      	cmp	r4, r3
    45fe:	d100      	bne.n	4602 <at_ble_event_get+0x222>
    4600:	e106      	b.n	4810 <at_ble_event_get+0x430>
    4602:	d80b      	bhi.n	461c <at_ble_event_get+0x23c>
    4604:	4b5d      	ldr	r3, [pc, #372]	; (477c <at_ble_event_get+0x39c>)
    4606:	429c      	cmp	r4, r3
    4608:	d100      	bne.n	460c <at_ble_event_get+0x22c>
    460a:	e12a      	b.n	4862 <at_ble_event_get+0x482>
    460c:	4b5c      	ldr	r3, [pc, #368]	; (4780 <at_ble_event_get+0x3a0>)
    460e:	429c      	cmp	r4, r3
    4610:	d000      	beq.n	4614 <at_ble_event_get+0x234>
    4612:	e17c      	b.n	490e <at_ble_event_get+0x52e>
    4614:	9800      	ldr	r0, [sp, #0]
    4616:	1c2a      	adds	r2, r5, #0
    4618:	4b5a      	ldr	r3, [pc, #360]	; (4784 <at_ble_event_get+0x3a4>)
    461a:	e0fc      	b.n	4816 <at_ble_event_get+0x436>
    461c:	4b5a      	ldr	r3, [pc, #360]	; (4788 <at_ble_event_get+0x3a8>)
    461e:	429c      	cmp	r4, r3
    4620:	d100      	bne.n	4624 <at_ble_event_get+0x244>
    4622:	e0fa      	b.n	481a <at_ble_event_get+0x43a>
    4624:	4b59      	ldr	r3, [pc, #356]	; (478c <at_ble_event_get+0x3ac>)
    4626:	429c      	cmp	r4, r3
    4628:	d000      	beq.n	462c <at_ble_event_get+0x24c>
    462a:	e170      	b.n	490e <at_ble_event_get+0x52e>
    462c:	9800      	ldr	r0, [sp, #0]
    462e:	1c2a      	adds	r2, r5, #0
    4630:	4b57      	ldr	r3, [pc, #348]	; (4790 <at_ble_event_get+0x3b0>)
    4632:	4798      	blx	r3
    4634:	260e      	movs	r6, #14
    4636:	e178      	b.n	492a <at_ble_event_get+0x54a>
    4638:	4b56      	ldr	r3, [pc, #344]	; (4794 <at_ble_event_get+0x3b4>)
    463a:	429c      	cmp	r4, r3
    463c:	d100      	bne.n	4640 <at_ble_event_get+0x260>
    463e:	e104      	b.n	484a <at_ble_event_get+0x46a>
    4640:	d820      	bhi.n	4684 <at_ble_event_get+0x2a4>
    4642:	4b55      	ldr	r3, [pc, #340]	; (4798 <at_ble_event_get+0x3b8>)
    4644:	429c      	cmp	r4, r3
    4646:	d100      	bne.n	464a <at_ble_event_get+0x26a>
    4648:	e105      	b.n	4856 <at_ble_event_get+0x476>
    464a:	d80d      	bhi.n	4668 <at_ble_event_get+0x288>
    464c:	4b53      	ldr	r3, [pc, #332]	; (479c <at_ble_event_get+0x3bc>)
    464e:	429c      	cmp	r4, r3
    4650:	d100      	bne.n	4654 <at_ble_event_get+0x274>
    4652:	e0ee      	b.n	4832 <at_ble_event_get+0x452>
    4654:	4b52      	ldr	r3, [pc, #328]	; (47a0 <at_ble_event_get+0x3c0>)
    4656:	429c      	cmp	r4, r3
    4658:	d000      	beq.n	465c <at_ble_event_get+0x27c>
    465a:	e158      	b.n	490e <at_ble_event_get+0x52e>
    465c:	9800      	ldr	r0, [sp, #0]
    465e:	1c2a      	adds	r2, r5, #0
    4660:	4b50      	ldr	r3, [pc, #320]	; (47a4 <at_ble_event_get+0x3c4>)
    4662:	4798      	blx	r3
    4664:	2612      	movs	r6, #18
    4666:	e160      	b.n	492a <at_ble_event_get+0x54a>
    4668:	4b4f      	ldr	r3, [pc, #316]	; (47a8 <at_ble_event_get+0x3c8>)
    466a:	429c      	cmp	r4, r3
    466c:	d100      	bne.n	4670 <at_ble_event_get+0x290>
    466e:	e0e6      	b.n	483e <at_ble_event_get+0x45e>
    4670:	4b4e      	ldr	r3, [pc, #312]	; (47ac <at_ble_event_get+0x3cc>)
    4672:	429c      	cmp	r4, r3
    4674:	d000      	beq.n	4678 <at_ble_event_get+0x298>
    4676:	e14a      	b.n	490e <at_ble_event_get+0x52e>
    4678:	1c08      	adds	r0, r1, #0
    467a:	4b4d      	ldr	r3, [pc, #308]	; (47b0 <at_ble_event_get+0x3d0>)
    467c:	1c29      	adds	r1, r5, #0
    467e:	4798      	blx	r3
    4680:	262a      	movs	r6, #42	; 0x2a
    4682:	e152      	b.n	492a <at_ble_event_get+0x54a>
    4684:	4b4b      	ldr	r3, [pc, #300]	; (47b4 <at_ble_event_get+0x3d4>)
    4686:	429c      	cmp	r4, r3
    4688:	d100      	bne.n	468c <at_ble_event_get+0x2ac>
    468a:	e134      	b.n	48f6 <at_ble_event_get+0x516>
    468c:	d80d      	bhi.n	46aa <at_ble_event_get+0x2ca>
    468e:	4b4a      	ldr	r3, [pc, #296]	; (47b8 <at_ble_event_get+0x3d8>)
    4690:	429c      	cmp	r4, r3
    4692:	d100      	bne.n	4696 <at_ble_event_get+0x2b6>
    4694:	e129      	b.n	48ea <at_ble_event_get+0x50a>
    4696:	4b49      	ldr	r3, [pc, #292]	; (47bc <at_ble_event_get+0x3dc>)
    4698:	429c      	cmp	r4, r3
    469a:	d000      	beq.n	469e <at_ble_event_get+0x2be>
    469c:	e137      	b.n	490e <at_ble_event_get+0x52e>
    469e:	9800      	ldr	r0, [sp, #0]
    46a0:	1c2a      	adds	r2, r5, #0
    46a2:	4b47      	ldr	r3, [pc, #284]	; (47c0 <at_ble_event_get+0x3e0>)
    46a4:	4798      	blx	r3
    46a6:	2630      	movs	r6, #48	; 0x30
    46a8:	e13f      	b.n	492a <at_ble_event_get+0x54a>
    46aa:	4b46      	ldr	r3, [pc, #280]	; (47c4 <at_ble_event_get+0x3e4>)
    46ac:	429c      	cmp	r4, r3
    46ae:	d100      	bne.n	46b2 <at_ble_event_get+0x2d2>
    46b0:	e127      	b.n	4902 <at_ble_event_get+0x522>
    46b2:	4b45      	ldr	r3, [pc, #276]	; (47c8 <at_ble_event_get+0x3e8>)
    46b4:	429c      	cmp	r4, r3
    46b6:	d000      	beq.n	46ba <at_ble_event_get+0x2da>
    46b8:	e129      	b.n	490e <at_ble_event_get+0x52e>
    46ba:	9800      	ldr	r0, [sp, #0]
    46bc:	1c2a      	adds	r2, r5, #0
    46be:	4b43      	ldr	r3, [pc, #268]	; (47cc <at_ble_event_get+0x3ec>)
    46c0:	4798      	blx	r3
    46c2:	2632      	movs	r6, #50	; 0x32
    46c4:	e131      	b.n	492a <at_ble_event_get+0x54a>
    46c6:	1c08      	adds	r0, r1, #0
    46c8:	4b41      	ldr	r3, [pc, #260]	; (47d0 <at_ble_event_get+0x3f0>)
    46ca:	1c29      	adds	r1, r5, #0
    46cc:	e091      	b.n	47f2 <at_ble_event_get+0x412>
    46ce:	46c0      	nop			; (mov r8, r8)
    46d0:	00006399 	.word	0x00006399
    46d4:	200006ec 	.word	0x200006ec
    46d8:	00006415 	.word	0x00006415
    46dc:	000063bd 	.word	0x000063bd
    46e0:	200006f4 	.word	0x200006f4
    46e4:	0000ffff 	.word	0x0000ffff
    46e8:	0000201e 	.word	0x0000201e
    46ec:	0000201d 	.word	0x0000201d
    46f0:	00000c03 	.word	0x00000c03
    46f4:	0000201f 	.word	0x0000201f
    46f8:	00000d1c 	.word	0x00000d1c
    46fc:	00000c0c 	.word	0x00000c0c
    4700:	00000c02 	.word	0x00000c02
    4704:	00000a02 	.word	0x00000a02
    4708:	00000a03 	.word	0x00000a03
    470c:	0000821d 	.word	0x0000821d
    4710:	00000c06 	.word	0x00000c06
    4714:	00000c04 	.word	0x00000c04
    4718:	00000c05 	.word	0x00000c05
    471c:	00008109 	.word	0x00008109
    4720:	00000c07 	.word	0x00000c07
    4724:	00000c09 	.word	0x00000c09
    4728:	000082fd 	.word	0x000082fd
    472c:	00000c17 	.word	0x00000c17
    4730:	00000c12 	.word	0x00000c12
    4734:	00000c0d 	.word	0x00000c0d
    4738:	000081c9 	.word	0x000081c9
    473c:	00008085 	.word	0x00008085
    4740:	00000c13 	.word	0x00000c13
    4744:	00000c15 	.word	0x00000c15
    4748:	00005c95 	.word	0x00005c95
    474c:	00000d08 	.word	0x00000d08
    4750:	00000d01 	.word	0x00000d01
    4754:	00000d15 	.word	0x00000d15
    4758:	00007e69 	.word	0x00007e69
    475c:	00000e1b 	.word	0x00000e1b
    4760:	00000e0f 	.word	0x00000e0f
    4764:	00000e03 	.word	0x00000e03
    4768:	00006d21 	.word	0x00006d21
    476c:	00000e06 	.word	0x00000e06
    4770:	00000e0a 	.word	0x00000e0a
    4774:	000075fd 	.word	0x000075fd
    4778:	00000e15 	.word	0x00000e15
    477c:	00000e11 	.word	0x00000e11
    4780:	00000e13 	.word	0x00000e13
    4784:	000071f5 	.word	0x000071f5
    4788:	00000e17 	.word	0x00000e17
    478c:	00000e19 	.word	0x00000e19
    4790:	00007541 	.word	0x00007541
    4794:	00000e27 	.word	0x00000e27
    4798:	00000e21 	.word	0x00000e21
    479c:	00000e1c 	.word	0x00000e1c
    47a0:	00000e1d 	.word	0x00000e1d
    47a4:	0000771d 	.word	0x0000771d
    47a8:	00000e22 	.word	0x00000e22
    47ac:	00000e25 	.word	0x00000e25
    47b0:	000077a3 	.word	0x000077a3
    47b4:	00001b05 	.word	0x00001b05
    47b8:	00001b01 	.word	0x00001b01
    47bc:	00001b03 	.word	0x00001b03
    47c0:	0000860b 	.word	0x0000860b
    47c4:	00001b06 	.word	0x00001b06
    47c8:	00001b08 	.word	0x00001b08
    47cc:	00008623 	.word	0x00008623
    47d0:	00007ad1 	.word	0x00007ad1
    47d4:	1c08      	adds	r0, r1, #0
    47d6:	4b5b      	ldr	r3, [pc, #364]	; (4944 <at_ble_event_get+0x564>)
    47d8:	1c29      	adds	r1, r5, #0
    47da:	4798      	blx	r3
    47dc:	2604      	movs	r6, #4
    47de:	e0a4      	b.n	492a <at_ble_event_get+0x54a>
    47e0:	1c08      	adds	r0, r1, #0
    47e2:	4b59      	ldr	r3, [pc, #356]	; (4948 <at_ble_event_get+0x568>)
    47e4:	1c29      	adds	r1, r5, #0
    47e6:	4798      	blx	r3
    47e8:	2601      	movs	r6, #1
    47ea:	e09e      	b.n	492a <at_ble_event_get+0x54a>
    47ec:	1c08      	adds	r0, r1, #0
    47ee:	1c29      	adds	r1, r5, #0
    47f0:	4b56      	ldr	r3, [pc, #344]	; (494c <at_ble_event_get+0x56c>)
    47f2:	4798      	blx	r3
    47f4:	1c06      	adds	r6, r0, #0
    47f6:	e098      	b.n	492a <at_ble_event_get+0x54a>
    47f8:	9800      	ldr	r0, [sp, #0]
    47fa:	1c2a      	adds	r2, r5, #0
    47fc:	4b54      	ldr	r3, [pc, #336]	; (4950 <at_ble_event_get+0x570>)
    47fe:	4798      	blx	r3
    4800:	2611      	movs	r6, #17
    4802:	e092      	b.n	492a <at_ble_event_get+0x54a>
    4804:	1c08      	adds	r0, r1, #0
    4806:	4b53      	ldr	r3, [pc, #332]	; (4954 <at_ble_event_get+0x574>)
    4808:	1c29      	adds	r1, r5, #0
    480a:	4798      	blx	r3
    480c:	2606      	movs	r6, #6
    480e:	e08c      	b.n	492a <at_ble_event_get+0x54a>
    4810:	1c2a      	adds	r2, r5, #0
    4812:	9800      	ldr	r0, [sp, #0]
    4814:	4b50      	ldr	r3, [pc, #320]	; (4958 <at_ble_event_get+0x578>)
    4816:	4798      	blx	r3
    4818:	e7ec      	b.n	47f4 <at_ble_event_get+0x414>
    481a:	9800      	ldr	r0, [sp, #0]
    481c:	1c2a      	adds	r2, r5, #0
    481e:	4b4f      	ldr	r3, [pc, #316]	; (495c <at_ble_event_get+0x57c>)
    4820:	4798      	blx	r3
    4822:	260d      	movs	r6, #13
    4824:	e081      	b.n	492a <at_ble_event_get+0x54a>
    4826:	9800      	ldr	r0, [sp, #0]
    4828:	1c2a      	adds	r2, r5, #0
    482a:	4b4d      	ldr	r3, [pc, #308]	; (4960 <at_ble_event_get+0x580>)
    482c:	4798      	blx	r3
    482e:	260b      	movs	r6, #11
    4830:	e07b      	b.n	492a <at_ble_event_get+0x54a>
    4832:	9800      	ldr	r0, [sp, #0]
    4834:	1c2a      	adds	r2, r5, #0
    4836:	4b4b      	ldr	r3, [pc, #300]	; (4964 <at_ble_event_get+0x584>)
    4838:	4798      	blx	r3
    483a:	2610      	movs	r6, #16
    483c:	e075      	b.n	492a <at_ble_event_get+0x54a>
    483e:	1c08      	adds	r0, r1, #0
    4840:	4b49      	ldr	r3, [pc, #292]	; (4968 <at_ble_event_get+0x588>)
    4842:	1c29      	adds	r1, r5, #0
    4844:	4798      	blx	r3
    4846:	2628      	movs	r6, #40	; 0x28
    4848:	e06f      	b.n	492a <at_ble_event_get+0x54a>
    484a:	1c08      	adds	r0, r1, #0
    484c:	4b47      	ldr	r3, [pc, #284]	; (496c <at_ble_event_get+0x58c>)
    484e:	1c29      	adds	r1, r5, #0
    4850:	4798      	blx	r3
    4852:	2629      	movs	r6, #41	; 0x29
    4854:	e069      	b.n	492a <at_ble_event_get+0x54a>
    4856:	1c08      	adds	r0, r1, #0
    4858:	4b45      	ldr	r3, [pc, #276]	; (4970 <at_ble_event_get+0x590>)
    485a:	1c29      	adds	r1, r5, #0
    485c:	4798      	blx	r3
    485e:	2627      	movs	r6, #39	; 0x27
    4860:	e063      	b.n	492a <at_ble_event_get+0x54a>
    4862:	9800      	ldr	r0, [sp, #0]
    4864:	1c2a      	adds	r2, r5, #0
    4866:	4b43      	ldr	r3, [pc, #268]	; (4974 <at_ble_event_get+0x594>)
    4868:	e7d5      	b.n	4816 <at_ble_event_get+0x436>
    486a:	9800      	ldr	r0, [sp, #0]
    486c:	1c2a      	adds	r2, r5, #0
    486e:	4b42      	ldr	r3, [pc, #264]	; (4978 <at_ble_event_get+0x598>)
    4870:	e7d1      	b.n	4816 <at_ble_event_get+0x436>
    4872:	1c08      	adds	r0, r1, #0
    4874:	4b41      	ldr	r3, [pc, #260]	; (497c <at_ble_event_get+0x59c>)
    4876:	1c29      	adds	r1, r5, #0
    4878:	4798      	blx	r3
    487a:	262b      	movs	r6, #43	; 0x2b
    487c:	e055      	b.n	492a <at_ble_event_get+0x54a>
    487e:	1c08      	adds	r0, r1, #0
    4880:	4b3f      	ldr	r3, [pc, #252]	; (4980 <at_ble_event_get+0x5a0>)
    4882:	1c29      	adds	r1, r5, #0
    4884:	4798      	blx	r3
    4886:	262c      	movs	r6, #44	; 0x2c
    4888:	e04f      	b.n	492a <at_ble_event_get+0x54a>
    488a:	9800      	ldr	r0, [sp, #0]
    488c:	1c2a      	adds	r2, r5, #0
    488e:	4b3d      	ldr	r3, [pc, #244]	; (4984 <at_ble_event_get+0x5a4>)
    4890:	4798      	blx	r3
    4892:	2613      	movs	r6, #19
    4894:	e049      	b.n	492a <at_ble_event_get+0x54a>
    4896:	9800      	ldr	r0, [sp, #0]
    4898:	1c2a      	adds	r2, r5, #0
    489a:	4b3b      	ldr	r3, [pc, #236]	; (4988 <at_ble_event_get+0x5a8>)
    489c:	4798      	blx	r3
    489e:	2615      	movs	r6, #21
    48a0:	e043      	b.n	492a <at_ble_event_get+0x54a>
    48a2:	9800      	ldr	r0, [sp, #0]
    48a4:	1c2a      	adds	r2, r5, #0
    48a6:	4b39      	ldr	r3, [pc, #228]	; (498c <at_ble_event_get+0x5ac>)
    48a8:	4798      	blx	r3
    48aa:	2616      	movs	r6, #22
    48ac:	e03d      	b.n	492a <at_ble_event_get+0x54a>
    48ae:	9800      	ldr	r0, [sp, #0]
    48b0:	1c2a      	adds	r2, r5, #0
    48b2:	4b37      	ldr	r3, [pc, #220]	; (4990 <at_ble_event_get+0x5b0>)
    48b4:	e7af      	b.n	4816 <at_ble_event_get+0x436>
    48b6:	9800      	ldr	r0, [sp, #0]
    48b8:	1c2a      	adds	r2, r5, #0
    48ba:	4b36      	ldr	r3, [pc, #216]	; (4994 <at_ble_event_get+0x5b4>)
    48bc:	4798      	blx	r3
    48be:	2623      	movs	r6, #35	; 0x23
    48c0:	e033      	b.n	492a <at_ble_event_get+0x54a>
    48c2:	9b00      	ldr	r3, [sp, #0]
    48c4:	1c08      	adds	r0, r1, #0
    48c6:	0a1f      	lsrs	r7, r3, #8
    48c8:	802f      	strh	r7, [r5, #0]
    48ca:	1c29      	adds	r1, r5, #0
    48cc:	4b32      	ldr	r3, [pc, #200]	; (4998 <at_ble_event_get+0x5b8>)
    48ce:	e790      	b.n	47f2 <at_ble_event_get+0x412>
    48d0:	1c08      	adds	r0, r1, #0
    48d2:	9a00      	ldr	r2, [sp, #0]
    48d4:	1c29      	adds	r1, r5, #0
    48d6:	4b31      	ldr	r3, [pc, #196]	; (499c <at_ble_event_get+0x5bc>)
    48d8:	4798      	blx	r3
    48da:	263a      	movs	r6, #58	; 0x3a
    48dc:	e025      	b.n	492a <at_ble_event_get+0x54a>
    48de:	9800      	ldr	r0, [sp, #0]
    48e0:	1c2a      	adds	r2, r5, #0
    48e2:	4b2f      	ldr	r3, [pc, #188]	; (49a0 <at_ble_event_get+0x5c0>)
    48e4:	4798      	blx	r3
    48e6:	2620      	movs	r6, #32
    48e8:	e01f      	b.n	492a <at_ble_event_get+0x54a>
    48ea:	9800      	ldr	r0, [sp, #0]
    48ec:	1c2a      	adds	r2, r5, #0
    48ee:	4b2d      	ldr	r3, [pc, #180]	; (49a4 <at_ble_event_get+0x5c4>)
    48f0:	4798      	blx	r3
    48f2:	2633      	movs	r6, #51	; 0x33
    48f4:	e019      	b.n	492a <at_ble_event_get+0x54a>
    48f6:	9800      	ldr	r0, [sp, #0]
    48f8:	1c2a      	adds	r2, r5, #0
    48fa:	4b2b      	ldr	r3, [pc, #172]	; (49a8 <at_ble_event_get+0x5c8>)
    48fc:	4798      	blx	r3
    48fe:	2634      	movs	r6, #52	; 0x34
    4900:	e013      	b.n	492a <at_ble_event_get+0x54a>
    4902:	9800      	ldr	r0, [sp, #0]
    4904:	1c2a      	adds	r2, r5, #0
    4906:	4b29      	ldr	r3, [pc, #164]	; (49ac <at_ble_event_get+0x5cc>)
    4908:	4798      	blx	r3
    490a:	2635      	movs	r6, #53	; 0x35
    490c:	e00d      	b.n	492a <at_ble_event_get+0x54a>
    490e:	22c5      	movs	r2, #197	; 0xc5
    4910:	4e27      	ldr	r6, [pc, #156]	; (49b0 <at_ble_event_get+0x5d0>)
    4912:	4928      	ldr	r1, [pc, #160]	; (49b4 <at_ble_event_get+0x5d4>)
    4914:	0052      	lsls	r2, r2, #1
    4916:	4b28      	ldr	r3, [pc, #160]	; (49b8 <at_ble_event_get+0x5d8>)
    4918:	6837      	ldr	r7, [r6, #0]
    491a:	4828      	ldr	r0, [pc, #160]	; (49bc <at_ble_event_get+0x5dc>)
    491c:	47b8      	blx	r7
    491e:	6833      	ldr	r3, [r6, #0]
    4920:	4827      	ldr	r0, [pc, #156]	; (49c0 <at_ble_event_get+0x5e0>)
    4922:	9900      	ldr	r1, [sp, #0]
    4924:	1c22      	adds	r2, r4, #0
    4926:	4798      	blx	r3
    4928:	2600      	movs	r6, #0
    492a:	9b02      	ldr	r3, [sp, #8]
    492c:	701e      	strb	r6, [r3, #0]
    492e:	9b02      	ldr	r3, [sp, #8]
    4930:	781b      	ldrb	r3, [r3, #0]
    4932:	2b3a      	cmp	r3, #58	; 0x3a
    4934:	d103      	bne.n	493e <at_ble_event_get+0x55e>
    4936:	9b01      	ldr	r3, [sp, #4]
    4938:	2b00      	cmp	r3, #0
    493a:	d100      	bne.n	493e <at_ble_event_get+0x55e>
    493c:	e557      	b.n	43ee <at_ble_event_get+0xe>
    493e:	9801      	ldr	r0, [sp, #4]
    4940:	b005      	add	sp, #20
    4942:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4944:	00007ab5 	.word	0x00007ab5
    4948:	00007d71 	.word	0x00007d71
    494c:	00007e8d 	.word	0x00007e8d
    4950:	000076a1 	.word	0x000076a1
    4954:	00007075 	.word	0x00007075
    4958:	0000711d 	.word	0x0000711d
    495c:	0000749d 	.word	0x0000749d
    4960:	00007655 	.word	0x00007655
    4964:	0000766b 	.word	0x0000766b
    4968:	00007735 	.word	0x00007735
    496c:	00007763 	.word	0x00007763
    4970:	00007779 	.word	0x00007779
    4974:	000075a1 	.word	0x000075a1
    4978:	000075cb 	.word	0x000075cb
    497c:	000064a1 	.word	0x000064a1
    4980:	000064cd 	.word	0x000064cd
    4984:	000080cd 	.word	0x000080cd
    4988:	00008151 	.word	0x00008151
    498c:	00008195 	.word	0x00008195
    4990:	000081c9 	.word	0x000081c9
    4994:	000082ed 	.word	0x000082ed
    4998:	00005c29 	.word	0x00005c29
    499c:	00005c59 	.word	0x00005c59
    49a0:	0000833d 	.word	0x0000833d
    49a4:	00008601 	.word	0x00008601
    49a8:	00008611 	.word	0x00008611
    49ac:	00008617 	.word	0x00008617
    49b0:	20000078 	.word	0x20000078
    49b4:	0000aad6 	.word	0x0000aad6
    49b8:	0000aaa8 	.word	0x0000aaa8
    49bc:	0000aab9 	.word	0x0000aab9
    49c0:	0000aafd 	.word	0x0000aafd

000049c4 <internal_event_flush>:
    49c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    49c6:	490e      	ldr	r1, [pc, #56]	; (4a00 <internal_event_flush+0x3c>)
    49c8:	2400      	movs	r4, #0
    49ca:	680b      	ldr	r3, [r1, #0]
    49cc:	1c0f      	adds	r7, r1, #0
    49ce:	1c1e      	adds	r6, r3, #0
    49d0:	4a0c      	ldr	r2, [pc, #48]	; (4a04 <internal_event_flush+0x40>)
    49d2:	6815      	ldr	r5, [r2, #0]
    49d4:	9201      	str	r2, [sp, #4]
    49d6:	2b00      	cmp	r3, #0
    49d8:	d00e      	beq.n	49f8 <internal_event_flush+0x34>
    49da:	889a      	ldrh	r2, [r3, #4]
    49dc:	6819      	ldr	r1, [r3, #0]
    49de:	4282      	cmp	r2, r0
    49e0:	d107      	bne.n	49f2 <internal_event_flush+0x2e>
    49e2:	2c00      	cmp	r4, #0
    49e4:	d001      	beq.n	49ea <internal_event_flush+0x26>
    49e6:	6021      	str	r1, [r4, #0]
    49e8:	e000      	b.n	49ec <internal_event_flush+0x28>
    49ea:	1c0e      	adds	r6, r1, #0
    49ec:	601d      	str	r5, [r3, #0]
    49ee:	1c1d      	adds	r5, r3, #0
    49f0:	1c23      	adds	r3, r4, #0
    49f2:	1c1c      	adds	r4, r3, #0
    49f4:	1c0b      	adds	r3, r1, #0
    49f6:	e7ee      	b.n	49d6 <internal_event_flush+0x12>
    49f8:	9b01      	ldr	r3, [sp, #4]
    49fa:	603e      	str	r6, [r7, #0]
    49fc:	601d      	str	r5, [r3, #0]
    49fe:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    4a00:	200006ec 	.word	0x200006ec
    4a04:	200006f4 	.word	0x200006f4

00004a08 <internal_conn_flush>:
    4a08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4a0a:	4a12      	ldr	r2, [pc, #72]	; (4a54 <internal_conn_flush+0x4c>)
    4a0c:	9000      	str	r0, [sp, #0]
    4a0e:	6813      	ldr	r3, [r2, #0]
    4a10:	4811      	ldr	r0, [pc, #68]	; (4a58 <internal_conn_flush+0x50>)
    4a12:	1c1f      	adds	r7, r3, #0
    4a14:	2100      	movs	r1, #0
    4a16:	4684      	mov	ip, r0
    4a18:	6804      	ldr	r4, [r0, #0]
    4a1a:	9201      	str	r2, [sp, #4]
    4a1c:	2b00      	cmp	r3, #0
    4a1e:	d014      	beq.n	4a4a <internal_conn_flush+0x42>
    4a20:	88d8      	ldrh	r0, [r3, #6]
    4a22:	9a00      	ldr	r2, [sp, #0]
    4a24:	681d      	ldr	r5, [r3, #0]
    4a26:	0a06      	lsrs	r6, r0, #8
    4a28:	4296      	cmp	r6, r2
    4a2a:	d10b      	bne.n	4a44 <internal_conn_flush+0x3c>
    4a2c:	26fd      	movs	r6, #253	; 0xfd
    4a2e:	4006      	ands	r6, r0
    4a30:	2e0c      	cmp	r6, #12
    4a32:	d107      	bne.n	4a44 <internal_conn_flush+0x3c>
    4a34:	2900      	cmp	r1, #0
    4a36:	d001      	beq.n	4a3c <internal_conn_flush+0x34>
    4a38:	600d      	str	r5, [r1, #0]
    4a3a:	e000      	b.n	4a3e <internal_conn_flush+0x36>
    4a3c:	1c2f      	adds	r7, r5, #0
    4a3e:	601c      	str	r4, [r3, #0]
    4a40:	1c1c      	adds	r4, r3, #0
    4a42:	1c0b      	adds	r3, r1, #0
    4a44:	1c19      	adds	r1, r3, #0
    4a46:	1c2b      	adds	r3, r5, #0
    4a48:	e7e8      	b.n	4a1c <internal_conn_flush+0x14>
    4a4a:	9b01      	ldr	r3, [sp, #4]
    4a4c:	601f      	str	r7, [r3, #0]
    4a4e:	4663      	mov	r3, ip
    4a50:	601c      	str	r4, [r3, #0]
    4a52:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    4a54:	200006ec 	.word	0x200006ec
    4a58:	200006f4 	.word	0x200006f4

00004a5c <at_ble_device_name_set>:
    4a5c:	b538      	push	{r3, r4, r5, lr}
    4a5e:	2800      	cmp	r0, #0
    4a60:	d002      	beq.n	4a68 <at_ble_device_name_set+0xc>
    4a62:	1e4b      	subs	r3, r1, #1
    4a64:	2b1f      	cmp	r3, #31
    4a66:	d90b      	bls.n	4a80 <at_ble_device_name_set+0x24>
    4a68:	4c0d      	ldr	r4, [pc, #52]	; (4aa0 <at_ble_device_name_set+0x44>)
    4a6a:	490e      	ldr	r1, [pc, #56]	; (4aa4 <at_ble_device_name_set+0x48>)
    4a6c:	22f7      	movs	r2, #247	; 0xf7
    4a6e:	4b0e      	ldr	r3, [pc, #56]	; (4aa8 <at_ble_device_name_set+0x4c>)
    4a70:	480e      	ldr	r0, [pc, #56]	; (4aac <at_ble_device_name_set+0x50>)
    4a72:	6825      	ldr	r5, [r4, #0]
    4a74:	47a8      	blx	r5
    4a76:	6823      	ldr	r3, [r4, #0]
    4a78:	480d      	ldr	r0, [pc, #52]	; (4ab0 <at_ble_device_name_set+0x54>)
    4a7a:	4798      	blx	r3
    4a7c:	20cf      	movs	r0, #207	; 0xcf
    4a7e:	e00d      	b.n	4a9c <at_ble_device_name_set+0x40>
    4a80:	4a0c      	ldr	r2, [pc, #48]	; (4ab4 <at_ble_device_name_set+0x58>)
    4a82:	1c13      	adds	r3, r2, #0
    4a84:	33aa      	adds	r3, #170	; 0xaa
    4a86:	8019      	strh	r1, [r3, #0]
    4a88:	2300      	movs	r3, #0
    4a8a:	1c1c      	adds	r4, r3, #0
    4a8c:	5cc5      	ldrb	r5, [r0, r3]
    4a8e:	34ac      	adds	r4, #172	; 0xac
    4a90:	3301      	adds	r3, #1
    4a92:	5515      	strb	r5, [r2, r4]
    4a94:	b2dc      	uxtb	r4, r3
    4a96:	428c      	cmp	r4, r1
    4a98:	d3f7      	bcc.n	4a8a <at_ble_device_name_set+0x2e>
    4a9a:	2000      	movs	r0, #0
    4a9c:	bd38      	pop	{r3, r4, r5, pc}
    4a9e:	46c0      	nop			; (mov r8, r8)
    4aa0:	20000078 	.word	0x20000078
    4aa4:	0000ab70 	.word	0x0000ab70
    4aa8:	0000adc1 	.word	0x0000adc1
    4aac:	0000aab9 	.word	0x0000aab9
    4ab0:	0000abbf 	.word	0x0000abbf
    4ab4:	20001cf4 	.word	0x20001cf4

00004ab8 <at_ble_addr_get>:
    4ab8:	b510      	push	{r4, lr}
    4aba:	1c04      	adds	r4, r0, #0
    4abc:	20cf      	movs	r0, #207	; 0xcf
    4abe:	2c00      	cmp	r4, #0
    4ac0:	d006      	beq.n	4ad0 <at_ble_addr_get+0x18>
    4ac2:	4b04      	ldr	r3, [pc, #16]	; (4ad4 <at_ble_addr_get+0x1c>)
    4ac4:	38ce      	subs	r0, #206	; 0xce
    4ac6:	1c21      	adds	r1, r4, #0
    4ac8:	4798      	blx	r3
    4aca:	4b03      	ldr	r3, [pc, #12]	; (4ad8 <at_ble_addr_get+0x20>)
    4acc:	791b      	ldrb	r3, [r3, #4]
    4ace:	7023      	strb	r3, [r4, #0]
    4ad0:	bd10      	pop	{r4, pc}
    4ad2:	46c0      	nop			; (mov r8, r8)
    4ad4:	00007979 	.word	0x00007979
    4ad8:	20001cf4 	.word	0x20001cf4

00004adc <at_ble_set_dev_config>:
    4adc:	b5f0      	push	{r4, r5, r6, r7, lr}
    4ade:	7906      	ldrb	r6, [r0, #4]
    4ae0:	b089      	sub	sp, #36	; 0x24
    4ae2:	1c04      	adds	r4, r0, #0
    4ae4:	2e03      	cmp	r6, #3
    4ae6:	d90c      	bls.n	4b02 <at_ble_set_dev_config+0x26>
    4ae8:	22a7      	movs	r2, #167	; 0xa7
    4aea:	4d33      	ldr	r5, [pc, #204]	; (4bb8 <at_ble_set_dev_config+0xdc>)
    4aec:	4933      	ldr	r1, [pc, #204]	; (4bbc <at_ble_set_dev_config+0xe0>)
    4aee:	0052      	lsls	r2, r2, #1
    4af0:	4b33      	ldr	r3, [pc, #204]	; (4bc0 <at_ble_set_dev_config+0xe4>)
    4af2:	682e      	ldr	r6, [r5, #0]
    4af4:	4833      	ldr	r0, [pc, #204]	; (4bc4 <at_ble_set_dev_config+0xe8>)
    4af6:	47b0      	blx	r6
    4af8:	7921      	ldrb	r1, [r4, #4]
    4afa:	682b      	ldr	r3, [r5, #0]
    4afc:	4832      	ldr	r0, [pc, #200]	; (4bc8 <at_ble_set_dev_config+0xec>)
    4afe:	4798      	blx	r3
    4b00:	e020      	b.n	4b44 <at_ble_set_dev_config+0x68>
    4b02:	7803      	ldrb	r3, [r0, #0]
    4b04:	2b0f      	cmp	r3, #15
    4b06:	d90d      	bls.n	4b24 <at_ble_set_dev_config+0x48>
    4b08:	2254      	movs	r2, #84	; 0x54
    4b0a:	4d2b      	ldr	r5, [pc, #172]	; (4bb8 <at_ble_set_dev_config+0xdc>)
    4b0c:	492b      	ldr	r1, [pc, #172]	; (4bbc <at_ble_set_dev_config+0xe0>)
    4b0e:	32ff      	adds	r2, #255	; 0xff
    4b10:	4b2b      	ldr	r3, [pc, #172]	; (4bc0 <at_ble_set_dev_config+0xe4>)
    4b12:	682e      	ldr	r6, [r5, #0]
    4b14:	482b      	ldr	r0, [pc, #172]	; (4bc4 <at_ble_set_dev_config+0xe8>)
    4b16:	47b0      	blx	r6
    4b18:	682b      	ldr	r3, [r5, #0]
    4b1a:	7821      	ldrb	r1, [r4, #0]
    4b1c:	482b      	ldr	r0, [pc, #172]	; (4bcc <at_ble_set_dev_config+0xf0>)
    4b1e:	4798      	blx	r3
    4b20:	25e0      	movs	r5, #224	; 0xe0
    4b22:	e046      	b.n	4bb2 <at_ble_set_dev_config+0xd6>
    4b24:	2380      	movs	r3, #128	; 0x80
    4b26:	8c87      	ldrh	r7, [r0, #36]	; 0x24
    4b28:	009b      	lsls	r3, r3, #2
    4b2a:	429f      	cmp	r7, r3
    4b2c:	d90c      	bls.n	4b48 <at_ble_set_dev_config+0x6c>
    4b2e:	225a      	movs	r2, #90	; 0x5a
    4b30:	4c21      	ldr	r4, [pc, #132]	; (4bb8 <at_ble_set_dev_config+0xdc>)
    4b32:	4b23      	ldr	r3, [pc, #140]	; (4bc0 <at_ble_set_dev_config+0xe4>)
    4b34:	4823      	ldr	r0, [pc, #140]	; (4bc4 <at_ble_set_dev_config+0xe8>)
    4b36:	4921      	ldr	r1, [pc, #132]	; (4bbc <at_ble_set_dev_config+0xe0>)
    4b38:	32ff      	adds	r2, #255	; 0xff
    4b3a:	6825      	ldr	r5, [r4, #0]
    4b3c:	47a8      	blx	r5
    4b3e:	6823      	ldr	r3, [r4, #0]
    4b40:	4823      	ldr	r0, [pc, #140]	; (4bd0 <at_ble_set_dev_config+0xf4>)
    4b42:	4798      	blx	r3
    4b44:	25cf      	movs	r5, #207	; 0xcf
    4b46:	e034      	b.n	4bb2 <at_ble_set_dev_config+0xd6>
    4b48:	7fc5      	ldrb	r5, [r0, #31]
    4b4a:	7f83      	ldrb	r3, [r0, #30]
    4b4c:	01ad      	lsls	r5, r5, #6
    4b4e:	015b      	lsls	r3, r3, #5
    4b50:	431d      	orrs	r5, r3
    4b52:	7ec3      	ldrb	r3, [r0, #27]
    4b54:	431d      	orrs	r5, r3
    4b56:	7f43      	ldrb	r3, [r0, #29]
    4b58:	011b      	lsls	r3, r3, #4
    4b5a:	431d      	orrs	r5, r3
    4b5c:	7f03      	ldrb	r3, [r0, #28]
    4b5e:	009b      	lsls	r3, r3, #2
    4b60:	431d      	orrs	r5, r3
    4b62:	4b1c      	ldr	r3, [pc, #112]	; (4bd4 <at_ble_set_dev_config+0xf8>)
    4b64:	b2ed      	uxtb	r5, r5
    4b66:	711e      	strb	r6, [r3, #4]
    4b68:	7900      	ldrb	r0, [r0, #4]
    4b6a:	2803      	cmp	r0, #3
    4b6c:	d809      	bhi.n	4b82 <at_ble_set_dev_config+0xa6>
    4b6e:	f003 fe61 	bl	8834 <__gnu_thumb1_case_uqi>
    4b72:	0402      	.short	0x0402
    4b74:	0606      	.short	0x0606
    4b76:	2300      	movs	r3, #0
    4b78:	e002      	b.n	4b80 <at_ble_set_dev_config+0xa4>
    4b7a:	2301      	movs	r3, #1
    4b7c:	e000      	b.n	4b80 <at_ble_set_dev_config+0xa4>
    4b7e:	2302      	movs	r3, #2
    4b80:	7123      	strb	r3, [r4, #4]
    4b82:	1c23      	adds	r3, r4, #0
    4b84:	330b      	adds	r3, #11
    4b86:	8861      	ldrh	r1, [r4, #2]
    4b88:	9307      	str	r3, [sp, #28]
    4b8a:	7923      	ldrb	r3, [r4, #4]
    4b8c:	7820      	ldrb	r0, [r4, #0]
    4b8e:	9300      	str	r3, [sp, #0]
    4b90:	9501      	str	r5, [sp, #4]
    4b92:	8c25      	ldrh	r5, [r4, #32]
    4b94:	1d62      	adds	r2, r4, #5
    4b96:	9502      	str	r5, [sp, #8]
    4b98:	8c65      	ldrh	r5, [r4, #34]	; 0x22
    4b9a:	9b07      	ldr	r3, [sp, #28]
    4b9c:	9503      	str	r5, [sp, #12]
    4b9e:	9704      	str	r7, [sp, #16]
    4ba0:	4d0d      	ldr	r5, [pc, #52]	; (4bd8 <at_ble_set_dev_config+0xfc>)
    4ba2:	47a8      	blx	r5
    4ba4:	7126      	strb	r6, [r4, #4]
    4ba6:	1c05      	adds	r5, r0, #0
    4ba8:	1c21      	adds	r1, r4, #0
    4baa:	480a      	ldr	r0, [pc, #40]	; (4bd4 <at_ble_set_dev_config+0xf8>)
    4bac:	2226      	movs	r2, #38	; 0x26
    4bae:	4b0b      	ldr	r3, [pc, #44]	; (4bdc <at_ble_set_dev_config+0x100>)
    4bb0:	4798      	blx	r3
    4bb2:	1c28      	adds	r0, r5, #0
    4bb4:	b009      	add	sp, #36	; 0x24
    4bb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4bb8:	20000078 	.word	0x20000078
    4bbc:	0000ab70 	.word	0x0000ab70
    4bc0:	0000ab32 	.word	0x0000ab32
    4bc4:	0000aab9 	.word	0x0000aab9
    4bc8:	0000abd2 	.word	0x0000abd2
    4bcc:	0000abf0 	.word	0x0000abf0
    4bd0:	0000ac0d 	.word	0x0000ac0d
    4bd4:	20001cf4 	.word	0x20001cf4
    4bd8:	00007855 	.word	0x00007855
    4bdc:	00008a6f 	.word	0x00008a6f

00004be0 <at_ble_init>:
    4be0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    4be2:	1c04      	adds	r4, r0, #0
    4be4:	4946      	ldr	r1, [pc, #280]	; (4d00 <at_ble_init+0x120>)
    4be6:	220b      	movs	r2, #11
    4be8:	4b46      	ldr	r3, [pc, #280]	; (4d04 <at_ble_init+0x124>)
    4bea:	a801      	add	r0, sp, #4
    4bec:	4798      	blx	r3
    4bee:	1c20      	adds	r0, r4, #0
    4bf0:	4b45      	ldr	r3, [pc, #276]	; (4d08 <at_ble_init+0x128>)
    4bf2:	4798      	blx	r3
    4bf4:	1c05      	adds	r5, r0, #0
    4bf6:	1e04      	subs	r4, r0, #0
    4bf8:	d009      	beq.n	4c0e <at_ble_init+0x2e>
    4bfa:	4c44      	ldr	r4, [pc, #272]	; (4d0c <at_ble_init+0x12c>)
    4bfc:	4b44      	ldr	r3, [pc, #272]	; (4d10 <at_ble_init+0x130>)
    4bfe:	4845      	ldr	r0, [pc, #276]	; (4d14 <at_ble_init+0x134>)
    4c00:	4945      	ldr	r1, [pc, #276]	; (4d18 <at_ble_init+0x138>)
    4c02:	222d      	movs	r2, #45	; 0x2d
    4c04:	6826      	ldr	r6, [r4, #0]
    4c06:	47b0      	blx	r6
    4c08:	6823      	ldr	r3, [r4, #0]
    4c0a:	4844      	ldr	r0, [pc, #272]	; (4d1c <at_ble_init+0x13c>)
    4c0c:	e072      	b.n	4cf4 <at_ble_init+0x114>
    4c0e:	4b44      	ldr	r3, [pc, #272]	; (4d20 <at_ble_init+0x140>)
    4c10:	4798      	blx	r3
    4c12:	1c23      	adds	r3, r4, #0
    4c14:	1e05      	subs	r5, r0, #0
    4c16:	d009      	beq.n	4c2c <at_ble_init+0x4c>
    4c18:	4c3c      	ldr	r4, [pc, #240]	; (4d0c <at_ble_init+0x12c>)
    4c1a:	4b3d      	ldr	r3, [pc, #244]	; (4d10 <at_ble_init+0x130>)
    4c1c:	483d      	ldr	r0, [pc, #244]	; (4d14 <at_ble_init+0x134>)
    4c1e:	493e      	ldr	r1, [pc, #248]	; (4d18 <at_ble_init+0x138>)
    4c20:	2233      	movs	r2, #51	; 0x33
    4c22:	6826      	ldr	r6, [r4, #0]
    4c24:	47b0      	blx	r6
    4c26:	6823      	ldr	r3, [r4, #0]
    4c28:	483e      	ldr	r0, [pc, #248]	; (4d24 <at_ble_init+0x144>)
    4c2a:	e063      	b.n	4cf4 <at_ble_init+0x114>
    4c2c:	2101      	movs	r1, #1
    4c2e:	4a3e      	ldr	r2, [pc, #248]	; (4d28 <at_ble_init+0x148>)
    4c30:	4249      	negs	r1, r1
    4c32:	189a      	adds	r2, r3, r2
    4c34:	3312      	adds	r3, #18
    4c36:	8151      	strh	r1, [r2, #10]
    4c38:	2b90      	cmp	r3, #144	; 0x90
    4c3a:	d1f7      	bne.n	4c2c <at_ble_init+0x4c>
    4c3c:	4c3b      	ldr	r4, [pc, #236]	; (4d2c <at_ble_init+0x14c>)
    4c3e:	3b81      	subs	r3, #129	; 0x81
    4c40:	7023      	strb	r3, [r4, #0]
    4c42:	4b3b      	ldr	r3, [pc, #236]	; (4d30 <at_ble_init+0x150>)
    4c44:	4a3b      	ldr	r2, [pc, #236]	; (4d34 <at_ble_init+0x154>)
    4c46:	8063      	strh	r3, [r4, #2]
    4c48:	2300      	movs	r3, #0
    4c4a:	7123      	strb	r3, [r4, #4]
    4c4c:	3301      	adds	r3, #1
    4c4e:	1e58      	subs	r0, r3, #1
    4c50:	0119      	lsls	r1, r3, #4
    4c52:	4301      	orrs	r1, r0
    4c54:	3302      	adds	r3, #2
    4c56:	7011      	strb	r1, [r2, #0]
    4c58:	3201      	adds	r2, #1
    4c5a:	2b21      	cmp	r3, #33	; 0x21
    4c5c:	d1f7      	bne.n	4c4e <at_ble_init+0x6e>
    4c5e:	2280      	movs	r2, #128	; 0x80
    4c60:	0092      	lsls	r2, r2, #2
    4c62:	84a2      	strh	r2, [r4, #36]	; 0x24
    4c64:	1c22      	adds	r2, r4, #0
    4c66:	2300      	movs	r3, #0
    4c68:	3273      	adds	r2, #115	; 0x73
    4c6a:	7013      	strb	r3, [r2, #0]
    4c6c:	1c22      	adds	r2, r4, #0
    4c6e:	3272      	adds	r2, #114	; 0x72
    4c70:	7013      	strb	r3, [r2, #0]
    4c72:	1c22      	adds	r2, r4, #0
    4c74:	3276      	adds	r2, #118	; 0x76
    4c76:	7013      	strb	r3, [r2, #0]
    4c78:	1c22      	adds	r2, r4, #0
    4c7a:	32cc      	adds	r2, #204	; 0xcc
    4c7c:	8013      	strh	r3, [r2, #0]
    4c7e:	1c21      	adds	r1, r4, #0
    4c80:	22a0      	movs	r2, #160	; 0xa0
    4c82:	31d0      	adds	r1, #208	; 0xd0
    4c84:	0052      	lsls	r2, r2, #1
    4c86:	800a      	strh	r2, [r1, #0]
    4c88:	1c21      	adds	r1, r4, #0
    4c8a:	31ce      	adds	r1, #206	; 0xce
    4c8c:	800a      	strh	r2, [r1, #0]
    4c8e:	1c22      	adds	r2, r4, #0
    4c90:	32d2      	adds	r2, #210	; 0xd2
    4c92:	8013      	strh	r3, [r2, #0]
    4c94:	21fa      	movs	r1, #250	; 0xfa
    4c96:	1c22      	adds	r2, r4, #0
    4c98:	0049      	lsls	r1, r1, #1
    4c9a:	32d4      	adds	r2, #212	; 0xd4
    4c9c:	8011      	strh	r1, [r2, #0]
    4c9e:	1c22      	adds	r2, r4, #0
    4ca0:	32d6      	adds	r2, #214	; 0xd6
    4ca2:	76e3      	strb	r3, [r4, #27]
    4ca4:	7723      	strb	r3, [r4, #28]
    4ca6:	7763      	strb	r3, [r4, #29]
    4ca8:	77a3      	strb	r3, [r4, #30]
    4caa:	77e3      	strb	r3, [r4, #31]
    4cac:	8423      	strh	r3, [r4, #32]
    4cae:	8463      	strh	r3, [r4, #34]	; 0x22
    4cb0:	7013      	strb	r3, [r2, #0]
    4cb2:	1c20      	adds	r0, r4, #0
    4cb4:	4b20      	ldr	r3, [pc, #128]	; (4d38 <at_ble_init+0x158>)
    4cb6:	4798      	blx	r3
    4cb8:	1e05      	subs	r5, r0, #0
    4cba:	d009      	beq.n	4cd0 <at_ble_init+0xf0>
    4cbc:	4c13      	ldr	r4, [pc, #76]	; (4d0c <at_ble_init+0x12c>)
    4cbe:	4b14      	ldr	r3, [pc, #80]	; (4d10 <at_ble_init+0x130>)
    4cc0:	4814      	ldr	r0, [pc, #80]	; (4d14 <at_ble_init+0x134>)
    4cc2:	4915      	ldr	r1, [pc, #84]	; (4d18 <at_ble_init+0x138>)
    4cc4:	225d      	movs	r2, #93	; 0x5d
    4cc6:	6826      	ldr	r6, [r4, #0]
    4cc8:	47b0      	blx	r6
    4cca:	6823      	ldr	r3, [r4, #0]
    4ccc:	481b      	ldr	r0, [pc, #108]	; (4d3c <at_ble_init+0x15c>)
    4cce:	e011      	b.n	4cf4 <at_ble_init+0x114>
    4cd0:	2307      	movs	r3, #7
    4cd2:	3474      	adds	r4, #116	; 0x74
    4cd4:	7023      	strb	r3, [r4, #0]
    4cd6:	a801      	add	r0, sp, #4
    4cd8:	210b      	movs	r1, #11
    4cda:	4b19      	ldr	r3, [pc, #100]	; (4d40 <at_ble_init+0x160>)
    4cdc:	4798      	blx	r3
    4cde:	1e05      	subs	r5, r0, #0
    4ce0:	d00a      	beq.n	4cf8 <at_ble_init+0x118>
    4ce2:	4c0a      	ldr	r4, [pc, #40]	; (4d0c <at_ble_init+0x12c>)
    4ce4:	4b0a      	ldr	r3, [pc, #40]	; (4d10 <at_ble_init+0x130>)
    4ce6:	480b      	ldr	r0, [pc, #44]	; (4d14 <at_ble_init+0x134>)
    4ce8:	490b      	ldr	r1, [pc, #44]	; (4d18 <at_ble_init+0x138>)
    4cea:	2266      	movs	r2, #102	; 0x66
    4cec:	6826      	ldr	r6, [r4, #0]
    4cee:	47b0      	blx	r6
    4cf0:	6823      	ldr	r3, [r4, #0]
    4cf2:	4814      	ldr	r0, [pc, #80]	; (4d44 <at_ble_init+0x164>)
    4cf4:	1c29      	adds	r1, r5, #0
    4cf6:	4798      	blx	r3
    4cf8:	1c28      	adds	r0, r5, #0
    4cfa:	b004      	add	sp, #16
    4cfc:	bd70      	pop	{r4, r5, r6, pc}
    4cfe:	46c0      	nop			; (mov r8, r8)
    4d00:	0000ab27 	.word	0x0000ab27
    4d04:	00008a6f 	.word	0x00008a6f
    4d08:	00006245 	.word	0x00006245
    4d0c:	20000078 	.word	0x20000078
    4d10:	0000add8 	.word	0x0000add8
    4d14:	0000aab9 	.word	0x0000aab9
    4d18:	0000ab70 	.word	0x0000ab70
    4d1c:	0000ac37 	.word	0x0000ac37
    4d20:	000077c5 	.word	0x000077c5
    4d24:	0000ac53 	.word	0x0000ac53
    4d28:	20001c64 	.word	0x20001c64
    4d2c:	20001cf4 	.word	0x20001cf4
    4d30:	00003a98 	.word	0x00003a98
    4d34:	20001cff 	.word	0x20001cff
    4d38:	00004add 	.word	0x00004add
    4d3c:	0000ac6c 	.word	0x0000ac6c
    4d40:	00004a5d 	.word	0x00004a5d
    4d44:	0000ac8f 	.word	0x0000ac8f

00004d48 <at_ble_addr_set>:
    4d48:	b538      	push	{r3, r4, r5, lr}
    4d4a:	1c45      	adds	r5, r0, #1
    4d4c:	1c03      	adds	r3, r0, #0
    4d4e:	20cf      	movs	r0, #207	; 0xcf
    4d50:	2d00      	cmp	r5, #0
    4d52:	d018      	beq.n	4d86 <at_ble_addr_set+0x3e>
    4d54:	781a      	ldrb	r2, [r3, #0]
    4d56:	2a03      	cmp	r2, #3
    4d58:	d815      	bhi.n	4d86 <at_ble_addr_set+0x3e>
    4d5a:	2a01      	cmp	r2, #1
    4d5c:	d102      	bne.n	4d64 <at_ble_addr_set+0x1c>
    4d5e:	785a      	ldrb	r2, [r3, #1]
    4d60:	2a00      	cmp	r2, #0
    4d62:	d010      	beq.n	4d86 <at_ble_addr_set+0x3e>
    4d64:	1c1c      	adds	r4, r3, #0
    4d66:	1c29      	adds	r1, r5, #0
    4d68:	2206      	movs	r2, #6
    4d6a:	4b07      	ldr	r3, [pc, #28]	; (4d88 <at_ble_addr_set+0x40>)
    4d6c:	4807      	ldr	r0, [pc, #28]	; (4d8c <at_ble_addr_set+0x44>)
    4d6e:	4798      	blx	r3
    4d70:	7823      	ldrb	r3, [r4, #0]
    4d72:	4807      	ldr	r0, [pc, #28]	; (4d90 <at_ble_addr_set+0x48>)
    4d74:	7103      	strb	r3, [r0, #4]
    4d76:	4b07      	ldr	r3, [pc, #28]	; (4d94 <at_ble_addr_set+0x4c>)
    4d78:	4798      	blx	r3
    4d7a:	7823      	ldrb	r3, [r4, #0]
    4d7c:	2b00      	cmp	r3, #0
    4d7e:	d102      	bne.n	4d86 <at_ble_addr_set+0x3e>
    4d80:	1c28      	adds	r0, r5, #0
    4d82:	4b05      	ldr	r3, [pc, #20]	; (4d98 <at_ble_addr_set+0x50>)
    4d84:	4798      	blx	r3
    4d86:	bd38      	pop	{r3, r4, r5, pc}
    4d88:	00008a6f 	.word	0x00008a6f
    4d8c:	20001cf9 	.word	0x20001cf9
    4d90:	20001cf4 	.word	0x20001cf4
    4d94:	00004add 	.word	0x00004add
    4d98:	00006b79 	.word	0x00006b79

00004d9c <at_ble_adv_data_set>:
    4d9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4d9e:	4684      	mov	ip, r0
    4da0:	1c0f      	adds	r7, r1, #0
    4da2:	1c16      	adds	r6, r2, #0
    4da4:	1c1c      	adds	r4, r3, #0
    4da6:	2800      	cmp	r0, #0
    4da8:	d102      	bne.n	4db0 <at_ble_adv_data_set+0x14>
    4daa:	20e2      	movs	r0, #226	; 0xe2
    4dac:	2a00      	cmp	r2, #0
    4dae:	d02b      	beq.n	4e08 <at_ble_adv_data_set+0x6c>
    4db0:	20cf      	movs	r0, #207	; 0xcf
    4db2:	2f1f      	cmp	r7, #31
    4db4:	d828      	bhi.n	4e08 <at_ble_adv_data_set+0x6c>
    4db6:	2c1f      	cmp	r4, #31
    4db8:	d826      	bhi.n	4e08 <at_ble_adv_data_set+0x6c>
    4dba:	4663      	mov	r3, ip
    4dbc:	2b00      	cmp	r3, #0
    4dbe:	d00e      	beq.n	4dde <at_ble_adv_data_set+0x42>
    4dc0:	4812      	ldr	r0, [pc, #72]	; (4e0c <at_ble_adv_data_set+0x70>)
    4dc2:	4d13      	ldr	r5, [pc, #76]	; (4e10 <at_ble_adv_data_set+0x74>)
    4dc4:	2f00      	cmp	r7, #0
    4dc6:	d104      	bne.n	4dd2 <at_ble_adv_data_set+0x36>
    4dc8:	1c39      	adds	r1, r7, #0
    4dca:	221f      	movs	r2, #31
    4dcc:	4b11      	ldr	r3, [pc, #68]	; (4e14 <at_ble_adv_data_set+0x78>)
    4dce:	4798      	blx	r3
    4dd0:	e003      	b.n	4dda <at_ble_adv_data_set+0x3e>
    4dd2:	4661      	mov	r1, ip
    4dd4:	1c3a      	adds	r2, r7, #0
    4dd6:	4b10      	ldr	r3, [pc, #64]	; (4e18 <at_ble_adv_data_set+0x7c>)
    4dd8:	4798      	blx	r3
    4dda:	3572      	adds	r5, #114	; 0x72
    4ddc:	702f      	strb	r7, [r5, #0]
    4dde:	1e30      	subs	r0, r6, #0
    4de0:	d012      	beq.n	4e08 <at_ble_adv_data_set+0x6c>
    4de2:	4d0b      	ldr	r5, [pc, #44]	; (4e10 <at_ble_adv_data_set+0x74>)
    4de4:	480d      	ldr	r0, [pc, #52]	; (4e1c <at_ble_adv_data_set+0x80>)
    4de6:	2c00      	cmp	r4, #0
    4de8:	d107      	bne.n	4dfa <at_ble_adv_data_set+0x5e>
    4dea:	1c21      	adds	r1, r4, #0
    4dec:	221f      	movs	r2, #31
    4dee:	4b09      	ldr	r3, [pc, #36]	; (4e14 <at_ble_adv_data_set+0x78>)
    4df0:	3573      	adds	r5, #115	; 0x73
    4df2:	4798      	blx	r3
    4df4:	702c      	strb	r4, [r5, #0]
    4df6:	1c20      	adds	r0, r4, #0
    4df8:	e006      	b.n	4e08 <at_ble_adv_data_set+0x6c>
    4dfa:	1c31      	adds	r1, r6, #0
    4dfc:	1c22      	adds	r2, r4, #0
    4dfe:	4b06      	ldr	r3, [pc, #24]	; (4e18 <at_ble_adv_data_set+0x7c>)
    4e00:	4798      	blx	r3
    4e02:	2000      	movs	r0, #0
    4e04:	3573      	adds	r5, #115	; 0x73
    4e06:	702c      	strb	r4, [r5, #0]
    4e08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4e0a:	46c0      	nop			; (mov r8, r8)
    4e0c:	20001d28 	.word	0x20001d28
    4e10:	20001cf4 	.word	0x20001cf4
    4e14:	00008a81 	.word	0x00008a81
    4e18:	00008a6f 	.word	0x00008a6f
    4e1c:	20001d47 	.word	0x20001d47

00004e20 <at_ble_adv_start>:
    4e20:	b5f0      	push	{r4, r5, r6, r7, lr}
    4e22:	b091      	sub	sp, #68	; 0x44
    4e24:	1c1f      	adds	r7, r3, #0
    4e26:	ab16      	add	r3, sp, #88	; 0x58
    4e28:	881d      	ldrh	r5, [r3, #0]
    4e2a:	ab17      	add	r3, sp, #92	; 0x5c
    4e2c:	881b      	ldrh	r3, [r3, #0]
    4e2e:	910d      	str	r1, [sp, #52]	; 0x34
    4e30:	930e      	str	r3, [sp, #56]	; 0x38
    4e32:	ab18      	add	r3, sp, #96	; 0x60
    4e34:	781b      	ldrb	r3, [r3, #0]
    4e36:	1c04      	adds	r4, r0, #0
    4e38:	930f      	str	r3, [sp, #60]	; 0x3c
    4e3a:	4b42      	ldr	r3, [pc, #264]	; (4f44 <at_ble_adv_start+0x124>)
    4e3c:	1c16      	adds	r6, r2, #0
    4e3e:	3373      	adds	r3, #115	; 0x73
    4e40:	781b      	ldrb	r3, [r3, #0]
    4e42:	20cf      	movs	r0, #207	; 0xcf
    4e44:	930c      	str	r3, [sp, #48]	; 0x30
    4e46:	2c01      	cmp	r4, #1
    4e48:	d103      	bne.n	4e52 <at_ble_adv_start+0x32>
    4e4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    4e4c:	2b00      	cmp	r3, #0
    4e4e:	d176      	bne.n	4f3e <at_ble_adv_start+0x11e>
    4e50:	e024      	b.n	4e9c <at_ble_adv_start+0x7c>
    4e52:	2c04      	cmp	r4, #4
    4e54:	d873      	bhi.n	4f3e <at_ble_adv_start+0x11e>
    4e56:	2380      	movs	r3, #128	; 0x80
    4e58:	01db      	lsls	r3, r3, #7
    4e5a:	429d      	cmp	r5, r3
    4e5c:	d86f      	bhi.n	4f3e <at_ble_adv_start+0x11e>
    4e5e:	2c00      	cmp	r4, #0
    4e60:	d102      	bne.n	4e68 <at_ble_adv_start+0x48>
    4e62:	2d1f      	cmp	r5, #31
    4e64:	d96b      	bls.n	4f3e <at_ble_adv_start+0x11e>
    4e66:	e003      	b.n	4e70 <at_ble_adv_start+0x50>
    4e68:	2d9f      	cmp	r5, #159	; 0x9f
    4e6a:	d801      	bhi.n	4e70 <at_ble_adv_start+0x50>
    4e6c:	2c01      	cmp	r4, #1
    4e6e:	d166      	bne.n	4f3e <at_ble_adv_start+0x11e>
    4e70:	2f00      	cmp	r7, #0
    4e72:	d009      	beq.n	4e88 <at_ble_adv_start+0x68>
    4e74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4e76:	20cf      	movs	r0, #207	; 0xcf
    4e78:	3b01      	subs	r3, #1
    4e7a:	2b01      	cmp	r3, #1
    4e7c:	d95f      	bls.n	4f3e <at_ble_adv_start+0x11e>
    4e7e:	2c01      	cmp	r4, #1
    4e80:	d102      	bne.n	4e88 <at_ble_adv_start+0x68>
    4e82:	2d00      	cmp	r5, #0
    4e84:	d100      	bne.n	4e88 <at_ble_adv_start+0x68>
    4e86:	3520      	adds	r5, #32
    4e88:	4b2f      	ldr	r3, [pc, #188]	; (4f48 <at_ble_adv_start+0x128>)
    4e8a:	4798      	blx	r3
    4e8c:	1c01      	adds	r1, r0, #0
    4e8e:	2e00      	cmp	r6, #0
    4e90:	d043      	beq.n	4f1a <at_ble_adv_start+0xfa>
    4e92:	7833      	ldrb	r3, [r6, #0]
    4e94:	1e60      	subs	r0, r4, #1
    4e96:	2b00      	cmp	r3, #0
    4e98:	d109      	bne.n	4eae <at_ble_adv_start+0x8e>
    4e9a:	e03b      	b.n	4f14 <at_ble_adv_start+0xf4>
    4e9c:	2380      	movs	r3, #128	; 0x80
    4e9e:	01db      	lsls	r3, r3, #7
    4ea0:	429d      	cmp	r5, r3
    4ea2:	d84c      	bhi.n	4f3e <at_ble_adv_start+0x11e>
    4ea4:	2e00      	cmp	r6, #0
    4ea6:	d04a      	beq.n	4f3e <at_ble_adv_start+0x11e>
    4ea8:	2f00      	cmp	r7, #0
    4eaa:	d1e3      	bne.n	4e74 <at_ble_adv_start+0x54>
    4eac:	e02b      	b.n	4f06 <at_ble_adv_start+0xe6>
    4eae:	2301      	movs	r3, #1
    4eb0:	2803      	cmp	r0, #3
    4eb2:	d93a      	bls.n	4f2a <at_ble_adv_start+0x10a>
    4eb4:	200d      	movs	r0, #13
    4eb6:	1c72      	adds	r2, r6, #1
    4eb8:	e002      	b.n	4ec0 <at_ble_adv_start+0xa0>
    4eba:	200e      	movs	r0, #14
    4ebc:	1e32      	subs	r2, r6, #0
    4ebe:	d1fa      	bne.n	4eb6 <at_ble_adv_start+0x96>
    4ec0:	4c20      	ldr	r4, [pc, #128]	; (4f44 <at_ble_adv_start+0x124>)
    4ec2:	3474      	adds	r4, #116	; 0x74
    4ec4:	7826      	ldrb	r6, [r4, #0]
    4ec6:	2407      	movs	r4, #7
    4ec8:	2e00      	cmp	r6, #0
    4eca:	d000      	beq.n	4ece <at_ble_adv_start+0xae>
    4ecc:	1c34      	adds	r4, r6, #0
    4ece:	9200      	str	r2, [sp, #0]
    4ed0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4ed2:	9403      	str	r4, [sp, #12]
    4ed4:	9204      	str	r2, [sp, #16]
    4ed6:	4a1b      	ldr	r2, [pc, #108]	; (4f44 <at_ble_adv_start+0x124>)
    4ed8:	9501      	str	r5, [sp, #4]
    4eda:	9502      	str	r5, [sp, #8]
    4edc:	9705      	str	r7, [sp, #20]
    4ede:	3272      	adds	r2, #114	; 0x72
    4ee0:	7812      	ldrb	r2, [r2, #0]
    4ee2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    4ee4:	9206      	str	r2, [sp, #24]
    4ee6:	4a19      	ldr	r2, [pc, #100]	; (4f4c <at_ble_adv_start+0x12c>)
    4ee8:	9207      	str	r2, [sp, #28]
    4eea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4eec:	9208      	str	r2, [sp, #32]
    4eee:	4a18      	ldr	r2, [pc, #96]	; (4f50 <at_ble_adv_start+0x130>)
    4ef0:	9209      	str	r2, [sp, #36]	; 0x24
    4ef2:	2264      	movs	r2, #100	; 0x64
    4ef4:	4362      	muls	r2, r4
    4ef6:	b292      	uxth	r2, r2
    4ef8:	920a      	str	r2, [sp, #40]	; 0x28
    4efa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4efc:	4c15      	ldr	r4, [pc, #84]	; (4f54 <at_ble_adv_start+0x134>)
    4efe:	920b      	str	r2, [sp, #44]	; 0x2c
    4f00:	4a15      	ldr	r2, [pc, #84]	; (4f58 <at_ble_adv_start+0x138>)
    4f02:	47a0      	blx	r4
    4f04:	e01b      	b.n	4f3e <at_ble_adv_start+0x11e>
    4f06:	2d00      	cmp	r5, #0
    4f08:	d1be      	bne.n	4e88 <at_ble_adv_start+0x68>
    4f0a:	4b0f      	ldr	r3, [pc, #60]	; (4f48 <at_ble_adv_start+0x128>)
    4f0c:	4798      	blx	r3
    4f0e:	2520      	movs	r5, #32
    4f10:	1c01      	adds	r1, r0, #0
    4f12:	e7be      	b.n	4e92 <at_ble_adv_start+0x72>
    4f14:	2803      	cmp	r0, #3
    4f16:	d8cd      	bhi.n	4eb4 <at_ble_adv_start+0x94>
    4f18:	e006      	b.n	4f28 <at_ble_adv_start+0x108>
    4f1a:	1e60      	subs	r0, r4, #1
    4f1c:	2803      	cmp	r0, #3
    4f1e:	d903      	bls.n	4f28 <at_ble_adv_start+0x108>
    4f20:	1c33      	adds	r3, r6, #0
    4f22:	200d      	movs	r0, #13
    4f24:	1c32      	adds	r2, r6, #0
    4f26:	e7cb      	b.n	4ec0 <at_ble_adv_start+0xa0>
    4f28:	2300      	movs	r3, #0
    4f2a:	f003 fc79 	bl	8820 <__gnu_thumb1_case_sqi>
    4f2e:	06c6      	.short	0x06c6
    4f30:	0204      	.short	0x0204
    4f32:	200f      	movs	r0, #15
    4f34:	e7c2      	b.n	4ebc <at_ble_adv_start+0x9c>
    4f36:	2200      	movs	r2, #0
    4f38:	920c      	str	r2, [sp, #48]	; 0x30
    4f3a:	200c      	movs	r0, #12
    4f3c:	e7be      	b.n	4ebc <at_ble_adv_start+0x9c>
    4f3e:	b011      	add	sp, #68	; 0x44
    4f40:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4f42:	46c0      	nop			; (mov r8, r8)
    4f44:	20001cf4 	.word	0x20001cf4
    4f48:	00007d59 	.word	0x00007d59
    4f4c:	20001d28 	.word	0x20001d28
    4f50:	20001d47 	.word	0x20001d47
    4f54:	00007c45 	.word	0x00007c45
    4f58:	00003a98 	.word	0x00003a98

00004f5c <at_ble_scan_stop>:
    4f5c:	b510      	push	{r4, lr}
    4f5e:	4b05      	ldr	r3, [pc, #20]	; (4f74 <at_ble_scan_stop+0x18>)
    4f60:	4798      	blx	r3
    4f62:	1e04      	subs	r4, r0, #0
    4f64:	d103      	bne.n	4f6e <at_ble_scan_stop+0x12>
    4f66:	20d1      	movs	r0, #209	; 0xd1
    4f68:	4b03      	ldr	r3, [pc, #12]	; (4f78 <at_ble_scan_stop+0x1c>)
    4f6a:	0100      	lsls	r0, r0, #4
    4f6c:	4798      	blx	r3
    4f6e:	1c20      	adds	r0, r4, #0
    4f70:	bd10      	pop	{r4, pc}
    4f72:	46c0      	nop			; (mov r8, r8)
    4f74:	00007a51 	.word	0x00007a51
    4f78:	000049c5 	.word	0x000049c5

00004f7c <at_ble_disconnect>:
    4f7c:	b538      	push	{r3, r4, r5, lr}
    4f7e:	1c04      	adds	r4, r0, #0
    4f80:	4b04      	ldr	r3, [pc, #16]	; (4f94 <at_ble_disconnect+0x18>)
    4f82:	1c08      	adds	r0, r1, #0
    4f84:	1c21      	adds	r1, r4, #0
    4f86:	4798      	blx	r3
    4f88:	1c05      	adds	r5, r0, #0
    4f8a:	4b03      	ldr	r3, [pc, #12]	; (4f98 <at_ble_disconnect+0x1c>)
    4f8c:	1c20      	adds	r0, r4, #0
    4f8e:	4798      	blx	r3
    4f90:	1c28      	adds	r0, r5, #0
    4f92:	bd38      	pop	{r3, r4, r5, pc}
    4f94:	0000702d 	.word	0x0000702d
    4f98:	00004a09 	.word	0x00004a09

00004f9c <at_ble_conn_update_reply>:
    4f9c:	b570      	push	{r4, r5, r6, lr}
    4f9e:	4c09      	ldr	r4, [pc, #36]	; (4fc4 <at_ble_conn_update_reply+0x28>)
    4fa0:	47a0      	blx	r4
    4fa2:	1e04      	subs	r4, r0, #0
    4fa4:	d00b      	beq.n	4fbe <at_ble_conn_update_reply+0x22>
    4fa6:	22d0      	movs	r2, #208	; 0xd0
    4fa8:	4d07      	ldr	r5, [pc, #28]	; (4fc8 <at_ble_conn_update_reply+0x2c>)
    4faa:	4908      	ldr	r1, [pc, #32]	; (4fcc <at_ble_conn_update_reply+0x30>)
    4fac:	4b08      	ldr	r3, [pc, #32]	; (4fd0 <at_ble_conn_update_reply+0x34>)
    4fae:	4809      	ldr	r0, [pc, #36]	; (4fd4 <at_ble_conn_update_reply+0x38>)
    4fb0:	0092      	lsls	r2, r2, #2
    4fb2:	682e      	ldr	r6, [r5, #0]
    4fb4:	47b0      	blx	r6
    4fb6:	682b      	ldr	r3, [r5, #0]
    4fb8:	4807      	ldr	r0, [pc, #28]	; (4fd8 <at_ble_conn_update_reply+0x3c>)
    4fba:	1c21      	adds	r1, r4, #0
    4fbc:	4798      	blx	r3
    4fbe:	1c20      	adds	r0, r4, #0
    4fc0:	bd70      	pop	{r4, r5, r6, pc}
    4fc2:	46c0      	nop			; (mov r8, r8)
    4fc4:	00007551 	.word	0x00007551
    4fc8:	20000078 	.word	0x20000078
    4fcc:	0000ab70 	.word	0x0000ab70
    4fd0:	0000ab48 	.word	0x0000ab48
    4fd4:	0000aab9 	.word	0x0000aab9
    4fd8:	0000abae 	.word	0x0000abae

00004fdc <at_ble_random_address_resolve>:
    4fdc:	b510      	push	{r4, lr}
    4fde:	23cf      	movs	r3, #207	; 0xcf
    4fe0:	2800      	cmp	r0, #0
    4fe2:	d00a      	beq.n	4ffa <at_ble_random_address_resolve+0x1e>
    4fe4:	2900      	cmp	r1, #0
    4fe6:	d008      	beq.n	4ffa <at_ble_random_address_resolve+0x1e>
    4fe8:	2a00      	cmp	r2, #0
    4fea:	d006      	beq.n	4ffa <at_ble_random_address_resolve+0x1e>
    4fec:	780c      	ldrb	r4, [r1, #0]
    4fee:	2c02      	cmp	r4, #2
    4ff0:	d103      	bne.n	4ffa <at_ble_random_address_resolve+0x1e>
    4ff2:	4b03      	ldr	r3, [pc, #12]	; (5000 <at_ble_random_address_resolve+0x24>)
    4ff4:	3101      	adds	r1, #1
    4ff6:	4798      	blx	r3
    4ff8:	2300      	movs	r3, #0
    4ffa:	1c18      	adds	r0, r3, #0
    4ffc:	bd10      	pop	{r4, pc}
    4ffe:	46c0      	nop			; (mov r8, r8)
    5000:	00007df9 	.word	0x00007df9

00005004 <at_ble_uuid_type2len>:
    5004:	23cf      	movs	r3, #207	; 0xcf
    5006:	2802      	cmp	r0, #2
    5008:	d801      	bhi.n	500e <at_ble_uuid_type2len+0xa>
    500a:	4b02      	ldr	r3, [pc, #8]	; (5014 <at_ble_uuid_type2len+0x10>)
    500c:	5c1b      	ldrb	r3, [r3, r0]
    500e:	1c18      	adds	r0, r3, #0
    5010:	4770      	bx	lr
    5012:	46c0      	nop			; (mov r8, r8)
    5014:	0000ade4 	.word	0x0000ade4

00005018 <at_ble_uuid_len2type>:
    5018:	1e83      	subs	r3, r0, #2
    501a:	b2db      	uxtb	r3, r3
    501c:	2003      	movs	r0, #3
    501e:	2b0e      	cmp	r3, #14
    5020:	d801      	bhi.n	5026 <at_ble_uuid_len2type+0xe>
    5022:	4a01      	ldr	r2, [pc, #4]	; (5028 <at_ble_uuid_len2type+0x10>)
    5024:	5cd0      	ldrb	r0, [r2, r3]
    5026:	4770      	bx	lr
    5028:	0000ab61 	.word	0x0000ab61

0000502c <db_searchATT>:
    502c:	b570      	push	{r4, r5, r6, lr}
    502e:	1c05      	adds	r5, r0, #0
    5030:	2400      	movs	r4, #0
    5032:	4b0c      	ldr	r3, [pc, #48]	; (5064 <db_searchATT+0x38>)
    5034:	6819      	ldr	r1, [r3, #0]
    5036:	4b0c      	ldr	r3, [pc, #48]	; (5068 <db_searchATT+0x3c>)
    5038:	681e      	ldr	r6, [r3, #0]
    503a:	428c      	cmp	r4, r1
    503c:	dc10      	bgt.n	5060 <db_searchATT+0x34>
    503e:	200c      	movs	r0, #12
    5040:	1863      	adds	r3, r4, r1
    5042:	0fda      	lsrs	r2, r3, #31
    5044:	18d3      	adds	r3, r2, r3
    5046:	1c02      	adds	r2, r0, #0
    5048:	105b      	asrs	r3, r3, #1
    504a:	435a      	muls	r2, r3
    504c:	18b0      	adds	r0, r6, r2
    504e:	8802      	ldrh	r2, [r0, #0]
    5050:	42aa      	cmp	r2, r5
    5052:	d201      	bcs.n	5058 <db_searchATT+0x2c>
    5054:	1e59      	subs	r1, r3, #1
    5056:	e7f0      	b.n	503a <db_searchATT+0xe>
    5058:	42aa      	cmp	r2, r5
    505a:	d902      	bls.n	5062 <db_searchATT+0x36>
    505c:	1c5c      	adds	r4, r3, #1
    505e:	e7ec      	b.n	503a <db_searchATT+0xe>
    5060:	2000      	movs	r0, #0
    5062:	bd70      	pop	{r4, r5, r6, pc}
    5064:	2000070c 	.word	0x2000070c
    5068:	20000704 	.word	0x20000704

0000506c <att_permissions>:
    506c:	b510      	push	{r4, lr}
    506e:	2403      	movs	r4, #3
    5070:	0683      	lsls	r3, r0, #26
    5072:	4004      	ands	r4, r0
    5074:	0640      	lsls	r0, r0, #25
    5076:	0f9b      	lsrs	r3, r3, #30
    5078:	0fc0      	lsrs	r0, r0, #31
    507a:	2c00      	cmp	r4, #0
    507c:	d001      	beq.n	5082 <att_permissions+0x16>
    507e:	b2a1      	uxth	r1, r4
    5080:	e002      	b.n	5088 <att_permissions+0x1c>
    5082:	1e4c      	subs	r4, r1, #1
    5084:	41a1      	sbcs	r1, r4
    5086:	b289      	uxth	r1, r1
    5088:	2b00      	cmp	r3, #0
    508a:	d001      	beq.n	5090 <att_permissions+0x24>
    508c:	009b      	lsls	r3, r3, #2
    508e:	e002      	b.n	5096 <att_permissions+0x2a>
    5090:	2a00      	cmp	r2, #0
    5092:	d001      	beq.n	5098 <att_permissions+0x2c>
    5094:	2304      	movs	r3, #4
    5096:	4319      	orrs	r1, r3
    5098:	2800      	cmp	r0, #0
    509a:	d101      	bne.n	50a0 <att_permissions+0x34>
    509c:	2080      	movs	r0, #128	; 0x80
    509e:	e000      	b.n	50a2 <att_permissions+0x36>
    50a0:	2090      	movs	r0, #144	; 0x90
    50a2:	0180      	lsls	r0, r0, #6
    50a4:	4308      	orrs	r0, r1
    50a6:	bd10      	pop	{r4, pc}

000050a8 <char_permissions>:
    50a8:	b570      	push	{r4, r5, r6, lr}
    50aa:	2503      	movs	r5, #3
    50ac:	068c      	lsls	r4, r1, #26
    50ae:	400d      	ands	r5, r1
    50b0:	0649      	lsls	r1, r1, #25
    50b2:	0fa4      	lsrs	r4, r4, #30
    50b4:	0fc9      	lsrs	r1, r1, #31
    50b6:	2300      	movs	r3, #0
    50b8:	0786      	lsls	r6, r0, #30
    50ba:	d500      	bpl.n	50be <char_permissions+0x16>
    50bc:	b2ab      	uxth	r3, r5
    50be:	0706      	lsls	r6, r0, #28
    50c0:	d504      	bpl.n	50cc <char_permissions+0x24>
    50c2:	00a6      	lsls	r6, r4, #2
    50c4:	4333      	orrs	r3, r6
    50c6:	2680      	movs	r6, #128	; 0x80
    50c8:	01b6      	lsls	r6, r6, #6
    50ca:	4333      	orrs	r3, r6
    50cc:	0686      	lsls	r6, r0, #26
    50ce:	d501      	bpl.n	50d4 <char_permissions+0x2c>
    50d0:	012e      	lsls	r6, r5, #4
    50d2:	4333      	orrs	r3, r6
    50d4:	06c6      	lsls	r6, r0, #27
    50d6:	d501      	bpl.n	50dc <char_permissions+0x34>
    50d8:	01ad      	lsls	r5, r5, #6
    50da:	432b      	orrs	r3, r5
    50dc:	2580      	movs	r5, #128	; 0x80
    50de:	006d      	lsls	r5, r5, #1
    50e0:	4228      	tst	r0, r5
    50e2:	d000      	beq.n	50e6 <char_permissions+0x3e>
    50e4:	432b      	orrs	r3, r5
    50e6:	07c5      	lsls	r5, r0, #31
    50e8:	d502      	bpl.n	50f0 <char_permissions+0x48>
    50ea:	2580      	movs	r5, #128	; 0x80
    50ec:	00ad      	lsls	r5, r5, #2
    50ee:	432b      	orrs	r3, r5
    50f0:	2900      	cmp	r1, #0
    50f2:	d002      	beq.n	50fa <char_permissions+0x52>
    50f4:	2180      	movs	r1, #128	; 0x80
    50f6:	00c9      	lsls	r1, r1, #3
    50f8:	430b      	orrs	r3, r1
    50fa:	0741      	lsls	r1, r0, #29
    50fc:	d504      	bpl.n	5108 <char_permissions+0x60>
    50fe:	00a1      	lsls	r1, r4, #2
    5100:	430b      	orrs	r3, r1
    5102:	2180      	movs	r1, #128	; 0x80
    5104:	0109      	lsls	r1, r1, #4
    5106:	430b      	orrs	r3, r1
    5108:	0641      	lsls	r1, r0, #25
    510a:	d502      	bpl.n	5112 <char_permissions+0x6a>
    510c:	4907      	ldr	r1, [pc, #28]	; (512c <char_permissions+0x84>)
    510e:	430b      	orrs	r3, r1
    5110:	b29b      	uxth	r3, r3
    5112:	0601      	lsls	r1, r0, #24
    5114:	d505      	bpl.n	5122 <char_permissions+0x7a>
    5116:	00a4      	lsls	r4, r4, #2
    5118:	4323      	orrs	r3, r4
    511a:	b29c      	uxth	r4, r3
    511c:	2384      	movs	r3, #132	; 0x84
    511e:	019b      	lsls	r3, r3, #6
    5120:	4323      	orrs	r3, r4
    5122:	0390      	lsls	r0, r2, #14
    5124:	4303      	orrs	r3, r0
    5126:	b298      	uxth	r0, r3
    5128:	bd70      	pop	{r4, r5, r6, pc}
    512a:	46c0      	nop			; (mov r8, r8)
    512c:	00001004 	.word	0x00001004

00005130 <presentation_format_define>:
    5130:	b507      	push	{r0, r1, r2, lr}
    5132:	466a      	mov	r2, sp
    5134:	780b      	ldrb	r3, [r1, #0]
    5136:	7013      	strb	r3, [r2, #0]
    5138:	784b      	ldrb	r3, [r1, #1]
    513a:	7053      	strb	r3, [r2, #1]
    513c:	884b      	ldrh	r3, [r1, #2]
    513e:	7093      	strb	r3, [r2, #2]
    5140:	0a1b      	lsrs	r3, r3, #8
    5142:	70d3      	strb	r3, [r2, #3]
    5144:	790b      	ldrb	r3, [r1, #4]
    5146:	7113      	strb	r3, [r2, #4]
    5148:	88cb      	ldrh	r3, [r1, #6]
    514a:	2107      	movs	r1, #7
    514c:	7153      	strb	r3, [r2, #5]
    514e:	0a1b      	lsrs	r3, r3, #8
    5150:	7193      	strb	r3, [r2, #6]
    5152:	4b01      	ldr	r3, [pc, #4]	; (5158 <presentation_format_define+0x28>)
    5154:	4798      	blx	r3
    5156:	bd0e      	pop	{r1, r2, r3, pc}
    5158:	000084ed 	.word	0x000084ed

0000515c <db_addATT>:
    515c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    515e:	4c25      	ldr	r4, [pc, #148]	; (51f4 <db_addATT+0x98>)
    5160:	1c1d      	adds	r5, r3, #0
    5162:	6823      	ldr	r3, [r4, #0]
    5164:	9001      	str	r0, [sp, #4]
    5166:	26d3      	movs	r6, #211	; 0xd3
    5168:	2b00      	cmp	r3, #0
    516a:	d040      	beq.n	51ee <db_addATT+0x92>
    516c:	1c1e      	adds	r6, r3, #0
    516e:	3e0c      	subs	r6, #12
    5170:	6026      	str	r6, [r4, #0]
    5172:	2900      	cmp	r1, #0
    5174:	d005      	beq.n	5182 <db_addATT+0x26>
    5176:	4f20      	ldr	r7, [pc, #128]	; (51f8 <db_addATT+0x9c>)
    5178:	46bc      	mov	ip, r7
    517a:	4660      	mov	r0, ip
    517c:	683f      	ldr	r7, [r7, #0]
    517e:	18bf      	adds	r7, r7, r2
    5180:	6007      	str	r7, [r0, #0]
    5182:	481d      	ldr	r0, [pc, #116]	; (51f8 <db_addATT+0x9c>)
    5184:	6807      	ldr	r7, [r0, #0]
    5186:	4684      	mov	ip, r0
    5188:	42be      	cmp	r6, r7
    518a:	d92a      	bls.n	51e2 <db_addATT+0x86>
    518c:	4668      	mov	r0, sp
    518e:	8880      	ldrh	r0, [r0, #4]
    5190:	3b0c      	subs	r3, #12
    5192:	8018      	strh	r0, [r3, #0]
    5194:	6823      	ldr	r3, [r4, #0]
    5196:	2900      	cmp	r1, #0
    5198:	d009      	beq.n	51ae <db_addATT+0x52>
    519a:	2a00      	cmp	r2, #0
    519c:	d007      	beq.n	51ae <db_addATT+0x52>
    519e:	4660      	mov	r0, ip
    51a0:	6800      	ldr	r0, [r0, #0]
    51a2:	809a      	strh	r2, [r3, #4]
    51a4:	1a80      	subs	r0, r0, r2
    51a6:	6098      	str	r0, [r3, #8]
    51a8:	4b14      	ldr	r3, [pc, #80]	; (51fc <db_addATT+0xa0>)
    51aa:	4798      	blx	r3
    51ac:	e002      	b.n	51b4 <db_addATT+0x58>
    51ae:	2100      	movs	r1, #0
    51b0:	809a      	strh	r2, [r3, #4]
    51b2:	6099      	str	r1, [r3, #8]
    51b4:	2300      	movs	r3, #0
    51b6:	6822      	ldr	r2, [r4, #0]
    51b8:	7093      	strb	r3, [r2, #2]
    51ba:	072b      	lsls	r3, r5, #28
    51bc:	d504      	bpl.n	51c8 <db_addATT+0x6c>
    51be:	2101      	movs	r1, #1
    51c0:	6822      	ldr	r2, [r4, #0]
    51c2:	7893      	ldrb	r3, [r2, #2]
    51c4:	430b      	orrs	r3, r1
    51c6:	7093      	strb	r3, [r2, #2]
    51c8:	09ed      	lsrs	r5, r5, #7
    51ca:	d004      	beq.n	51d6 <db_addATT+0x7a>
    51cc:	2102      	movs	r1, #2
    51ce:	6822      	ldr	r2, [r4, #0]
    51d0:	7893      	ldrb	r3, [r2, #2]
    51d2:	430b      	orrs	r3, r1
    51d4:	7093      	strb	r3, [r2, #2]
    51d6:	4a0a      	ldr	r2, [pc, #40]	; (5200 <db_addATT+0xa4>)
    51d8:	2600      	movs	r6, #0
    51da:	6813      	ldr	r3, [r2, #0]
    51dc:	3301      	adds	r3, #1
    51de:	6013      	str	r3, [r2, #0]
    51e0:	e005      	b.n	51ee <db_addATT+0x92>
    51e2:	6023      	str	r3, [r4, #0]
    51e4:	2611      	movs	r6, #17
    51e6:	2900      	cmp	r1, #0
    51e8:	d001      	beq.n	51ee <db_addATT+0x92>
    51ea:	1aba      	subs	r2, r7, r2
    51ec:	6002      	str	r2, [r0, #0]
    51ee:	1c30      	adds	r0, r6, #0
    51f0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    51f2:	46c0      	nop			; (mov r8, r8)
    51f4:	20000704 	.word	0x20000704
    51f8:	20000708 	.word	0x20000708
    51fc:	00008a6f 	.word	0x00008a6f
    5200:	2000070c 	.word	0x2000070c

00005204 <user_description_define>:
    5204:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5206:	1c05      	adds	r5, r0, #0
    5208:	1c0e      	adds	r6, r1, #0
    520a:	1c14      	adds	r4, r2, #0
    520c:	1c1f      	adds	r7, r3, #0
    520e:	2a00      	cmp	r2, #0
    5210:	d015      	beq.n	523e <user_description_define+0x3a>
    5212:	070a      	lsls	r2, r1, #28
    5214:	4b10      	ldr	r3, [pc, #64]	; (5258 <user_description_define+0x54>)
    5216:	0fd2      	lsrs	r2, r2, #31
    5218:	03d2      	lsls	r2, r2, #15
    521a:	469c      	mov	ip, r3
    521c:	d004      	beq.n	5228 <user_description_define+0x24>
    521e:	1c21      	adds	r1, r4, #0
    5220:	1c3a      	adds	r2, r7, #0
    5222:	1c33      	adds	r3, r6, #0
    5224:	47e0      	blx	ip
    5226:	e015      	b.n	5254 <user_description_define+0x50>
    5228:	1c11      	adds	r1, r2, #0
    522a:	1c33      	adds	r3, r6, #0
    522c:	47e0      	blx	ip
    522e:	2800      	cmp	r0, #0
    5230:	d110      	bne.n	5254 <user_description_define+0x50>
    5232:	1c28      	adds	r0, r5, #0
    5234:	1c39      	adds	r1, r7, #0
    5236:	1c22      	adds	r2, r4, #0
    5238:	4b08      	ldr	r3, [pc, #32]	; (525c <user_description_define+0x58>)
    523a:	4798      	blx	r3
    523c:	e00a      	b.n	5254 <user_description_define+0x50>
    523e:	4c08      	ldr	r4, [pc, #32]	; (5260 <user_description_define+0x5c>)
    5240:	4908      	ldr	r1, [pc, #32]	; (5264 <user_description_define+0x60>)
    5242:	22fb      	movs	r2, #251	; 0xfb
    5244:	4b08      	ldr	r3, [pc, #32]	; (5268 <user_description_define+0x64>)
    5246:	4809      	ldr	r0, [pc, #36]	; (526c <user_description_define+0x68>)
    5248:	6825      	ldr	r5, [r4, #0]
    524a:	47a8      	blx	r5
    524c:	6823      	ldr	r3, [r4, #0]
    524e:	4808      	ldr	r0, [pc, #32]	; (5270 <user_description_define+0x6c>)
    5250:	4798      	blx	r3
    5252:	20cf      	movs	r0, #207	; 0xcf
    5254:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5256:	46c0      	nop			; (mov r8, r8)
    5258:	0000515d 	.word	0x0000515d
    525c:	000084ed 	.word	0x000084ed
    5260:	20000078 	.word	0x20000078
    5264:	0000adff 	.word	0x0000adff
    5268:	0000ade7 	.word	0x0000ade7
    526c:	0000aab9 	.word	0x0000aab9
    5270:	0000ac35 	.word	0x0000ac35

00005274 <at_ble_read_authorize_reply.part.2>:
    5274:	b537      	push	{r0, r1, r2, r4, r5, lr}
    5276:	4b09      	ldr	r3, [pc, #36]	; (529c <at_ble_read_authorize_reply.part.2+0x28>)
    5278:	1c05      	adds	r5, r0, #0
    527a:	1c08      	adds	r0, r1, #0
    527c:	1c0c      	adds	r4, r1, #0
    527e:	4798      	blx	r3
    5280:	2800      	cmp	r0, #0
    5282:	d009      	beq.n	5298 <at_ble_read_authorize_reply.part.2+0x24>
    5284:	6882      	ldr	r2, [r0, #8]
    5286:	2a00      	cmp	r2, #0
    5288:	d006      	beq.n	5298 <at_ble_read_authorize_reply.part.2+0x24>
    528a:	8883      	ldrh	r3, [r0, #4]
    528c:	1c29      	adds	r1, r5, #0
    528e:	9200      	str	r2, [sp, #0]
    5290:	1c20      	adds	r0, r4, #0
    5292:	2200      	movs	r2, #0
    5294:	4c02      	ldr	r4, [pc, #8]	; (52a0 <at_ble_read_authorize_reply.part.2+0x2c>)
    5296:	47a0      	blx	r4
    5298:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    529a:	46c0      	nop			; (mov r8, r8)
    529c:	0000502d 	.word	0x0000502d
    52a0:	00007efd 	.word	0x00007efd

000052a4 <internal_at_ble_service_define.part.1>:
    52a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    52a6:	b08b      	sub	sp, #44	; 0x2c
    52a8:	9304      	str	r3, [sp, #16]
    52aa:	ab10      	add	r3, sp, #64	; 0x40
    52ac:	2400      	movs	r4, #0
    52ae:	9202      	str	r2, [sp, #8]
    52b0:	cb04      	ldmia	r3!, {r2}
    52b2:	2210      	movs	r2, #16
    52b4:	1c05      	adds	r5, r0, #0
    52b6:	881b      	ldrh	r3, [r3, #0]
    52b8:	9106      	str	r1, [sp, #24]
    52ba:	9305      	str	r3, [sp, #20]
    52bc:	ab12      	add	r3, sp, #72	; 0x48
    52be:	781b      	ldrb	r3, [r3, #0]
    52c0:	1c21      	adds	r1, r4, #0
    52c2:	9303      	str	r3, [sp, #12]
    52c4:	4bbb      	ldr	r3, [pc, #748]	; (55b4 <internal_at_ble_service_define.part.1+0x310>)
    52c6:	681e      	ldr	r6, [r3, #0]
    52c8:	4bbb      	ldr	r3, [pc, #748]	; (55b8 <internal_at_ble_service_define.part.1+0x314>)
    52ca:	1db7      	adds	r7, r6, #6
    52cc:	8072      	strh	r2, [r6, #2]
    52ce:	8034      	strh	r4, [r6, #0]
    52d0:	1c38      	adds	r0, r7, #0
    52d2:	4798      	blx	r3
    52d4:	4bb9      	ldr	r3, [pc, #740]	; (55bc <internal_at_ble_service_define.part.1+0x318>)
    52d6:	7828      	ldrb	r0, [r5, #0]
    52d8:	4798      	blx	r3
    52da:	4bb9      	ldr	r3, [pc, #740]	; (55c0 <internal_at_ble_service_define.part.1+0x31c>)
    52dc:	1c02      	adds	r2, r0, #0
    52de:	1c69      	adds	r1, r5, #1
    52e0:	1c38      	adds	r0, r7, #0
    52e2:	4798      	blx	r3
    52e4:	2204      	movs	r2, #4
    52e6:	782b      	ldrb	r3, [r5, #0]
    52e8:	7174      	strb	r4, [r6, #5]
    52ea:	011b      	lsls	r3, r3, #4
    52ec:	4313      	orrs	r3, r2
    52ee:	9a03      	ldr	r2, [sp, #12]
    52f0:	9c02      	ldr	r4, [sp, #8]
    52f2:	0192      	lsls	r2, r2, #6
    52f4:	4313      	orrs	r3, r2
    52f6:	7133      	strb	r3, [r6, #4]
    52f8:	2316      	movs	r3, #22
    52fa:	9a04      	ldr	r2, [sp, #16]
    52fc:	3412      	adds	r4, #18
    52fe:	4353      	muls	r3, r2
    5300:	9a02      	ldr	r2, [sp, #8]
    5302:	3312      	adds	r3, #18
    5304:	18d7      	adds	r7, r2, r3
    5306:	42bc      	cmp	r4, r7
    5308:	d00f      	beq.n	532a <internal_at_ble_service_define.part.1+0x86>
    530a:	4bae      	ldr	r3, [pc, #696]	; (55c4 <internal_at_ble_service_define.part.1+0x320>)
    530c:	8821      	ldrh	r1, [r4, #0]
    530e:	9300      	str	r3, [sp, #0]
    5310:	230e      	movs	r3, #14
    5312:	aa06      	add	r2, sp, #24
    5314:	189b      	adds	r3, r3, r2
    5316:	9301      	str	r3, [sp, #4]
    5318:	4dab      	ldr	r5, [pc, #684]	; (55c8 <internal_at_ble_service_define.part.1+0x324>)
    531a:	1c30      	adds	r0, r6, #0
    531c:	2201      	movs	r2, #1
    531e:	2302      	movs	r3, #2
    5320:	47a8      	blx	r5
    5322:	3416      	adds	r4, #22
    5324:	1e05      	subs	r5, r0, #0
    5326:	d0ee      	beq.n	5306 <internal_at_ble_service_define.part.1+0x62>
    5328:	e140      	b.n	55ac <internal_at_ble_service_define.part.1+0x308>
    532a:	9f10      	ldr	r7, [sp, #64]	; 0x40
    532c:	2300      	movs	r3, #0
    532e:	3714      	adds	r7, #20
    5330:	1c3c      	adds	r4, r7, #0
    5332:	9302      	str	r3, [sp, #8]
    5334:	9b02      	ldr	r3, [sp, #8]
    5336:	9a05      	ldr	r2, [sp, #20]
    5338:	4293      	cmp	r3, r2
    533a:	db00      	blt.n	533e <internal_at_ble_service_define.part.1+0x9a>
    533c:	e0b0      	b.n	54a0 <internal_at_ble_service_define.part.1+0x1fc>
    533e:	4ba3      	ldr	r3, [pc, #652]	; (55cc <internal_at_ble_service_define.part.1+0x328>)
    5340:	aa06      	add	r2, sp, #24
    5342:	9300      	str	r3, [sp, #0]
    5344:	230e      	movs	r3, #14
    5346:	189b      	adds	r3, r3, r2
    5348:	9301      	str	r3, [sp, #4]
    534a:	4d9f      	ldr	r5, [pc, #636]	; (55c8 <internal_at_ble_service_define.part.1+0x324>)
    534c:	1c30      	adds	r0, r6, #0
    534e:	2104      	movs	r1, #4
    5350:	2201      	movs	r2, #1
    5352:	2302      	movs	r3, #2
    5354:	47a8      	blx	r5
    5356:	1e05      	subs	r5, r0, #0
    5358:	d000      	beq.n	535c <internal_at_ble_service_define.part.1+0xb8>
    535a:	e127      	b.n	55ac <internal_at_ble_service_define.part.1+0x308>
    535c:	1c23      	adds	r3, r4, #0
    535e:	3b12      	subs	r3, #18
    5360:	781b      	ldrb	r3, [r3, #0]
    5362:	7b25      	ldrb	r5, [r4, #12]
    5364:	1c1a      	adds	r2, r3, #0
    5366:	1c29      	adds	r1, r5, #0
    5368:	9303      	str	r3, [sp, #12]
    536a:	8820      	ldrh	r0, [r4, #0]
    536c:	4b98      	ldr	r3, [pc, #608]	; (55d0 <internal_at_ble_service_define.part.1+0x32c>)
    536e:	4798      	blx	r3
    5370:	072d      	lsls	r5, r5, #28
    5372:	8963      	ldrh	r3, [r4, #10]
    5374:	0fed      	lsrs	r5, r5, #31
    5376:	03ed      	lsls	r5, r5, #15
    5378:	431d      	orrs	r5, r3
    537a:	9007      	str	r0, [sp, #28]
    537c:	4b8f      	ldr	r3, [pc, #572]	; (55bc <internal_at_ble_service_define.part.1+0x318>)
    537e:	9803      	ldr	r0, [sp, #12]
    5380:	4798      	blx	r3
    5382:	1c22      	adds	r2, r4, #0
    5384:	3a11      	subs	r2, #17
    5386:	9200      	str	r2, [sp, #0]
    5388:	3a03      	subs	r2, #3
    538a:	1c03      	adds	r3, r0, #0
    538c:	9201      	str	r2, [sp, #4]
    538e:	1c29      	adds	r1, r5, #0
    5390:	1c30      	adds	r0, r6, #0
    5392:	4d8d      	ldr	r5, [pc, #564]	; (55c8 <internal_at_ble_service_define.part.1+0x324>)
    5394:	9a07      	ldr	r2, [sp, #28]
    5396:	47a8      	blx	r5
    5398:	1e05      	subs	r5, r0, #0
    539a:	d000      	beq.n	539e <internal_at_ble_service_define.part.1+0xfa>
    539c:	e106      	b.n	55ac <internal_at_ble_service_define.part.1+0x308>
    539e:	22c0      	movs	r2, #192	; 0xc0
    53a0:	8823      	ldrh	r3, [r4, #0]
    53a2:	0052      	lsls	r2, r2, #1
    53a4:	4213      	tst	r3, r2
    53a6:	d104      	bne.n	53b2 <internal_at_ble_service_define.part.1+0x10e>
    53a8:	8aa3      	ldrh	r3, [r4, #20]
    53aa:	9303      	str	r3, [sp, #12]
    53ac:	2b00      	cmp	r3, #0
    53ae:	d115      	bne.n	53dc <internal_at_ble_service_define.part.1+0x138>
    53b0:	e032      	b.n	5418 <internal_at_ble_service_define.part.1+0x174>
    53b2:	0619      	lsls	r1, r3, #24
    53b4:	0fc9      	lsrs	r1, r1, #31
    53b6:	05db      	lsls	r3, r3, #23
    53b8:	d501      	bpl.n	53be <internal_at_ble_service_define.part.1+0x11a>
    53ba:	2302      	movs	r3, #2
    53bc:	4319      	orrs	r1, r3
    53be:	4b85      	ldr	r3, [pc, #532]	; (55d4 <internal_at_ble_service_define.part.1+0x330>)
    53c0:	aa06      	add	r2, sp, #24
    53c2:	9300      	str	r3, [sp, #0]
    53c4:	230e      	movs	r3, #14
    53c6:	189b      	adds	r3, r3, r2
    53c8:	9301      	str	r3, [sp, #4]
    53ca:	4d7f      	ldr	r5, [pc, #508]	; (55c8 <internal_at_ble_service_define.part.1+0x324>)
    53cc:	0209      	lsls	r1, r1, #8
    53ce:	1c30      	adds	r0, r6, #0
    53d0:	2201      	movs	r2, #1
    53d2:	2302      	movs	r3, #2
    53d4:	47a8      	blx	r5
    53d6:	1e05      	subs	r5, r0, #0
    53d8:	d0e6      	beq.n	53a8 <internal_at_ble_service_define.part.1+0x104>
    53da:	e0e7      	b.n	55ac <internal_at_ble_service_define.part.1+0x308>
    53dc:	2380      	movs	r3, #128	; 0x80
    53de:	8822      	ldrh	r2, [r4, #0]
    53e0:	7f25      	ldrb	r5, [r4, #28]
    53e2:	005b      	lsls	r3, r3, #1
    53e4:	401a      	ands	r2, r3
    53e6:	1c28      	adds	r0, r5, #0
    53e8:	2101      	movs	r1, #1
    53ea:	2a00      	cmp	r2, #0
    53ec:	d000      	beq.n	53f0 <internal_at_ble_service_define.part.1+0x14c>
    53ee:	1c0a      	adds	r2, r1, #0
    53f0:	4b79      	ldr	r3, [pc, #484]	; (55d8 <internal_at_ble_service_define.part.1+0x334>)
    53f2:	4798      	blx	r3
    53f4:	4b79      	ldr	r3, [pc, #484]	; (55dc <internal_at_ble_service_define.part.1+0x338>)
    53f6:	072d      	lsls	r5, r5, #28
    53f8:	9300      	str	r3, [sp, #0]
    53fa:	1c23      	adds	r3, r4, #0
    53fc:	0fed      	lsrs	r5, r5, #31
    53fe:	03ed      	lsls	r5, r5, #15
    5400:	4328      	orrs	r0, r5
    5402:	3320      	adds	r3, #32
    5404:	b282      	uxth	r2, r0
    5406:	9301      	str	r3, [sp, #4]
    5408:	4d6f      	ldr	r5, [pc, #444]	; (55c8 <internal_at_ble_service_define.part.1+0x324>)
    540a:	1c30      	adds	r0, r6, #0
    540c:	9903      	ldr	r1, [sp, #12]
    540e:	2302      	movs	r3, #2
    5410:	47a8      	blx	r5
    5412:	1e05      	subs	r5, r0, #0
    5414:	d000      	beq.n	5418 <internal_at_ble_service_define.part.1+0x174>
    5416:	e0c9      	b.n	55ac <internal_at_ble_service_define.part.1+0x308>
    5418:	2101      	movs	r1, #1
    541a:	8823      	ldrh	r3, [r4, #0]
    541c:	420b      	tst	r3, r1
    541e:	d011      	beq.n	5444 <internal_at_ble_service_define.part.1+0x1a0>
    5420:	7fa0      	ldrb	r0, [r4, #30]
    5422:	4b6d      	ldr	r3, [pc, #436]	; (55d8 <internal_at_ble_service_define.part.1+0x334>)
    5424:	2200      	movs	r2, #0
    5426:	4798      	blx	r3
    5428:	4b6d      	ldr	r3, [pc, #436]	; (55e0 <internal_at_ble_service_define.part.1+0x33c>)
    542a:	1c02      	adds	r2, r0, #0
    542c:	9300      	str	r3, [sp, #0]
    542e:	1c23      	adds	r3, r4, #0
    5430:	3324      	adds	r3, #36	; 0x24
    5432:	9301      	str	r3, [sp, #4]
    5434:	4d64      	ldr	r5, [pc, #400]	; (55c8 <internal_at_ble_service_define.part.1+0x324>)
    5436:	1c30      	adds	r0, r6, #0
    5438:	496a      	ldr	r1, [pc, #424]	; (55e4 <internal_at_ble_service_define.part.1+0x340>)
    543a:	2302      	movs	r3, #2
    543c:	47a8      	blx	r5
    543e:	1e05      	subs	r5, r0, #0
    5440:	d000      	beq.n	5444 <internal_at_ble_service_define.part.1+0x1a0>
    5442:	e0b3      	b.n	55ac <internal_at_ble_service_define.part.1+0x308>
    5444:	2330      	movs	r3, #48	; 0x30
    5446:	8822      	ldrh	r2, [r4, #0]
    5448:	421a      	tst	r2, r3
    544a:	d012      	beq.n	5472 <internal_at_ble_service_define.part.1+0x1ce>
    544c:	2101      	movs	r1, #1
    544e:	7f60      	ldrb	r0, [r4, #29]
    5450:	1c0a      	adds	r2, r1, #0
    5452:	4b61      	ldr	r3, [pc, #388]	; (55d8 <internal_at_ble_service_define.part.1+0x334>)
    5454:	4798      	blx	r3
    5456:	4b64      	ldr	r3, [pc, #400]	; (55e8 <internal_at_ble_service_define.part.1+0x344>)
    5458:	1c02      	adds	r2, r0, #0
    545a:	9300      	str	r3, [sp, #0]
    545c:	1c23      	adds	r3, r4, #0
    545e:	3322      	adds	r3, #34	; 0x22
    5460:	9301      	str	r3, [sp, #4]
    5462:	4d59      	ldr	r5, [pc, #356]	; (55c8 <internal_at_ble_service_define.part.1+0x324>)
    5464:	1c30      	adds	r0, r6, #0
    5466:	495f      	ldr	r1, [pc, #380]	; (55e4 <internal_at_ble_service_define.part.1+0x340>)
    5468:	2302      	movs	r3, #2
    546a:	47a8      	blx	r5
    546c:	1e05      	subs	r5, r0, #0
    546e:	d000      	beq.n	5472 <internal_at_ble_service_define.part.1+0x1ce>
    5470:	e09c      	b.n	55ac <internal_at_ble_service_define.part.1+0x308>
    5472:	69a3      	ldr	r3, [r4, #24]
    5474:	2b00      	cmp	r3, #0
    5476:	d00e      	beq.n	5496 <internal_at_ble_service_define.part.1+0x1f2>
    5478:	4b5c      	ldr	r3, [pc, #368]	; (55ec <internal_at_ble_service_define.part.1+0x348>)
    547a:	aa06      	add	r2, sp, #24
    547c:	9300      	str	r3, [sp, #0]
    547e:	230e      	movs	r3, #14
    5480:	189b      	adds	r3, r3, r2
    5482:	9301      	str	r3, [sp, #4]
    5484:	4d50      	ldr	r5, [pc, #320]	; (55c8 <internal_at_ble_service_define.part.1+0x324>)
    5486:	1c30      	adds	r0, r6, #0
    5488:	2107      	movs	r1, #7
    548a:	2201      	movs	r2, #1
    548c:	2302      	movs	r3, #2
    548e:	47a8      	blx	r5
    5490:	1e05      	subs	r5, r0, #0
    5492:	d000      	beq.n	5496 <internal_at_ble_service_define.part.1+0x1f2>
    5494:	e08a      	b.n	55ac <internal_at_ble_service_define.part.1+0x308>
    5496:	9b02      	ldr	r3, [sp, #8]
    5498:	343c      	adds	r4, #60	; 0x3c
    549a:	3301      	adds	r3, #1
    549c:	9302      	str	r3, [sp, #8]
    549e:	e749      	b.n	5334 <internal_at_ble_service_define.part.1+0x90>
    54a0:	1c30      	adds	r0, r6, #0
    54a2:	4b53      	ldr	r3, [pc, #332]	; (55f0 <internal_at_ble_service_define.part.1+0x34c>)
    54a4:	4798      	blx	r3
    54a6:	1e05      	subs	r5, r0, #0
    54a8:	d000      	beq.n	54ac <internal_at_ble_service_define.part.1+0x208>
    54aa:	e07f      	b.n	55ac <internal_at_ble_service_define.part.1+0x308>
    54ac:	8833      	ldrh	r3, [r6, #0]
    54ae:	9a06      	ldr	r2, [sp, #24]
    54b0:	8013      	strh	r3, [r2, #0]
    54b2:	8836      	ldrh	r6, [r6, #0]
    54b4:	9b04      	ldr	r3, [sp, #16]
    54b6:	9a05      	ldr	r2, [sp, #20]
    54b8:	18f6      	adds	r6, r6, r3
    54ba:	b2b3      	uxth	r3, r6
    54bc:	9302      	str	r3, [sp, #8]
    54be:	233c      	movs	r3, #60	; 0x3c
    54c0:	4353      	muls	r3, r2
    54c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
    54c4:	3314      	adds	r3, #20
    54c6:	18d3      	adds	r3, r2, r3
    54c8:	9304      	str	r3, [sp, #16]
    54ca:	9b04      	ldr	r3, [sp, #16]
    54cc:	429f      	cmp	r7, r3
    54ce:	d06d      	beq.n	55ac <internal_at_ble_service_define.part.1+0x308>
    54d0:	9b02      	ldr	r3, [sp, #8]
    54d2:	1c9c      	adds	r4, r3, #2
    54d4:	1c3b      	adds	r3, r7, #0
    54d6:	b2a4      	uxth	r4, r4
    54d8:	3b14      	subs	r3, #20
    54da:	801c      	strh	r4, [r3, #0]
    54dc:	9303      	str	r3, [sp, #12]
    54de:	893b      	ldrh	r3, [r7, #8]
    54e0:	2b00      	cmp	r3, #0
    54e2:	d108      	bne.n	54f6 <internal_at_ble_service_define.part.1+0x252>
    54e4:	23c0      	movs	r3, #192	; 0xc0
    54e6:	883a      	ldrh	r2, [r7, #0]
    54e8:	005b      	lsls	r3, r3, #1
    54ea:	421a      	tst	r2, r3
    54ec:	d01f      	beq.n	552e <internal_at_ble_service_define.part.1+0x28a>
    54ee:	9e02      	ldr	r6, [sp, #8]
    54f0:	3603      	adds	r6, #3
    54f2:	b2b4      	uxth	r4, r6
    54f4:	e01b      	b.n	552e <internal_at_ble_service_define.part.1+0x28a>
    54f6:	7b3b      	ldrb	r3, [r7, #12]
    54f8:	897a      	ldrh	r2, [r7, #10]
    54fa:	0719      	lsls	r1, r3, #28
    54fc:	0fc9      	lsrs	r1, r1, #31
    54fe:	03c9      	lsls	r1, r1, #15
    5500:	d007      	beq.n	5512 <internal_at_ble_service_define.part.1+0x26e>
    5502:	6879      	ldr	r1, [r7, #4]
    5504:	2900      	cmp	r1, #0
    5506:	d100      	bne.n	550a <internal_at_ble_service_define.part.1+0x266>
    5508:	493a      	ldr	r1, [pc, #232]	; (55f4 <internal_at_ble_service_define.part.1+0x350>)
    550a:	1c20      	adds	r0, r4, #0
    550c:	4e3a      	ldr	r6, [pc, #232]	; (55f8 <internal_at_ble_service_define.part.1+0x354>)
    550e:	47b0      	blx	r6
    5510:	e00a      	b.n	5528 <internal_at_ble_service_define.part.1+0x284>
    5512:	1c20      	adds	r0, r4, #0
    5514:	4e38      	ldr	r6, [pc, #224]	; (55f8 <internal_at_ble_service_define.part.1+0x354>)
    5516:	47b0      	blx	r6
    5518:	2800      	cmp	r0, #0
    551a:	d146      	bne.n	55aa <internal_at_ble_service_define.part.1+0x306>
    551c:	9b03      	ldr	r3, [sp, #12]
    551e:	8939      	ldrh	r1, [r7, #8]
    5520:	8818      	ldrh	r0, [r3, #0]
    5522:	687a      	ldr	r2, [r7, #4]
    5524:	4b35      	ldr	r3, [pc, #212]	; (55fc <internal_at_ble_service_define.part.1+0x358>)
    5526:	4798      	blx	r3
    5528:	2800      	cmp	r0, #0
    552a:	d0db      	beq.n	54e4 <internal_at_ble_service_define.part.1+0x240>
    552c:	e03d      	b.n	55aa <internal_at_ble_service_define.part.1+0x306>
    552e:	8abb      	ldrh	r3, [r7, #20]
    5530:	2b00      	cmp	r3, #0
    5532:	d00a      	beq.n	554a <internal_at_ble_service_define.part.1+0x2a6>
    5534:	3401      	adds	r4, #1
    5536:	b2a4      	uxth	r4, r4
    5538:	843c      	strh	r4, [r7, #32]
    553a:	7f39      	ldrb	r1, [r7, #28]
    553c:	8afb      	ldrh	r3, [r7, #22]
    553e:	1c20      	adds	r0, r4, #0
    5540:	693a      	ldr	r2, [r7, #16]
    5542:	4e2f      	ldr	r6, [pc, #188]	; (5600 <internal_at_ble_service_define.part.1+0x35c>)
    5544:	47b0      	blx	r6
    5546:	2800      	cmp	r0, #0
    5548:	d12f      	bne.n	55aa <internal_at_ble_service_define.part.1+0x306>
    554a:	883b      	ldrh	r3, [r7, #0]
    554c:	07db      	lsls	r3, r3, #31
    554e:	d50d      	bpl.n	556c <internal_at_ble_service_define.part.1+0x2c8>
    5550:	2200      	movs	r2, #0
    5552:	3401      	adds	r4, #1
    5554:	b2a4      	uxth	r4, r4
    5556:	a909      	add	r1, sp, #36	; 0x24
    5558:	84bc      	strh	r4, [r7, #36]	; 0x24
    555a:	7fbb      	ldrb	r3, [r7, #30]
    555c:	1c20      	adds	r0, r4, #0
    555e:	700a      	strb	r2, [r1, #0]
    5560:	704a      	strb	r2, [r1, #1]
    5562:	4e25      	ldr	r6, [pc, #148]	; (55f8 <internal_at_ble_service_define.part.1+0x354>)
    5564:	3202      	adds	r2, #2
    5566:	47b0      	blx	r6
    5568:	2800      	cmp	r0, #0
    556a:	d11e      	bne.n	55aa <internal_at_ble_service_define.part.1+0x306>
    556c:	2330      	movs	r3, #48	; 0x30
    556e:	883a      	ldrh	r2, [r7, #0]
    5570:	421a      	tst	r2, r3
    5572:	d00d      	beq.n	5590 <internal_at_ble_service_define.part.1+0x2ec>
    5574:	2200      	movs	r2, #0
    5576:	3401      	adds	r4, #1
    5578:	b2a4      	uxth	r4, r4
    557a:	a909      	add	r1, sp, #36	; 0x24
    557c:	847c      	strh	r4, [r7, #34]	; 0x22
    557e:	7f7b      	ldrb	r3, [r7, #29]
    5580:	1c20      	adds	r0, r4, #0
    5582:	700a      	strb	r2, [r1, #0]
    5584:	704a      	strb	r2, [r1, #1]
    5586:	4e1c      	ldr	r6, [pc, #112]	; (55f8 <internal_at_ble_service_define.part.1+0x354>)
    5588:	3202      	adds	r2, #2
    558a:	47b0      	blx	r6
    558c:	2800      	cmp	r0, #0
    558e:	d10c      	bne.n	55aa <internal_at_ble_service_define.part.1+0x306>
    5590:	69b9      	ldr	r1, [r7, #24]
    5592:	2900      	cmp	r1, #0
    5594:	d006      	beq.n	55a4 <internal_at_ble_service_define.part.1+0x300>
    5596:	3401      	adds	r4, #1
    5598:	b2a4      	uxth	r4, r4
    559a:	1c20      	adds	r0, r4, #0
    559c:	4b19      	ldr	r3, [pc, #100]	; (5604 <internal_at_ble_service_define.part.1+0x360>)
    559e:	4798      	blx	r3
    55a0:	2800      	cmp	r0, #0
    55a2:	d102      	bne.n	55aa <internal_at_ble_service_define.part.1+0x306>
    55a4:	373c      	adds	r7, #60	; 0x3c
    55a6:	9402      	str	r4, [sp, #8]
    55a8:	e78f      	b.n	54ca <internal_at_ble_service_define.part.1+0x226>
    55aa:	1c05      	adds	r5, r0, #0
    55ac:	1c28      	adds	r0, r5, #0
    55ae:	b00b      	add	sp, #44	; 0x2c
    55b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    55b2:	46c0      	nop			; (mov r8, r8)
    55b4:	20000710 	.word	0x20000710
    55b8:	00008a81 	.word	0x00008a81
    55bc:	00005005 	.word	0x00005005
    55c0:	00008a6f 	.word	0x00008a6f
    55c4:	20000068 	.word	0x20000068
    55c8:	00008455 	.word	0x00008455
    55cc:	2000006a 	.word	0x2000006a
    55d0:	000050a9 	.word	0x000050a9
    55d4:	20000074 	.word	0x20000074
    55d8:	0000506d 	.word	0x0000506d
    55dc:	20000072 	.word	0x20000072
    55e0:	20000070 	.word	0x20000070
    55e4:	00008002 	.word	0x00008002
    55e8:	2000006c 	.word	0x2000006c
    55ec:	2000006e 	.word	0x2000006e
    55f0:	0000834d 	.word	0x0000834d
    55f4:	20000700 	.word	0x20000700
    55f8:	0000515d 	.word	0x0000515d
    55fc:	000084ed 	.word	0x000084ed
    5600:	00005205 	.word	0x00005205
    5604:	00005131 	.word	0x00005131

00005608 <db_init>:
    5608:	4b08      	ldr	r3, [pc, #32]	; (562c <db_init+0x24>)
    560a:	4a09      	ldr	r2, [pc, #36]	; (5630 <db_init+0x28>)
    560c:	6018      	str	r0, [r3, #0]
    560e:	084b      	lsrs	r3, r1, #1
    5610:	6013      	str	r3, [r2, #0]
    5612:	4a08      	ldr	r2, [pc, #32]	; (5634 <db_init+0x2c>)
    5614:	18c3      	adds	r3, r0, r3
    5616:	6013      	str	r3, [r2, #0]
    5618:	4a07      	ldr	r2, [pc, #28]	; (5638 <db_init+0x30>)
    561a:	1841      	adds	r1, r0, r1
    561c:	6013      	str	r3, [r2, #0]
    561e:	2303      	movs	r3, #3
    5620:	3103      	adds	r1, #3
    5622:	4399      	bics	r1, r3
    5624:	4b05      	ldr	r3, [pc, #20]	; (563c <db_init+0x34>)
    5626:	3904      	subs	r1, #4
    5628:	6019      	str	r1, [r3, #0]
    562a:	4770      	bx	lr
    562c:	20000710 	.word	0x20000710
    5630:	200006f8 	.word	0x200006f8
    5634:	200006fc 	.word	0x200006fc
    5638:	20000708 	.word	0x20000708
    563c:	20000704 	.word	0x20000704

00005640 <at_ble_service_define>:
    5640:	b5f0      	push	{r4, r5, r6, r7, lr}
    5642:	25cf      	movs	r5, #207	; 0xcf
    5644:	b089      	sub	sp, #36	; 0x24
    5646:	2800      	cmp	r0, #0
    5648:	d100      	bne.n	564c <at_ble_service_define+0xc>
    564a:	e237      	b.n	5abc <at_ble_service_define+0x47c>
    564c:	2210      	movs	r2, #16
    564e:	2400      	movs	r4, #0
    5650:	4bc8      	ldr	r3, [pc, #800]	; (5974 <at_ble_service_define+0x334>)
    5652:	1c21      	adds	r1, r4, #0
    5654:	681b      	ldr	r3, [r3, #0]
    5656:	9002      	str	r0, [sp, #8]
    5658:	1d9d      	adds	r5, r3, #6
    565a:	805a      	strh	r2, [r3, #2]
    565c:	1c1f      	adds	r7, r3, #0
    565e:	801c      	strh	r4, [r3, #0]
    5660:	1c28      	adds	r0, r5, #0
    5662:	4bc5      	ldr	r3, [pc, #788]	; (5978 <at_ble_service_define+0x338>)
    5664:	4798      	blx	r3
    5666:	9b02      	ldr	r3, [sp, #8]
    5668:	7918      	ldrb	r0, [r3, #4]
    566a:	4bc4      	ldr	r3, [pc, #784]	; (597c <at_ble_service_define+0x33c>)
    566c:	4798      	blx	r3
    566e:	9b02      	ldr	r3, [sp, #8]
    5670:	1c02      	adds	r2, r0, #0
    5672:	1d59      	adds	r1, r3, #5
    5674:	1c28      	adds	r0, r5, #0
    5676:	4bc2      	ldr	r3, [pc, #776]	; (5980 <at_ble_service_define+0x340>)
    5678:	4798      	blx	r3
    567a:	9b02      	ldr	r3, [sp, #8]
    567c:	791b      	ldrb	r3, [r3, #4]
    567e:	011a      	lsls	r2, r3, #4
    5680:	9b02      	ldr	r3, [sp, #8]
    5682:	781b      	ldrb	r3, [r3, #0]
    5684:	717c      	strb	r4, [r7, #5]
    5686:	019b      	lsls	r3, r3, #6
    5688:	4313      	orrs	r3, r2
    568a:	2204      	movs	r2, #4
    568c:	4313      	orrs	r3, r2
    568e:	713b      	strb	r3, [r7, #4]
    5690:	9b02      	ldr	r3, [sp, #8]
    5692:	699b      	ldr	r3, [r3, #24]
    5694:	42a3      	cmp	r3, r4
    5696:	d119      	bne.n	56cc <at_ble_service_define+0x8c>
    5698:	2300      	movs	r3, #0
    569a:	9304      	str	r3, [sp, #16]
    569c:	9b02      	ldr	r3, [sp, #8]
    569e:	6a1b      	ldr	r3, [r3, #32]
    56a0:	2b00      	cmp	r3, #0
    56a2:	d167      	bne.n	5774 <at_ble_service_define+0x134>
    56a4:	e080      	b.n	57a8 <at_ble_service_define+0x168>
    56a6:	9a02      	ldr	r2, [sp, #8]
    56a8:	0063      	lsls	r3, r4, #1
    56aa:	6992      	ldr	r2, [r2, #24]
    56ac:	4db5      	ldr	r5, [pc, #724]	; (5984 <at_ble_service_define+0x344>)
    56ae:	5a99      	ldrh	r1, [r3, r2]
    56b0:	4bb5      	ldr	r3, [pc, #724]	; (5988 <at_ble_service_define+0x348>)
    56b2:	aa04      	add	r2, sp, #16
    56b4:	9300      	str	r3, [sp, #0]
    56b6:	230e      	movs	r3, #14
    56b8:	189b      	adds	r3, r3, r2
    56ba:	9301      	str	r3, [sp, #4]
    56bc:	1c38      	adds	r0, r7, #0
    56be:	2201      	movs	r2, #1
    56c0:	2302      	movs	r3, #2
    56c2:	47a8      	blx	r5
    56c4:	1e05      	subs	r5, r0, #0
    56c6:	d000      	beq.n	56ca <at_ble_service_define+0x8a>
    56c8:	e1f8      	b.n	5abc <at_ble_service_define+0x47c>
    56ca:	3401      	adds	r4, #1
    56cc:	9b02      	ldr	r3, [sp, #8]
    56ce:	8b9b      	ldrh	r3, [r3, #28]
    56d0:	429c      	cmp	r4, r3
    56d2:	dbe8      	blt.n	56a6 <at_ble_service_define+0x66>
    56d4:	e7e0      	b.n	5698 <at_ble_service_define+0x58>
    56d6:	78a5      	ldrb	r5, [r4, #2]
    56d8:	7fa6      	ldrb	r6, [r4, #30]
    56da:	1c2a      	adds	r2, r5, #0
    56dc:	1c31      	adds	r1, r6, #0
    56de:	8aa0      	ldrh	r0, [r4, #20]
    56e0:	4baa      	ldr	r3, [pc, #680]	; (598c <at_ble_service_define+0x34c>)
    56e2:	4798      	blx	r3
    56e4:	0736      	lsls	r6, r6, #28
    56e6:	9005      	str	r0, [sp, #20]
    56e8:	8ba3      	ldrh	r3, [r4, #28]
    56ea:	0ff6      	lsrs	r6, r6, #31
    56ec:	03f6      	lsls	r6, r6, #15
    56ee:	431e      	orrs	r6, r3
    56f0:	1c28      	adds	r0, r5, #0
    56f2:	4ba2      	ldr	r3, [pc, #648]	; (597c <at_ble_service_define+0x33c>)
    56f4:	4798      	blx	r3
    56f6:	1ce2      	adds	r2, r4, #3
    56f8:	1c03      	adds	r3, r0, #0
    56fa:	9200      	str	r2, [sp, #0]
    56fc:	9401      	str	r4, [sp, #4]
    56fe:	1c38      	adds	r0, r7, #0
    5700:	1c31      	adds	r1, r6, #0
    5702:	9a05      	ldr	r2, [sp, #20]
    5704:	4d9f      	ldr	r5, [pc, #636]	; (5984 <at_ble_service_define+0x344>)
    5706:	47a8      	blx	r5
    5708:	2800      	cmp	r0, #0
    570a:	d14d      	bne.n	57a8 <at_ble_service_define+0x168>
    570c:	9b02      	ldr	r3, [sp, #8]
    570e:	9a03      	ldr	r2, [sp, #12]
    5710:	6a1b      	ldr	r3, [r3, #32]
    5712:	189b      	adds	r3, r3, r2
    5714:	8a9a      	ldrh	r2, [r3, #20]
    5716:	23c0      	movs	r3, #192	; 0xc0
    5718:	005b      	lsls	r3, r3, #1
    571a:	421a      	tst	r2, r3
    571c:	d14b      	bne.n	57b6 <at_ble_service_define+0x176>
    571e:	9b02      	ldr	r3, [sp, #8]
    5720:	9a03      	ldr	r2, [sp, #12]
    5722:	6a1b      	ldr	r3, [r3, #32]
    5724:	189b      	adds	r3, r3, r2
    5726:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    5728:	2b00      	cmp	r3, #0
    572a:	d15a      	bne.n	57e2 <at_ble_service_define+0x1a2>
    572c:	2101      	movs	r1, #1
    572e:	9b02      	ldr	r3, [sp, #8]
    5730:	9a03      	ldr	r2, [sp, #12]
    5732:	6a1b      	ldr	r3, [r3, #32]
    5734:	189b      	adds	r3, r3, r2
    5736:	8a9b      	ldrh	r3, [r3, #20]
    5738:	420b      	tst	r3, r1
    573a:	d175      	bne.n	5828 <at_ble_service_define+0x1e8>
    573c:	9b02      	ldr	r3, [sp, #8]
    573e:	9a03      	ldr	r2, [sp, #12]
    5740:	6a1b      	ldr	r3, [r3, #32]
    5742:	189b      	adds	r3, r3, r2
    5744:	8a9a      	ldrh	r2, [r3, #20]
    5746:	2330      	movs	r3, #48	; 0x30
    5748:	421a      	tst	r2, r3
    574a:	d000      	beq.n	574e <at_ble_service_define+0x10e>
    574c:	e081      	b.n	5852 <at_ble_service_define+0x212>
    574e:	9a02      	ldr	r2, [sp, #8]
    5750:	9b03      	ldr	r3, [sp, #12]
    5752:	6a12      	ldr	r2, [r2, #32]
    5754:	4694      	mov	ip, r2
    5756:	4463      	add	r3, ip
    5758:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    575a:	2b00      	cmp	r3, #0
    575c:	d000      	beq.n	5760 <at_ble_service_define+0x120>
    575e:	e08e      	b.n	587e <at_ble_service_define+0x23e>
    5760:	2300      	movs	r3, #0
    5762:	9303      	str	r3, [sp, #12]
    5764:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
    5766:	9a03      	ldr	r2, [sp, #12]
    5768:	429a      	cmp	r2, r3
    576a:	d200      	bcs.n	576e <at_ble_service_define+0x12e>
    576c:	e097      	b.n	589e <at_ble_service_define+0x25e>
    576e:	9b04      	ldr	r3, [sp, #16]
    5770:	3301      	adds	r3, #1
    5772:	9304      	str	r3, [sp, #16]
    5774:	9b02      	ldr	r3, [sp, #8]
    5776:	9a04      	ldr	r2, [sp, #16]
    5778:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    577a:	429a      	cmp	r2, r3
    577c:	da14      	bge.n	57a8 <at_ble_service_define+0x168>
    577e:	9b04      	ldr	r3, [sp, #16]
    5780:	1c38      	adds	r0, r7, #0
    5782:	019b      	lsls	r3, r3, #6
    5784:	9303      	str	r3, [sp, #12]
    5786:	9b02      	ldr	r3, [sp, #8]
    5788:	9a03      	ldr	r2, [sp, #12]
    578a:	6a1b      	ldr	r3, [r3, #32]
    578c:	2104      	movs	r1, #4
    578e:	189c      	adds	r4, r3, r2
    5790:	4b7f      	ldr	r3, [pc, #508]	; (5990 <at_ble_service_define+0x350>)
    5792:	aa04      	add	r2, sp, #16
    5794:	9300      	str	r3, [sp, #0]
    5796:	230e      	movs	r3, #14
    5798:	189b      	adds	r3, r3, r2
    579a:	9301      	str	r3, [sp, #4]
    579c:	2201      	movs	r2, #1
    579e:	2302      	movs	r3, #2
    57a0:	4d78      	ldr	r5, [pc, #480]	; (5984 <at_ble_service_define+0x344>)
    57a2:	47a8      	blx	r5
    57a4:	2800      	cmp	r0, #0
    57a6:	d096      	beq.n	56d6 <at_ble_service_define+0x96>
    57a8:	1c38      	adds	r0, r7, #0
    57aa:	4b7a      	ldr	r3, [pc, #488]	; (5994 <at_ble_service_define+0x354>)
    57ac:	4798      	blx	r3
    57ae:	1e05      	subs	r5, r0, #0
    57b0:	d000      	beq.n	57b4 <at_ble_service_define+0x174>
    57b2:	e183      	b.n	5abc <at_ble_service_define+0x47c>
    57b4:	e09d      	b.n	58f2 <at_ble_service_define+0x2b2>
    57b6:	8aa3      	ldrh	r3, [r4, #20]
    57b8:	0619      	lsls	r1, r3, #24
    57ba:	0fc9      	lsrs	r1, r1, #31
    57bc:	05db      	lsls	r3, r3, #23
    57be:	d501      	bpl.n	57c4 <at_ble_service_define+0x184>
    57c0:	2302      	movs	r3, #2
    57c2:	4319      	orrs	r1, r3
    57c4:	4b74      	ldr	r3, [pc, #464]	; (5998 <at_ble_service_define+0x358>)
    57c6:	aa04      	add	r2, sp, #16
    57c8:	9300      	str	r3, [sp, #0]
    57ca:	230e      	movs	r3, #14
    57cc:	189b      	adds	r3, r3, r2
    57ce:	9301      	str	r3, [sp, #4]
    57d0:	4d6c      	ldr	r5, [pc, #432]	; (5984 <at_ble_service_define+0x344>)
    57d2:	0209      	lsls	r1, r1, #8
    57d4:	1c38      	adds	r0, r7, #0
    57d6:	2201      	movs	r2, #1
    57d8:	2302      	movs	r3, #2
    57da:	47a8      	blx	r5
    57dc:	1e05      	subs	r5, r0, #0
    57de:	d09e      	beq.n	571e <at_ble_service_define+0xde>
    57e0:	e16c      	b.n	5abc <at_ble_service_define+0x47c>
    57e2:	2380      	movs	r3, #128	; 0x80
    57e4:	8aa2      	ldrh	r2, [r4, #20]
    57e6:	005b      	lsls	r3, r3, #1
    57e8:	401a      	ands	r2, r3
    57ea:	1c23      	adds	r3, r4, #0
    57ec:	3328      	adds	r3, #40	; 0x28
    57ee:	7818      	ldrb	r0, [r3, #0]
    57f0:	2101      	movs	r1, #1
    57f2:	2a00      	cmp	r2, #0
    57f4:	d000      	beq.n	57f8 <at_ble_service_define+0x1b8>
    57f6:	1c0a      	adds	r2, r1, #0
    57f8:	4b68      	ldr	r3, [pc, #416]	; (599c <at_ble_service_define+0x35c>)
    57fa:	4798      	blx	r3
    57fc:	1c23      	adds	r3, r4, #0
    57fe:	3328      	adds	r3, #40	; 0x28
    5800:	781a      	ldrb	r2, [r3, #0]
    5802:	4b67      	ldr	r3, [pc, #412]	; (59a0 <at_ble_service_define+0x360>)
    5804:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
    5806:	9300      	str	r3, [sp, #0]
    5808:	1c23      	adds	r3, r4, #0
    580a:	0712      	lsls	r2, r2, #28
    580c:	0fd2      	lsrs	r2, r2, #31
    580e:	03d2      	lsls	r2, r2, #15
    5810:	4310      	orrs	r0, r2
    5812:	3326      	adds	r3, #38	; 0x26
    5814:	b282      	uxth	r2, r0
    5816:	9301      	str	r3, [sp, #4]
    5818:	4d5a      	ldr	r5, [pc, #360]	; (5984 <at_ble_service_define+0x344>)
    581a:	1c38      	adds	r0, r7, #0
    581c:	2302      	movs	r3, #2
    581e:	47a8      	blx	r5
    5820:	1e05      	subs	r5, r0, #0
    5822:	d100      	bne.n	5826 <at_ble_service_define+0x1e6>
    5824:	e782      	b.n	572c <at_ble_service_define+0xec>
    5826:	e149      	b.n	5abc <at_ble_service_define+0x47c>
    5828:	1c23      	adds	r3, r4, #0
    582a:	3334      	adds	r3, #52	; 0x34
    582c:	7818      	ldrb	r0, [r3, #0]
    582e:	2200      	movs	r2, #0
    5830:	4b5a      	ldr	r3, [pc, #360]	; (599c <at_ble_service_define+0x35c>)
    5832:	4798      	blx	r3
    5834:	4b5b      	ldr	r3, [pc, #364]	; (59a4 <at_ble_service_define+0x364>)
    5836:	1c02      	adds	r2, r0, #0
    5838:	9300      	str	r3, [sp, #0]
    583a:	1c23      	adds	r3, r4, #0
    583c:	3336      	adds	r3, #54	; 0x36
    583e:	9301      	str	r3, [sp, #4]
    5840:	4d50      	ldr	r5, [pc, #320]	; (5984 <at_ble_service_define+0x344>)
    5842:	1c38      	adds	r0, r7, #0
    5844:	4958      	ldr	r1, [pc, #352]	; (59a8 <at_ble_service_define+0x368>)
    5846:	2302      	movs	r3, #2
    5848:	47a8      	blx	r5
    584a:	1e05      	subs	r5, r0, #0
    584c:	d100      	bne.n	5850 <at_ble_service_define+0x210>
    584e:	e775      	b.n	573c <at_ble_service_define+0xfc>
    5850:	e134      	b.n	5abc <at_ble_service_define+0x47c>
    5852:	1c23      	adds	r3, r4, #0
    5854:	2101      	movs	r1, #1
    5856:	3330      	adds	r3, #48	; 0x30
    5858:	7818      	ldrb	r0, [r3, #0]
    585a:	1c0a      	adds	r2, r1, #0
    585c:	4b4f      	ldr	r3, [pc, #316]	; (599c <at_ble_service_define+0x35c>)
    585e:	4798      	blx	r3
    5860:	4b52      	ldr	r3, [pc, #328]	; (59ac <at_ble_service_define+0x36c>)
    5862:	1c02      	adds	r2, r0, #0
    5864:	9300      	str	r3, [sp, #0]
    5866:	1c23      	adds	r3, r4, #0
    5868:	3332      	adds	r3, #50	; 0x32
    586a:	9301      	str	r3, [sp, #4]
    586c:	4d45      	ldr	r5, [pc, #276]	; (5984 <at_ble_service_define+0x344>)
    586e:	1c38      	adds	r0, r7, #0
    5870:	494d      	ldr	r1, [pc, #308]	; (59a8 <at_ble_service_define+0x368>)
    5872:	2302      	movs	r3, #2
    5874:	47a8      	blx	r5
    5876:	1e05      	subs	r5, r0, #0
    5878:	d100      	bne.n	587c <at_ble_service_define+0x23c>
    587a:	e768      	b.n	574e <at_ble_service_define+0x10e>
    587c:	e11e      	b.n	5abc <at_ble_service_define+0x47c>
    587e:	4b4c      	ldr	r3, [pc, #304]	; (59b0 <at_ble_service_define+0x370>)
    5880:	aa04      	add	r2, sp, #16
    5882:	9300      	str	r3, [sp, #0]
    5884:	230e      	movs	r3, #14
    5886:	189b      	adds	r3, r3, r2
    5888:	9301      	str	r3, [sp, #4]
    588a:	4d3e      	ldr	r5, [pc, #248]	; (5984 <at_ble_service_define+0x344>)
    588c:	1c38      	adds	r0, r7, #0
    588e:	2107      	movs	r1, #7
    5890:	2201      	movs	r2, #1
    5892:	2302      	movs	r3, #2
    5894:	47a8      	blx	r5
    5896:	1e05      	subs	r5, r0, #0
    5898:	d100      	bne.n	589c <at_ble_service_define+0x25c>
    589a:	e761      	b.n	5760 <at_ble_service_define+0x120>
    589c:	e10e      	b.n	5abc <at_ble_service_define+0x47c>
    589e:	2516      	movs	r5, #22
    58a0:	2100      	movs	r1, #0
    58a2:	9b03      	ldr	r3, [sp, #12]
    58a4:	1c0a      	adds	r2, r1, #0
    58a6:	435d      	muls	r5, r3
    58a8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    58aa:	195d      	adds	r5, r3, r5
    58ac:	78ae      	ldrb	r6, [r5, #2]
    58ae:	4b3b      	ldr	r3, [pc, #236]	; (599c <at_ble_service_define+0x35c>)
    58b0:	1c30      	adds	r0, r6, #0
    58b2:	4798      	blx	r3
    58b4:	78eb      	ldrb	r3, [r5, #3]
    58b6:	1c02      	adds	r2, r0, #0
    58b8:	2b01      	cmp	r3, #1
    58ba:	d003      	beq.n	58c4 <at_ble_service_define+0x284>
    58bc:	2b02      	cmp	r3, #2
    58be:	d105      	bne.n	58cc <at_ble_service_define+0x28c>
    58c0:	4b3c      	ldr	r3, [pc, #240]	; (59b4 <at_ble_service_define+0x374>)
    58c2:	e001      	b.n	58c8 <at_ble_service_define+0x288>
    58c4:	2380      	movs	r3, #128	; 0x80
    58c6:	01db      	lsls	r3, r3, #7
    58c8:	431a      	orrs	r2, r3
    58ca:	b292      	uxth	r2, r2
    58cc:	0736      	lsls	r6, r6, #28
    58ce:	8829      	ldrh	r1, [r5, #0]
    58d0:	0ff6      	lsrs	r6, r6, #31
    58d2:	1d2b      	adds	r3, r5, #4
    58d4:	03f6      	lsls	r6, r6, #15
    58d6:	3514      	adds	r5, #20
    58d8:	9300      	str	r3, [sp, #0]
    58da:	9501      	str	r5, [sp, #4]
    58dc:	4331      	orrs	r1, r6
    58de:	4d29      	ldr	r5, [pc, #164]	; (5984 <at_ble_service_define+0x344>)
    58e0:	1c38      	adds	r0, r7, #0
    58e2:	2311      	movs	r3, #17
    58e4:	47a8      	blx	r5
    58e6:	1e05      	subs	r5, r0, #0
    58e8:	d000      	beq.n	58ec <at_ble_service_define+0x2ac>
    58ea:	e0e7      	b.n	5abc <at_ble_service_define+0x47c>
    58ec:	9b03      	ldr	r3, [sp, #12]
    58ee:	3301      	adds	r3, #1
    58f0:	e737      	b.n	5762 <at_ble_service_define+0x122>
    58f2:	883b      	ldrh	r3, [r7, #0]
    58f4:	9a02      	ldr	r2, [sp, #8]
    58f6:	8053      	strh	r3, [r2, #2]
    58f8:	9b02      	ldr	r3, [sp, #8]
    58fa:	883a      	ldrh	r2, [r7, #0]
    58fc:	8b9b      	ldrh	r3, [r3, #28]
    58fe:	18d3      	adds	r3, r2, r3
    5900:	b29b      	uxth	r3, r3
    5902:	9303      	str	r3, [sp, #12]
    5904:	9b02      	ldr	r3, [sp, #8]
    5906:	6a1b      	ldr	r3, [r3, #32]
    5908:	2b00      	cmp	r3, #0
    590a:	d100      	bne.n	590e <at_ble_service_define+0x2ce>
    590c:	e0d6      	b.n	5abc <at_ble_service_define+0x47c>
    590e:	9004      	str	r0, [sp, #16]
    5910:	9b02      	ldr	r3, [sp, #8]
    5912:	9a04      	ldr	r2, [sp, #16]
    5914:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    5916:	429a      	cmp	r2, r3
    5918:	db00      	blt.n	591c <at_ble_service_define+0x2dc>
    591a:	e0cf      	b.n	5abc <at_ble_service_define+0x47c>
    591c:	9b04      	ldr	r3, [sp, #16]
    591e:	019b      	lsls	r3, r3, #6
    5920:	9305      	str	r3, [sp, #20]
    5922:	9b02      	ldr	r3, [sp, #8]
    5924:	9a05      	ldr	r2, [sp, #20]
    5926:	6a1b      	ldr	r3, [r3, #32]
    5928:	189e      	adds	r6, r3, r2
    592a:	9b03      	ldr	r3, [sp, #12]
    592c:	1c9c      	adds	r4, r3, #2
    592e:	8bb3      	ldrh	r3, [r6, #28]
    5930:	b2a4      	uxth	r4, r4
    5932:	8034      	strh	r4, [r6, #0]
    5934:	469c      	mov	ip, r3
    5936:	2b00      	cmp	r3, #0
    5938:	d10d      	bne.n	5956 <at_ble_service_define+0x316>
    593a:	9a02      	ldr	r2, [sp, #8]
    593c:	9b05      	ldr	r3, [sp, #20]
    593e:	6a12      	ldr	r2, [r2, #32]
    5940:	4694      	mov	ip, r2
    5942:	4463      	add	r3, ip
    5944:	8a9a      	ldrh	r2, [r3, #20]
    5946:	23c0      	movs	r3, #192	; 0xc0
    5948:	005b      	lsls	r3, r3, #1
    594a:	421a      	tst	r2, r3
    594c:	d047      	beq.n	59de <at_ble_service_define+0x39e>
    594e:	9b03      	ldr	r3, [sp, #12]
    5950:	3303      	adds	r3, #3
    5952:	b29c      	uxth	r4, r3
    5954:	e043      	b.n	59de <at_ble_service_define+0x39e>
    5956:	7fb3      	ldrb	r3, [r6, #30]
    5958:	071a      	lsls	r2, r3, #28
    595a:	0fd2      	lsrs	r2, r2, #31
    595c:	03d2      	lsls	r2, r2, #15
    595e:	d02f      	beq.n	59c0 <at_ble_service_define+0x380>
    5960:	69b1      	ldr	r1, [r6, #24]
    5962:	2900      	cmp	r1, #0
    5964:	d100      	bne.n	5968 <at_ble_service_define+0x328>
    5966:	4914      	ldr	r1, [pc, #80]	; (59b8 <at_ble_service_define+0x378>)
    5968:	1c20      	adds	r0, r4, #0
    596a:	4662      	mov	r2, ip
    596c:	4f13      	ldr	r7, [pc, #76]	; (59bc <at_ble_service_define+0x37c>)
    596e:	47b8      	blx	r7
    5970:	e032      	b.n	59d8 <at_ble_service_define+0x398>
    5972:	46c0      	nop			; (mov r8, r8)
    5974:	20000710 	.word	0x20000710
    5978:	00008a81 	.word	0x00008a81
    597c:	00005005 	.word	0x00005005
    5980:	00008a6f 	.word	0x00008a6f
    5984:	00008455 	.word	0x00008455
    5988:	20000068 	.word	0x20000068
    598c:	000050a9 	.word	0x000050a9
    5990:	2000006a 	.word	0x2000006a
    5994:	0000834d 	.word	0x0000834d
    5998:	20000074 	.word	0x20000074
    599c:	0000506d 	.word	0x0000506d
    59a0:	20000072 	.word	0x20000072
    59a4:	20000070 	.word	0x20000070
    59a8:	00008002 	.word	0x00008002
    59ac:	2000006c 	.word	0x2000006c
    59b0:	2000006e 	.word	0x2000006e
    59b4:	ffff8000 	.word	0xffff8000
    59b8:	20000700 	.word	0x20000700
    59bc:	0000515d 	.word	0x0000515d
    59c0:	1c20      	adds	r0, r4, #0
    59c2:	1c11      	adds	r1, r2, #0
    59c4:	4f3f      	ldr	r7, [pc, #252]	; (5ac4 <at_ble_service_define+0x484>)
    59c6:	47b8      	blx	r7
    59c8:	2800      	cmp	r0, #0
    59ca:	d000      	beq.n	59ce <at_ble_service_define+0x38e>
    59cc:	e075      	b.n	5aba <at_ble_service_define+0x47a>
    59ce:	8830      	ldrh	r0, [r6, #0]
    59d0:	8bb1      	ldrh	r1, [r6, #28]
    59d2:	69b2      	ldr	r2, [r6, #24]
    59d4:	4b3c      	ldr	r3, [pc, #240]	; (5ac8 <at_ble_service_define+0x488>)
    59d6:	4798      	blx	r3
    59d8:	2800      	cmp	r0, #0
    59da:	d0ae      	beq.n	593a <at_ble_service_define+0x2fa>
    59dc:	e06d      	b.n	5aba <at_ble_service_define+0x47a>
    59de:	8cb3      	ldrh	r3, [r6, #36]	; 0x24
    59e0:	2b00      	cmp	r3, #0
    59e2:	d00b      	beq.n	59fc <at_ble_service_define+0x3bc>
    59e4:	1c32      	adds	r2, r6, #0
    59e6:	3401      	adds	r4, #1
    59e8:	b2a4      	uxth	r4, r4
    59ea:	3228      	adds	r2, #40	; 0x28
    59ec:	84f4      	strh	r4, [r6, #38]	; 0x26
    59ee:	7811      	ldrb	r1, [r2, #0]
    59f0:	1c20      	adds	r0, r4, #0
    59f2:	6a32      	ldr	r2, [r6, #32]
    59f4:	4f35      	ldr	r7, [pc, #212]	; (5acc <at_ble_service_define+0x48c>)
    59f6:	47b8      	blx	r7
    59f8:	2800      	cmp	r0, #0
    59fa:	d15e      	bne.n	5aba <at_ble_service_define+0x47a>
    59fc:	8ab3      	ldrh	r3, [r6, #20]
    59fe:	07db      	lsls	r3, r3, #31
    5a00:	d50f      	bpl.n	5a22 <at_ble_service_define+0x3e2>
    5a02:	1c33      	adds	r3, r6, #0
    5a04:	2200      	movs	r2, #0
    5a06:	3401      	adds	r4, #1
    5a08:	b2a4      	uxth	r4, r4
    5a0a:	86f4      	strh	r4, [r6, #54]	; 0x36
    5a0c:	a907      	add	r1, sp, #28
    5a0e:	3334      	adds	r3, #52	; 0x34
    5a10:	781b      	ldrb	r3, [r3, #0]
    5a12:	1c20      	adds	r0, r4, #0
    5a14:	700a      	strb	r2, [r1, #0]
    5a16:	704a      	strb	r2, [r1, #1]
    5a18:	4f2a      	ldr	r7, [pc, #168]	; (5ac4 <at_ble_service_define+0x484>)
    5a1a:	3202      	adds	r2, #2
    5a1c:	47b8      	blx	r7
    5a1e:	2800      	cmp	r0, #0
    5a20:	d14b      	bne.n	5aba <at_ble_service_define+0x47a>
    5a22:	2330      	movs	r3, #48	; 0x30
    5a24:	8ab2      	ldrh	r2, [r6, #20]
    5a26:	421a      	tst	r2, r3
    5a28:	d00f      	beq.n	5a4a <at_ble_service_define+0x40a>
    5a2a:	1c33      	adds	r3, r6, #0
    5a2c:	2200      	movs	r2, #0
    5a2e:	3401      	adds	r4, #1
    5a30:	b2a4      	uxth	r4, r4
    5a32:	8674      	strh	r4, [r6, #50]	; 0x32
    5a34:	a907      	add	r1, sp, #28
    5a36:	3330      	adds	r3, #48	; 0x30
    5a38:	781b      	ldrb	r3, [r3, #0]
    5a3a:	1c20      	adds	r0, r4, #0
    5a3c:	700a      	strb	r2, [r1, #0]
    5a3e:	704a      	strb	r2, [r1, #1]
    5a40:	4f20      	ldr	r7, [pc, #128]	; (5ac4 <at_ble_service_define+0x484>)
    5a42:	3202      	adds	r2, #2
    5a44:	47b8      	blx	r7
    5a46:	2800      	cmp	r0, #0
    5a48:	d137      	bne.n	5aba <at_ble_service_define+0x47a>
    5a4a:	6af1      	ldr	r1, [r6, #44]	; 0x2c
    5a4c:	2900      	cmp	r1, #0
    5a4e:	d006      	beq.n	5a5e <at_ble_service_define+0x41e>
    5a50:	3401      	adds	r4, #1
    5a52:	b2a4      	uxth	r4, r4
    5a54:	1c20      	adds	r0, r4, #0
    5a56:	4b1e      	ldr	r3, [pc, #120]	; (5ad0 <at_ble_service_define+0x490>)
    5a58:	4798      	blx	r3
    5a5a:	2800      	cmp	r0, #0
    5a5c:	d12d      	bne.n	5aba <at_ble_service_define+0x47a>
    5a5e:	8fb3      	ldrh	r3, [r6, #60]	; 0x3c
    5a60:	2b00      	cmp	r3, #0
    5a62:	d025      	beq.n	5ab0 <at_ble_service_define+0x470>
    5a64:	2300      	movs	r3, #0
    5a66:	9303      	str	r3, [sp, #12]
    5a68:	466b      	mov	r3, sp
    5a6a:	899a      	ldrh	r2, [r3, #12]
    5a6c:	8fb1      	ldrh	r1, [r6, #60]	; 0x3c
    5a6e:	9803      	ldr	r0, [sp, #12]
    5a70:	1913      	adds	r3, r2, r4
    5a72:	b29b      	uxth	r3, r3
    5a74:	4288      	cmp	r0, r1
    5a76:	d21a      	bcs.n	5aae <at_ble_service_define+0x46e>
    5a78:	2116      	movs	r1, #22
    5a7a:	9b03      	ldr	r3, [sp, #12]
    5a7c:	4359      	muls	r1, r3
    5a7e:	1c63      	adds	r3, r4, #1
    5a80:	18d2      	adds	r2, r2, r3
    5a82:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    5a84:	185b      	adds	r3, r3, r1
    5a86:	829a      	strh	r2, [r3, #20]
    5a88:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    5a8a:	1859      	adds	r1, r3, r1
    5a8c:	788b      	ldrb	r3, [r1, #2]
    5a8e:	8a88      	ldrh	r0, [r1, #20]
    5a90:	071a      	lsls	r2, r3, #28
    5a92:	0fd2      	lsrs	r2, r2, #31
    5a94:	03d2      	lsls	r2, r2, #15
    5a96:	d002      	beq.n	5a9e <at_ble_service_define+0x45e>
    5a98:	880a      	ldrh	r2, [r1, #0]
    5a9a:	490e      	ldr	r1, [pc, #56]	; (5ad4 <at_ble_service_define+0x494>)
    5a9c:	e000      	b.n	5aa0 <at_ble_service_define+0x460>
    5a9e:	1c11      	adds	r1, r2, #0
    5aa0:	4f08      	ldr	r7, [pc, #32]	; (5ac4 <at_ble_service_define+0x484>)
    5aa2:	47b8      	blx	r7
    5aa4:	2800      	cmp	r0, #0
    5aa6:	d108      	bne.n	5aba <at_ble_service_define+0x47a>
    5aa8:	9b03      	ldr	r3, [sp, #12]
    5aaa:	3301      	adds	r3, #1
    5aac:	e7db      	b.n	5a66 <at_ble_service_define+0x426>
    5aae:	1c1c      	adds	r4, r3, #0
    5ab0:	9b04      	ldr	r3, [sp, #16]
    5ab2:	9403      	str	r4, [sp, #12]
    5ab4:	3301      	adds	r3, #1
    5ab6:	9304      	str	r3, [sp, #16]
    5ab8:	e72a      	b.n	5910 <at_ble_service_define+0x2d0>
    5aba:	1c05      	adds	r5, r0, #0
    5abc:	1c28      	adds	r0, r5, #0
    5abe:	b009      	add	sp, #36	; 0x24
    5ac0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5ac2:	46c0      	nop			; (mov r8, r8)
    5ac4:	0000515d 	.word	0x0000515d
    5ac8:	000084ed 	.word	0x000084ed
    5acc:	00005205 	.word	0x00005205
    5ad0:	00005131 	.word	0x00005131
    5ad4:	20000700 	.word	0x20000700

00005ad8 <at_ble_primary_service_define>:
    5ad8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    5ada:	ac08      	add	r4, sp, #32
    5adc:	cc40      	ldmia	r4!, {r6}
    5ade:	1c05      	adds	r5, r0, #0
    5ae0:	8824      	ldrh	r4, [r4, #0]
    5ae2:	20cf      	movs	r0, #207	; 0xcf
    5ae4:	2d00      	cmp	r5, #0
    5ae6:	d00c      	beq.n	5b02 <at_ble_primary_service_define+0x2a>
    5ae8:	2900      	cmp	r1, #0
    5aea:	d00a      	beq.n	5b02 <at_ble_primary_service_define+0x2a>
    5aec:	2e00      	cmp	r6, #0
    5aee:	d008      	beq.n	5b02 <at_ble_primary_service_define+0x2a>
    5af0:	2c00      	cmp	r4, #0
    5af2:	d006      	beq.n	5b02 <at_ble_primary_service_define+0x2a>
    5af4:	38ce      	subs	r0, #206	; 0xce
    5af6:	9401      	str	r4, [sp, #4]
    5af8:	9002      	str	r0, [sp, #8]
    5afa:	9600      	str	r6, [sp, #0]
    5afc:	1c28      	adds	r0, r5, #0
    5afe:	4c02      	ldr	r4, [pc, #8]	; (5b08 <at_ble_primary_service_define+0x30>)
    5b00:	47a0      	blx	r4
    5b02:	b004      	add	sp, #16
    5b04:	bd70      	pop	{r4, r5, r6, pc}
    5b06:	46c0      	nop			; (mov r8, r8)
    5b08:	000052a5 	.word	0x000052a5

00005b0c <at_ble_characteristic_value_set>:
    5b0c:	b570      	push	{r4, r5, r6, lr}
    5b0e:	4b0b      	ldr	r3, [pc, #44]	; (5b3c <at_ble_characteristic_value_set+0x30>)
    5b10:	1c06      	adds	r6, r0, #0
    5b12:	1c0c      	adds	r4, r1, #0
    5b14:	1c15      	adds	r5, r2, #0
    5b16:	4798      	blx	r3
    5b18:	2800      	cmp	r0, #0
    5b1a:	d008      	beq.n	5b2e <at_ble_characteristic_value_set+0x22>
    5b1c:	6880      	ldr	r0, [r0, #8]
    5b1e:	2800      	cmp	r0, #0
    5b20:	d005      	beq.n	5b2e <at_ble_characteristic_value_set+0x22>
    5b22:	1c21      	adds	r1, r4, #0
    5b24:	1c2a      	adds	r2, r5, #0
    5b26:	4b06      	ldr	r3, [pc, #24]	; (5b40 <at_ble_characteristic_value_set+0x34>)
    5b28:	4798      	blx	r3
    5b2a:	2000      	movs	r0, #0
    5b2c:	e004      	b.n	5b38 <at_ble_characteristic_value_set+0x2c>
    5b2e:	1c30      	adds	r0, r6, #0
    5b30:	1c29      	adds	r1, r5, #0
    5b32:	1c22      	adds	r2, r4, #0
    5b34:	4b03      	ldr	r3, [pc, #12]	; (5b44 <at_ble_characteristic_value_set+0x38>)
    5b36:	4798      	blx	r3
    5b38:	bd70      	pop	{r4, r5, r6, pc}
    5b3a:	46c0      	nop			; (mov r8, r8)
    5b3c:	0000502d 	.word	0x0000502d
    5b40:	00008a6f 	.word	0x00008a6f
    5b44:	000084ed 	.word	0x000084ed

00005b48 <at_ble_characteristic_value_get>:
    5b48:	b570      	push	{r4, r5, r6, lr}
    5b4a:	4b0c      	ldr	r3, [pc, #48]	; (5b7c <at_ble_characteristic_value_get+0x34>)
    5b4c:	1c06      	adds	r6, r0, #0
    5b4e:	1c0c      	adds	r4, r1, #0
    5b50:	1c15      	adds	r5, r2, #0
    5b52:	4798      	blx	r3
    5b54:	2800      	cmp	r0, #0
    5b56:	d00b      	beq.n	5b70 <at_ble_characteristic_value_get+0x28>
    5b58:	6883      	ldr	r3, [r0, #8]
    5b5a:	2b00      	cmp	r3, #0
    5b5c:	d008      	beq.n	5b70 <at_ble_characteristic_value_get+0x28>
    5b5e:	8883      	ldrh	r3, [r0, #4]
    5b60:	802b      	strh	r3, [r5, #0]
    5b62:	8882      	ldrh	r2, [r0, #4]
    5b64:	6881      	ldr	r1, [r0, #8]
    5b66:	4b06      	ldr	r3, [pc, #24]	; (5b80 <at_ble_characteristic_value_get+0x38>)
    5b68:	1c20      	adds	r0, r4, #0
    5b6a:	4798      	blx	r3
    5b6c:	2000      	movs	r0, #0
    5b6e:	e004      	b.n	5b7a <at_ble_characteristic_value_get+0x32>
    5b70:	1c30      	adds	r0, r6, #0
    5b72:	1c29      	adds	r1, r5, #0
    5b74:	1c22      	adds	r2, r4, #0
    5b76:	4b03      	ldr	r3, [pc, #12]	; (5b84 <at_ble_characteristic_value_get+0x3c>)
    5b78:	4798      	blx	r3
    5b7a:	bd70      	pop	{r4, r5, r6, pc}
    5b7c:	0000502d 	.word	0x0000502d
    5b80:	00008a6f 	.word	0x00008a6f
    5b84:	00008575 	.word	0x00008575

00005b88 <at_ble_descriptor_value_set>:
    5b88:	b508      	push	{r3, lr}
    5b8a:	4b01      	ldr	r3, [pc, #4]	; (5b90 <at_ble_descriptor_value_set+0x8>)
    5b8c:	4798      	blx	r3
    5b8e:	bd08      	pop	{r3, pc}
    5b90:	00005b0d 	.word	0x00005b0d

00005b94 <at_ble_descriptor_value_get>:
    5b94:	b508      	push	{r3, lr}
    5b96:	4b01      	ldr	r3, [pc, #4]	; (5b9c <at_ble_descriptor_value_get+0x8>)
    5b98:	4798      	blx	r3
    5b9a:	bd08      	pop	{r3, pc}
    5b9c:	00005b49 	.word	0x00005b49

00005ba0 <at_ble_write_authorize_reply>:
    5ba0:	b5f0      	push	{r4, r5, r6, r7, lr}
    5ba2:	b085      	sub	sp, #20
    5ba4:	1c04      	adds	r4, r0, #0
    5ba6:	9101      	str	r1, [sp, #4]
    5ba8:	2900      	cmp	r1, #0
    5baa:	d129      	bne.n	5c00 <at_ble_write_authorize_reply+0x60>
    5bac:	8847      	ldrh	r7, [r0, #2]
    5bae:	4b18      	ldr	r3, [pc, #96]	; (5c10 <at_ble_write_authorize_reply+0x70>)
    5bb0:	1c38      	adds	r0, r7, #0
    5bb2:	1c26      	adds	r6, r4, #0
    5bb4:	4798      	blx	r3
    5bb6:	3608      	adds	r6, #8
    5bb8:	2800      	cmp	r0, #0
    5bba:	d009      	beq.n	5bd0 <at_ble_write_authorize_reply+0x30>
    5bbc:	6880      	ldr	r0, [r0, #8]
    5bbe:	2800      	cmp	r0, #0
    5bc0:	d006      	beq.n	5bd0 <at_ble_write_authorize_reply+0x30>
    5bc2:	88a3      	ldrh	r3, [r4, #4]
    5bc4:	88e2      	ldrh	r2, [r4, #6]
    5bc6:	18c0      	adds	r0, r0, r3
    5bc8:	1c31      	adds	r1, r6, #0
    5bca:	4b12      	ldr	r3, [pc, #72]	; (5c14 <at_ble_write_authorize_reply+0x74>)
    5bcc:	4798      	blx	r3
    5bce:	e017      	b.n	5c00 <at_ble_write_authorize_reply+0x60>
    5bd0:	ab02      	add	r3, sp, #8
    5bd2:	1d9d      	adds	r5, r3, #6
    5bd4:	2300      	movs	r3, #0
    5bd6:	802b      	strh	r3, [r5, #0]
    5bd8:	4b0f      	ldr	r3, [pc, #60]	; (5c18 <at_ble_write_authorize_reply+0x78>)
    5bda:	1c2a      	adds	r2, r5, #0
    5bdc:	681b      	ldr	r3, [r3, #0]
    5bde:	1c38      	adds	r0, r7, #0
    5be0:	1c19      	adds	r1, r3, #0
    5be2:	9300      	str	r3, [sp, #0]
    5be4:	4b0d      	ldr	r3, [pc, #52]	; (5c1c <at_ble_write_authorize_reply+0x7c>)
    5be6:	4798      	blx	r3
    5be8:	9b00      	ldr	r3, [sp, #0]
    5bea:	88a0      	ldrh	r0, [r4, #4]
    5bec:	88e2      	ldrh	r2, [r4, #6]
    5bee:	1818      	adds	r0, r3, r0
    5bf0:	1c31      	adds	r1, r6, #0
    5bf2:	4b08      	ldr	r3, [pc, #32]	; (5c14 <at_ble_write_authorize_reply+0x74>)
    5bf4:	4798      	blx	r3
    5bf6:	8860      	ldrh	r0, [r4, #2]
    5bf8:	882a      	ldrh	r2, [r5, #0]
    5bfa:	9900      	ldr	r1, [sp, #0]
    5bfc:	4b08      	ldr	r3, [pc, #32]	; (5c20 <at_ble_write_authorize_reply+0x80>)
    5bfe:	4798      	blx	r3
    5c00:	8860      	ldrh	r0, [r4, #2]
    5c02:	8821      	ldrh	r1, [r4, #0]
    5c04:	9a01      	ldr	r2, [sp, #4]
    5c06:	4b07      	ldr	r3, [pc, #28]	; (5c24 <at_ble_write_authorize_reply+0x84>)
    5c08:	4798      	blx	r3
    5c0a:	2000      	movs	r0, #0
    5c0c:	b005      	add	sp, #20
    5c0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5c10:	0000502d 	.word	0x0000502d
    5c14:	00008a6f 	.word	0x00008a6f
    5c18:	0000ae34 	.word	0x0000ae34
    5c1c:	00005b49 	.word	0x00005b49
    5c20:	00005b0d 	.word	0x00005b0d
    5c24:	00007f71 	.word	0x00007f71

00005c28 <gatts_handle_read_req>:
    5c28:	b538      	push	{r3, r4, r5, lr}
    5c2a:	1c0c      	adds	r4, r1, #0
    5c2c:	4b07      	ldr	r3, [pc, #28]	; (5c4c <gatts_handle_read_req+0x24>)
    5c2e:	4798      	blx	r3
    5c30:	8865      	ldrh	r5, [r4, #2]
    5c32:	4b07      	ldr	r3, [pc, #28]	; (5c50 <gatts_handle_read_req+0x28>)
    5c34:	1c28      	adds	r0, r5, #0
    5c36:	4798      	blx	r3
    5c38:	7883      	ldrb	r3, [r0, #2]
    5c3a:	2026      	movs	r0, #38	; 0x26
    5c3c:	07db      	lsls	r3, r3, #31
    5c3e:	d404      	bmi.n	5c4a <gatts_handle_read_req+0x22>
    5c40:	8820      	ldrh	r0, [r4, #0]
    5c42:	1c29      	adds	r1, r5, #0
    5c44:	4b03      	ldr	r3, [pc, #12]	; (5c54 <gatts_handle_read_req+0x2c>)
    5c46:	4798      	blx	r3
    5c48:	203a      	movs	r0, #58	; 0x3a
    5c4a:	bd38      	pop	{r3, r4, r5, pc}
    5c4c:	00007ead 	.word	0x00007ead
    5c50:	0000502d 	.word	0x0000502d
    5c54:	00005275 	.word	0x00005275

00005c58 <gatts_handle_att_info_req>:
    5c58:	b538      	push	{r3, r4, r5, lr}
    5c5a:	1c0d      	adds	r5, r1, #0
    5c5c:	4b0a      	ldr	r3, [pc, #40]	; (5c88 <gatts_handle_att_info_req+0x30>)
    5c5e:	1c14      	adds	r4, r2, #0
    5c60:	4798      	blx	r3
    5c62:	882d      	ldrh	r5, [r5, #0]
    5c64:	4b09      	ldr	r3, [pc, #36]	; (5c8c <gatts_handle_att_info_req+0x34>)
    5c66:	1c28      	adds	r0, r5, #0
    5c68:	4798      	blx	r3
    5c6a:	0a22      	lsrs	r2, r4, #8
    5c6c:	1c03      	adds	r3, r0, #0
    5c6e:	4c08      	ldr	r4, [pc, #32]	; (5c90 <gatts_handle_att_info_req+0x38>)
    5c70:	b291      	uxth	r1, r2
    5c72:	2800      	cmp	r0, #0
    5c74:	d003      	beq.n	5c7e <gatts_handle_att_info_req+0x26>
    5c76:	8882      	ldrh	r2, [r0, #4]
    5c78:	2300      	movs	r3, #0
    5c7a:	1c28      	adds	r0, r5, #0
    5c7c:	e001      	b.n	5c82 <gatts_handle_att_info_req+0x2a>
    5c7e:	1c28      	adds	r0, r5, #0
    5c80:	2201      	movs	r2, #1
    5c82:	47a0      	blx	r4
    5c84:	203a      	movs	r0, #58	; 0x3a
    5c86:	bd38      	pop	{r3, r4, r5, pc}
    5c88:	00007ef1 	.word	0x00007ef1
    5c8c:	0000502d 	.word	0x0000502d
    5c90:	00007fb9 	.word	0x00007fb9

00005c94 <gatts_handle_write_req>:
    5c94:	b510      	push	{r4, lr}
    5c96:	1c14      	adds	r4, r2, #0
    5c98:	4b07      	ldr	r3, [pc, #28]	; (5cb8 <gatts_handle_write_req+0x24>)
    5c9a:	4798      	blx	r3
    5c9c:	4b07      	ldr	r3, [pc, #28]	; (5cbc <gatts_handle_write_req+0x28>)
    5c9e:	8860      	ldrh	r0, [r4, #2]
    5ca0:	4798      	blx	r3
    5ca2:	2302      	movs	r3, #2
    5ca4:	7881      	ldrb	r1, [r0, #2]
    5ca6:	2022      	movs	r0, #34	; 0x22
    5ca8:	4019      	ands	r1, r3
    5caa:	d103      	bne.n	5cb4 <gatts_handle_write_req+0x20>
    5cac:	1c20      	adds	r0, r4, #0
    5cae:	4b04      	ldr	r3, [pc, #16]	; (5cc0 <gatts_handle_write_req+0x2c>)
    5cb0:	4798      	blx	r3
    5cb2:	201f      	movs	r0, #31
    5cb4:	bd10      	pop	{r4, pc}
    5cb6:	46c0      	nop			; (mov r8, r8)
    5cb8:	00007eb9 	.word	0x00007eb9
    5cbc:	0000502d 	.word	0x0000502d
    5cc0:	00005ba1 	.word	0x00005ba1

00005cc4 <at_ble_notification_send>:
    5cc4:	b5f0      	push	{r4, r5, r6, r7, lr}
    5cc6:	4d17      	ldr	r5, [pc, #92]	; (5d24 <at_ble_notification_send+0x60>)
    5cc8:	4c17      	ldr	r4, [pc, #92]	; (5d28 <at_ble_notification_send+0x64>)
    5cca:	682a      	ldr	r2, [r5, #0]
    5ccc:	44a5      	add	sp, r4
    5cce:	23d2      	movs	r3, #210	; 0xd2
    5cd0:	2a04      	cmp	r2, #4
    5cd2:	d822      	bhi.n	5d1a <at_ble_notification_send+0x56>
    5cd4:	1c06      	adds	r6, r0, #0
    5cd6:	4b15      	ldr	r3, [pc, #84]	; (5d2c <at_ble_notification_send+0x68>)
    5cd8:	1c08      	adds	r0, r1, #0
    5cda:	1c0c      	adds	r4, r1, #0
    5cdc:	4798      	blx	r3
    5cde:	2800      	cmp	r0, #0
    5ce0:	d008      	beq.n	5cf4 <at_ble_notification_send+0x30>
    5ce2:	6883      	ldr	r3, [r0, #8]
    5ce4:	2b00      	cmp	r3, #0
    5ce6:	d005      	beq.n	5cf4 <at_ble_notification_send+0x30>
    5ce8:	8882      	ldrh	r2, [r0, #4]
    5cea:	1c21      	adds	r1, r4, #0
    5cec:	9200      	str	r2, [sp, #0]
    5cee:	2012      	movs	r0, #18
    5cf0:	1c32      	adds	r2, r6, #0
    5cf2:	e00c      	b.n	5d0e <at_ble_notification_send+0x4a>
    5cf4:	270e      	movs	r7, #14
    5cf6:	446f      	add	r7, sp
    5cf8:	1c39      	adds	r1, r7, #0
    5cfa:	aa04      	add	r2, sp, #16
    5cfc:	4b0c      	ldr	r3, [pc, #48]	; (5d30 <at_ble_notification_send+0x6c>)
    5cfe:	1c20      	adds	r0, r4, #0
    5d00:	4798      	blx	r3
    5d02:	2012      	movs	r0, #18
    5d04:	1c21      	adds	r1, r4, #0
    5d06:	1c32      	adds	r2, r6, #0
    5d08:	883b      	ldrh	r3, [r7, #0]
    5d0a:	9300      	str	r3, [sp, #0]
    5d0c:	ab04      	add	r3, sp, #16
    5d0e:	4c09      	ldr	r4, [pc, #36]	; (5d34 <at_ble_notification_send+0x70>)
    5d10:	47a0      	blx	r4
    5d12:	682b      	ldr	r3, [r5, #0]
    5d14:	3301      	adds	r3, #1
    5d16:	602b      	str	r3, [r5, #0]
    5d18:	2300      	movs	r3, #0
    5d1a:	1c18      	adds	r0, r3, #0
    5d1c:	2385      	movs	r3, #133	; 0x85
    5d1e:	009b      	lsls	r3, r3, #2
    5d20:	449d      	add	sp, r3
    5d22:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5d24:	20000e10 	.word	0x20000e10
    5d28:	fffffdec 	.word	0xfffffdec
    5d2c:	0000502d 	.word	0x0000502d
    5d30:	00008575 	.word	0x00008575
    5d34:	00008005 	.word	0x00008005

00005d38 <interface_event_timeout_timer_callback>:
    5d38:	2201      	movs	r2, #1
    5d3a:	4b01      	ldr	r3, [pc, #4]	; (5d40 <interface_event_timeout_timer_callback+0x8>)
    5d3c:	701a      	strb	r2, [r3, #0]
    5d3e:	4770      	bx	lr
    5d40:	20000722 	.word	0x20000722

00005d44 <interface_create_timer>:
    5d44:	2200      	movs	r2, #0
    5d46:	b510      	push	{r4, lr}
    5d48:	230c      	movs	r3, #12
    5d4a:	4353      	muls	r3, r2
    5d4c:	4907      	ldr	r1, [pc, #28]	; (5d6c <interface_create_timer+0x28>)
    5d4e:	585c      	ldr	r4, [r3, r1]
    5d50:	2c00      	cmp	r4, #0
    5d52:	d106      	bne.n	5d62 <interface_create_timer+0x1e>
    5d54:	2201      	movs	r2, #1
    5d56:	505a      	str	r2, [r3, r1]
    5d58:	18cb      	adds	r3, r1, r3
    5d5a:	6098      	str	r0, [r3, #8]
    5d5c:	605c      	str	r4, [r3, #4]
    5d5e:	1c18      	adds	r0, r3, #0
    5d60:	e003      	b.n	5d6a <interface_create_timer+0x26>
    5d62:	3201      	adds	r2, #1
    5d64:	2a04      	cmp	r2, #4
    5d66:	d1ef      	bne.n	5d48 <interface_create_timer+0x4>
    5d68:	2000      	movs	r0, #0
    5d6a:	bd10      	pop	{r4, pc}
    5d6c:	20000724 	.word	0x20000724

00005d70 <interface_timer_callback>:
    5d70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5d72:	4f17      	ldr	r7, [pc, #92]	; (5dd0 <interface_timer_callback+0x60>)
    5d74:	4e17      	ldr	r6, [pc, #92]	; (5dd4 <interface_timer_callback+0x64>)
    5d76:	683b      	ldr	r3, [r7, #0]
    5d78:	6830      	ldr	r0, [r6, #0]
    5d7a:	689b      	ldr	r3, [r3, #8]
    5d7c:	2101      	movs	r1, #1
    5d7e:	4798      	blx	r3
    5d80:	2300      	movs	r3, #0
    5d82:	4d15      	ldr	r5, [pc, #84]	; (5dd8 <interface_timer_callback+0x68>)
    5d84:	702b      	strb	r3, [r5, #0]
    5d86:	4b15      	ldr	r3, [pc, #84]	; (5ddc <interface_timer_callback+0x6c>)
    5d88:	1d1c      	adds	r4, r3, #4
    5d8a:	3334      	adds	r3, #52	; 0x34
    5d8c:	9301      	str	r3, [sp, #4]
    5d8e:	1f23      	subs	r3, r4, #4
    5d90:	681b      	ldr	r3, [r3, #0]
    5d92:	2b01      	cmp	r3, #1
    5d94:	d10f      	bne.n	5db6 <interface_timer_callback+0x46>
    5d96:	6823      	ldr	r3, [r4, #0]
    5d98:	2b00      	cmp	r3, #0
    5d9a:	d00c      	beq.n	5db6 <interface_timer_callback+0x46>
    5d9c:	3b01      	subs	r3, #1
    5d9e:	6023      	str	r3, [r4, #0]
    5da0:	2b00      	cmp	r3, #0
    5da2:	d103      	bne.n	5dac <interface_timer_callback+0x3c>
    5da4:	6863      	ldr	r3, [r4, #4]
    5da6:	2b00      	cmp	r3, #0
    5da8:	d000      	beq.n	5dac <interface_timer_callback+0x3c>
    5daa:	4798      	blx	r3
    5dac:	6823      	ldr	r3, [r4, #0]
    5dae:	2b00      	cmp	r3, #0
    5db0:	d001      	beq.n	5db6 <interface_timer_callback+0x46>
    5db2:	2301      	movs	r3, #1
    5db4:	702b      	strb	r3, [r5, #0]
    5db6:	9b01      	ldr	r3, [sp, #4]
    5db8:	340c      	adds	r4, #12
    5dba:	429c      	cmp	r4, r3
    5dbc:	d1e7      	bne.n	5d8e <interface_timer_callback+0x1e>
    5dbe:	782b      	ldrb	r3, [r5, #0]
    5dc0:	2b00      	cmp	r3, #0
    5dc2:	d103      	bne.n	5dcc <interface_timer_callback+0x5c>
    5dc4:	683b      	ldr	r3, [r7, #0]
    5dc6:	6830      	ldr	r0, [r6, #0]
    5dc8:	68db      	ldr	r3, [r3, #12]
    5dca:	4798      	blx	r3
    5dcc:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    5dce:	46c0      	nop			; (mov r8, r8)
    5dd0:	20000780 	.word	0x20000780
    5dd4:	20000990 	.word	0x20000990
    5dd8:	20000986 	.word	0x20000986
    5ddc:	20000724 	.word	0x20000724

00005de0 <interface_start_timer.part.1>:
    5de0:	b508      	push	{r3, lr}
    5de2:	4b05      	ldr	r3, [pc, #20]	; (5df8 <interface_start_timer.part.1+0x18>)
    5de4:	4a05      	ldr	r2, [pc, #20]	; (5dfc <interface_start_timer.part.1+0x1c>)
    5de6:	681b      	ldr	r3, [r3, #0]
    5de8:	6810      	ldr	r0, [r2, #0]
    5dea:	689b      	ldr	r3, [r3, #8]
    5dec:	2101      	movs	r1, #1
    5dee:	4798      	blx	r3
    5df0:	2201      	movs	r2, #1
    5df2:	4b03      	ldr	r3, [pc, #12]	; (5e00 <interface_start_timer.part.1+0x20>)
    5df4:	701a      	strb	r2, [r3, #0]
    5df6:	bd08      	pop	{r3, pc}
    5df8:	20000780 	.word	0x20000780
    5dfc:	20000990 	.word	0x20000990
    5e00:	20000986 	.word	0x20000986

00005e04 <interface_stop_timer>:
    5e04:	b508      	push	{r3, lr}
    5e06:	2300      	movs	r3, #0
    5e08:	4a0c      	ldr	r2, [pc, #48]	; (5e3c <interface_stop_timer+0x38>)
    5e0a:	6043      	str	r3, [r0, #4]
    5e0c:	7013      	strb	r3, [r2, #0]
    5e0e:	490c      	ldr	r1, [pc, #48]	; (5e40 <interface_stop_timer+0x3c>)
    5e10:	5858      	ldr	r0, [r3, r1]
    5e12:	2801      	cmp	r0, #1
    5e14:	d105      	bne.n	5e22 <interface_stop_timer+0x1e>
    5e16:	18c9      	adds	r1, r1, r3
    5e18:	6849      	ldr	r1, [r1, #4]
    5e1a:	2900      	cmp	r1, #0
    5e1c:	d001      	beq.n	5e22 <interface_stop_timer+0x1e>
    5e1e:	7010      	strb	r0, [r2, #0]
    5e20:	e002      	b.n	5e28 <interface_stop_timer+0x24>
    5e22:	330c      	adds	r3, #12
    5e24:	2b30      	cmp	r3, #48	; 0x30
    5e26:	d1f2      	bne.n	5e0e <interface_stop_timer+0xa>
    5e28:	7813      	ldrb	r3, [r2, #0]
    5e2a:	2b00      	cmp	r3, #0
    5e2c:	d105      	bne.n	5e3a <interface_stop_timer+0x36>
    5e2e:	4b05      	ldr	r3, [pc, #20]	; (5e44 <interface_stop_timer+0x40>)
    5e30:	4a05      	ldr	r2, [pc, #20]	; (5e48 <interface_stop_timer+0x44>)
    5e32:	681b      	ldr	r3, [r3, #0]
    5e34:	6810      	ldr	r0, [r2, #0]
    5e36:	68db      	ldr	r3, [r3, #12]
    5e38:	4798      	blx	r3
    5e3a:	bd08      	pop	{r3, pc}
    5e3c:	20000986 	.word	0x20000986
    5e40:	20000724 	.word	0x20000724
    5e44:	20000780 	.word	0x20000780
    5e48:	20000990 	.word	0x20000990

00005e4c <interface_check_and_assert_ext_wakeup>:
    5e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5e4e:	4e11      	ldr	r6, [pc, #68]	; (5e94 <interface_check_and_assert_ext_wakeup+0x48>)
    5e50:	1c07      	adds	r7, r0, #0
    5e52:	7833      	ldrb	r3, [r6, #0]
    5e54:	4c10      	ldr	r4, [pc, #64]	; (5e98 <interface_check_and_assert_ext_wakeup+0x4c>)
    5e56:	2b00      	cmp	r3, #0
    5e58:	d10e      	bne.n	5e78 <interface_check_and_assert_ext_wakeup+0x2c>
    5e5a:	2001      	movs	r0, #1
    5e5c:	4d0f      	ldr	r5, [pc, #60]	; (5e9c <interface_check_and_assert_ext_wakeup+0x50>)
    5e5e:	1c01      	adds	r1, r0, #0
    5e60:	682b      	ldr	r3, [r5, #0]
    5e62:	695b      	ldr	r3, [r3, #20]
    5e64:	4798      	blx	r3
    5e66:	2301      	movs	r3, #1
    5e68:	7033      	strb	r3, [r6, #0]
    5e6a:	429f      	cmp	r7, r3
    5e6c:	d107      	bne.n	5e7e <interface_check_and_assert_ext_wakeup+0x32>
    5e6e:	682b      	ldr	r3, [r5, #0]
    5e70:	2005      	movs	r0, #5
    5e72:	691b      	ldr	r3, [r3, #16]
    5e74:	4798      	blx	r3
    5e76:	e002      	b.n	5e7e <interface_check_and_assert_ext_wakeup+0x32>
    5e78:	6820      	ldr	r0, [r4, #0]
    5e7a:	4b09      	ldr	r3, [pc, #36]	; (5ea0 <interface_check_and_assert_ext_wakeup+0x54>)
    5e7c:	4798      	blx	r3
    5e7e:	2205      	movs	r2, #5
    5e80:	6823      	ldr	r3, [r4, #0]
    5e82:	605a      	str	r2, [r3, #4]
    5e84:	4b07      	ldr	r3, [pc, #28]	; (5ea4 <interface_check_and_assert_ext_wakeup+0x58>)
    5e86:	781b      	ldrb	r3, [r3, #0]
    5e88:	2b00      	cmp	r3, #0
    5e8a:	d101      	bne.n	5e90 <interface_check_and_assert_ext_wakeup+0x44>
    5e8c:	4b06      	ldr	r3, [pc, #24]	; (5ea8 <interface_check_and_assert_ext_wakeup+0x5c>)
    5e8e:	4798      	blx	r3
    5e90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5e92:	46c0      	nop			; (mov r8, r8)
    5e94:	20000770 	.word	0x20000770
    5e98:	20000988 	.word	0x20000988
    5e9c:	20000780 	.word	0x20000780
    5ea0:	00005e05 	.word	0x00005e05
    5ea4:	20000986 	.word	0x20000986
    5ea8:	00005de1 	.word	0x00005de1

00005eac <interface_recv_async>:
    5eac:	b538      	push	{r3, r4, r5, lr}
    5eae:	4b11      	ldr	r3, [pc, #68]	; (5ef4 <interface_recv_async+0x48>)
    5eb0:	1c04      	adds	r4, r0, #0
    5eb2:	2002      	movs	r0, #2
    5eb4:	4798      	blx	r3
    5eb6:	4b10      	ldr	r3, [pc, #64]	; (5ef8 <interface_recv_async+0x4c>)
    5eb8:	781a      	ldrb	r2, [r3, #0]
    5eba:	2a02      	cmp	r2, #2
    5ebc:	d10d      	bne.n	5eda <interface_recv_async+0x2e>
    5ebe:	4d0f      	ldr	r5, [pc, #60]	; (5efc <interface_recv_async+0x50>)
    5ec0:	4b0f      	ldr	r3, [pc, #60]	; (5f00 <interface_recv_async+0x54>)
    5ec2:	1c28      	adds	r0, r5, #0
    5ec4:	1c21      	adds	r1, r4, #0
    5ec6:	4798      	blx	r3
    5ec8:	1c28      	adds	r0, r5, #0
    5eca:	4b0e      	ldr	r3, [pc, #56]	; (5f04 <interface_recv_async+0x58>)
    5ecc:	4798      	blx	r3
    5ece:	2800      	cmp	r0, #0
    5ed0:	d009      	beq.n	5ee6 <interface_recv_async+0x3a>
    5ed2:	2201      	movs	r2, #1
    5ed4:	4b0c      	ldr	r3, [pc, #48]	; (5f08 <interface_recv_async+0x5c>)
    5ed6:	701a      	strb	r2, [r3, #0]
    5ed8:	e00a      	b.n	5ef0 <interface_recv_async+0x44>
    5eda:	2a00      	cmp	r2, #0
    5edc:	d108      	bne.n	5ef0 <interface_recv_async+0x44>
    5ede:	2c5a      	cmp	r4, #90	; 0x5a
    5ee0:	d101      	bne.n	5ee6 <interface_recv_async+0x3a>
    5ee2:	3201      	adds	r2, #1
    5ee4:	701a      	strb	r2, [r3, #0]
    5ee6:	4b09      	ldr	r3, [pc, #36]	; (5f0c <interface_recv_async+0x60>)
    5ee8:	4809      	ldr	r0, [pc, #36]	; (5f10 <interface_recv_async+0x64>)
    5eea:	681b      	ldr	r3, [r3, #0]
    5eec:	69db      	ldr	r3, [r3, #28]
    5eee:	4798      	blx	r3
    5ef0:	bd38      	pop	{r3, r4, r5, pc}
    5ef2:	46c0      	nop			; (mov r8, r8)
    5ef4:	00005e4d 	.word	0x00005e4d
    5ef8:	20000e14 	.word	0x20000e14
    5efc:	2000075c 	.word	0x2000075c
    5f00:	000087f9 	.word	0x000087f9
    5f04:	000087c3 	.word	0x000087c3
    5f08:	20000994 	.word	0x20000994
    5f0c:	20000780 	.word	0x20000780
    5f10:	00005ead 	.word	0x00005ead

00005f14 <interface_bus_activity_timer_callback>:
    5f14:	b510      	push	{r4, lr}
    5f16:	4b0e      	ldr	r3, [pc, #56]	; (5f50 <interface_bus_activity_timer_callback+0x3c>)
    5f18:	781b      	ldrb	r3, [r3, #0]
    5f1a:	2b01      	cmp	r3, #1
    5f1c:	d10d      	bne.n	5f3a <interface_bus_activity_timer_callback+0x26>
    5f1e:	4c0d      	ldr	r4, [pc, #52]	; (5f54 <interface_bus_activity_timer_callback+0x40>)
    5f20:	4b0d      	ldr	r3, [pc, #52]	; (5f58 <interface_bus_activity_timer_callback+0x44>)
    5f22:	6820      	ldr	r0, [r4, #0]
    5f24:	4798      	blx	r3
    5f26:	2205      	movs	r2, #5
    5f28:	6823      	ldr	r3, [r4, #0]
    5f2a:	605a      	str	r2, [r3, #4]
    5f2c:	4b0b      	ldr	r3, [pc, #44]	; (5f5c <interface_bus_activity_timer_callback+0x48>)
    5f2e:	781b      	ldrb	r3, [r3, #0]
    5f30:	2b00      	cmp	r3, #0
    5f32:	d10b      	bne.n	5f4c <interface_bus_activity_timer_callback+0x38>
    5f34:	4b0a      	ldr	r3, [pc, #40]	; (5f60 <interface_bus_activity_timer_callback+0x4c>)
    5f36:	4798      	blx	r3
    5f38:	e008      	b.n	5f4c <interface_bus_activity_timer_callback+0x38>
    5f3a:	4b0a      	ldr	r3, [pc, #40]	; (5f64 <interface_bus_activity_timer_callback+0x50>)
    5f3c:	2001      	movs	r0, #1
    5f3e:	681b      	ldr	r3, [r3, #0]
    5f40:	2100      	movs	r1, #0
    5f42:	695b      	ldr	r3, [r3, #20]
    5f44:	4798      	blx	r3
    5f46:	2200      	movs	r2, #0
    5f48:	4b07      	ldr	r3, [pc, #28]	; (5f68 <interface_bus_activity_timer_callback+0x54>)
    5f4a:	701a      	strb	r2, [r3, #0]
    5f4c:	bd10      	pop	{r4, pc}
    5f4e:	46c0      	nop			; (mov r8, r8)
    5f50:	20000778 	.word	0x20000778
    5f54:	20000988 	.word	0x20000988
    5f58:	00005e05 	.word	0x00005e05
    5f5c:	20000986 	.word	0x20000986
    5f60:	00005de1 	.word	0x00005de1
    5f64:	20000780 	.word	0x20000780
    5f68:	20000770 	.word	0x20000770

00005f6c <interface_handle_received_data>:
    5f6c:	2300      	movs	r3, #0
    5f6e:	b5f0      	push	{r4, r5, r6, r7, lr}
    5f70:	b087      	sub	sp, #28
    5f72:	9300      	str	r3, [sp, #0]
    5f74:	9301      	str	r3, [sp, #4]
    5f76:	4c91      	ldr	r4, [pc, #580]	; (61bc <interface_handle_received_data+0x250>)
    5f78:	4b91      	ldr	r3, [pc, #580]	; (61c0 <interface_handle_received_data+0x254>)
    5f7a:	1c20      	adds	r0, r4, #0
    5f7c:	4798      	blx	r3
    5f7e:	1e07      	subs	r7, r0, #0
    5f80:	d000      	beq.n	5f84 <interface_handle_received_data+0x18>
    5f82:	e118      	b.n	61b6 <interface_handle_received_data+0x24a>
    5f84:	4d8f      	ldr	r5, [pc, #572]	; (61c4 <interface_handle_received_data+0x258>)
    5f86:	682e      	ldr	r6, [r5, #0]
    5f88:	2e01      	cmp	r6, #1
    5f8a:	d024      	beq.n	5fd6 <interface_handle_received_data+0x6a>
    5f8c:	2e00      	cmp	r6, #0
    5f8e:	d003      	beq.n	5f98 <interface_handle_received_data+0x2c>
    5f90:	2e02      	cmp	r6, #2
    5f92:	d100      	bne.n	5f96 <interface_handle_received_data+0x2a>
    5f94:	e0af      	b.n	60f6 <interface_handle_received_data+0x18a>
    5f96:	e7ee      	b.n	5f76 <interface_handle_received_data+0xa>
    5f98:	ab04      	add	r3, sp, #16
    5f9a:	1ddf      	adds	r7, r3, #7
    5f9c:	1c20      	adds	r0, r4, #0
    5f9e:	4b8a      	ldr	r3, [pc, #552]	; (61c8 <interface_handle_received_data+0x25c>)
    5fa0:	1c39      	adds	r1, r7, #0
    5fa2:	4798      	blx	r3
    5fa4:	4b89      	ldr	r3, [pc, #548]	; (61cc <interface_handle_received_data+0x260>)
    5fa6:	781a      	ldrb	r2, [r3, #0]
    5fa8:	2a01      	cmp	r2, #1
    5faa:	d105      	bne.n	5fb8 <interface_handle_received_data+0x4c>
    5fac:	701e      	strb	r6, [r3, #0]
    5fae:	4b88      	ldr	r3, [pc, #544]	; (61d0 <interface_handle_received_data+0x264>)
    5fb0:	4888      	ldr	r0, [pc, #544]	; (61d4 <interface_handle_received_data+0x268>)
    5fb2:	681b      	ldr	r3, [r3, #0]
    5fb4:	69db      	ldr	r3, [r3, #28]
    5fb6:	4798      	blx	r3
    5fb8:	783b      	ldrb	r3, [r7, #0]
    5fba:	2b05      	cmp	r3, #5
    5fbc:	d101      	bne.n	5fc2 <interface_handle_received_data+0x56>
    5fbe:	3b04      	subs	r3, #4
    5fc0:	e002      	b.n	5fc8 <interface_handle_received_data+0x5c>
    5fc2:	2b04      	cmp	r3, #4
    5fc4:	d101      	bne.n	5fca <interface_handle_received_data+0x5e>
    5fc6:	3b02      	subs	r3, #2
    5fc8:	602b      	str	r3, [r5, #0]
    5fca:	2201      	movs	r2, #1
    5fcc:	4b82      	ldr	r3, [pc, #520]	; (61d8 <interface_handle_received_data+0x26c>)
    5fce:	601a      	str	r2, [r3, #0]
    5fd0:	2200      	movs	r2, #0
    5fd2:	4b82      	ldr	r3, [pc, #520]	; (61dc <interface_handle_received_data+0x270>)
    5fd4:	e0be      	b.n	6154 <interface_handle_received_data+0x1e8>
    5fd6:	4e80      	ldr	r6, [pc, #512]	; (61d8 <interface_handle_received_data+0x26c>)
    5fd8:	6833      	ldr	r3, [r6, #0]
    5fda:	2b01      	cmp	r3, #1
    5fdc:	d002      	beq.n	5fe4 <interface_handle_received_data+0x78>
    5fde:	2b02      	cmp	r3, #2
    5fe0:	d03a      	beq.n	6058 <interface_handle_received_data+0xec>
    5fe2:	e7c8      	b.n	5f76 <interface_handle_received_data+0xa>
    5fe4:	ab04      	add	r3, sp, #16
    5fe6:	1dd9      	adds	r1, r3, #7
    5fe8:	1c20      	adds	r0, r4, #0
    5fea:	4b77      	ldr	r3, [pc, #476]	; (61c8 <interface_handle_received_data+0x25c>)
    5fec:	4798      	blx	r3
    5fee:	4b77      	ldr	r3, [pc, #476]	; (61cc <interface_handle_received_data+0x260>)
    5ff0:	781a      	ldrb	r2, [r3, #0]
    5ff2:	2a01      	cmp	r2, #1
    5ff4:	d105      	bne.n	6002 <interface_handle_received_data+0x96>
    5ff6:	701f      	strb	r7, [r3, #0]
    5ff8:	4b75      	ldr	r3, [pc, #468]	; (61d0 <interface_handle_received_data+0x264>)
    5ffa:	4876      	ldr	r0, [pc, #472]	; (61d4 <interface_handle_received_data+0x268>)
    5ffc:	681b      	ldr	r3, [r3, #0]
    5ffe:	69db      	ldr	r3, [r3, #28]
    6000:	4798      	blx	r3
    6002:	4b76      	ldr	r3, [pc, #472]	; (61dc <interface_handle_received_data+0x270>)
    6004:	a804      	add	r0, sp, #16
    6006:	8819      	ldrh	r1, [r3, #0]
    6008:	79c0      	ldrb	r0, [r0, #7]
    600a:	1c4a      	adds	r2, r1, #1
    600c:	b292      	uxth	r2, r2
    600e:	801a      	strh	r2, [r3, #0]
    6010:	4b73      	ldr	r3, [pc, #460]	; (61e0 <interface_handle_received_data+0x274>)
    6012:	5458      	strb	r0, [r3, r1]
    6014:	2a08      	cmp	r2, #8
    6016:	d1ae      	bne.n	5f76 <interface_handle_received_data+0xa>
    6018:	79df      	ldrb	r7, [r3, #7]
    601a:	7819      	ldrb	r1, [r3, #0]
    601c:	7858      	ldrb	r0, [r3, #1]
    601e:	791a      	ldrb	r2, [r3, #4]
    6020:	795c      	ldrb	r4, [r3, #5]
    6022:	799b      	ldrb	r3, [r3, #6]
    6024:	023f      	lsls	r7, r7, #8
    6026:	433b      	orrs	r3, r7
    6028:	9300      	str	r3, [sp, #0]
    602a:	d113      	bne.n	6054 <interface_handle_received_data+0xe8>
    602c:	0206      	lsls	r6, r0, #8
    602e:	0224      	lsls	r4, r4, #8
    6030:	430e      	orrs	r6, r1
    6032:	4314      	orrs	r4, r2
    6034:	1c30      	adds	r0, r6, #0
    6036:	1c1a      	adds	r2, r3, #0
    6038:	1c21      	adds	r1, r4, #0
    603a:	4b6a      	ldr	r3, [pc, #424]	; (61e4 <interface_handle_received_data+0x278>)
    603c:	4798      	blx	r3
    603e:	2800      	cmp	r0, #0
    6040:	d105      	bne.n	604e <interface_handle_received_data+0xe2>
    6042:	9a00      	ldr	r2, [sp, #0]
    6044:	1c21      	adds	r1, r4, #0
    6046:	1c30      	adds	r0, r6, #0
    6048:	1c13      	adds	r3, r2, #0
    604a:	4c67      	ldr	r4, [pc, #412]	; (61e8 <interface_handle_received_data+0x27c>)
    604c:	47a0      	blx	r4
    604e:	2300      	movs	r3, #0
    6050:	602b      	str	r3, [r5, #0]
    6052:	e0ae      	b.n	61b2 <interface_handle_received_data+0x246>
    6054:	2302      	movs	r3, #2
    6056:	e070      	b.n	613a <interface_handle_received_data+0x1ce>
    6058:	4b61      	ldr	r3, [pc, #388]	; (61e0 <interface_handle_received_data+0x274>)
    605a:	1c20      	adds	r0, r4, #0
    605c:	781a      	ldrb	r2, [r3, #0]
    605e:	785d      	ldrb	r5, [r3, #1]
    6060:	1c16      	adds	r6, r2, #0
    6062:	791a      	ldrb	r2, [r3, #4]
    6064:	9202      	str	r2, [sp, #8]
    6066:	795a      	ldrb	r2, [r3, #5]
    6068:	9203      	str	r2, [sp, #12]
    606a:	79da      	ldrb	r2, [r3, #7]
    606c:	799b      	ldrb	r3, [r3, #6]
    606e:	0212      	lsls	r2, r2, #8
    6070:	4313      	orrs	r3, r2
    6072:	9300      	str	r3, [sp, #0]
    6074:	ab04      	add	r3, sp, #16
    6076:	1dd9      	adds	r1, r3, #7
    6078:	4b53      	ldr	r3, [pc, #332]	; (61c8 <interface_handle_received_data+0x25c>)
    607a:	4798      	blx	r3
    607c:	4b53      	ldr	r3, [pc, #332]	; (61cc <interface_handle_received_data+0x260>)
    607e:	781a      	ldrb	r2, [r3, #0]
    6080:	2a01      	cmp	r2, #1
    6082:	d105      	bne.n	6090 <interface_handle_received_data+0x124>
    6084:	701f      	strb	r7, [r3, #0]
    6086:	4b52      	ldr	r3, [pc, #328]	; (61d0 <interface_handle_received_data+0x264>)
    6088:	4852      	ldr	r0, [pc, #328]	; (61d4 <interface_handle_received_data+0x268>)
    608a:	681b      	ldr	r3, [r3, #0]
    608c:	69db      	ldr	r3, [r3, #28]
    608e:	4798      	blx	r3
    6090:	4956      	ldr	r1, [pc, #344]	; (61ec <interface_handle_received_data+0x280>)
    6092:	aa04      	add	r2, sp, #16
    6094:	3207      	adds	r2, #7
    6096:	880b      	ldrh	r3, [r1, #0]
    6098:	7812      	ldrb	r2, [r2, #0]
    609a:	4f55      	ldr	r7, [pc, #340]	; (61f0 <interface_handle_received_data+0x284>)
    609c:	1c58      	adds	r0, r3, #1
    609e:	54fa      	strb	r2, [r7, r3]
    60a0:	4a54      	ldr	r2, [pc, #336]	; (61f4 <interface_handle_received_data+0x288>)
    60a2:	9c00      	ldr	r4, [sp, #0]
    60a4:	8812      	ldrh	r2, [r2, #0]
    60a6:	b280      	uxth	r0, r0
    60a8:	8008      	strh	r0, [r1, #0]
    60aa:	1a80      	subs	r0, r0, r2
    60ac:	42a0      	cmp	r0, r4
    60ae:	d000      	beq.n	60b2 <interface_handle_received_data+0x146>
    60b0:	e761      	b.n	5f76 <interface_handle_received_data+0xa>
    60b2:	9803      	ldr	r0, [sp, #12]
    60b4:	022d      	lsls	r5, r5, #8
    60b6:	0204      	lsls	r4, r0, #8
    60b8:	9802      	ldr	r0, [sp, #8]
    60ba:	4335      	orrs	r5, r6
    60bc:	4304      	orrs	r4, r0
    60be:	2000      	movs	r0, #0
    60c0:	4684      	mov	ip, r0
    60c2:	4666      	mov	r6, ip
    60c4:	483f      	ldr	r0, [pc, #252]	; (61c4 <interface_handle_received_data+0x258>)
    60c6:	3304      	adds	r3, #4
    60c8:	6006      	str	r6, [r0, #0]
    60ca:	2003      	movs	r0, #3
    60cc:	4383      	bics	r3, r0
    60ce:	800b      	strh	r3, [r1, #0]
    60d0:	18ba      	adds	r2, r7, r2
    60d2:	4b44      	ldr	r3, [pc, #272]	; (61e4 <interface_handle_received_data+0x278>)
    60d4:	1c28      	adds	r0, r5, #0
    60d6:	1c21      	adds	r1, r4, #0
    60d8:	4798      	blx	r3
    60da:	2301      	movs	r3, #1
    60dc:	9301      	str	r3, [sp, #4]
    60de:	42b0      	cmp	r0, r6
    60e0:	d000      	beq.n	60e4 <interface_handle_received_data+0x178>
    60e2:	e748      	b.n	5f76 <interface_handle_received_data+0xa>
    60e4:	4b43      	ldr	r3, [pc, #268]	; (61f4 <interface_handle_received_data+0x288>)
    60e6:	1c21      	adds	r1, r4, #0
    60e8:	881a      	ldrh	r2, [r3, #0]
    60ea:	1c28      	adds	r0, r5, #0
    60ec:	18ba      	adds	r2, r7, r2
    60ee:	9b00      	ldr	r3, [sp, #0]
    60f0:	4c3d      	ldr	r4, [pc, #244]	; (61e8 <interface_handle_received_data+0x27c>)
    60f2:	47a0      	blx	r4
    60f4:	e73f      	b.n	5f76 <interface_handle_received_data+0xa>
    60f6:	4e38      	ldr	r6, [pc, #224]	; (61d8 <interface_handle_received_data+0x26c>)
    60f8:	6833      	ldr	r3, [r6, #0]
    60fa:	2b01      	cmp	r3, #1
    60fc:	d002      	beq.n	6104 <interface_handle_received_data+0x198>
    60fe:	2b02      	cmp	r3, #2
    6100:	d02a      	beq.n	6158 <interface_handle_received_data+0x1ec>
    6102:	e738      	b.n	5f76 <interface_handle_received_data+0xa>
    6104:	ab04      	add	r3, sp, #16
    6106:	1ddd      	adds	r5, r3, #7
    6108:	1c20      	adds	r0, r4, #0
    610a:	4b2f      	ldr	r3, [pc, #188]	; (61c8 <interface_handle_received_data+0x25c>)
    610c:	1c29      	adds	r1, r5, #0
    610e:	4798      	blx	r3
    6110:	4b2e      	ldr	r3, [pc, #184]	; (61cc <interface_handle_received_data+0x260>)
    6112:	781a      	ldrb	r2, [r3, #0]
    6114:	2a01      	cmp	r2, #1
    6116:	d105      	bne.n	6124 <interface_handle_received_data+0x1b8>
    6118:	701f      	strb	r7, [r3, #0]
    611a:	4b2d      	ldr	r3, [pc, #180]	; (61d0 <interface_handle_received_data+0x264>)
    611c:	482d      	ldr	r0, [pc, #180]	; (61d4 <interface_handle_received_data+0x268>)
    611e:	681b      	ldr	r3, [r3, #0]
    6120:	69db      	ldr	r3, [r3, #28]
    6122:	4798      	blx	r3
    6124:	492d      	ldr	r1, [pc, #180]	; (61dc <interface_handle_received_data+0x270>)
    6126:	7828      	ldrb	r0, [r5, #0]
    6128:	880a      	ldrh	r2, [r1, #0]
    612a:	1c53      	adds	r3, r2, #1
    612c:	b29b      	uxth	r3, r3
    612e:	800b      	strh	r3, [r1, #0]
    6130:	492b      	ldr	r1, [pc, #172]	; (61e0 <interface_handle_received_data+0x274>)
    6132:	5488      	strb	r0, [r1, r2]
    6134:	2b02      	cmp	r3, #2
    6136:	d000      	beq.n	613a <interface_handle_received_data+0x1ce>
    6138:	e71d      	b.n	5f76 <interface_handle_received_data+0xa>
    613a:	2280      	movs	r2, #128	; 0x80
    613c:	6033      	str	r3, [r6, #0]
    613e:	4b2b      	ldr	r3, [pc, #172]	; (61ec <interface_handle_received_data+0x280>)
    6140:	00d2      	lsls	r2, r2, #3
    6142:	8819      	ldrh	r1, [r3, #0]
    6144:	1a52      	subs	r2, r2, r1
    6146:	9900      	ldr	r1, [sp, #0]
    6148:	428a      	cmp	r2, r1
    614a:	d201      	bcs.n	6150 <interface_handle_received_data+0x1e4>
    614c:	2200      	movs	r2, #0
    614e:	801a      	strh	r2, [r3, #0]
    6150:	881a      	ldrh	r2, [r3, #0]
    6152:	4b28      	ldr	r3, [pc, #160]	; (61f4 <interface_handle_received_data+0x288>)
    6154:	801a      	strh	r2, [r3, #0]
    6156:	e70e      	b.n	5f76 <interface_handle_received_data+0xa>
    6158:	4b21      	ldr	r3, [pc, #132]	; (61e0 <interface_handle_received_data+0x274>)
    615a:	1c20      	adds	r0, r4, #0
    615c:	785e      	ldrb	r6, [r3, #1]
    615e:	ab04      	add	r3, sp, #16
    6160:	1dd9      	adds	r1, r3, #7
    6162:	4b19      	ldr	r3, [pc, #100]	; (61c8 <interface_handle_received_data+0x25c>)
    6164:	4798      	blx	r3
    6166:	4b19      	ldr	r3, [pc, #100]	; (61cc <interface_handle_received_data+0x260>)
    6168:	781a      	ldrb	r2, [r3, #0]
    616a:	2a01      	cmp	r2, #1
    616c:	d105      	bne.n	617a <interface_handle_received_data+0x20e>
    616e:	701f      	strb	r7, [r3, #0]
    6170:	4b17      	ldr	r3, [pc, #92]	; (61d0 <interface_handle_received_data+0x264>)
    6172:	4818      	ldr	r0, [pc, #96]	; (61d4 <interface_handle_received_data+0x268>)
    6174:	681b      	ldr	r3, [r3, #0]
    6176:	69db      	ldr	r3, [r3, #28]
    6178:	4798      	blx	r3
    617a:	491c      	ldr	r1, [pc, #112]	; (61ec <interface_handle_received_data+0x280>)
    617c:	aa04      	add	r2, sp, #16
    617e:	3207      	adds	r2, #7
    6180:	880b      	ldrh	r3, [r1, #0]
    6182:	7812      	ldrb	r2, [r2, #0]
    6184:	481a      	ldr	r0, [pc, #104]	; (61f0 <interface_handle_received_data+0x284>)
    6186:	1c5c      	adds	r4, r3, #1
    6188:	54c2      	strb	r2, [r0, r3]
    618a:	4a1a      	ldr	r2, [pc, #104]	; (61f4 <interface_handle_received_data+0x288>)
    618c:	b2a4      	uxth	r4, r4
    618e:	8812      	ldrh	r2, [r2, #0]
    6190:	800c      	strh	r4, [r1, #0]
    6192:	1aa4      	subs	r4, r4, r2
    6194:	42b4      	cmp	r4, r6
    6196:	d000      	beq.n	619a <interface_handle_received_data+0x22e>
    6198:	e6ed      	b.n	5f76 <interface_handle_received_data+0xa>
    619a:	2400      	movs	r4, #0
    619c:	1882      	adds	r2, r0, r2
    619e:	20bb      	movs	r0, #187	; 0xbb
    61a0:	602c      	str	r4, [r5, #0]
    61a2:	3304      	adds	r3, #4
    61a4:	3403      	adds	r4, #3
    61a6:	43a3      	bics	r3, r4
    61a8:	800b      	strh	r3, [r1, #0]
    61aa:	4c0f      	ldr	r4, [pc, #60]	; (61e8 <interface_handle_received_data+0x27c>)
    61ac:	b2b3      	uxth	r3, r6
    61ae:	1c01      	adds	r1, r0, #0
    61b0:	47a0      	blx	r4
    61b2:	2301      	movs	r3, #1
    61b4:	e6de      	b.n	5f74 <interface_handle_received_data+0x8>
    61b6:	9801      	ldr	r0, [sp, #4]
    61b8:	b007      	add	sp, #28
    61ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    61bc:	2000075c 	.word	0x2000075c
    61c0:	000087b5 	.word	0x000087b5
    61c4:	20000758 	.word	0x20000758
    61c8:	000087d5 	.word	0x000087d5
    61cc:	20000994 	.word	0x20000994
    61d0:	20000780 	.word	0x20000780
    61d4:	00005ead 	.word	0x00005ead
    61d8:	20000714 	.word	0x20000714
    61dc:	20000784 	.word	0x20000784
    61e0:	2000071a 	.word	0x2000071a
    61e4:	00004339 	.word	0x00004339
    61e8:	000042c5 	.word	0x000042c5
    61ec:	20000754 	.word	0x20000754
    61f0:	20000995 	.word	0x20000995
    61f4:	20000718 	.word	0x20000718

000061f8 <interface_send_sync>:
    61f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    61fa:	4b0d      	ldr	r3, [pc, #52]	; (6230 <interface_send_sync+0x38>)
    61fc:	1c07      	adds	r7, r0, #0
    61fe:	2001      	movs	r0, #1
    6200:	1c0e      	adds	r6, r1, #0
    6202:	4798      	blx	r3
    6204:	2301      	movs	r3, #1
    6206:	4c0b      	ldr	r4, [pc, #44]	; (6234 <interface_send_sync+0x3c>)
    6208:	4d0b      	ldr	r5, [pc, #44]	; (6238 <interface_send_sync+0x40>)
    620a:	7023      	strb	r3, [r4, #0]
    620c:	4b0b      	ldr	r3, [pc, #44]	; (623c <interface_send_sync+0x44>)
    620e:	781b      	ldrb	r3, [r3, #0]
    6210:	2b02      	cmp	r3, #2
    6212:	d104      	bne.n	621e <interface_send_sync+0x26>
    6214:	682b      	ldr	r3, [r5, #0]
    6216:	480a      	ldr	r0, [pc, #40]	; (6240 <interface_send_sync+0x48>)
    6218:	699b      	ldr	r3, [r3, #24]
    621a:	2103      	movs	r1, #3
    621c:	4798      	blx	r3
    621e:	682b      	ldr	r3, [r5, #0]
    6220:	1c38      	adds	r0, r7, #0
    6222:	1c31      	adds	r1, r6, #0
    6224:	699b      	ldr	r3, [r3, #24]
    6226:	4798      	blx	r3
    6228:	2000      	movs	r0, #0
    622a:	7020      	strb	r0, [r4, #0]
    622c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    622e:	46c0      	nop			; (mov r8, r8)
    6230:	00005e4d 	.word	0x00005e4d
    6234:	20000778 	.word	0x20000778
    6238:	20000780 	.word	0x20000780
    623c:	20000779 	.word	0x20000779
    6240:	0000ae30 	.word	0x0000ae30

00006244 <interface_init>:
    6244:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    6246:	1c03      	adds	r3, r0, #0
    6248:	332c      	adds	r3, #44	; 0x2c
    624a:	781a      	ldrb	r2, [r3, #0]
    624c:	4b3f      	ldr	r3, [pc, #252]	; (634c <interface_init+0x108>)
    624e:	1c04      	adds	r4, r0, #0
    6250:	701a      	strb	r2, [r3, #0]
    6252:	2280      	movs	r2, #128	; 0x80
    6254:	483e      	ldr	r0, [pc, #248]	; (6350 <interface_init+0x10c>)
    6256:	493f      	ldr	r1, [pc, #252]	; (6354 <interface_init+0x110>)
    6258:	0092      	lsls	r2, r2, #2
    625a:	4b3f      	ldr	r3, [pc, #252]	; (6358 <interface_init+0x114>)
    625c:	4798      	blx	r3
    625e:	2800      	cmp	r0, #0
    6260:	d101      	bne.n	6266 <interface_init+0x22>
    6262:	2540      	movs	r5, #64	; 0x40
    6264:	e06f      	b.n	6346 <interface_init+0x102>
    6266:	4b3d      	ldr	r3, [pc, #244]	; (635c <interface_init+0x118>)
    6268:	6820      	ldr	r0, [r4, #0]
    626a:	6861      	ldr	r1, [r4, #4]
    626c:	4798      	blx	r3
    626e:	1c23      	adds	r3, r4, #0
    6270:	4d3b      	ldr	r5, [pc, #236]	; (6360 <interface_init+0x11c>)
    6272:	3308      	adds	r3, #8
    6274:	602b      	str	r3, [r5, #0]
    6276:	68a3      	ldr	r3, [r4, #8]
    6278:	2b00      	cmp	r3, #0
    627a:	d0f2      	beq.n	6262 <interface_init+0x1e>
    627c:	6923      	ldr	r3, [r4, #16]
    627e:	2b00      	cmp	r3, #0
    6280:	d0ef      	beq.n	6262 <interface_init+0x1e>
    6282:	6963      	ldr	r3, [r4, #20]
    6284:	2b00      	cmp	r3, #0
    6286:	d0ec      	beq.n	6262 <interface_init+0x1e>
    6288:	69a3      	ldr	r3, [r4, #24]
    628a:	2b00      	cmp	r3, #0
    628c:	d0e9      	beq.n	6262 <interface_init+0x1e>
    628e:	69e3      	ldr	r3, [r4, #28]
    6290:	2b00      	cmp	r3, #0
    6292:	d0e6      	beq.n	6262 <interface_init+0x1e>
    6294:	6a22      	ldr	r2, [r4, #32]
    6296:	2a00      	cmp	r2, #0
    6298:	d0e3      	beq.n	6262 <interface_init+0x1e>
    629a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    629c:	2a00      	cmp	r2, #0
    629e:	d0e0      	beq.n	6262 <interface_init+0x1e>
    62a0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    62a2:	2a00      	cmp	r2, #0
    62a4:	d104      	bne.n	62b0 <interface_init+0x6c>
    62a6:	2202      	movs	r2, #2
    62a8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
    62aa:	32ff      	adds	r2, #255	; 0xff
    62ac:	4291      	cmp	r1, r2
    62ae:	d0d8      	beq.n	6262 <interface_init+0x1e>
    62b0:	2001      	movs	r0, #1
    62b2:	1c01      	adds	r1, r0, #0
    62b4:	4798      	blx	r3
    62b6:	2000      	movs	r0, #0
    62b8:	682b      	ldr	r3, [r5, #0]
    62ba:	1c01      	adds	r1, r0, #0
    62bc:	695b      	ldr	r3, [r3, #20]
    62be:	4798      	blx	r3
    62c0:	682b      	ldr	r3, [r5, #0]
    62c2:	2032      	movs	r0, #50	; 0x32
    62c4:	691b      	ldr	r3, [r3, #16]
    62c6:	4798      	blx	r3
    62c8:	682b      	ldr	r3, [r5, #0]
    62ca:	2101      	movs	r1, #1
    62cc:	695b      	ldr	r3, [r3, #20]
    62ce:	2000      	movs	r0, #0
    62d0:	4798      	blx	r3
    62d2:	682b      	ldr	r3, [r5, #0]
    62d4:	4823      	ldr	r0, [pc, #140]	; (6364 <interface_init+0x120>)
    62d6:	691b      	ldr	r3, [r3, #16]
    62d8:	4798      	blx	r3
    62da:	682b      	ldr	r3, [r5, #0]
    62dc:	4822      	ldr	r0, [pc, #136]	; (6368 <interface_init+0x124>)
    62de:	69db      	ldr	r3, [r3, #28]
    62e0:	4798      	blx	r3
    62e2:	682b      	ldr	r3, [r5, #0]
    62e4:	4821      	ldr	r0, [pc, #132]	; (636c <interface_init+0x128>)
    62e6:	681b      	ldr	r3, [r3, #0]
    62e8:	4798      	blx	r3
    62ea:	4b21      	ldr	r3, [pc, #132]	; (6370 <interface_init+0x12c>)
    62ec:	6018      	str	r0, [r3, #0]
    62ee:	2800      	cmp	r0, #0
    62f0:	d101      	bne.n	62f6 <interface_init+0xb2>
    62f2:	25e2      	movs	r5, #226	; 0xe2
    62f4:	e027      	b.n	6346 <interface_init+0x102>
    62f6:	4e1f      	ldr	r6, [pc, #124]	; (6374 <interface_init+0x130>)
    62f8:	4d1f      	ldr	r5, [pc, #124]	; (6378 <interface_init+0x134>)
    62fa:	1c30      	adds	r0, r6, #0
    62fc:	47a8      	blx	r5
    62fe:	4b1f      	ldr	r3, [pc, #124]	; (637c <interface_init+0x138>)
    6300:	6018      	str	r0, [r3, #0]
    6302:	2800      	cmp	r0, #0
    6304:	d0f5      	beq.n	62f2 <interface_init+0xae>
    6306:	1c30      	adds	r0, r6, #0
    6308:	47a8      	blx	r5
    630a:	4b1d      	ldr	r3, [pc, #116]	; (6380 <interface_init+0x13c>)
    630c:	6018      	str	r0, [r3, #0]
    630e:	2800      	cmp	r0, #0
    6310:	d0ef      	beq.n	62f2 <interface_init+0xae>
    6312:	481c      	ldr	r0, [pc, #112]	; (6384 <interface_init+0x140>)
    6314:	47a8      	blx	r5
    6316:	4b1c      	ldr	r3, [pc, #112]	; (6388 <interface_init+0x144>)
    6318:	6018      	str	r0, [r3, #0]
    631a:	2800      	cmp	r0, #0
    631c:	d0e9      	beq.n	62f2 <interface_init+0xae>
    631e:	4b1b      	ldr	r3, [pc, #108]	; (638c <interface_init+0x148>)
    6320:	4798      	blx	r3
    6322:	1c20      	adds	r0, r4, #0
    6324:	4b1a      	ldr	r3, [pc, #104]	; (6390 <interface_init+0x14c>)
    6326:	4798      	blx	r3
    6328:	1e05      	subs	r5, r0, #0
    632a:	d10c      	bne.n	6346 <interface_init+0x102>
    632c:	466b      	mov	r3, sp
    632e:	2201      	movs	r2, #1
    6330:	1ddc      	adds	r4, r3, #7
    6332:	1c20      	adds	r0, r4, #0
    6334:	a902      	add	r1, sp, #8
    6336:	4252      	negs	r2, r2
    6338:	4b16      	ldr	r3, [pc, #88]	; (6394 <interface_init+0x150>)
    633a:	4798      	blx	r3
    633c:	2800      	cmp	r0, #0
    633e:	d102      	bne.n	6346 <interface_init+0x102>
    6340:	7823      	ldrb	r3, [r4, #0]
    6342:	2b39      	cmp	r3, #57	; 0x39
    6344:	d1f2      	bne.n	632c <interface_init+0xe8>
    6346:	1c28      	adds	r0, r5, #0
    6348:	b004      	add	sp, #16
    634a:	bd70      	pop	{r4, r5, r6, pc}
    634c:	20000779 	.word	0x20000779
    6350:	2000075c 	.word	0x2000075c
    6354:	20000786 	.word	0x20000786
    6358:	00008795 	.word	0x00008795
    635c:	00005609 	.word	0x00005609
    6360:	20000780 	.word	0x20000780
    6364:	00000bb8 	.word	0x00000bb8
    6368:	00005ead 	.word	0x00005ead
    636c:	00005d71 	.word	0x00005d71
    6370:	20000990 	.word	0x20000990
    6374:	00005d39 	.word	0x00005d39
    6378:	00005d45 	.word	0x00005d45
    637c:	20000774 	.word	0x20000774
    6380:	2000077c 	.word	0x2000077c
    6384:	00005f15 	.word	0x00005f15
    6388:	20000988 	.word	0x20000988
    638c:	00004301 	.word	0x00004301
    6390:	00008661 	.word	0x00008661
    6394:	000043e1 	.word	0x000043e1

00006398 <interface_event_timeout_start_timer>:
    6398:	b508      	push	{r3, lr}
    639a:	4b05      	ldr	r3, [pc, #20]	; (63b0 <interface_event_timeout_start_timer+0x18>)
    639c:	681b      	ldr	r3, [r3, #0]
    639e:	6058      	str	r0, [r3, #4]
    63a0:	4b04      	ldr	r3, [pc, #16]	; (63b4 <interface_event_timeout_start_timer+0x1c>)
    63a2:	781b      	ldrb	r3, [r3, #0]
    63a4:	2b00      	cmp	r3, #0
    63a6:	d101      	bne.n	63ac <interface_event_timeout_start_timer+0x14>
    63a8:	4b03      	ldr	r3, [pc, #12]	; (63b8 <interface_event_timeout_start_timer+0x20>)
    63aa:	4798      	blx	r3
    63ac:	bd08      	pop	{r3, pc}
    63ae:	46c0      	nop			; (mov r8, r8)
    63b0:	20000774 	.word	0x20000774
    63b4:	20000986 	.word	0x20000986
    63b8:	00005de1 	.word	0x00005de1

000063bc <interface_event_timeout_stop_timer>:
    63bc:	b508      	push	{r3, lr}
    63be:	4b02      	ldr	r3, [pc, #8]	; (63c8 <interface_event_timeout_stop_timer+0xc>)
    63c0:	6818      	ldr	r0, [r3, #0]
    63c2:	4b02      	ldr	r3, [pc, #8]	; (63cc <interface_event_timeout_stop_timer+0x10>)
    63c4:	4798      	blx	r3
    63c6:	bd08      	pop	{r3, pc}
    63c8:	20000774 	.word	0x20000774
    63cc:	00005e05 	.word	0x00005e05

000063d0 <interface_cmd_cmpl_timeout_start_timer>:
    63d0:	b508      	push	{r3, lr}
    63d2:	4b05      	ldr	r3, [pc, #20]	; (63e8 <interface_cmd_cmpl_timeout_start_timer+0x18>)
    63d4:	681b      	ldr	r3, [r3, #0]
    63d6:	6058      	str	r0, [r3, #4]
    63d8:	4b04      	ldr	r3, [pc, #16]	; (63ec <interface_cmd_cmpl_timeout_start_timer+0x1c>)
    63da:	781b      	ldrb	r3, [r3, #0]
    63dc:	2b00      	cmp	r3, #0
    63de:	d101      	bne.n	63e4 <interface_cmd_cmpl_timeout_start_timer+0x14>
    63e0:	4b03      	ldr	r3, [pc, #12]	; (63f0 <interface_cmd_cmpl_timeout_start_timer+0x20>)
    63e2:	4798      	blx	r3
    63e4:	bd08      	pop	{r3, pc}
    63e6:	46c0      	nop			; (mov r8, r8)
    63e8:	2000077c 	.word	0x2000077c
    63ec:	20000986 	.word	0x20000986
    63f0:	00005de1 	.word	0x00005de1

000063f4 <interface_cmd_cmpl_timeout_stop_timer>:
    63f4:	b508      	push	{r3, lr}
    63f6:	4b02      	ldr	r3, [pc, #8]	; (6400 <interface_cmd_cmpl_timeout_stop_timer+0xc>)
    63f8:	6818      	ldr	r0, [r3, #0]
    63fa:	4b02      	ldr	r3, [pc, #8]	; (6404 <interface_cmd_cmpl_timeout_stop_timer+0x10>)
    63fc:	4798      	blx	r3
    63fe:	bd08      	pop	{r3, pc}
    6400:	2000077c 	.word	0x2000077c
    6404:	00005e05 	.word	0x00005e05

00006408 <interface_cmd_cmpl_signal>:
    6408:	2201      	movs	r2, #1
    640a:	4b01      	ldr	r3, [pc, #4]	; (6410 <interface_cmd_cmpl_signal+0x8>)
    640c:	701a      	strb	r2, [r3, #0]
    640e:	4770      	bx	lr
    6410:	2000098c 	.word	0x2000098c

00006414 <interface_event_wait>:
    6414:	b508      	push	{r3, lr}
    6416:	4b0e      	ldr	r3, [pc, #56]	; (6450 <interface_event_wait+0x3c>)
    6418:	4798      	blx	r3
    641a:	4b0e      	ldr	r3, [pc, #56]	; (6454 <interface_event_wait+0x40>)
    641c:	2800      	cmp	r0, #0
    641e:	d107      	bne.n	6430 <interface_event_wait+0x1c>
    6420:	4a0d      	ldr	r2, [pc, #52]	; (6458 <interface_event_wait+0x44>)
    6422:	7812      	ldrb	r2, [r2, #0]
    6424:	2a01      	cmp	r2, #1
    6426:	d005      	beq.n	6434 <interface_event_wait+0x20>
    6428:	781a      	ldrb	r2, [r3, #0]
    642a:	2a01      	cmp	r2, #1
    642c:	d1f3      	bne.n	6416 <interface_event_wait+0x2>
    642e:	e001      	b.n	6434 <interface_event_wait+0x20>
    6430:	2801      	cmp	r0, #1
    6432:	d002      	beq.n	643a <interface_event_wait+0x26>
    6434:	781a      	ldrb	r2, [r3, #0]
    6436:	2a01      	cmp	r2, #1
    6438:	d102      	bne.n	6440 <interface_event_wait+0x2c>
    643a:	2000      	movs	r0, #0
    643c:	7018      	strb	r0, [r3, #0]
    643e:	e005      	b.n	644c <interface_event_wait+0x38>
    6440:	4b05      	ldr	r3, [pc, #20]	; (6458 <interface_event_wait+0x44>)
    6442:	2000      	movs	r0, #0
    6444:	781b      	ldrb	r3, [r3, #0]
    6446:	2b01      	cmp	r3, #1
    6448:	d100      	bne.n	644c <interface_event_wait+0x38>
    644a:	30d0      	adds	r0, #208	; 0xd0
    644c:	bd08      	pop	{r3, pc}
    644e:	46c0      	nop			; (mov r8, r8)
    6450:	00005f6d 	.word	0x00005f6d
    6454:	200006f0 	.word	0x200006f0
    6458:	20000722 	.word	0x20000722

0000645c <interface_cmd_cmpl_wait>:
    645c:	b538      	push	{r3, r4, r5, lr}
    645e:	20fa      	movs	r0, #250	; 0xfa
    6460:	2400      	movs	r4, #0
    6462:	4b0a      	ldr	r3, [pc, #40]	; (648c <interface_cmd_cmpl_wait+0x30>)
    6464:	0100      	lsls	r0, r0, #4
    6466:	701c      	strb	r4, [r3, #0]
    6468:	4b09      	ldr	r3, [pc, #36]	; (6490 <interface_cmd_cmpl_wait+0x34>)
    646a:	4798      	blx	r3
    646c:	4b09      	ldr	r3, [pc, #36]	; (6494 <interface_cmd_cmpl_wait+0x38>)
    646e:	781a      	ldrb	r2, [r3, #0]
    6470:	1c1d      	adds	r5, r3, #0
    6472:	2a01      	cmp	r2, #1
    6474:	d004      	beq.n	6480 <interface_cmd_cmpl_wait+0x24>
    6476:	4b08      	ldr	r3, [pc, #32]	; (6498 <interface_cmd_cmpl_wait+0x3c>)
    6478:	4798      	blx	r3
    647a:	1e04      	subs	r4, r0, #0
    647c:	2cd0      	cmp	r4, #208	; 0xd0
    647e:	d1f5      	bne.n	646c <interface_cmd_cmpl_wait+0x10>
    6480:	4b06      	ldr	r3, [pc, #24]	; (649c <interface_cmd_cmpl_wait+0x40>)
    6482:	4798      	blx	r3
    6484:	2300      	movs	r3, #0
    6486:	1c20      	adds	r0, r4, #0
    6488:	702b      	strb	r3, [r5, #0]
    648a:	bd38      	pop	{r3, r4, r5, pc}
    648c:	20000722 	.word	0x20000722
    6490:	000063d1 	.word	0x000063d1
    6494:	2000098c 	.word	0x2000098c
    6498:	00006415 	.word	0x00006415
    649c:	000063f5 	.word	0x000063f5

000064a0 <l2cc_data_send_rsp_handler>:
    64a0:	b510      	push	{r4, lr}
    64a2:	7802      	ldrb	r2, [r0, #0]
    64a4:	700a      	strb	r2, [r1, #0]
    64a6:	7883      	ldrb	r3, [r0, #2]
    64a8:	7844      	ldrb	r4, [r0, #1]
    64aa:	021b      	lsls	r3, r3, #8
    64ac:	4323      	orrs	r3, r4
    64ae:	804b      	strh	r3, [r1, #2]
    64b0:	7903      	ldrb	r3, [r0, #4]
    64b2:	78c0      	ldrb	r0, [r0, #3]
    64b4:	021b      	lsls	r3, r3, #8
    64b6:	4303      	orrs	r3, r0
    64b8:	808b      	strh	r3, [r1, #4]
    64ba:	2a00      	cmp	r2, #0
    64bc:	d103      	bne.n	64c6 <l2cc_data_send_rsp_handler+0x26>
    64be:	4a02      	ldr	r2, [pc, #8]	; (64c8 <l2cc_data_send_rsp_handler+0x28>)
    64c0:	7813      	ldrb	r3, [r2, #0]
    64c2:	3301      	adds	r3, #1
    64c4:	7013      	strb	r3, [r2, #0]
    64c6:	bd10      	pop	{r4, pc}
    64c8:	20000076 	.word	0x20000076

000064cc <l2cc_data_received_handler>:
    64cc:	b508      	push	{r3, lr}
    64ce:	1c03      	adds	r3, r0, #0
    64d0:	7842      	ldrb	r2, [r0, #1]
    64d2:	7800      	ldrb	r0, [r0, #0]
    64d4:	0212      	lsls	r2, r2, #8
    64d6:	4302      	orrs	r2, r0
    64d8:	800a      	strh	r2, [r1, #0]
    64da:	78da      	ldrb	r2, [r3, #3]
    64dc:	7898      	ldrb	r0, [r3, #2]
    64de:	0212      	lsls	r2, r2, #8
    64e0:	4302      	orrs	r2, r0
    64e2:	804a      	strh	r2, [r1, #2]
    64e4:	795a      	ldrb	r2, [r3, #5]
    64e6:	7918      	ldrb	r0, [r3, #4]
    64e8:	0212      	lsls	r2, r2, #8
    64ea:	4302      	orrs	r2, r0
    64ec:	808a      	strh	r2, [r1, #4]
    64ee:	1d88      	adds	r0, r1, #6
    64f0:	1d99      	adds	r1, r3, #6
    64f2:	4b01      	ldr	r3, [pc, #4]	; (64f8 <l2cc_data_received_handler+0x2c>)
    64f4:	4798      	blx	r3
    64f6:	bd08      	pop	{r3, pc}
    64f8:	00008a6f 	.word	0x00008a6f

000064fc <check_enc_process.isra.0>:
    64fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    64fe:	1c07      	adds	r7, r0, #0
    6500:	1c0e      	adds	r6, r1, #0
    6502:	1e15      	subs	r5, r2, #0
    6504:	9301      	str	r3, [sp, #4]
    6506:	2d05      	cmp	r5, #5
    6508:	d82e      	bhi.n	6568 <check_enc_process.isra.0+0x6c>
    650a:	2401      	movs	r4, #1
    650c:	1c22      	adds	r2, r4, #0
    650e:	2333      	movs	r3, #51	; 0x33
    6510:	40aa      	lsls	r2, r5
    6512:	421a      	tst	r2, r3
    6514:	d028      	beq.n	6568 <check_enc_process.isra.0+0x6c>
    6516:	780b      	ldrb	r3, [r1, #0]
    6518:	3b07      	subs	r3, #7
    651a:	2b09      	cmp	r3, #9
    651c:	d90a      	bls.n	6534 <check_enc_process.isra.0+0x38>
    651e:	4c19      	ldr	r4, [pc, #100]	; (6584 <check_enc_process.isra.0+0x88>)
    6520:	4919      	ldr	r1, [pc, #100]	; (6588 <check_enc_process.isra.0+0x8c>)
    6522:	4b1a      	ldr	r3, [pc, #104]	; (658c <check_enc_process.isra.0+0x90>)
    6524:	481a      	ldr	r0, [pc, #104]	; (6590 <check_enc_process.isra.0+0x94>)
    6526:	22f1      	movs	r2, #241	; 0xf1
    6528:	6825      	ldr	r5, [r4, #0]
    652a:	47a8      	blx	r5
    652c:	7831      	ldrb	r1, [r6, #0]
    652e:	6823      	ldr	r3, [r4, #0]
    6530:	4818      	ldr	r0, [pc, #96]	; (6594 <check_enc_process.isra.0+0x98>)
    6532:	e023      	b.n	657c <check_enc_process.isra.0+0x80>
    6534:	9b01      	ldr	r3, [sp, #4]
    6536:	2b00      	cmp	r3, #0
    6538:	d101      	bne.n	653e <check_enc_process.isra.0+0x42>
    653a:	2000      	movs	r0, #0
    653c:	e020      	b.n	6580 <check_enc_process.isra.0+0x84>
    653e:	4b16      	ldr	r3, [pc, #88]	; (6598 <check_enc_process.isra.0+0x9c>)
    6540:	1c38      	adds	r0, r7, #0
    6542:	2100      	movs	r1, #0
    6544:	4798      	blx	r3
    6546:	9b01      	ldr	r3, [sp, #4]
    6548:	7018      	strb	r0, [r3, #0]
    654a:	2807      	cmp	r0, #7
    654c:	d9f5      	bls.n	653a <check_enc_process.isra.0+0x3e>
    654e:	4d0d      	ldr	r5, [pc, #52]	; (6584 <check_enc_process.isra.0+0x88>)
    6550:	490d      	ldr	r1, [pc, #52]	; (6588 <check_enc_process.isra.0+0x8c>)
    6552:	22fa      	movs	r2, #250	; 0xfa
    6554:	4b0d      	ldr	r3, [pc, #52]	; (658c <check_enc_process.isra.0+0x90>)
    6556:	480e      	ldr	r0, [pc, #56]	; (6590 <check_enc_process.isra.0+0x94>)
    6558:	682e      	ldr	r6, [r5, #0]
    655a:	47b0      	blx	r6
    655c:	682b      	ldr	r3, [r5, #0]
    655e:	480f      	ldr	r0, [pc, #60]	; (659c <check_enc_process.isra.0+0xa0>)
    6560:	1c39      	adds	r1, r7, #0
    6562:	4798      	blx	r3
    6564:	1c20      	adds	r0, r4, #0
    6566:	e00b      	b.n	6580 <check_enc_process.isra.0+0x84>
    6568:	4c06      	ldr	r4, [pc, #24]	; (6584 <check_enc_process.isra.0+0x88>)
    656a:	4907      	ldr	r1, [pc, #28]	; (6588 <check_enc_process.isra.0+0x8c>)
    656c:	4b07      	ldr	r3, [pc, #28]	; (658c <check_enc_process.isra.0+0x90>)
    656e:	4808      	ldr	r0, [pc, #32]	; (6590 <check_enc_process.isra.0+0x94>)
    6570:	22ec      	movs	r2, #236	; 0xec
    6572:	6826      	ldr	r6, [r4, #0]
    6574:	47b0      	blx	r6
    6576:	1c29      	adds	r1, r5, #0
    6578:	6823      	ldr	r3, [r4, #0]
    657a:	4809      	ldr	r0, [pc, #36]	; (65a0 <check_enc_process.isra.0+0xa4>)
    657c:	4798      	blx	r3
    657e:	20cf      	movs	r0, #207	; 0xcf
    6580:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    6582:	46c0      	nop			; (mov r8, r8)
    6584:	20000078 	.word	0x20000078
    6588:	0000ae8c 	.word	0x0000ae8c
    658c:	0000afbe 	.word	0x0000afbe
    6590:	0000aab9 	.word	0x0000aab9
    6594:	0000aeb6 	.word	0x0000aeb6
    6598:	00006cbd 	.word	0x00006cbd
    659c:	0000aecc 	.word	0x0000aecc
    65a0:	0000adaa 	.word	0x0000adaa

000065a4 <at_ble_authenticate>:
    65a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    65a6:	1c0c      	adds	r4, r1, #0
    65a8:	211f      	movs	r1, #31
    65aa:	b08b      	sub	sp, #44	; 0x2c
    65ac:	9307      	str	r3, [sp, #28]
    65ae:	ab02      	add	r3, sp, #8
    65b0:	18c9      	adds	r1, r1, r3
    65b2:	230f      	movs	r3, #15
    65b4:	700b      	strb	r3, [r1, #0]
    65b6:	4b6b      	ldr	r3, [pc, #428]	; (6764 <at_ble_authenticate+0x1c0>)
    65b8:	1c05      	adds	r5, r0, #0
    65ba:	1c16      	adds	r6, r2, #0
    65bc:	4798      	blx	r3
    65be:	1e07      	subs	r7, r0, #0
    65c0:	2f07      	cmp	r7, #7
    65c2:	d90b      	bls.n	65dc <at_ble_authenticate+0x38>
    65c4:	4c68      	ldr	r4, [pc, #416]	; (6768 <at_ble_authenticate+0x1c4>)
    65c6:	4969      	ldr	r1, [pc, #420]	; (676c <at_ble_authenticate+0x1c8>)
    65c8:	221a      	movs	r2, #26
    65ca:	4b69      	ldr	r3, [pc, #420]	; (6770 <at_ble_authenticate+0x1cc>)
    65cc:	4869      	ldr	r0, [pc, #420]	; (6774 <at_ble_authenticate+0x1d0>)
    65ce:	6825      	ldr	r5, [r4, #0]
    65d0:	47a8      	blx	r5
    65d2:	6823      	ldr	r3, [r4, #0]
    65d4:	4868      	ldr	r0, [pc, #416]	; (6778 <at_ble_authenticate+0x1d4>)
    65d6:	4798      	blx	r3
    65d8:	2001      	movs	r0, #1
    65da:	e0c0      	b.n	675e <at_ble_authenticate+0x1ba>
    65dc:	2c00      	cmp	r4, #0
    65de:	d11b      	bne.n	6618 <at_ble_authenticate+0x74>
    65e0:	2312      	movs	r3, #18
    65e2:	435f      	muls	r7, r3
    65e4:	4b65      	ldr	r3, [pc, #404]	; (677c <at_ble_authenticate+0x1d8>)
    65e6:	5cfb      	ldrb	r3, [r7, r3]
    65e8:	2b01      	cmp	r3, #1
    65ea:	d10b      	bne.n	6604 <at_ble_authenticate+0x60>
    65ec:	9504      	str	r5, [sp, #16]
    65ee:	9400      	str	r4, [sp, #0]
    65f0:	9401      	str	r4, [sp, #4]
    65f2:	9402      	str	r4, [sp, #8]
    65f4:	9403      	str	r4, [sp, #12]
    65f6:	1c20      	adds	r0, r4, #0
    65f8:	1c21      	adds	r1, r4, #0
    65fa:	1c22      	adds	r2, r4, #0
    65fc:	1c23      	adds	r3, r4, #0
    65fe:	4d60      	ldr	r5, [pc, #384]	; (6780 <at_ble_authenticate+0x1dc>)
    6600:	47a8      	blx	r5
    6602:	e07b      	b.n	66fc <at_ble_authenticate+0x158>
    6604:	4c58      	ldr	r4, [pc, #352]	; (6768 <at_ble_authenticate+0x1c4>)
    6606:	4b5a      	ldr	r3, [pc, #360]	; (6770 <at_ble_authenticate+0x1cc>)
    6608:	485a      	ldr	r0, [pc, #360]	; (6774 <at_ble_authenticate+0x1d0>)
    660a:	4958      	ldr	r1, [pc, #352]	; (676c <at_ble_authenticate+0x1c8>)
    660c:	2229      	movs	r2, #41	; 0x29
    660e:	6825      	ldr	r5, [r4, #0]
    6610:	47a8      	blx	r5
    6612:	6823      	ldr	r3, [r4, #0]
    6614:	485b      	ldr	r0, [pc, #364]	; (6784 <at_ble_authenticate+0x1e0>)
    6616:	e0a0      	b.n	675a <at_ble_authenticate+0x1b6>
    6618:	7922      	ldrb	r2, [r4, #4]
    661a:	2a06      	cmp	r2, #6
    661c:	d904      	bls.n	6628 <at_ble_authenticate+0x84>
    661e:	7963      	ldrb	r3, [r4, #5]
    6620:	2b10      	cmp	r3, #16
    6622:	d801      	bhi.n	6628 <at_ble_authenticate+0x84>
    6624:	429a      	cmp	r2, r3
    6626:	d909      	bls.n	663c <at_ble_authenticate+0x98>
    6628:	4c4f      	ldr	r4, [pc, #316]	; (6768 <at_ble_authenticate+0x1c4>)
    662a:	4b51      	ldr	r3, [pc, #324]	; (6770 <at_ble_authenticate+0x1cc>)
    662c:	4851      	ldr	r0, [pc, #324]	; (6774 <at_ble_authenticate+0x1d0>)
    662e:	494f      	ldr	r1, [pc, #316]	; (676c <at_ble_authenticate+0x1c8>)
    6630:	2232      	movs	r2, #50	; 0x32
    6632:	6825      	ldr	r5, [r4, #0]
    6634:	47a8      	blx	r5
    6636:	6823      	ldr	r3, [r4, #0]
    6638:	4853      	ldr	r0, [pc, #332]	; (6788 <at_ble_authenticate+0x1e4>)
    663a:	e08e      	b.n	675a <at_ble_authenticate+0x1b6>
    663c:	7a23      	ldrb	r3, [r4, #8]
    663e:	2b04      	cmp	r3, #4
    6640:	d909      	bls.n	6656 <at_ble_authenticate+0xb2>
    6642:	4c49      	ldr	r4, [pc, #292]	; (6768 <at_ble_authenticate+0x1c4>)
    6644:	4b4a      	ldr	r3, [pc, #296]	; (6770 <at_ble_authenticate+0x1cc>)
    6646:	484b      	ldr	r0, [pc, #300]	; (6774 <at_ble_authenticate+0x1d0>)
    6648:	4948      	ldr	r1, [pc, #288]	; (676c <at_ble_authenticate+0x1c8>)
    664a:	2239      	movs	r2, #57	; 0x39
    664c:	6825      	ldr	r5, [r4, #0]
    664e:	47a8      	blx	r5
    6650:	6823      	ldr	r3, [r4, #0]
    6652:	484e      	ldr	r0, [pc, #312]	; (678c <at_ble_authenticate+0x1e8>)
    6654:	e081      	b.n	675a <at_ble_authenticate+0x1b6>
    6656:	79a3      	ldrb	r3, [r4, #6]
    6658:	2b07      	cmp	r3, #7
    665a:	d802      	bhi.n	6662 <at_ble_authenticate+0xbe>
    665c:	79e3      	ldrb	r3, [r4, #7]
    665e:	2b07      	cmp	r3, #7
    6660:	d909      	bls.n	6676 <at_ble_authenticate+0xd2>
    6662:	4c41      	ldr	r4, [pc, #260]	; (6768 <at_ble_authenticate+0x1c4>)
    6664:	4b42      	ldr	r3, [pc, #264]	; (6770 <at_ble_authenticate+0x1cc>)
    6666:	4843      	ldr	r0, [pc, #268]	; (6774 <at_ble_authenticate+0x1d0>)
    6668:	4940      	ldr	r1, [pc, #256]	; (676c <at_ble_authenticate+0x1c8>)
    666a:	2241      	movs	r2, #65	; 0x41
    666c:	6825      	ldr	r5, [r4, #0]
    666e:	47a8      	blx	r5
    6670:	6823      	ldr	r3, [r4, #0]
    6672:	4847      	ldr	r0, [pc, #284]	; (6790 <at_ble_authenticate+0x1ec>)
    6674:	e071      	b.n	675a <at_ble_authenticate+0x1b6>
    6676:	78a3      	ldrb	r3, [r4, #2]
    6678:	2b00      	cmp	r3, #0
    667a:	d010      	beq.n	669e <at_ble_authenticate+0xfa>
    667c:	2e00      	cmp	r6, #0
    667e:	d109      	bne.n	6694 <at_ble_authenticate+0xf0>
    6680:	4c39      	ldr	r4, [pc, #228]	; (6768 <at_ble_authenticate+0x1c4>)
    6682:	4b3b      	ldr	r3, [pc, #236]	; (6770 <at_ble_authenticate+0x1cc>)
    6684:	483b      	ldr	r0, [pc, #236]	; (6774 <at_ble_authenticate+0x1d0>)
    6686:	4939      	ldr	r1, [pc, #228]	; (676c <at_ble_authenticate+0x1c8>)
    6688:	2249      	movs	r2, #73	; 0x49
    668a:	6825      	ldr	r5, [r4, #0]
    668c:	47a8      	blx	r5
    668e:	6823      	ldr	r3, [r4, #0]
    6690:	4840      	ldr	r0, [pc, #256]	; (6794 <at_ble_authenticate+0x1f0>)
    6692:	e062      	b.n	675a <at_ble_authenticate+0x1b6>
    6694:	4840      	ldr	r0, [pc, #256]	; (6798 <at_ble_authenticate+0x1f4>)
    6696:	1c31      	adds	r1, r6, #0
    6698:	221c      	movs	r2, #28
    669a:	4b40      	ldr	r3, [pc, #256]	; (679c <at_ble_authenticate+0x1f8>)
    669c:	4798      	blx	r3
    669e:	9b07      	ldr	r3, [sp, #28]
    66a0:	2b00      	cmp	r3, #0
    66a2:	d005      	beq.n	66b0 <at_ble_authenticate+0x10c>
    66a4:	483e      	ldr	r0, [pc, #248]	; (67a0 <at_ble_authenticate+0x1fc>)
    66a6:	1c19      	adds	r1, r3, #0
    66a8:	309a      	adds	r0, #154	; 0x9a
    66aa:	2210      	movs	r2, #16
    66ac:	4b3b      	ldr	r3, [pc, #236]	; (679c <at_ble_authenticate+0x1f8>)
    66ae:	4798      	blx	r3
    66b0:	7863      	ldrb	r3, [r4, #1]
    66b2:	78a2      	ldrb	r2, [r4, #2]
    66b4:	009b      	lsls	r3, r3, #2
    66b6:	4313      	orrs	r3, r2
    66b8:	2212      	movs	r2, #18
    66ba:	4357      	muls	r7, r2
    66bc:	4a2f      	ldr	r2, [pc, #188]	; (677c <at_ble_authenticate+0x1d8>)
    66be:	b2db      	uxtb	r3, r3
    66c0:	5cba      	ldrb	r2, [r7, r2]
    66c2:	2a00      	cmp	r2, #0
    66c4:	d11c      	bne.n	6700 <at_ble_authenticate+0x15c>
    66c6:	79a0      	ldrb	r0, [r4, #6]
    66c8:	0742      	lsls	r2, r0, #29
    66ca:	d502      	bpl.n	66d2 <at_ble_authenticate+0x12e>
    66cc:	9a07      	ldr	r2, [sp, #28]
    66ce:	2a00      	cmp	r2, #0
    66d0:	d003      	beq.n	66da <at_ble_authenticate+0x136>
    66d2:	07c2      	lsls	r2, r0, #31
    66d4:	d506      	bpl.n	66e4 <at_ble_authenticate+0x140>
    66d6:	2e00      	cmp	r6, #0
    66d8:	d104      	bne.n	66e4 <at_ble_authenticate+0x140>
    66da:	4c23      	ldr	r4, [pc, #140]	; (6768 <at_ble_authenticate+0x1c4>)
    66dc:	4825      	ldr	r0, [pc, #148]	; (6774 <at_ble_authenticate+0x1d0>)
    66de:	4923      	ldr	r1, [pc, #140]	; (676c <at_ble_authenticate+0x1c8>)
    66e0:	2260      	movs	r2, #96	; 0x60
    66e2:	e01d      	b.n	6720 <at_ble_authenticate+0x17c>
    66e4:	7966      	ldrb	r6, [r4, #5]
    66e6:	7821      	ldrb	r1, [r4, #0]
    66e8:	78e2      	ldrb	r2, [r4, #3]
    66ea:	9600      	str	r6, [sp, #0]
    66ec:	9001      	str	r0, [sp, #4]
    66ee:	79e0      	ldrb	r0, [r4, #7]
    66f0:	9002      	str	r0, [sp, #8]
    66f2:	7a20      	ldrb	r0, [r4, #8]
    66f4:	4c2b      	ldr	r4, [pc, #172]	; (67a4 <at_ble_authenticate+0x200>)
    66f6:	9003      	str	r0, [sp, #12]
    66f8:	1c28      	adds	r0, r5, #0
    66fa:	47a0      	blx	r4
    66fc:	2000      	movs	r0, #0
    66fe:	e02e      	b.n	675e <at_ble_authenticate+0x1ba>
    6700:	2a01      	cmp	r2, #1
    6702:	d121      	bne.n	6748 <at_ble_authenticate+0x1a4>
    6704:	79e0      	ldrb	r0, [r4, #7]
    6706:	0742      	lsls	r2, r0, #29
    6708:	d502      	bpl.n	6710 <at_ble_authenticate+0x16c>
    670a:	9a07      	ldr	r2, [sp, #28]
    670c:	2a00      	cmp	r2, #0
    670e:	d003      	beq.n	6718 <at_ble_authenticate+0x174>
    6710:	07c2      	lsls	r2, r0, #31
    6712:	d50b      	bpl.n	672c <at_ble_authenticate+0x188>
    6714:	2e00      	cmp	r6, #0
    6716:	d109      	bne.n	672c <at_ble_authenticate+0x188>
    6718:	226e      	movs	r2, #110	; 0x6e
    671a:	4c13      	ldr	r4, [pc, #76]	; (6768 <at_ble_authenticate+0x1c4>)
    671c:	4815      	ldr	r0, [pc, #84]	; (6774 <at_ble_authenticate+0x1d0>)
    671e:	4913      	ldr	r1, [pc, #76]	; (676c <at_ble_authenticate+0x1c8>)
    6720:	4b13      	ldr	r3, [pc, #76]	; (6770 <at_ble_authenticate+0x1cc>)
    6722:	6825      	ldr	r5, [r4, #0]
    6724:	47a8      	blx	r5
    6726:	6823      	ldr	r3, [r4, #0]
    6728:	481f      	ldr	r0, [pc, #124]	; (67a8 <at_ble_authenticate+0x204>)
    672a:	e016      	b.n	675a <at_ble_authenticate+0x1b6>
    672c:	7966      	ldrb	r6, [r4, #5]
    672e:	7821      	ldrb	r1, [r4, #0]
    6730:	78e2      	ldrb	r2, [r4, #3]
    6732:	9600      	str	r6, [sp, #0]
    6734:	79a6      	ldrb	r6, [r4, #6]
    6736:	9002      	str	r0, [sp, #8]
    6738:	9601      	str	r6, [sp, #4]
    673a:	7a20      	ldrb	r0, [r4, #8]
    673c:	9504      	str	r5, [sp, #16]
    673e:	9003      	str	r0, [sp, #12]
    6740:	4c0f      	ldr	r4, [pc, #60]	; (6780 <at_ble_authenticate+0x1dc>)
    6742:	2001      	movs	r0, #1
    6744:	47a0      	blx	r4
    6746:	e7d9      	b.n	66fc <at_ble_authenticate+0x158>
    6748:	4c07      	ldr	r4, [pc, #28]	; (6768 <at_ble_authenticate+0x1c4>)
    674a:	4b09      	ldr	r3, [pc, #36]	; (6770 <at_ble_authenticate+0x1cc>)
    674c:	4809      	ldr	r0, [pc, #36]	; (6774 <at_ble_authenticate+0x1d0>)
    674e:	4907      	ldr	r1, [pc, #28]	; (676c <at_ble_authenticate+0x1c8>)
    6750:	2279      	movs	r2, #121	; 0x79
    6752:	6825      	ldr	r5, [r4, #0]
    6754:	47a8      	blx	r5
    6756:	6823      	ldr	r3, [r4, #0]
    6758:	4814      	ldr	r0, [pc, #80]	; (67ac <at_ble_authenticate+0x208>)
    675a:	4798      	blx	r3
    675c:	20cf      	movs	r0, #207	; 0xcf
    675e:	b00b      	add	sp, #44	; 0x2c
    6760:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6762:	46c0      	nop			; (mov r8, r8)
    6764:	00006cbd 	.word	0x00006cbd
    6768:	20000078 	.word	0x20000078
    676c:	0000ae8c 	.word	0x0000ae8c
    6770:	0000afe8 	.word	0x0000afe8
    6774:	0000aab9 	.word	0x0000aab9
    6778:	0000aedd 	.word	0x0000aedd
    677c:	20001c64 	.word	0x20001c64
    6780:	000072dd 	.word	0x000072dd
    6784:	0000aef3 	.word	0x0000aef3
    6788:	0000af05 	.word	0x0000af05
    678c:	0000af18 	.word	0x0000af18
    6790:	0000af2f 	.word	0x0000af2f
    6794:	0000af43 	.word	0x0000af43
    6798:	20001d72 	.word	0x20001d72
    679c:	00008a6f 	.word	0x00008a6f
    67a0:	20001cf4 	.word	0x20001cf4
    67a4:	000070ad 	.word	0x000070ad
    67a8:	0000af59 	.word	0x0000af59
    67ac:	0000af6d 	.word	0x0000af6d

000067b0 <at_ble_pair_key_reply>:
    67b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    67b2:	b085      	sub	sp, #20
    67b4:	1c05      	adds	r5, r0, #0
    67b6:	1c0c      	adds	r4, r1, #0
    67b8:	1c16      	adds	r6, r2, #0
    67ba:	2100      	movs	r1, #0
    67bc:	4668      	mov	r0, sp
    67be:	2210      	movs	r2, #16
    67c0:	4b1e      	ldr	r3, [pc, #120]	; (683c <at_ble_pair_key_reply+0x8c>)
    67c2:	4798      	blx	r3
    67c4:	2101      	movs	r1, #1
    67c6:	2e00      	cmp	r6, #0
    67c8:	d101      	bne.n	67ce <at_ble_pair_key_reply+0x1e>
    67ca:	1c31      	adds	r1, r6, #0
    67cc:	466e      	mov	r6, sp
    67ce:	2c00      	cmp	r4, #0
    67d0:	d116      	bne.n	6800 <at_ble_pair_key_reply+0x50>
    67d2:	2701      	movs	r7, #1
    67d4:	1c23      	adds	r3, r4, #0
    67d6:	1d70      	adds	r0, r6, #5
    67d8:	3e01      	subs	r6, #1
    67da:	7802      	ldrb	r2, [r0, #0]
    67dc:	3801      	subs	r0, #1
    67de:	3a30      	subs	r2, #48	; 0x30
    67e0:	437a      	muls	r2, r7
    67e2:	189b      	adds	r3, r3, r2
    67e4:	220a      	movs	r2, #10
    67e6:	4357      	muls	r7, r2
    67e8:	42b0      	cmp	r0, r6
    67ea:	d1f6      	bne.n	67da <at_ble_pair_key_reply+0x2a>
    67ec:	466a      	mov	r2, sp
    67ee:	4668      	mov	r0, sp
    67f0:	7013      	strb	r3, [r2, #0]
    67f2:	0a1a      	lsrs	r2, r3, #8
    67f4:	7042      	strb	r2, [r0, #1]
    67f6:	0c1a      	lsrs	r2, r3, #16
    67f8:	0e1b      	lsrs	r3, r3, #24
    67fa:	7082      	strb	r2, [r0, #2]
    67fc:	70c3      	strb	r3, [r0, #3]
    67fe:	e015      	b.n	682c <at_ble_pair_key_reply+0x7c>
    6800:	2c01      	cmp	r4, #1
    6802:	d107      	bne.n	6814 <at_ble_pair_key_reply+0x64>
    6804:	2300      	movs	r3, #0
    6806:	4668      	mov	r0, sp
    6808:	5cf2      	ldrb	r2, [r6, r3]
    680a:	54c2      	strb	r2, [r0, r3]
    680c:	3301      	adds	r3, #1
    680e:	2b10      	cmp	r3, #16
    6810:	d1f9      	bne.n	6806 <at_ble_pair_key_reply+0x56>
    6812:	e00b      	b.n	682c <at_ble_pair_key_reply+0x7c>
    6814:	4c0a      	ldr	r4, [pc, #40]	; (6840 <at_ble_pair_key_reply+0x90>)
    6816:	490b      	ldr	r1, [pc, #44]	; (6844 <at_ble_pair_key_reply+0x94>)
    6818:	22ac      	movs	r2, #172	; 0xac
    681a:	4b0b      	ldr	r3, [pc, #44]	; (6848 <at_ble_pair_key_reply+0x98>)
    681c:	480b      	ldr	r0, [pc, #44]	; (684c <at_ble_pair_key_reply+0x9c>)
    681e:	6825      	ldr	r5, [r4, #0]
    6820:	47a8      	blx	r5
    6822:	6823      	ldr	r3, [r4, #0]
    6824:	480a      	ldr	r0, [pc, #40]	; (6850 <at_ble_pair_key_reply+0xa0>)
    6826:	4798      	blx	r3
    6828:	20cf      	movs	r0, #207	; 0xcf
    682a:	e005      	b.n	6838 <at_ble_pair_key_reply+0x88>
    682c:	2004      	movs	r0, #4
    682e:	466a      	mov	r2, sp
    6830:	1c2b      	adds	r3, r5, #0
    6832:	4c08      	ldr	r4, [pc, #32]	; (6854 <at_ble_pair_key_reply+0xa4>)
    6834:	47a0      	blx	r4
    6836:	2000      	movs	r0, #0
    6838:	b005      	add	sp, #20
    683a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    683c:	00008a81 	.word	0x00008a81
    6840:	20000078 	.word	0x20000078
    6844:	0000ae8c 	.word	0x0000ae8c
    6848:	0000ae58 	.word	0x0000ae58
    684c:	0000aab9 	.word	0x0000aab9
    6850:	0000af80 	.word	0x0000af80
    6854:	00007361 	.word	0x00007361

00006858 <at_ble_send_slave_sec_request>:
    6858:	b570      	push	{r4, r5, r6, lr}
    685a:	4b17      	ldr	r3, [pc, #92]	; (68b8 <at_ble_send_slave_sec_request+0x60>)
    685c:	1c0e      	adds	r6, r1, #0
    685e:	2100      	movs	r1, #0
    6860:	1c05      	adds	r5, r0, #0
    6862:	1c14      	adds	r4, r2, #0
    6864:	4798      	blx	r3
    6866:	2807      	cmp	r0, #7
    6868:	d90b      	bls.n	6882 <at_ble_send_slave_sec_request+0x2a>
    686a:	4c14      	ldr	r4, [pc, #80]	; (68bc <at_ble_send_slave_sec_request+0x64>)
    686c:	4914      	ldr	r1, [pc, #80]	; (68c0 <at_ble_send_slave_sec_request+0x68>)
    686e:	22c3      	movs	r2, #195	; 0xc3
    6870:	4b14      	ldr	r3, [pc, #80]	; (68c4 <at_ble_send_slave_sec_request+0x6c>)
    6872:	4815      	ldr	r0, [pc, #84]	; (68c8 <at_ble_send_slave_sec_request+0x70>)
    6874:	6825      	ldr	r5, [r4, #0]
    6876:	47a8      	blx	r5
    6878:	6823      	ldr	r3, [r4, #0]
    687a:	4814      	ldr	r0, [pc, #80]	; (68cc <at_ble_send_slave_sec_request+0x74>)
    687c:	4798      	blx	r3
    687e:	2001      	movs	r0, #1
    6880:	e018      	b.n	68b4 <at_ble_send_slave_sec_request+0x5c>
    6882:	2312      	movs	r3, #18
    6884:	4358      	muls	r0, r3
    6886:	4b12      	ldr	r3, [pc, #72]	; (68d0 <at_ble_send_slave_sec_request+0x78>)
    6888:	5cc3      	ldrb	r3, [r0, r3]
    688a:	2b01      	cmp	r3, #1
    688c:	d00b      	beq.n	68a6 <at_ble_send_slave_sec_request+0x4e>
    688e:	4c0b      	ldr	r4, [pc, #44]	; (68bc <at_ble_send_slave_sec_request+0x64>)
    6890:	490b      	ldr	r1, [pc, #44]	; (68c0 <at_ble_send_slave_sec_request+0x68>)
    6892:	22c9      	movs	r2, #201	; 0xc9
    6894:	4b0b      	ldr	r3, [pc, #44]	; (68c4 <at_ble_send_slave_sec_request+0x6c>)
    6896:	480c      	ldr	r0, [pc, #48]	; (68c8 <at_ble_send_slave_sec_request+0x70>)
    6898:	6825      	ldr	r5, [r4, #0]
    689a:	47a8      	blx	r5
    689c:	6823      	ldr	r3, [r4, #0]
    689e:	480d      	ldr	r0, [pc, #52]	; (68d4 <at_ble_send_slave_sec_request+0x7c>)
    68a0:	4798      	blx	r3
    68a2:	20e0      	movs	r0, #224	; 0xe0
    68a4:	e006      	b.n	68b4 <at_ble_send_slave_sec_request+0x5c>
    68a6:	00b1      	lsls	r1, r6, #2
    68a8:	430c      	orrs	r4, r1
    68aa:	1c28      	adds	r0, r5, #0
    68ac:	b2e1      	uxtb	r1, r4
    68ae:	4b0a      	ldr	r3, [pc, #40]	; (68d8 <at_ble_send_slave_sec_request+0x80>)
    68b0:	4798      	blx	r3
    68b2:	2000      	movs	r0, #0
    68b4:	bd70      	pop	{r4, r5, r6, pc}
    68b6:	46c0      	nop			; (mov r8, r8)
    68b8:	00006cbd 	.word	0x00006cbd
    68bc:	20000078 	.word	0x20000078
    68c0:	0000ae8c 	.word	0x0000ae8c
    68c4:	0000ae6e 	.word	0x0000ae6e
    68c8:	0000aab9 	.word	0x0000aab9
    68cc:	0000af8f 	.word	0x0000af8f
    68d0:	20001c64 	.word	0x20001c64
    68d4:	0000af9f 	.word	0x0000af9f
    68d8:	000073b9 	.word	0x000073b9

000068dc <at_ble_encryption_start>:
    68dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    68de:	260f      	movs	r6, #15
    68e0:	b087      	sub	sp, #28
    68e2:	ab02      	add	r3, sp, #8
    68e4:	18f6      	adds	r6, r6, r3
    68e6:	2308      	movs	r3, #8
    68e8:	1c07      	adds	r7, r0, #0
    68ea:	1e0c      	subs	r4, r1, #0
    68ec:	9203      	str	r2, [sp, #12]
    68ee:	7033      	strb	r3, [r6, #0]
    68f0:	d02f      	beq.n	6952 <at_ble_encryption_start+0x76>
    68f2:	4d20      	ldr	r5, [pc, #128]	; (6974 <at_ble_encryption_start+0x98>)
    68f4:	311a      	adds	r1, #26
    68f6:	1c33      	adds	r3, r6, #0
    68f8:	47a8      	blx	r5
    68fa:	1e05      	subs	r5, r0, #0
    68fc:	d12a      	bne.n	6954 <at_ble_encryption_start+0x78>
    68fe:	2212      	movs	r2, #18
    6900:	7833      	ldrb	r3, [r6, #0]
    6902:	4353      	muls	r3, r2
    6904:	4a1c      	ldr	r2, [pc, #112]	; (6978 <at_ble_encryption_start+0x9c>)
    6906:	5c9b      	ldrb	r3, [r3, r2]
    6908:	2b00      	cmp	r3, #0
    690a:	d011      	beq.n	6930 <at_ble_encryption_start+0x54>
    690c:	2216      	movs	r2, #22
    690e:	4c1b      	ldr	r4, [pc, #108]	; (697c <at_ble_encryption_start+0xa0>)
    6910:	491b      	ldr	r1, [pc, #108]	; (6980 <at_ble_encryption_start+0xa4>)
    6912:	32ff      	adds	r2, #255	; 0xff
    6914:	4b1b      	ldr	r3, [pc, #108]	; (6984 <at_ble_encryption_start+0xa8>)
    6916:	6825      	ldr	r5, [r4, #0]
    6918:	481b      	ldr	r0, [pc, #108]	; (6988 <at_ble_encryption_start+0xac>)
    691a:	47a8      	blx	r5
    691c:	2212      	movs	r2, #18
    691e:	7833      	ldrb	r3, [r6, #0]
    6920:	481a      	ldr	r0, [pc, #104]	; (698c <at_ble_encryption_start+0xb0>)
    6922:	4353      	muls	r3, r2
    6924:	4a14      	ldr	r2, [pc, #80]	; (6978 <at_ble_encryption_start+0x9c>)
    6926:	25e0      	movs	r5, #224	; 0xe0
    6928:	5c99      	ldrb	r1, [r3, r2]
    692a:	6823      	ldr	r3, [r4, #0]
    692c:	4798      	blx	r3
    692e:	e011      	b.n	6954 <at_ble_encryption_start+0x78>
    6930:	1c21      	adds	r1, r4, #0
    6932:	221c      	movs	r2, #28
    6934:	4b16      	ldr	r3, [pc, #88]	; (6990 <at_ble_encryption_start+0xb4>)
    6936:	4817      	ldr	r0, [pc, #92]	; (6994 <at_ble_encryption_start+0xb8>)
    6938:	4798      	blx	r3
    693a:	1c23      	adds	r3, r4, #0
    693c:	7ea1      	ldrb	r1, [r4, #26]
    693e:	8a22      	ldrh	r2, [r4, #16]
    6940:	9100      	str	r1, [sp, #0]
    6942:	9903      	ldr	r1, [sp, #12]
    6944:	3312      	adds	r3, #18
    6946:	9101      	str	r1, [sp, #4]
    6948:	1c38      	adds	r0, r7, #0
    694a:	1c21      	adds	r1, r4, #0
    694c:	4c12      	ldr	r4, [pc, #72]	; (6998 <at_ble_encryption_start+0xbc>)
    694e:	47a0      	blx	r4
    6950:	e00c      	b.n	696c <at_ble_encryption_start+0x90>
    6952:	25cf      	movs	r5, #207	; 0xcf
    6954:	228f      	movs	r2, #143	; 0x8f
    6956:	4c09      	ldr	r4, [pc, #36]	; (697c <at_ble_encryption_start+0xa0>)
    6958:	4909      	ldr	r1, [pc, #36]	; (6980 <at_ble_encryption_start+0xa4>)
    695a:	4b0a      	ldr	r3, [pc, #40]	; (6984 <at_ble_encryption_start+0xa8>)
    695c:	480a      	ldr	r0, [pc, #40]	; (6988 <at_ble_encryption_start+0xac>)
    695e:	0052      	lsls	r2, r2, #1
    6960:	6826      	ldr	r6, [r4, #0]
    6962:	47b0      	blx	r6
    6964:	6823      	ldr	r3, [r4, #0]
    6966:	480d      	ldr	r0, [pc, #52]	; (699c <at_ble_encryption_start+0xc0>)
    6968:	1c29      	adds	r1, r5, #0
    696a:	4798      	blx	r3
    696c:	1c28      	adds	r0, r5, #0
    696e:	b007      	add	sp, #28
    6970:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6972:	46c0      	nop			; (mov r8, r8)
    6974:	000064fd 	.word	0x000064fd
    6978:	20001c64 	.word	0x20001c64
    697c:	20000078 	.word	0x20000078
    6980:	0000ae8c 	.word	0x0000ae8c
    6984:	0000afd0 	.word	0x0000afd0
    6988:	0000aab9 	.word	0x0000aab9
    698c:	0000afae 	.word	0x0000afae
    6990:	00008a6f 	.word	0x00008a6f
    6994:	20001d72 	.word	0x20001d72
    6998:	00007401 	.word	0x00007401
    699c:	0000abae 	.word	0x0000abae

000069a0 <at_ble_encryption_request_reply>:
    69a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    69a2:	b085      	sub	sp, #20
    69a4:	1c06      	adds	r6, r0, #0
    69a6:	9103      	str	r1, [sp, #12]
    69a8:	1c17      	adds	r7, r2, #0
    69aa:	1e1d      	subs	r5, r3, #0
    69ac:	d014      	beq.n	69d8 <at_ble_encryption_request_reply+0x38>
    69ae:	2a00      	cmp	r2, #0
    69b0:	d109      	bne.n	69c6 <at_ble_encryption_request_reply+0x26>
    69b2:	7eab      	ldrb	r3, [r5, #26]
    69b4:	4c10      	ldr	r4, [pc, #64]	; (69f8 <at_ble_encryption_request_reply+0x58>)
    69b6:	9300      	str	r3, [sp, #0]
    69b8:	1c30      	adds	r0, r6, #0
    69ba:	9903      	ldr	r1, [sp, #12]
    69bc:	1c3a      	adds	r2, r7, #0
    69be:	1c2b      	adds	r3, r5, #0
    69c0:	47a0      	blx	r4
    69c2:	2400      	movs	r4, #0
    69c4:	e015      	b.n	69f2 <at_ble_encryption_request_reply+0x52>
    69c6:	1c19      	adds	r1, r3, #0
    69c8:	4c0c      	ldr	r4, [pc, #48]	; (69fc <at_ble_encryption_request_reply+0x5c>)
    69ca:	311a      	adds	r1, #26
    69cc:	9a03      	ldr	r2, [sp, #12]
    69ce:	2300      	movs	r3, #0
    69d0:	47a0      	blx	r4
    69d2:	1e04      	subs	r4, r0, #0
    69d4:	d0ed      	beq.n	69b2 <at_ble_encryption_request_reply+0x12>
    69d6:	e000      	b.n	69da <at_ble_encryption_request_reply+0x3a>
    69d8:	24cf      	movs	r4, #207	; 0xcf
    69da:	2238      	movs	r2, #56	; 0x38
    69dc:	4d08      	ldr	r5, [pc, #32]	; (6a00 <at_ble_encryption_request_reply+0x60>)
    69de:	4909      	ldr	r1, [pc, #36]	; (6a04 <at_ble_encryption_request_reply+0x64>)
    69e0:	4b09      	ldr	r3, [pc, #36]	; (6a08 <at_ble_encryption_request_reply+0x68>)
    69e2:	480a      	ldr	r0, [pc, #40]	; (6a0c <at_ble_encryption_request_reply+0x6c>)
    69e4:	32ff      	adds	r2, #255	; 0xff
    69e6:	682e      	ldr	r6, [r5, #0]
    69e8:	47b0      	blx	r6
    69ea:	682b      	ldr	r3, [r5, #0]
    69ec:	4808      	ldr	r0, [pc, #32]	; (6a10 <at_ble_encryption_request_reply+0x70>)
    69ee:	1c21      	adds	r1, r4, #0
    69f0:	4798      	blx	r3
    69f2:	1c20      	adds	r0, r4, #0
    69f4:	b005      	add	sp, #20
    69f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    69f8:	000074bd 	.word	0x000074bd
    69fc:	000064fd 	.word	0x000064fd
    6a00:	20000078 	.word	0x20000078
    6a04:	0000ae8c 	.word	0x0000ae8c
    6a08:	0000ae38 	.word	0x0000ae38
    6a0c:	0000aab9 	.word	0x0000aab9
    6a10:	0000abae 	.word	0x0000abae

00006a14 <patchFuncAndVars>:
    6a14:	b538      	push	{r3, r4, r5, lr}
    6a16:	1c05      	adds	r5, r0, #0
    6a18:	4c27      	ldr	r4, [pc, #156]	; (6ab8 <patchFuncAndVars+0xa4>)
    6a1a:	4828      	ldr	r0, [pc, #160]	; (6abc <patchFuncAndVars+0xa8>)
    6a1c:	4928      	ldr	r1, [pc, #160]	; (6ac0 <patchFuncAndVars+0xac>)
    6a1e:	47a0      	blx	r4
    6a20:	4828      	ldr	r0, [pc, #160]	; (6ac4 <patchFuncAndVars+0xb0>)
    6a22:	4929      	ldr	r1, [pc, #164]	; (6ac8 <patchFuncAndVars+0xb4>)
    6a24:	47a0      	blx	r4
    6a26:	4829      	ldr	r0, [pc, #164]	; (6acc <patchFuncAndVars+0xb8>)
    6a28:	4929      	ldr	r1, [pc, #164]	; (6ad0 <patchFuncAndVars+0xbc>)
    6a2a:	47a0      	blx	r4
    6a2c:	4829      	ldr	r0, [pc, #164]	; (6ad4 <patchFuncAndVars+0xc0>)
    6a2e:	492a      	ldr	r1, [pc, #168]	; (6ad8 <patchFuncAndVars+0xc4>)
    6a30:	47a0      	blx	r4
    6a32:	482a      	ldr	r0, [pc, #168]	; (6adc <patchFuncAndVars+0xc8>)
    6a34:	492a      	ldr	r1, [pc, #168]	; (6ae0 <patchFuncAndVars+0xcc>)
    6a36:	47a0      	blx	r4
    6a38:	482a      	ldr	r0, [pc, #168]	; (6ae4 <patchFuncAndVars+0xd0>)
    6a3a:	492b      	ldr	r1, [pc, #172]	; (6ae8 <patchFuncAndVars+0xd4>)
    6a3c:	47a0      	blx	r4
    6a3e:	482b      	ldr	r0, [pc, #172]	; (6aec <patchFuncAndVars+0xd8>)
    6a40:	492b      	ldr	r1, [pc, #172]	; (6af0 <patchFuncAndVars+0xdc>)
    6a42:	47a0      	blx	r4
    6a44:	482b      	ldr	r0, [pc, #172]	; (6af4 <patchFuncAndVars+0xe0>)
    6a46:	492c      	ldr	r1, [pc, #176]	; (6af8 <patchFuncAndVars+0xe4>)
    6a48:	47a0      	blx	r4
    6a4a:	482c      	ldr	r0, [pc, #176]	; (6afc <patchFuncAndVars+0xe8>)
    6a4c:	492c      	ldr	r1, [pc, #176]	; (6b00 <patchFuncAndVars+0xec>)
    6a4e:	47a0      	blx	r4
    6a50:	482c      	ldr	r0, [pc, #176]	; (6b04 <patchFuncAndVars+0xf0>)
    6a52:	492d      	ldr	r1, [pc, #180]	; (6b08 <patchFuncAndVars+0xf4>)
    6a54:	47a0      	blx	r4
    6a56:	482d      	ldr	r0, [pc, #180]	; (6b0c <patchFuncAndVars+0xf8>)
    6a58:	492d      	ldr	r1, [pc, #180]	; (6b10 <patchFuncAndVars+0xfc>)
    6a5a:	47a0      	blx	r4
    6a5c:	482d      	ldr	r0, [pc, #180]	; (6b14 <patchFuncAndVars+0x100>)
    6a5e:	492e      	ldr	r1, [pc, #184]	; (6b18 <patchFuncAndVars+0x104>)
    6a60:	47a0      	blx	r4
    6a62:	482e      	ldr	r0, [pc, #184]	; (6b1c <patchFuncAndVars+0x108>)
    6a64:	492e      	ldr	r1, [pc, #184]	; (6b20 <patchFuncAndVars+0x10c>)
    6a66:	47a0      	blx	r4
    6a68:	482e      	ldr	r0, [pc, #184]	; (6b24 <patchFuncAndVars+0x110>)
    6a6a:	492f      	ldr	r1, [pc, #188]	; (6b28 <patchFuncAndVars+0x114>)
    6a6c:	47a0      	blx	r4
    6a6e:	482f      	ldr	r0, [pc, #188]	; (6b2c <patchFuncAndVars+0x118>)
    6a70:	492f      	ldr	r1, [pc, #188]	; (6b30 <patchFuncAndVars+0x11c>)
    6a72:	47a0      	blx	r4
    6a74:	482f      	ldr	r0, [pc, #188]	; (6b34 <patchFuncAndVars+0x120>)
    6a76:	4930      	ldr	r1, [pc, #192]	; (6b38 <patchFuncAndVars+0x124>)
    6a78:	47a0      	blx	r4
    6a7a:	4830      	ldr	r0, [pc, #192]	; (6b3c <patchFuncAndVars+0x128>)
    6a7c:	4930      	ldr	r1, [pc, #192]	; (6b40 <patchFuncAndVars+0x12c>)
    6a7e:	47a0      	blx	r4
    6a80:	4830      	ldr	r0, [pc, #192]	; (6b44 <patchFuncAndVars+0x130>)
    6a82:	4931      	ldr	r1, [pc, #196]	; (6b48 <patchFuncAndVars+0x134>)
    6a84:	47a0      	blx	r4
    6a86:	4831      	ldr	r0, [pc, #196]	; (6b4c <patchFuncAndVars+0x138>)
    6a88:	4931      	ldr	r1, [pc, #196]	; (6b50 <patchFuncAndVars+0x13c>)
    6a8a:	47a0      	blx	r4
    6a8c:	4931      	ldr	r1, [pc, #196]	; (6b54 <patchFuncAndVars+0x140>)
    6a8e:	4832      	ldr	r0, [pc, #200]	; (6b58 <patchFuncAndVars+0x144>)
    6a90:	47a0      	blx	r4
    6a92:	7869      	ldrb	r1, [r5, #1]
    6a94:	2901      	cmp	r1, #1
    6a96:	d101      	bne.n	6a9c <patchFuncAndVars+0x88>
    6a98:	4830      	ldr	r0, [pc, #192]	; (6b5c <patchFuncAndVars+0x148>)
    6a9a:	47a0      	blx	r4
    6a9c:	4830      	ldr	r0, [pc, #192]	; (6b60 <patchFuncAndVars+0x14c>)
    6a9e:	2101      	movs	r1, #1
    6aa0:	47a0      	blx	r4
    6aa2:	4830      	ldr	r0, [pc, #192]	; (6b64 <patchFuncAndVars+0x150>)
    6aa4:	2101      	movs	r1, #1
    6aa6:	47a0      	blx	r4
    6aa8:	482f      	ldr	r0, [pc, #188]	; (6b68 <patchFuncAndVars+0x154>)
    6aaa:	2104      	movs	r1, #4
    6aac:	47a0      	blx	r4
    6aae:	2102      	movs	r1, #2
    6ab0:	482e      	ldr	r0, [pc, #184]	; (6b6c <patchFuncAndVars+0x158>)
    6ab2:	31ff      	adds	r1, #255	; 0xff
    6ab4:	47a0      	blx	r4
    6ab6:	bd38      	pop	{r3, r4, r5, pc}
    6ab8:	0000862d 	.word	0x0000862d
    6abc:	100401c0 	.word	0x100401c0
    6ac0:	10006ae3 	.word	0x10006ae3
    6ac4:	1004000c 	.word	0x1004000c
    6ac8:	100053a5 	.word	0x100053a5
    6acc:	10040010 	.word	0x10040010
    6ad0:	1000549d 	.word	0x1000549d
    6ad4:	1004004c 	.word	0x1004004c
    6ad8:	10005515 	.word	0x10005515
    6adc:	10040034 	.word	0x10040034
    6ae0:	10005647 	.word	0x10005647
    6ae4:	10040068 	.word	0x10040068
    6ae8:	10005955 	.word	0x10005955
    6aec:	10040088 	.word	0x10040088
    6af0:	10005a5d 	.word	0x10005a5d
    6af4:	100400bc 	.word	0x100400bc
    6af8:	10005b7d 	.word	0x10005b7d
    6afc:	100400dc 	.word	0x100400dc
    6b00:	10005c9d 	.word	0x10005c9d
    6b04:	100400e4 	.word	0x100400e4
    6b08:	10005e6d 	.word	0x10005e6d
    6b0c:	100400e8 	.word	0x100400e8
    6b10:	100060df 	.word	0x100060df
    6b14:	100400ec 	.word	0x100400ec
    6b18:	10006199 	.word	0x10006199
    6b1c:	1004010c 	.word	0x1004010c
    6b20:	1000634d 	.word	0x1000634d
    6b24:	10040154 	.word	0x10040154
    6b28:	10006545 	.word	0x10006545
    6b2c:	10040160 	.word	0x10040160
    6b30:	100065f5 	.word	0x100065f5
    6b34:	10040174 	.word	0x10040174
    6b38:	1000678d 	.word	0x1000678d
    6b3c:	10040210 	.word	0x10040210
    6b40:	10007571 	.word	0x10007571
    6b44:	10040038 	.word	0x10040038
    6b48:	100057ff 	.word	0x100057ff
    6b4c:	10000004 	.word	0x10000004
    6b50:	10005881 	.word	0x10005881
    6b54:	100057db 	.word	0x100057db
    6b58:	1000003c 	.word	0x1000003c
    6b5c:	10007ca0 	.word	0x10007ca0
    6b60:	10040168 	.word	0x10040168
    6b64:	10007bd0 	.word	0x10007bd0
    6b68:	10007bd4 	.word	0x10007bd4
    6b6c:	10040000 	.word	0x10040000

00006b70 <__printingNullFun>:
    6b70:	b40f      	push	{r0, r1, r2, r3}
    6b72:	2000      	movs	r0, #0
    6b74:	b004      	add	sp, #16
    6b76:	4770      	bx	lr

00006b78 <dbg_le_set_bd_addr_req_handler>:
    6b78:	4a14      	ldr	r2, [pc, #80]	; (6bcc <dbg_le_set_bd_addr_req_handler+0x54>)
    6b7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6b7c:	6814      	ldr	r4, [r2, #0]
    6b7e:	2300      	movs	r3, #0
    6b80:	2205      	movs	r2, #5
    6b82:	1c01      	adds	r1, r0, #0
    6b84:	2603      	movs	r6, #3
    6b86:	270f      	movs	r7, #15
    6b88:	1c20      	adds	r0, r4, #0
    6b8a:	4d11      	ldr	r5, [pc, #68]	; (6bd0 <dbg_le_set_bd_addr_req_handler+0x58>)
    6b8c:	3009      	adds	r0, #9
    6b8e:	60ab      	str	r3, [r5, #8]
    6b90:	60eb      	str	r3, [r5, #12]
    6b92:	7022      	strb	r2, [r4, #0]
    6b94:	320b      	adds	r2, #11
    6b96:	7123      	strb	r3, [r4, #4]
    6b98:	7162      	strb	r2, [r4, #5]
    6b9a:	71a3      	strb	r3, [r4, #6]
    6b9c:	71e3      	strb	r3, [r4, #7]
    6b9e:	7223      	strb	r3, [r4, #8]
    6ba0:	3a0a      	subs	r2, #10
    6ba2:	4b0c      	ldr	r3, [pc, #48]	; (6bd4 <dbg_le_set_bd_addr_req_handler+0x5c>)
    6ba4:	7067      	strb	r7, [r4, #1]
    6ba6:	70a6      	strb	r6, [r4, #2]
    6ba8:	70e6      	strb	r6, [r4, #3]
    6baa:	4798      	blx	r3
    6bac:	4b0a      	ldr	r3, [pc, #40]	; (6bd8 <dbg_le_set_bd_addr_req_handler+0x60>)
    6bae:	1c20      	adds	r0, r4, #0
    6bb0:	802b      	strh	r3, [r5, #0]
    6bb2:	2306      	movs	r3, #6
    6bb4:	1c39      	adds	r1, r7, #0
    6bb6:	71e3      	strb	r3, [r4, #7]
    6bb8:	4b08      	ldr	r3, [pc, #32]	; (6bdc <dbg_le_set_bd_addr_req_handler+0x64>)
    6bba:	80ae      	strh	r6, [r5, #4]
    6bbc:	4798      	blx	r3
    6bbe:	4b08      	ldr	r3, [pc, #32]	; (6be0 <dbg_le_set_bd_addr_req_handler+0x68>)
    6bc0:	4798      	blx	r3
    6bc2:	28d0      	cmp	r0, #208	; 0xd0
    6bc4:	d001      	beq.n	6bca <dbg_le_set_bd_addr_req_handler+0x52>
    6bc6:	68ab      	ldr	r3, [r5, #8]
    6bc8:	7818      	ldrb	r0, [r3, #0]
    6bca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6bcc:	0000ae2c 	.word	0x0000ae2c
    6bd0:	20001c54 	.word	0x20001c54
    6bd4:	00008a6f 	.word	0x00008a6f
    6bd8:	00000329 	.word	0x00000329
    6bdc:	000061f9 	.word	0x000061f9
    6be0:	0000645d 	.word	0x0000645d

00006be4 <gapc_get_dev_info_cfm.constprop.1>:
    6be4:	2200      	movs	r2, #0
    6be6:	b538      	push	{r3, r4, r5, lr}
    6be8:	4b2e      	ldr	r3, [pc, #184]	; (6ca4 <gapc_get_dev_info_cfm.constprop.1+0xc0>)
    6bea:	250e      	movs	r5, #14
    6bec:	609a      	str	r2, [r3, #8]
    6bee:	60da      	str	r2, [r3, #12]
    6bf0:	4b2d      	ldr	r3, [pc, #180]	; (6ca8 <gapc_get_dev_info_cfm.constprop.1+0xc4>)
    6bf2:	681c      	ldr	r4, [r3, #0]
    6bf4:	2305      	movs	r3, #5
    6bf6:	7121      	strb	r1, [r4, #4]
    6bf8:	2110      	movs	r1, #16
    6bfa:	7023      	strb	r3, [r4, #0]
    6bfc:	70a5      	strb	r5, [r4, #2]
    6bfe:	3306      	adds	r3, #6
    6c00:	3529      	adds	r5, #41	; 0x29
    6c02:	7063      	strb	r3, [r4, #1]
    6c04:	70e5      	strb	r5, [r4, #3]
    6c06:	7161      	strb	r1, [r4, #5]
    6c08:	71a2      	strb	r2, [r4, #6]
    6c0a:	71e2      	strb	r2, [r4, #7]
    6c0c:	7222      	strb	r2, [r4, #8]
    6c0e:	7260      	strb	r0, [r4, #9]
    6c10:	72a2      	strb	r2, [r4, #10]
    6c12:	2801      	cmp	r0, #1
    6c14:	d032      	beq.n	6c7c <gapc_get_dev_info_cfm.constprop.1+0x98>
    6c16:	4290      	cmp	r0, r2
    6c18:	d01f      	beq.n	6c5a <gapc_get_dev_info_cfm.constprop.1+0x76>
    6c1a:	2802      	cmp	r0, #2
    6c1c:	d137      	bne.n	6c8e <gapc_get_dev_info_cfm.constprop.1+0xaa>
    6c1e:	4b23      	ldr	r3, [pc, #140]	; (6cac <gapc_get_dev_info_cfm.constprop.1+0xc8>)
    6c20:	1c1a      	adds	r2, r3, #0
    6c22:	32ce      	adds	r2, #206	; 0xce
    6c24:	8811      	ldrh	r1, [r2, #0]
    6c26:	72e1      	strb	r1, [r4, #11]
    6c28:	8812      	ldrh	r2, [r2, #0]
    6c2a:	0a12      	lsrs	r2, r2, #8
    6c2c:	7322      	strb	r2, [r4, #12]
    6c2e:	1c1a      	adds	r2, r3, #0
    6c30:	32d0      	adds	r2, #208	; 0xd0
    6c32:	8811      	ldrh	r1, [r2, #0]
    6c34:	7361      	strb	r1, [r4, #13]
    6c36:	8812      	ldrh	r2, [r2, #0]
    6c38:	0a12      	lsrs	r2, r2, #8
    6c3a:	73a2      	strb	r2, [r4, #14]
    6c3c:	1c1a      	adds	r2, r3, #0
    6c3e:	32d2      	adds	r2, #210	; 0xd2
    6c40:	8811      	ldrh	r1, [r2, #0]
    6c42:	33d4      	adds	r3, #212	; 0xd4
    6c44:	73e1      	strb	r1, [r4, #15]
    6c46:	8812      	ldrh	r2, [r2, #0]
    6c48:	2113      	movs	r1, #19
    6c4a:	0a12      	lsrs	r2, r2, #8
    6c4c:	7422      	strb	r2, [r4, #16]
    6c4e:	881a      	ldrh	r2, [r3, #0]
    6c50:	7462      	strb	r2, [r4, #17]
    6c52:	881b      	ldrh	r3, [r3, #0]
    6c54:	0a1b      	lsrs	r3, r3, #8
    6c56:	74a3      	strb	r3, [r4, #18]
    6c58:	e01a      	b.n	6c90 <gapc_get_dev_info_cfm.constprop.1+0xac>
    6c5a:	1c20      	adds	r0, r4, #0
    6c5c:	4d13      	ldr	r5, [pc, #76]	; (6cac <gapc_get_dev_info_cfm.constprop.1+0xc8>)
    6c5e:	4914      	ldr	r1, [pc, #80]	; (6cb0 <gapc_get_dev_info_cfm.constprop.1+0xcc>)
    6c60:	35aa      	adds	r5, #170	; 0xaa
    6c62:	882b      	ldrh	r3, [r5, #0]
    6c64:	300d      	adds	r0, #13
    6c66:	72e3      	strb	r3, [r4, #11]
    6c68:	882b      	ldrh	r3, [r5, #0]
    6c6a:	0a1b      	lsrs	r3, r3, #8
    6c6c:	7323      	strb	r3, [r4, #12]
    6c6e:	882a      	ldrh	r2, [r5, #0]
    6c70:	4b10      	ldr	r3, [pc, #64]	; (6cb4 <gapc_get_dev_info_cfm.constprop.1+0xd0>)
    6c72:	4798      	blx	r3
    6c74:	8829      	ldrh	r1, [r5, #0]
    6c76:	310d      	adds	r1, #13
    6c78:	b289      	uxth	r1, r1
    6c7a:	e009      	b.n	6c90 <gapc_get_dev_info_cfm.constprop.1+0xac>
    6c7c:	4b0b      	ldr	r3, [pc, #44]	; (6cac <gapc_get_dev_info_cfm.constprop.1+0xc8>)
    6c7e:	210d      	movs	r1, #13
    6c80:	33cc      	adds	r3, #204	; 0xcc
    6c82:	881a      	ldrh	r2, [r3, #0]
    6c84:	72e2      	strb	r2, [r4, #11]
    6c86:	881b      	ldrh	r3, [r3, #0]
    6c88:	0a1b      	lsrs	r3, r3, #8
    6c8a:	7323      	strb	r3, [r4, #12]
    6c8c:	e000      	b.n	6c90 <gapc_get_dev_info_cfm.constprop.1+0xac>
    6c8e:	1c19      	adds	r1, r3, #0
    6c90:	1c0b      	adds	r3, r1, #0
    6c92:	3b09      	subs	r3, #9
    6c94:	71e3      	strb	r3, [r4, #7]
    6c96:	121b      	asrs	r3, r3, #8
    6c98:	7223      	strb	r3, [r4, #8]
    6c9a:	1c20      	adds	r0, r4, #0
    6c9c:	4b06      	ldr	r3, [pc, #24]	; (6cb8 <gapc_get_dev_info_cfm.constprop.1+0xd4>)
    6c9e:	4798      	blx	r3
    6ca0:	bd38      	pop	{r3, r4, r5, pc}
    6ca2:	46c0      	nop			; (mov r8, r8)
    6ca4:	20001c54 	.word	0x20001c54
    6ca8:	0000ae2c 	.word	0x0000ae2c
    6cac:	20001cf4 	.word	0x20001cf4
    6cb0:	20001da0 	.word	0x20001da0
    6cb4:	00008a6f 	.word	0x00008a6f
    6cb8:	000061f9 	.word	0x000061f9

00006cbc <check_ConnData_idx_role>:
    6cbc:	4b0c      	ldr	r3, [pc, #48]	; (6cf0 <check_ConnData_idx_role+0x34>)
    6cbe:	b570      	push	{r4, r5, r6, lr}
    6cc0:	1c04      	adds	r4, r0, #0
    6cc2:	2008      	movs	r0, #8
    6cc4:	429c      	cmp	r4, r3
    6cc6:	d011      	beq.n	6cec <check_ConnData_idx_role+0x30>
    6cc8:	2300      	movs	r3, #0
    6cca:	2212      	movs	r2, #18
    6ccc:	435a      	muls	r2, r3
    6cce:	4d09      	ldr	r5, [pc, #36]	; (6cf4 <check_ConnData_idx_role+0x38>)
    6cd0:	b2d8      	uxtb	r0, r3
    6cd2:	1956      	adds	r6, r2, r5
    6cd4:	8976      	ldrh	r6, [r6, #10]
    6cd6:	42a6      	cmp	r6, r4
    6cd8:	d104      	bne.n	6ce4 <check_ConnData_idx_role+0x28>
    6cda:	2900      	cmp	r1, #0
    6cdc:	d006      	beq.n	6cec <check_ConnData_idx_role+0x30>
    6cde:	5d53      	ldrb	r3, [r2, r5]
    6ce0:	700b      	strb	r3, [r1, #0]
    6ce2:	e003      	b.n	6cec <check_ConnData_idx_role+0x30>
    6ce4:	3301      	adds	r3, #1
    6ce6:	2b08      	cmp	r3, #8
    6ce8:	d1ef      	bne.n	6cca <check_ConnData_idx_role+0xe>
    6cea:	1c18      	adds	r0, r3, #0
    6cec:	bd70      	pop	{r4, r5, r6, pc}
    6cee:	46c0      	nop			; (mov r8, r8)
    6cf0:	0000ffff 	.word	0x0000ffff
    6cf4:	20001c64 	.word	0x20001c64

00006cf8 <check_ConnData_emptyEntry>:
    6cf8:	2300      	movs	r3, #0
    6cfa:	2212      	movs	r2, #18
    6cfc:	435a      	muls	r2, r3
    6cfe:	4906      	ldr	r1, [pc, #24]	; (6d18 <check_ConnData_emptyEntry+0x20>)
    6d00:	b2d8      	uxtb	r0, r3
    6d02:	1852      	adds	r2, r2, r1
    6d04:	8951      	ldrh	r1, [r2, #10]
    6d06:	4a05      	ldr	r2, [pc, #20]	; (6d1c <check_ConnData_emptyEntry+0x24>)
    6d08:	4291      	cmp	r1, r2
    6d0a:	d003      	beq.n	6d14 <check_ConnData_emptyEntry+0x1c>
    6d0c:	3301      	adds	r3, #1
    6d0e:	2b08      	cmp	r3, #8
    6d10:	d1f3      	bne.n	6cfa <check_ConnData_emptyEntry+0x2>
    6d12:	1c18      	adds	r0, r3, #0
    6d14:	4770      	bx	lr
    6d16:	46c0      	nop			; (mov r8, r8)
    6d18:	20001c64 	.word	0x20001c64
    6d1c:	0000ffff 	.word	0x0000ffff

00006d20 <gapc_cmp_evt>:
    6d20:	b5f0      	push	{r4, r5, r6, r7, lr}
    6d22:	1c14      	adds	r4, r2, #0
    6d24:	780a      	ldrb	r2, [r1, #0]
    6d26:	b085      	sub	sp, #20
    6d28:	1c03      	adds	r3, r0, #0
    6d2a:	1e50      	subs	r0, r2, #1
    6d2c:	9201      	str	r2, [sp, #4]
    6d2e:	784d      	ldrb	r5, [r1, #1]
    6d30:	280f      	cmp	r0, #15
    6d32:	d900      	bls.n	6d36 <gapc_cmp_evt+0x16>
    6d34:	e085      	b.n	6e42 <gapc_cmp_evt+0x122>
    6d36:	f001 fd7d 	bl	8834 <__gnu_thumb1_case_uqi>
    6d3a:	5808      	.short	0x5808
    6d3c:	58588484 	.word	0x58588484
    6d40:	132e6c84 	.word	0x132e6c84
    6d44:	84849126 	.word	0x84849126
    6d48:	483a      	.short	0x483a
    6d4a:	203a      	movs	r0, #58	; 0x3a
    6d4c:	2d00      	cmp	r5, #0
    6d4e:	d100      	bne.n	6d52 <gapc_cmp_evt+0x32>
    6d50:	e085      	b.n	6e5e <gapc_cmp_evt+0x13e>
    6d52:	0a1b      	lsrs	r3, r3, #8
    6d54:	8023      	strh	r3, [r4, #0]
    6d56:	2300      	movs	r3, #0
    6d58:	70a5      	strb	r5, [r4, #2]
    6d5a:	70e3      	strb	r3, [r4, #3]
    6d5c:	3834      	subs	r0, #52	; 0x34
    6d5e:	e07e      	b.n	6e5e <gapc_cmp_evt+0x13e>
    6d60:	aa02      	add	r2, sp, #8
    6d62:	1dd6      	adds	r6, r2, #7
    6d64:	2201      	movs	r2, #1
    6d66:	0a1f      	lsrs	r7, r3, #8
    6d68:	1c38      	adds	r0, r7, #0
    6d6a:	1c31      	adds	r1, r6, #0
    6d6c:	4b3d      	ldr	r3, [pc, #244]	; (6e64 <gapc_cmp_evt+0x144>)
    6d6e:	7032      	strb	r2, [r6, #0]
    6d70:	4798      	blx	r3
    6d72:	2807      	cmp	r0, #7
    6d74:	d803      	bhi.n	6d7e <gapc_cmp_evt+0x5e>
    6d76:	7833      	ldrb	r3, [r6, #0]
    6d78:	203a      	movs	r0, #58	; 0x3a
    6d7a:	2b00      	cmp	r3, #0
    6d7c:	d06f      	beq.n	6e5e <gapc_cmp_evt+0x13e>
    6d7e:	8067      	strh	r7, [r4, #2]
    6d80:	7125      	strb	r5, [r4, #4]
    6d82:	2009      	movs	r0, #9
    6d84:	e06b      	b.n	6e5e <gapc_cmp_evt+0x13e>
    6d86:	203a      	movs	r0, #58	; 0x3a
    6d88:	2d00      	cmp	r5, #0
    6d8a:	d068      	beq.n	6e5e <gapc_cmp_evt+0x13e>
    6d8c:	0a1b      	lsrs	r3, r3, #8
    6d8e:	8023      	strh	r3, [r4, #0]
    6d90:	70a5      	strb	r5, [r4, #2]
    6d92:	382c      	subs	r0, #44	; 0x2c
    6d94:	e063      	b.n	6e5e <gapc_cmp_evt+0x13e>
    6d96:	203a      	movs	r0, #58	; 0x3a
    6d98:	2d00      	cmp	r5, #0
    6d9a:	d060      	beq.n	6e5e <gapc_cmp_evt+0x13e>
    6d9c:	0a1b      	lsrs	r3, r3, #8
    6d9e:	8023      	strh	r3, [r4, #0]
    6da0:	2300      	movs	r3, #0
    6da2:	70a5      	strb	r5, [r4, #2]
    6da4:	80a3      	strh	r3, [r4, #4]
    6da6:	80e3      	strh	r3, [r4, #6]
    6da8:	8123      	strh	r3, [r4, #8]
    6daa:	3833      	subs	r0, #51	; 0x33
    6dac:	e057      	b.n	6e5e <gapc_cmp_evt+0x13e>
    6dae:	203a      	movs	r0, #58	; 0x3a
    6db0:	2d00      	cmp	r5, #0
    6db2:	d054      	beq.n	6e5e <gapc_cmp_evt+0x13e>
    6db4:	7225      	strb	r5, [r4, #8]
    6db6:	4c2c      	ldr	r4, [pc, #176]	; (6e68 <gapc_cmp_evt+0x148>)
    6db8:	4b2c      	ldr	r3, [pc, #176]	; (6e6c <gapc_cmp_evt+0x14c>)
    6dba:	482d      	ldr	r0, [pc, #180]	; (6e70 <gapc_cmp_evt+0x150>)
    6dbc:	492d      	ldr	r1, [pc, #180]	; (6e74 <gapc_cmp_evt+0x154>)
    6dbe:	228f      	movs	r2, #143	; 0x8f
    6dc0:	6825      	ldr	r5, [r4, #0]
    6dc2:	47a8      	blx	r5
    6dc4:	6823      	ldr	r3, [r4, #0]
    6dc6:	482c      	ldr	r0, [pc, #176]	; (6e78 <gapc_cmp_evt+0x158>)
    6dc8:	e00c      	b.n	6de4 <gapc_cmp_evt+0xc4>
    6dca:	203a      	movs	r0, #58	; 0x3a
    6dcc:	2d00      	cmp	r5, #0
    6dce:	d046      	beq.n	6e5e <gapc_cmp_evt+0x13e>
    6dd0:	7125      	strb	r5, [r4, #4]
    6dd2:	4c25      	ldr	r4, [pc, #148]	; (6e68 <gapc_cmp_evt+0x148>)
    6dd4:	4b25      	ldr	r3, [pc, #148]	; (6e6c <gapc_cmp_evt+0x14c>)
    6dd6:	4826      	ldr	r0, [pc, #152]	; (6e70 <gapc_cmp_evt+0x150>)
    6dd8:	4926      	ldr	r1, [pc, #152]	; (6e74 <gapc_cmp_evt+0x154>)
    6dda:	229f      	movs	r2, #159	; 0x9f
    6ddc:	6825      	ldr	r5, [r4, #0]
    6dde:	47a8      	blx	r5
    6de0:	6823      	ldr	r3, [r4, #0]
    6de2:	4826      	ldr	r0, [pc, #152]	; (6e7c <gapc_cmp_evt+0x15c>)
    6de4:	4798      	blx	r3
    6de6:	2029      	movs	r0, #41	; 0x29
    6de8:	e039      	b.n	6e5e <gapc_cmp_evt+0x13e>
    6dea:	203a      	movs	r0, #58	; 0x3a
    6dec:	2d00      	cmp	r5, #0
    6dee:	d036      	beq.n	6e5e <gapc_cmp_evt+0x13e>
    6df0:	4f1d      	ldr	r7, [pc, #116]	; (6e68 <gapc_cmp_evt+0x148>)
    6df2:	4920      	ldr	r1, [pc, #128]	; (6e74 <gapc_cmp_evt+0x154>)
    6df4:	22b5      	movs	r2, #181	; 0xb5
    6df6:	4b1d      	ldr	r3, [pc, #116]	; (6e6c <gapc_cmp_evt+0x14c>)
    6df8:	481d      	ldr	r0, [pc, #116]	; (6e70 <gapc_cmp_evt+0x150>)
    6dfa:	683e      	ldr	r6, [r7, #0]
    6dfc:	47b0      	blx	r6
    6dfe:	683b      	ldr	r3, [r7, #0]
    6e00:	481f      	ldr	r0, [pc, #124]	; (6e80 <gapc_cmp_evt+0x160>)
    6e02:	1c29      	adds	r1, r5, #0
    6e04:	4798      	blx	r3
    6e06:	466b      	mov	r3, sp
    6e08:	791b      	ldrb	r3, [r3, #4]
    6e0a:	70e5      	strb	r5, [r4, #3]
    6e0c:	70a3      	strb	r3, [r4, #2]
    6e0e:	2011      	movs	r0, #17
    6e10:	e025      	b.n	6e5e <gapc_cmp_evt+0x13e>
    6e12:	203a      	movs	r0, #58	; 0x3a
    6e14:	2d00      	cmp	r5, #0
    6e16:	d022      	beq.n	6e5e <gapc_cmp_evt+0x13e>
    6e18:	0a1b      	lsrs	r3, r3, #8
    6e1a:	8063      	strh	r3, [r4, #2]
    6e1c:	7025      	strb	r5, [r4, #0]
    6e1e:	1d20      	adds	r0, r4, #4
    6e20:	2100      	movs	r1, #0
    6e22:	2205      	movs	r2, #5
    6e24:	4b17      	ldr	r3, [pc, #92]	; (6e84 <gapc_cmp_evt+0x164>)
    6e26:	4798      	blx	r3
    6e28:	4c0f      	ldr	r4, [pc, #60]	; (6e68 <gapc_cmp_evt+0x148>)
    6e2a:	4912      	ldr	r1, [pc, #72]	; (6e74 <gapc_cmp_evt+0x154>)
    6e2c:	22c7      	movs	r2, #199	; 0xc7
    6e2e:	4b0f      	ldr	r3, [pc, #60]	; (6e6c <gapc_cmp_evt+0x14c>)
    6e30:	480f      	ldr	r0, [pc, #60]	; (6e70 <gapc_cmp_evt+0x150>)
    6e32:	6826      	ldr	r6, [r4, #0]
    6e34:	47b0      	blx	r6
    6e36:	6823      	ldr	r3, [r4, #0]
    6e38:	4813      	ldr	r0, [pc, #76]	; (6e88 <gapc_cmp_evt+0x168>)
    6e3a:	1c29      	adds	r1, r5, #0
    6e3c:	4798      	blx	r3
    6e3e:	2012      	movs	r0, #18
    6e40:	e00d      	b.n	6e5e <gapc_cmp_evt+0x13e>
    6e42:	4c09      	ldr	r4, [pc, #36]	; (6e68 <gapc_cmp_evt+0x148>)
    6e44:	490b      	ldr	r1, [pc, #44]	; (6e74 <gapc_cmp_evt+0x154>)
    6e46:	22d1      	movs	r2, #209	; 0xd1
    6e48:	4b08      	ldr	r3, [pc, #32]	; (6e6c <gapc_cmp_evt+0x14c>)
    6e4a:	4809      	ldr	r0, [pc, #36]	; (6e70 <gapc_cmp_evt+0x150>)
    6e4c:	6825      	ldr	r5, [r4, #0]
    6e4e:	47a8      	blx	r5
    6e50:	6823      	ldr	r3, [r4, #0]
    6e52:	480e      	ldr	r0, [pc, #56]	; (6e8c <gapc_cmp_evt+0x16c>)
    6e54:	9901      	ldr	r1, [sp, #4]
    6e56:	4798      	blx	r3
    6e58:	2000      	movs	r0, #0
    6e5a:	e000      	b.n	6e5e <gapc_cmp_evt+0x13e>
    6e5c:	203a      	movs	r0, #58	; 0x3a
    6e5e:	b005      	add	sp, #20
    6e60:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6e62:	46c0      	nop			; (mov r8, r8)
    6e64:	00006cbd 	.word	0x00006cbd
    6e68:	20000078 	.word	0x20000078
    6e6c:	0000affc 	.word	0x0000affc
    6e70:	0000aab9 	.word	0x0000aab9
    6e74:	0000b027 	.word	0x0000b027
    6e78:	0000b062 	.word	0x0000b062
    6e7c:	0000b084 	.word	0x0000b084
    6e80:	0000b0a6 	.word	0x0000b0a6
    6e84:	00008a81 	.word	0x00008a81
    6e88:	0000b0cd 	.word	0x0000b0cd
    6e8c:	0000b0f6 	.word	0x0000b0f6

00006e90 <gapc_connection_cfm_handler>:
    6e90:	b5f0      	push	{r4, r5, r6, r7, lr}
    6e92:	2500      	movs	r5, #0
    6e94:	b085      	sub	sp, #20
    6e96:	1c1e      	adds	r6, r3, #0
    6e98:	ab0a      	add	r3, sp, #40	; 0x28
    6e9a:	781b      	ldrb	r3, [r3, #0]
    6e9c:	9201      	str	r2, [sp, #4]
    6e9e:	9302      	str	r3, [sp, #8]
    6ea0:	ab0b      	add	r3, sp, #44	; 0x2c
    6ea2:	781b      	ldrb	r3, [r3, #0]
    6ea4:	1c07      	adds	r7, r0, #0
    6ea6:	9303      	str	r3, [sp, #12]
    6ea8:	ab0c      	add	r3, sp, #48	; 0x30
    6eaa:	881a      	ldrh	r2, [r3, #0]
    6eac:	4b23      	ldr	r3, [pc, #140]	; (6f3c <gapc_connection_cfm_handler+0xac>)
    6eae:	9100      	str	r1, [sp, #0]
    6eb0:	609d      	str	r5, [r3, #8]
    6eb2:	60dd      	str	r5, [r3, #12]
    6eb4:	4b22      	ldr	r3, [pc, #136]	; (6f40 <gapc_connection_cfm_handler+0xb0>)
    6eb6:	1c39      	adds	r1, r7, #0
    6eb8:	681c      	ldr	r4, [r3, #0]
    6eba:	2305      	movs	r3, #5
    6ebc:	1c20      	adds	r0, r4, #0
    6ebe:	7023      	strb	r3, [r4, #0]
    6ec0:	3b03      	subs	r3, #3
    6ec2:	7063      	strb	r3, [r4, #1]
    6ec4:	330c      	adds	r3, #12
    6ec6:	70a3      	strb	r3, [r4, #2]
    6ec8:	70e3      	strb	r3, [r4, #3]
    6eca:	3302      	adds	r3, #2
    6ecc:	7122      	strb	r2, [r4, #4]
    6ece:	7163      	strb	r3, [r4, #5]
    6ed0:	4f1c      	ldr	r7, [pc, #112]	; (6f44 <gapc_connection_cfm_handler+0xb4>)
    6ed2:	71a5      	strb	r5, [r4, #6]
    6ed4:	71e5      	strb	r5, [r4, #7]
    6ed6:	7225      	strb	r5, [r4, #8]
    6ed8:	2210      	movs	r2, #16
    6eda:	3009      	adds	r0, #9
    6edc:	47b8      	blx	r7
    6ede:	466b      	mov	r3, sp
    6ee0:	1c20      	adds	r0, r4, #0
    6ee2:	781b      	ldrb	r3, [r3, #0]
    6ee4:	9901      	ldr	r1, [sp, #4]
    6ee6:	7663      	strb	r3, [r4, #25]
    6ee8:	9b00      	ldr	r3, [sp, #0]
    6eea:	2210      	movs	r2, #16
    6eec:	0a1b      	lsrs	r3, r3, #8
    6eee:	76a3      	strb	r3, [r4, #26]
    6ef0:	9b00      	ldr	r3, [sp, #0]
    6ef2:	301d      	adds	r0, #29
    6ef4:	0c1b      	lsrs	r3, r3, #16
    6ef6:	76e3      	strb	r3, [r4, #27]
    6ef8:	9b00      	ldr	r3, [sp, #0]
    6efa:	0e1b      	lsrs	r3, r3, #24
    6efc:	7723      	strb	r3, [r4, #28]
    6efe:	47b8      	blx	r7
    6f00:	1c23      	adds	r3, r4, #0
    6f02:	0a32      	lsrs	r2, r6, #8
    6f04:	332d      	adds	r3, #45	; 0x2d
    6f06:	705a      	strb	r2, [r3, #1]
    6f08:	0c32      	lsrs	r2, r6, #16
    6f0a:	709a      	strb	r2, [r3, #2]
    6f0c:	1c22      	adds	r2, r4, #0
    6f0e:	701e      	strb	r6, [r3, #0]
    6f10:	3230      	adds	r2, #48	; 0x30
    6f12:	0e33      	lsrs	r3, r6, #24
    6f14:	7013      	strb	r3, [r2, #0]
    6f16:	466a      	mov	r2, sp
    6f18:	1c23      	adds	r3, r4, #0
    6f1a:	7a12      	ldrb	r2, [r2, #8]
    6f1c:	3331      	adds	r3, #49	; 0x31
    6f1e:	701a      	strb	r2, [r3, #0]
    6f20:	466a      	mov	r2, sp
    6f22:	7b12      	ldrb	r2, [r2, #12]
    6f24:	705d      	strb	r5, [r3, #1]
    6f26:	709a      	strb	r2, [r3, #2]
    6f28:	70dd      	strb	r5, [r3, #3]
    6f2a:	232c      	movs	r3, #44	; 0x2c
    6f2c:	1c20      	adds	r0, r4, #0
    6f2e:	71e3      	strb	r3, [r4, #7]
    6f30:	2135      	movs	r1, #53	; 0x35
    6f32:	4b05      	ldr	r3, [pc, #20]	; (6f48 <gapc_connection_cfm_handler+0xb8>)
    6f34:	4798      	blx	r3
    6f36:	1c28      	adds	r0, r5, #0
    6f38:	b005      	add	sp, #20
    6f3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6f3c:	20001c54 	.word	0x20001c54
    6f40:	0000ae2c 	.word	0x0000ae2c
    6f44:	00008a6f 	.word	0x00008a6f
    6f48:	000061f9 	.word	0x000061f9

00006f4c <gapc_con_req_ind>:
    6f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    6f4e:	7845      	ldrb	r5, [r0, #1]
    6f50:	7803      	ldrb	r3, [r0, #0]
    6f52:	4c30      	ldr	r4, [pc, #192]	; (7014 <gapc_con_req_ind+0xc8>)
    6f54:	022d      	lsls	r5, r5, #8
    6f56:	431d      	orrs	r5, r3
    6f58:	85a5      	strh	r5, [r4, #44]	; 0x2c
    6f5a:	78c3      	ldrb	r3, [r0, #3]
    6f5c:	7882      	ldrb	r2, [r0, #2]
    6f5e:	b08b      	sub	sp, #44	; 0x2c
    6f60:	021b      	lsls	r3, r3, #8
    6f62:	431a      	orrs	r2, r3
    6f64:	466b      	mov	r3, sp
    6f66:	9205      	str	r2, [sp, #20]
    6f68:	8a9b      	ldrh	r3, [r3, #20]
    6f6a:	2120      	movs	r1, #32
    6f6c:	85e3      	strh	r3, [r4, #46]	; 0x2e
    6f6e:	7943      	ldrb	r3, [r0, #5]
    6f70:	7902      	ldrb	r2, [r0, #4]
    6f72:	021b      	lsls	r3, r3, #8
    6f74:	431a      	orrs	r2, r3
    6f76:	466b      	mov	r3, sp
    6f78:	9206      	str	r2, [sp, #24]
    6f7a:	8b1b      	ldrh	r3, [r3, #24]
    6f7c:	1c06      	adds	r6, r0, #0
    6f7e:	8623      	strh	r3, [r4, #48]	; 0x30
    6f80:	79c3      	ldrb	r3, [r0, #7]
    6f82:	7982      	ldrb	r2, [r0, #6]
    6f84:	021b      	lsls	r3, r3, #8
    6f86:	431a      	orrs	r2, r3
    6f88:	466b      	mov	r3, sp
    6f8a:	9207      	str	r2, [sp, #28]
    6f8c:	466a      	mov	r2, sp
    6f8e:	8b9b      	ldrh	r3, [r3, #28]
    6f90:	1852      	adds	r2, r2, r1
    6f92:	8663      	strh	r3, [r4, #50]	; 0x32
    6f94:	7a43      	ldrb	r3, [r0, #9]
    6f96:	1c01      	adds	r1, r0, #0
    6f98:	9308      	str	r3, [sp, #32]
    6f9a:	1c23      	adds	r3, r4, #0
    6f9c:	7812      	ldrb	r2, [r2, #0]
    6f9e:	3377      	adds	r3, #119	; 0x77
    6fa0:	3478      	adds	r4, #120	; 0x78
    6fa2:	701a      	strb	r2, [r3, #0]
    6fa4:	310a      	adds	r1, #10
    6fa6:	2206      	movs	r2, #6
    6fa8:	4b1b      	ldr	r3, [pc, #108]	; (7018 <gapc_con_req_ind+0xcc>)
    6faa:	1c20      	adds	r0, r4, #0
    6fac:	4798      	blx	r3
    6fae:	7c33      	ldrb	r3, [r6, #16]
    6fb0:	9309      	str	r3, [sp, #36]	; 0x24
    6fb2:	4b1a      	ldr	r3, [pc, #104]	; (701c <gapc_con_req_ind+0xd0>)
    6fb4:	4798      	blx	r3
    6fb6:	4e1a      	ldr	r6, [pc, #104]	; (7020 <gapc_con_req_ind+0xd4>)
    6fb8:	1e07      	subs	r7, r0, #0
    6fba:	2f07      	cmp	r7, #7
    6fbc:	d81b      	bhi.n	6ff6 <gapc_con_req_ind+0xaa>
    6fbe:	2312      	movs	r3, #18
    6fc0:	4343      	muls	r3, r0
    6fc2:	18f0      	adds	r0, r6, r3
    6fc4:	8145      	strh	r5, [r0, #10]
    6fc6:	4669      	mov	r1, sp
    6fc8:	2524      	movs	r5, #36	; 0x24
    6fca:	1949      	adds	r1, r1, r5
    6fcc:	7809      	ldrb	r1, [r1, #0]
    6fce:	2206      	movs	r2, #6
    6fd0:	54f1      	strb	r1, [r6, r3]
    6fd2:	2120      	movs	r1, #32
    6fd4:	466b      	mov	r3, sp
    6fd6:	185b      	adds	r3, r3, r1
    6fd8:	781b      	ldrb	r3, [r3, #0]
    6fda:	1c21      	adds	r1, r4, #0
    6fdc:	7043      	strb	r3, [r0, #1]
    6fde:	466b      	mov	r3, sp
    6fe0:	8a9b      	ldrh	r3, [r3, #20]
    6fe2:	3002      	adds	r0, #2
    6fe4:	8143      	strh	r3, [r0, #10]
    6fe6:	466b      	mov	r3, sp
    6fe8:	8b1b      	ldrh	r3, [r3, #24]
    6fea:	8183      	strh	r3, [r0, #12]
    6fec:	466b      	mov	r3, sp
    6fee:	8b9b      	ldrh	r3, [r3, #28]
    6ff0:	81c3      	strh	r3, [r0, #14]
    6ff2:	4b09      	ldr	r3, [pc, #36]	; (7018 <gapc_con_req_ind+0xcc>)
    6ff4:	4798      	blx	r3
    6ff6:	2112      	movs	r1, #18
    6ff8:	2300      	movs	r3, #0
    6ffa:	434f      	muls	r7, r1
    6ffc:	9300      	str	r3, [sp, #0]
    6ffe:	9301      	str	r3, [sp, #4]
    7000:	19f6      	adds	r6, r6, r7
    7002:	8971      	ldrh	r1, [r6, #10]
    7004:	4a07      	ldr	r2, [pc, #28]	; (7024 <gapc_con_req_ind+0xd8>)
    7006:	9102      	str	r1, [sp, #8]
    7008:	1c10      	adds	r0, r2, #0
    700a:	1c19      	adds	r1, r3, #0
    700c:	4c06      	ldr	r4, [pc, #24]	; (7028 <gapc_con_req_ind+0xdc>)
    700e:	47a0      	blx	r4
    7010:	b00b      	add	sp, #44	; 0x2c
    7012:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7014:	20001cf4 	.word	0x20001cf4
    7018:	00008a6f 	.word	0x00008a6f
    701c:	00006cf9 	.word	0x00006cf9
    7020:	20001c64 	.word	0x20001c64
    7024:	20000dec 	.word	0x20000dec
    7028:	00006e91 	.word	0x00006e91

0000702c <gapc_disconnect_cmd_handler>:
    702c:	b510      	push	{r4, lr}
    702e:	2400      	movs	r4, #0
    7030:	2205      	movs	r2, #5
    7032:	4b0d      	ldr	r3, [pc, #52]	; (7068 <gapc_disconnect_cmd_handler+0x3c>)
    7034:	609c      	str	r4, [r3, #8]
    7036:	60dc      	str	r4, [r3, #12]
    7038:	4b0c      	ldr	r3, [pc, #48]	; (706c <gapc_disconnect_cmd_handler+0x40>)
    703a:	681b      	ldr	r3, [r3, #0]
    703c:	701a      	strb	r2, [r3, #0]
    703e:	3a01      	subs	r2, #1
    7040:	705a      	strb	r2, [r3, #1]
    7042:	320a      	adds	r2, #10
    7044:	709a      	strb	r2, [r3, #2]
    7046:	70da      	strb	r2, [r3, #3]
    7048:	3202      	adds	r2, #2
    704a:	715a      	strb	r2, [r3, #5]
    704c:	3a0f      	subs	r2, #15
    704e:	725a      	strb	r2, [r3, #9]
    7050:	3201      	adds	r2, #1
    7052:	7119      	strb	r1, [r3, #4]
    7054:	719c      	strb	r4, [r3, #6]
    7056:	721c      	strb	r4, [r3, #8]
    7058:	7298      	strb	r0, [r3, #10]
    705a:	71da      	strb	r2, [r3, #7]
    705c:	1c18      	adds	r0, r3, #0
    705e:	210b      	movs	r1, #11
    7060:	4b03      	ldr	r3, [pc, #12]	; (7070 <gapc_disconnect_cmd_handler+0x44>)
    7062:	4798      	blx	r3
    7064:	1c20      	adds	r0, r4, #0
    7066:	bd10      	pop	{r4, pc}
    7068:	20001c54 	.word	0x20001c54
    706c:	0000ae2c 	.word	0x0000ae2c
    7070:	000061f9 	.word	0x000061f9

00007074 <gapc_disconnect_ind>:
    7074:	b510      	push	{r4, lr}
    7076:	1c04      	adds	r4, r0, #0
    7078:	7843      	ldrb	r3, [r0, #1]
    707a:	7800      	ldrb	r0, [r0, #0]
    707c:	021b      	lsls	r3, r3, #8
    707e:	4318      	orrs	r0, r3
    7080:	8008      	strh	r0, [r1, #0]
    7082:	78a3      	ldrb	r3, [r4, #2]
    7084:	1c0a      	adds	r2, r1, #0
    7086:	70cb      	strb	r3, [r1, #3]
    7088:	2100      	movs	r1, #0
    708a:	4b06      	ldr	r3, [pc, #24]	; (70a4 <gapc_disconnect_ind+0x30>)
    708c:	7091      	strb	r1, [r2, #2]
    708e:	4798      	blx	r3
    7090:	2807      	cmp	r0, #7
    7092:	d806      	bhi.n	70a2 <gapc_disconnect_ind+0x2e>
    7094:	2312      	movs	r3, #18
    7096:	4358      	muls	r0, r3
    7098:	4b03      	ldr	r3, [pc, #12]	; (70a8 <gapc_disconnect_ind+0x34>)
    709a:	1818      	adds	r0, r3, r0
    709c:	2301      	movs	r3, #1
    709e:	425b      	negs	r3, r3
    70a0:	8143      	strh	r3, [r0, #10]
    70a2:	bd10      	pop	{r4, pc}
    70a4:	00006cbd 	.word	0x00006cbd
    70a8:	20001c64 	.word	0x20001c64

000070ac <gapc_bond_cmd_handler>:
    70ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    70ae:	2400      	movs	r4, #0
    70b0:	4684      	mov	ip, r0
    70b2:	a808      	add	r0, sp, #32
    70b4:	7807      	ldrb	r7, [r0, #0]
    70b6:	a809      	add	r0, sp, #36	; 0x24
    70b8:	7806      	ldrb	r6, [r0, #0]
    70ba:	a80a      	add	r0, sp, #40	; 0x28
    70bc:	7800      	ldrb	r0, [r0, #0]
    70be:	2505      	movs	r5, #5
    70c0:	9000      	str	r0, [sp, #0]
    70c2:	a80b      	add	r0, sp, #44	; 0x2c
    70c4:	7800      	ldrb	r0, [r0, #0]
    70c6:	9001      	str	r0, [sp, #4]
    70c8:	4811      	ldr	r0, [pc, #68]	; (7110 <gapc_bond_cmd_handler+0x64>)
    70ca:	6084      	str	r4, [r0, #8]
    70cc:	60c4      	str	r4, [r0, #12]
    70ce:	4811      	ldr	r0, [pc, #68]	; (7114 <gapc_bond_cmd_handler+0x68>)
    70d0:	6800      	ldr	r0, [r0, #0]
    70d2:	7303      	strb	r3, [r0, #12]
    70d4:	466b      	mov	r3, sp
    70d6:	781b      	ldrb	r3, [r3, #0]
    70d8:	7005      	strb	r5, [r0, #0]
    70da:	73c3      	strb	r3, [r0, #15]
    70dc:	350d      	adds	r5, #13
    70de:	466b      	mov	r3, sp
    70e0:	7045      	strb	r5, [r0, #1]
    70e2:	3d04      	subs	r5, #4
    70e4:	7085      	strb	r5, [r0, #2]
    70e6:	70c5      	strb	r5, [r0, #3]
    70e8:	4665      	mov	r5, ip
    70ea:	791b      	ldrb	r3, [r3, #4]
    70ec:	7105      	strb	r5, [r0, #4]
    70ee:	7403      	strb	r3, [r0, #16]
    70f0:	2510      	movs	r5, #16
    70f2:	2308      	movs	r3, #8
    70f4:	7184      	strb	r4, [r0, #6]
    70f6:	7204      	strb	r4, [r0, #8]
    70f8:	340a      	adds	r4, #10
    70fa:	7145      	strb	r5, [r0, #5]
    70fc:	7347      	strb	r7, [r0, #13]
    70fe:	7386      	strb	r6, [r0, #14]
    7100:	7244      	strb	r4, [r0, #9]
    7102:	7281      	strb	r1, [r0, #10]
    7104:	72c2      	strb	r2, [r0, #11]
    7106:	71c3      	strb	r3, [r0, #7]
    7108:	2111      	movs	r1, #17
    710a:	4b03      	ldr	r3, [pc, #12]	; (7118 <gapc_bond_cmd_handler+0x6c>)
    710c:	4798      	blx	r3
    710e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    7110:	20001c54 	.word	0x20001c54
    7114:	0000ae2c 	.word	0x0000ae2c
    7118:	000061f9 	.word	0x000061f9

0000711c <gapc_bond_ind>:
    711c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    711e:	780e      	ldrb	r6, [r1, #0]
    7120:	1c03      	adds	r3, r0, #0
    7122:	1eb0      	subs	r0, r6, #2
    7124:	2805      	cmp	r0, #5
    7126:	d85d      	bhi.n	71e4 <gapc_bond_ind+0xc8>
    7128:	1c15      	adds	r5, r2, #0
    712a:	1c0c      	adds	r4, r1, #0
    712c:	f001 fb82 	bl	8834 <__gnu_thumb1_case_uqi>
    7130:	2f5a030d 	.word	0x2f5a030d
    7134:	4740      	.short	0x4740
    7136:	2009      	movs	r0, #9
    7138:	2a00      	cmp	r2, #0
    713a:	d054      	beq.n	71e6 <gapc_bond_ind+0xca>
    713c:	0a1b      	lsrs	r3, r3, #8
    713e:	8053      	strh	r3, [r2, #2]
    7140:	788b      	ldrb	r3, [r1, #2]
    7142:	4829      	ldr	r0, [pc, #164]	; (71e8 <gapc_bond_ind+0xcc>)
    7144:	7113      	strb	r3, [r2, #4]
    7146:	2100      	movs	r1, #0
    7148:	e01c      	b.n	7184 <gapc_bond_ind+0x68>
    714a:	2009      	movs	r0, #9
    714c:	2a00      	cmp	r2, #0
    714e:	d04a      	beq.n	71e6 <gapc_bond_ind+0xca>
    7150:	4c25      	ldr	r4, [pc, #148]	; (71e8 <gapc_bond_ind+0xcc>)
    7152:	0a1b      	lsrs	r3, r3, #8
    7154:	8053      	strh	r3, [r2, #2]
    7156:	788b      	ldrb	r3, [r1, #2]
    7158:	2700      	movs	r7, #0
    715a:	1c10      	adds	r0, r2, #0
    715c:	1c21      	adds	r1, r4, #0
    715e:	7013      	strb	r3, [r2, #0]
    7160:	4e22      	ldr	r6, [pc, #136]	; (71ec <gapc_bond_ind+0xd0>)
    7162:	7117      	strb	r7, [r2, #4]
    7164:	312e      	adds	r1, #46	; 0x2e
    7166:	2217      	movs	r2, #23
    7168:	3032      	adds	r0, #50	; 0x32
    716a:	47b0      	blx	r6
    716c:	1c28      	adds	r0, r5, #0
    716e:	1c21      	adds	r1, r4, #0
    7170:	2210      	movs	r2, #16
    7172:	311e      	adds	r1, #30
    7174:	3022      	adds	r0, #34	; 0x22
    7176:	47b0      	blx	r6
    7178:	1ca1      	adds	r1, r4, #2
    717a:	1da8      	adds	r0, r5, #6
    717c:	221c      	movs	r2, #28
    717e:	47b0      	blx	r6
    7180:	1c20      	adds	r0, r4, #0
    7182:	1c39      	adds	r1, r7, #0
    7184:	2246      	movs	r2, #70	; 0x46
    7186:	4b1a      	ldr	r3, [pc, #104]	; (71f0 <gapc_bond_ind+0xd4>)
    7188:	4798      	blx	r3
    718a:	2009      	movs	r0, #9
    718c:	e02b      	b.n	71e6 <gapc_bond_ind+0xca>
    718e:	4d16      	ldr	r5, [pc, #88]	; (71e8 <gapc_bond_ind+0xcc>)
    7190:	3102      	adds	r1, #2
    7192:	1c28      	adds	r0, r5, #0
    7194:	2210      	movs	r2, #16
    7196:	4e15      	ldr	r6, [pc, #84]	; (71ec <gapc_bond_ind+0xd0>)
    7198:	302e      	adds	r0, #46	; 0x2e
    719a:	47b0      	blx	r6
    719c:	1c28      	adds	r0, r5, #0
    719e:	1c21      	adds	r1, r4, #0
    71a0:	303f      	adds	r0, #63	; 0x3f
    71a2:	3112      	adds	r1, #18
    71a4:	2206      	movs	r2, #6
    71a6:	47b0      	blx	r6
    71a8:	7e23      	ldrb	r3, [r4, #24]
    71aa:	353e      	adds	r5, #62	; 0x3e
    71ac:	702b      	strb	r3, [r5, #0]
    71ae:	e019      	b.n	71e4 <gapc_bond_ind+0xc8>
    71b0:	480d      	ldr	r0, [pc, #52]	; (71e8 <gapc_bond_ind+0xcc>)
    71b2:	3102      	adds	r1, #2
    71b4:	2210      	movs	r2, #16
    71b6:	4b0d      	ldr	r3, [pc, #52]	; (71ec <gapc_bond_ind+0xd0>)
    71b8:	301e      	adds	r0, #30
    71ba:	4798      	blx	r3
    71bc:	e012      	b.n	71e4 <gapc_bond_ind+0xc8>
    71be:	4d0a      	ldr	r5, [pc, #40]	; (71e8 <gapc_bond_ind+0xcc>)
    71c0:	3102      	adds	r1, #2
    71c2:	2210      	movs	r2, #16
    71c4:	4e09      	ldr	r6, [pc, #36]	; (71ec <gapc_bond_ind+0xd0>)
    71c6:	1ca8      	adds	r0, r5, #2
    71c8:	47b0      	blx	r6
    71ca:	1c28      	adds	r0, r5, #0
    71cc:	1c21      	adds	r1, r4, #0
    71ce:	7ce3      	ldrb	r3, [r4, #19]
    71d0:	7ca2      	ldrb	r2, [r4, #18]
    71d2:	021b      	lsls	r3, r3, #8
    71d4:	4313      	orrs	r3, r2
    71d6:	3014      	adds	r0, #20
    71d8:	3114      	adds	r1, #20
    71da:	2208      	movs	r2, #8
    71dc:	826b      	strh	r3, [r5, #18]
    71de:	47b0      	blx	r6
    71e0:	7f23      	ldrb	r3, [r4, #28]
    71e2:	772b      	strb	r3, [r5, #28]
    71e4:	2000      	movs	r0, #0
    71e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    71e8:	20000da6 	.word	0x20000da6
    71ec:	00008a6f 	.word	0x00008a6f
    71f0:	00008a81 	.word	0x00008a81

000071f4 <gapc_bond_req_ind>:
    71f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    71f6:	780d      	ldrb	r5, [r1, #0]
    71f8:	1c03      	adds	r3, r0, #0
    71fa:	7849      	ldrb	r1, [r1, #1]
    71fc:	2d07      	cmp	r5, #7
    71fe:	d860      	bhi.n	72c2 <gapc_bond_req_ind+0xce>
    7200:	1c28      	adds	r0, r5, #0
    7202:	f001 fb17 	bl	8834 <__gnu_thumb1_case_uqi>
    7206:	5e04      	.short	0x5e04
    7208:	5e0b5e5e 	.word	0x5e0b5e5e
    720c:	1f1f      	.short	0x1f1f
    720e:	200a      	movs	r0, #10
    7210:	2a00      	cmp	r2, #0
    7212:	d057      	beq.n	72c4 <gapc_bond_req_ind+0xd0>
    7214:	0a1b      	lsrs	r3, r3, #8
    7216:	8013      	strh	r3, [r2, #0]
    7218:	7091      	strb	r1, [r2, #2]
    721a:	e053      	b.n	72c4 <gapc_bond_req_ind+0xd0>
    721c:	2a00      	cmp	r2, #0
    721e:	d00b      	beq.n	7238 <gapc_bond_req_ind+0x44>
    7220:	0a1b      	lsrs	r3, r3, #8
    7222:	8013      	strh	r3, [r2, #0]
    7224:	2900      	cmp	r1, #0
    7226:	d102      	bne.n	722e <gapc_bond_req_ind+0x3a>
    7228:	2301      	movs	r3, #1
    722a:	7093      	strb	r3, [r2, #2]
    722c:	e004      	b.n	7238 <gapc_bond_req_ind+0x44>
    722e:	2300      	movs	r3, #0
    7230:	7093      	strb	r3, [r2, #2]
    7232:	2902      	cmp	r1, #2
    7234:	d102      	bne.n	723c <gapc_bond_req_ind+0x48>
    7236:	70d3      	strb	r3, [r2, #3]
    7238:	200c      	movs	r0, #12
    723a:	e043      	b.n	72c4 <gapc_bond_req_ind+0xd0>
    723c:	2901      	cmp	r1, #1
    723e:	d1fb      	bne.n	7238 <gapc_bond_req_ind+0x44>
    7240:	70d1      	strb	r1, [r2, #3]
    7242:	e7f9      	b.n	7238 <gapc_bond_req_ind+0x44>
    7244:	2100      	movs	r1, #0
    7246:	4a20      	ldr	r2, [pc, #128]	; (72c8 <gapc_bond_req_ind+0xd4>)
    7248:	0a1b      	lsrs	r3, r3, #8
    724a:	6091      	str	r1, [r2, #8]
    724c:	60d1      	str	r1, [r2, #12]
    724e:	4a1f      	ldr	r2, [pc, #124]	; (72cc <gapc_bond_req_ind+0xd8>)
    7250:	4f1f      	ldr	r7, [pc, #124]	; (72d0 <gapc_bond_req_ind+0xdc>)
    7252:	6814      	ldr	r4, [r2, #0]
    7254:	2205      	movs	r2, #5
    7256:	7123      	strb	r3, [r4, #4]
    7258:	1c20      	adds	r0, r4, #0
    725a:	2301      	movs	r3, #1
    725c:	7022      	strb	r2, [r4, #0]
    725e:	320f      	adds	r2, #15
    7260:	7062      	strb	r2, [r4, #1]
    7262:	3a06      	subs	r2, #6
    7264:	70a2      	strb	r2, [r4, #2]
    7266:	70e2      	strb	r2, [r4, #3]
    7268:	3202      	adds	r2, #2
    726a:	71a1      	strb	r1, [r4, #6]
    726c:	71e1      	strb	r1, [r4, #7]
    726e:	7221      	strb	r1, [r4, #8]
    7270:	7162      	strb	r2, [r4, #5]
    7272:	7265      	strb	r5, [r4, #9]
    7274:	72a3      	strb	r3, [r4, #10]
    7276:	300b      	adds	r0, #11
    7278:	4e16      	ldr	r6, [pc, #88]	; (72d4 <gapc_bond_req_ind+0xe0>)
    727a:	1c39      	adds	r1, r7, #0
    727c:	2d07      	cmp	r5, #7
    727e:	d115      	bne.n	72ac <gapc_bond_req_ind+0xb8>
    7280:	317e      	adds	r1, #126	; 0x7e
    7282:	47b0      	blx	r6
    7284:	1c3b      	adds	r3, r7, #0
    7286:	1c20      	adds	r0, r4, #0
    7288:	1c39      	adds	r1, r7, #0
    728a:	338e      	adds	r3, #142	; 0x8e
    728c:	881a      	ldrh	r2, [r3, #0]
    728e:	3190      	adds	r1, #144	; 0x90
    7290:	76e2      	strb	r2, [r4, #27]
    7292:	881b      	ldrh	r3, [r3, #0]
    7294:	2208      	movs	r2, #8
    7296:	0a1b      	lsrs	r3, r3, #8
    7298:	7723      	strb	r3, [r4, #28]
    729a:	301d      	adds	r0, #29
    729c:	47b0      	blx	r6
    729e:	1c39      	adds	r1, r7, #0
    72a0:	3198      	adds	r1, #152	; 0x98
    72a2:	780a      	ldrb	r2, [r1, #0]
    72a4:	1da3      	adds	r3, r4, #6
    72a6:	77da      	strb	r2, [r3, #31]
    72a8:	2126      	movs	r1, #38	; 0x26
    72aa:	e002      	b.n	72b2 <gapc_bond_req_ind+0xbe>
    72ac:	319a      	adds	r1, #154	; 0x9a
    72ae:	47b0      	blx	r6
    72b0:	211b      	movs	r1, #27
    72b2:	1c0b      	adds	r3, r1, #0
    72b4:	2500      	movs	r5, #0
    72b6:	3b09      	subs	r3, #9
    72b8:	71e3      	strb	r3, [r4, #7]
    72ba:	7225      	strb	r5, [r4, #8]
    72bc:	1c20      	adds	r0, r4, #0
    72be:	4b06      	ldr	r3, [pc, #24]	; (72d8 <gapc_bond_req_ind+0xe4>)
    72c0:	4798      	blx	r3
    72c2:	2000      	movs	r0, #0
    72c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    72c6:	46c0      	nop			; (mov r8, r8)
    72c8:	20001c54 	.word	0x20001c54
    72cc:	0000ae2c 	.word	0x0000ae2c
    72d0:	20001cf4 	.word	0x20001cf4
    72d4:	00008a6f 	.word	0x00008a6f
    72d8:	000061f9 	.word	0x000061f9

000072dc <gapc_bond_cfm_handler_pair_resp>:
    72dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    72de:	2400      	movs	r4, #0
    72e0:	b085      	sub	sp, #20
    72e2:	1c07      	adds	r7, r0, #0
    72e4:	a80a      	add	r0, sp, #40	; 0x28
    72e6:	7806      	ldrb	r6, [r0, #0]
    72e8:	a80b      	add	r0, sp, #44	; 0x2c
    72ea:	7800      	ldrb	r0, [r0, #0]
    72ec:	2505      	movs	r5, #5
    72ee:	9001      	str	r0, [sp, #4]
    72f0:	a80c      	add	r0, sp, #48	; 0x30
    72f2:	7800      	ldrb	r0, [r0, #0]
    72f4:	9002      	str	r0, [sp, #8]
    72f6:	a80d      	add	r0, sp, #52	; 0x34
    72f8:	7800      	ldrb	r0, [r0, #0]
    72fa:	9003      	str	r0, [sp, #12]
    72fc:	a80e      	add	r0, sp, #56	; 0x38
    72fe:	8800      	ldrh	r0, [r0, #0]
    7300:	4684      	mov	ip, r0
    7302:	4814      	ldr	r0, [pc, #80]	; (7354 <gapc_bond_cfm_handler_pair_resp+0x78>)
    7304:	6084      	str	r4, [r0, #8]
    7306:	60c4      	str	r4, [r0, #12]
    7308:	4813      	ldr	r0, [pc, #76]	; (7358 <gapc_bond_cfm_handler_pair_resp+0x7c>)
    730a:	6800      	ldr	r0, [r0, #0]
    730c:	7343      	strb	r3, [r0, #13]
    730e:	466b      	mov	r3, sp
    7310:	791b      	ldrb	r3, [r3, #4]
    7312:	7005      	strb	r5, [r0, #0]
    7314:	73c3      	strb	r3, [r0, #15]
    7316:	466b      	mov	r3, sp
    7318:	350f      	adds	r5, #15
    731a:	7045      	strb	r5, [r0, #1]
    731c:	3d06      	subs	r5, #6
    731e:	7085      	strb	r5, [r0, #2]
    7320:	70c5      	strb	r5, [r0, #3]
    7322:	4665      	mov	r5, ip
    7324:	7a1b      	ldrb	r3, [r3, #8]
    7326:	7105      	strb	r5, [r0, #4]
    7328:	7403      	strb	r3, [r0, #16]
    732a:	466b      	mov	r3, sp
    732c:	2510      	movs	r5, #16
    732e:	7b1b      	ldrb	r3, [r3, #12]
    7330:	7184      	strb	r4, [r0, #6]
    7332:	7204      	strb	r4, [r0, #8]
    7334:	3401      	adds	r4, #1
    7336:	7145      	strb	r5, [r0, #5]
    7338:	7244      	strb	r4, [r0, #9]
    733a:	7287      	strb	r7, [r0, #10]
    733c:	72c1      	strb	r1, [r0, #11]
    733e:	7302      	strb	r2, [r0, #12]
    7340:	7386      	strb	r6, [r0, #14]
    7342:	7443      	strb	r3, [r0, #17]
    7344:	2309      	movs	r3, #9
    7346:	2112      	movs	r1, #18
    7348:	71c3      	strb	r3, [r0, #7]
    734a:	4b04      	ldr	r3, [pc, #16]	; (735c <gapc_bond_cfm_handler_pair_resp+0x80>)
    734c:	4798      	blx	r3
    734e:	b005      	add	sp, #20
    7350:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7352:	46c0      	nop			; (mov r8, r8)
    7354:	20001c54 	.word	0x20001c54
    7358:	0000ae2c 	.word	0x0000ae2c
    735c:	000061f9 	.word	0x000061f9

00007360 <gapc_bond_cfm_handler_key_exch>:
    7360:	b570      	push	{r4, r5, r6, lr}
    7362:	2500      	movs	r5, #0
    7364:	4c10      	ldr	r4, [pc, #64]	; (73a8 <gapc_bond_cfm_handler_key_exch+0x48>)
    7366:	2605      	movs	r6, #5
    7368:	60a5      	str	r5, [r4, #8]
    736a:	60e5      	str	r5, [r4, #12]
    736c:	4c0f      	ldr	r4, [pc, #60]	; (73ac <gapc_bond_cfm_handler_key_exch+0x4c>)
    736e:	6824      	ldr	r4, [r4, #0]
    7370:	7123      	strb	r3, [r4, #4]
    7372:	7260      	strb	r0, [r4, #9]
    7374:	2310      	movs	r3, #16
    7376:	1c20      	adds	r0, r4, #0
    7378:	7026      	strb	r6, [r4, #0]
    737a:	360f      	adds	r6, #15
    737c:	7066      	strb	r6, [r4, #1]
    737e:	3e06      	subs	r6, #6
    7380:	70a6      	strb	r6, [r4, #2]
    7382:	70e6      	strb	r6, [r4, #3]
    7384:	7163      	strb	r3, [r4, #5]
    7386:	71a5      	strb	r5, [r4, #6]
    7388:	71e5      	strb	r5, [r4, #7]
    738a:	7225      	strb	r5, [r4, #8]
    738c:	72a1      	strb	r1, [r4, #10]
    738e:	300b      	adds	r0, #11
    7390:	1c11      	adds	r1, r2, #0
    7392:	1c1a      	adds	r2, r3, #0
    7394:	4b06      	ldr	r3, [pc, #24]	; (73b0 <gapc_bond_cfm_handler_key_exch+0x50>)
    7396:	4798      	blx	r3
    7398:	2312      	movs	r3, #18
    739a:	1c20      	adds	r0, r4, #0
    739c:	71e3      	strb	r3, [r4, #7]
    739e:	211b      	movs	r1, #27
    73a0:	4b04      	ldr	r3, [pc, #16]	; (73b4 <gapc_bond_cfm_handler_key_exch+0x54>)
    73a2:	4798      	blx	r3
    73a4:	bd70      	pop	{r4, r5, r6, pc}
    73a6:	46c0      	nop			; (mov r8, r8)
    73a8:	20001c54 	.word	0x20001c54
    73ac:	0000ae2c 	.word	0x0000ae2c
    73b0:	00008a6f 	.word	0x00008a6f
    73b4:	000061f9 	.word	0x000061f9

000073b8 <gapc_security_cmd_handler>:
    73b8:	2200      	movs	r2, #0
    73ba:	4b0e      	ldr	r3, [pc, #56]	; (73f4 <gapc_security_cmd_handler+0x3c>)
    73bc:	b510      	push	{r4, lr}
    73be:	609a      	str	r2, [r3, #8]
    73c0:	60da      	str	r2, [r3, #12]
    73c2:	4b0d      	ldr	r3, [pc, #52]	; (73f8 <gapc_security_cmd_handler+0x40>)
    73c4:	2405      	movs	r4, #5
    73c6:	681b      	ldr	r3, [r3, #0]
    73c8:	7118      	strb	r0, [r3, #4]
    73ca:	2010      	movs	r0, #16
    73cc:	701c      	strb	r4, [r3, #0]
    73ce:	719a      	strb	r2, [r3, #6]
    73d0:	721a      	strb	r2, [r3, #8]
    73d2:	3415      	adds	r4, #21
    73d4:	320c      	adds	r2, #12
    73d6:	705c      	strb	r4, [r3, #1]
    73d8:	725a      	strb	r2, [r3, #9]
    73da:	3c0c      	subs	r4, #12
    73dc:	3a0a      	subs	r2, #10
    73de:	709c      	strb	r4, [r3, #2]
    73e0:	70dc      	strb	r4, [r3, #3]
    73e2:	7158      	strb	r0, [r3, #5]
    73e4:	7299      	strb	r1, [r3, #10]
    73e6:	71da      	strb	r2, [r3, #7]
    73e8:	1c18      	adds	r0, r3, #0
    73ea:	210b      	movs	r1, #11
    73ec:	4b03      	ldr	r3, [pc, #12]	; (73fc <gapc_security_cmd_handler+0x44>)
    73ee:	4798      	blx	r3
    73f0:	bd10      	pop	{r4, pc}
    73f2:	46c0      	nop			; (mov r8, r8)
    73f4:	20001c54 	.word	0x20001c54
    73f8:	0000ae2c 	.word	0x0000ae2c
    73fc:	000061f9 	.word	0x000061f9

00007400 <gapc_encrypt_cmd_handler>:
    7400:	b5f0      	push	{r4, r5, r6, r7, lr}
    7402:	2500      	movs	r5, #0
    7404:	b089      	sub	sp, #36	; 0x24
    7406:	9306      	str	r3, [sp, #24]
    7408:	ab0e      	add	r3, sp, #56	; 0x38
    740a:	781b      	ldrb	r3, [r3, #0]
    740c:	1c17      	adds	r7, r2, #0
    740e:	9307      	str	r3, [sp, #28]
    7410:	ab0f      	add	r3, sp, #60	; 0x3c
    7412:	781b      	ldrb	r3, [r3, #0]
    7414:	4a1b      	ldr	r2, [pc, #108]	; (7484 <gapc_encrypt_cmd_handler+0x84>)
    7416:	1c06      	adds	r6, r0, #0
    7418:	9105      	str	r1, [sp, #20]
    741a:	9300      	str	r3, [sp, #0]
    741c:	9501      	str	r5, [sp, #4]
    741e:	9002      	str	r0, [sp, #8]
    7420:	1c29      	adds	r1, r5, #0
    7422:	1c2b      	adds	r3, r5, #0
    7424:	1c10      	adds	r0, r2, #0
    7426:	4c18      	ldr	r4, [pc, #96]	; (7488 <gapc_encrypt_cmd_handler+0x88>)
    7428:	47a0      	blx	r4
    742a:	4b18      	ldr	r3, [pc, #96]	; (748c <gapc_encrypt_cmd_handler+0x8c>)
    742c:	2210      	movs	r2, #16
    742e:	609d      	str	r5, [r3, #8]
    7430:	60dd      	str	r5, [r3, #12]
    7432:	4b17      	ldr	r3, [pc, #92]	; (7490 <gapc_encrypt_cmd_handler+0x90>)
    7434:	9905      	ldr	r1, [sp, #20]
    7436:	681c      	ldr	r4, [r3, #0]
    7438:	2305      	movs	r3, #5
    743a:	7023      	strb	r3, [r4, #0]
    743c:	3311      	adds	r3, #17
    743e:	7063      	strb	r3, [r4, #1]
    7440:	3b08      	subs	r3, #8
    7442:	70a3      	strb	r3, [r4, #2]
    7444:	70e3      	strb	r3, [r4, #3]
    7446:	3b03      	subs	r3, #3
    7448:	7162      	strb	r2, [r4, #5]
    744a:	71a5      	strb	r5, [r4, #6]
    744c:	71e5      	strb	r5, [r4, #7]
    744e:	7225      	strb	r5, [r4, #8]
    7450:	7263      	strb	r3, [r4, #9]
    7452:	72a5      	strb	r5, [r4, #10]
    7454:	18e0      	adds	r0, r4, r3
    7456:	4d0f      	ldr	r5, [pc, #60]	; (7494 <gapc_encrypt_cmd_handler+0x94>)
    7458:	7126      	strb	r6, [r4, #4]
    745a:	47a8      	blx	r5
    745c:	1c20      	adds	r0, r4, #0
    745e:	0a3b      	lsrs	r3, r7, #8
    7460:	7723      	strb	r3, [r4, #28]
    7462:	9906      	ldr	r1, [sp, #24]
    7464:	76e7      	strb	r7, [r4, #27]
    7466:	2208      	movs	r2, #8
    7468:	301d      	adds	r0, #29
    746a:	47a8      	blx	r5
    746c:	466a      	mov	r2, sp
    746e:	7f12      	ldrb	r2, [r2, #28]
    7470:	1da3      	adds	r3, r4, #6
    7472:	77da      	strb	r2, [r3, #31]
    7474:	231d      	movs	r3, #29
    7476:	1c20      	adds	r0, r4, #0
    7478:	71e3      	strb	r3, [r4, #7]
    747a:	2126      	movs	r1, #38	; 0x26
    747c:	4b06      	ldr	r3, [pc, #24]	; (7498 <gapc_encrypt_cmd_handler+0x98>)
    747e:	4798      	blx	r3
    7480:	b009      	add	sp, #36	; 0x24
    7482:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7484:	20000dfc 	.word	0x20000dfc
    7488:	00006e91 	.word	0x00006e91
    748c:	20001c54 	.word	0x20001c54
    7490:	0000ae2c 	.word	0x0000ae2c
    7494:	00008a6f 	.word	0x00008a6f
    7498:	000061f9 	.word	0x000061f9

0000749c <gapc_encrypt_req_ind>:
    749c:	b508      	push	{r3, lr}
    749e:	0a00      	lsrs	r0, r0, #8
    74a0:	8010      	strh	r0, [r2, #0]
    74a2:	784b      	ldrb	r3, [r1, #1]
    74a4:	7808      	ldrb	r0, [r1, #0]
    74a6:	021b      	lsls	r3, r3, #8
    74a8:	4303      	orrs	r3, r0
    74aa:	8053      	strh	r3, [r2, #2]
    74ac:	1d10      	adds	r0, r2, #4
    74ae:	3102      	adds	r1, #2
    74b0:	2208      	movs	r2, #8
    74b2:	4b01      	ldr	r3, [pc, #4]	; (74b8 <gapc_encrypt_req_ind+0x1c>)
    74b4:	4798      	blx	r3
    74b6:	bd08      	pop	{r3, pc}
    74b8:	00008a6f 	.word	0x00008a6f

000074bc <gapc_encrypt_cfm_handler>:
    74bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    74be:	2500      	movs	r5, #0
    74c0:	b087      	sub	sp, #28
    74c2:	9304      	str	r3, [sp, #16]
    74c4:	ab0c      	add	r3, sp, #48	; 0x30
    74c6:	781b      	ldrb	r3, [r3, #0]
    74c8:	1c17      	adds	r7, r2, #0
    74ca:	4a17      	ldr	r2, [pc, #92]	; (7528 <gapc_encrypt_cfm_handler+0x6c>)
    74cc:	1c06      	adds	r6, r0, #0
    74ce:	9305      	str	r3, [sp, #20]
    74d0:	9100      	str	r1, [sp, #0]
    74d2:	9002      	str	r0, [sp, #8]
    74d4:	1c29      	adds	r1, r5, #0
    74d6:	1c2b      	adds	r3, r5, #0
    74d8:	9501      	str	r5, [sp, #4]
    74da:	1c10      	adds	r0, r2, #0
    74dc:	4c13      	ldr	r4, [pc, #76]	; (752c <gapc_encrypt_cfm_handler+0x70>)
    74de:	47a0      	blx	r4
    74e0:	4b13      	ldr	r3, [pc, #76]	; (7530 <gapc_encrypt_cfm_handler+0x74>)
    74e2:	2210      	movs	r2, #16
    74e4:	609d      	str	r5, [r3, #8]
    74e6:	60dd      	str	r5, [r3, #12]
    74e8:	4b12      	ldr	r3, [pc, #72]	; (7534 <gapc_encrypt_cfm_handler+0x78>)
    74ea:	9904      	ldr	r1, [sp, #16]
    74ec:	681c      	ldr	r4, [r3, #0]
    74ee:	2305      	movs	r3, #5
    74f0:	1c20      	adds	r0, r4, #0
    74f2:	7023      	strb	r3, [r4, #0]
    74f4:	3313      	adds	r3, #19
    74f6:	7063      	strb	r3, [r4, #1]
    74f8:	3b0a      	subs	r3, #10
    74fa:	70a3      	strb	r3, [r4, #2]
    74fc:	70e3      	strb	r3, [r4, #3]
    74fe:	7162      	strb	r2, [r4, #5]
    7500:	7126      	strb	r6, [r4, #4]
    7502:	71a5      	strb	r5, [r4, #6]
    7504:	71e5      	strb	r5, [r4, #7]
    7506:	7225      	strb	r5, [r4, #8]
    7508:	7267      	strb	r7, [r4, #9]
    750a:	4b0b      	ldr	r3, [pc, #44]	; (7538 <gapc_encrypt_cfm_handler+0x7c>)
    750c:	300a      	adds	r0, #10
    750e:	4798      	blx	r3
    7510:	466b      	mov	r3, sp
    7512:	7d1b      	ldrb	r3, [r3, #20]
    7514:	1c20      	adds	r0, r4, #0
    7516:	76a3      	strb	r3, [r4, #26]
    7518:	2312      	movs	r3, #18
    751a:	211b      	movs	r1, #27
    751c:	71e3      	strb	r3, [r4, #7]
    751e:	4b07      	ldr	r3, [pc, #28]	; (753c <gapc_encrypt_cfm_handler+0x80>)
    7520:	4798      	blx	r3
    7522:	b007      	add	sp, #28
    7524:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7526:	46c0      	nop			; (mov r8, r8)
    7528:	20000d95 	.word	0x20000d95
    752c:	00006e91 	.word	0x00006e91
    7530:	20001c54 	.word	0x20001c54
    7534:	0000ae2c 	.word	0x0000ae2c
    7538:	00008a6f 	.word	0x00008a6f
    753c:	000061f9 	.word	0x000061f9

00007540 <gapc_encrypt_ind>:
    7540:	780b      	ldrb	r3, [r1, #0]
    7542:	0a00      	lsrs	r0, r0, #8
    7544:	70d3      	strb	r3, [r2, #3]
    7546:	2300      	movs	r3, #0
    7548:	8010      	strh	r0, [r2, #0]
    754a:	7093      	strb	r3, [r2, #2]
    754c:	4770      	bx	lr
	...

00007550 <gapc_param_update_cfm_handler>:
    7550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7552:	2400      	movs	r4, #0
    7554:	1c0e      	adds	r6, r1, #0
    7556:	490f      	ldr	r1, [pc, #60]	; (7594 <gapc_param_update_cfm_handler+0x44>)
    7558:	1c05      	adds	r5, r0, #0
    755a:	60cc      	str	r4, [r1, #12]
    755c:	608c      	str	r4, [r1, #8]
    755e:	490e      	ldr	r1, [pc, #56]	; (7598 <gapc_param_update_cfm_handler+0x48>)
    7560:	2705      	movs	r7, #5
    7562:	6808      	ldr	r0, [r1, #0]
    7564:	2110      	movs	r1, #16
    7566:	468c      	mov	ip, r1
    7568:	7041      	strb	r1, [r0, #1]
    756a:	7105      	strb	r5, [r0, #4]
    756c:	210e      	movs	r1, #14
    756e:	4665      	mov	r5, ip
    7570:	7282      	strb	r2, [r0, #10]
    7572:	7303      	strb	r3, [r0, #12]
    7574:	0a12      	lsrs	r2, r2, #8
    7576:	0a1b      	lsrs	r3, r3, #8
    7578:	7007      	strb	r7, [r0, #0]
    757a:	7145      	strb	r5, [r0, #5]
    757c:	7246      	strb	r6, [r0, #9]
    757e:	71c7      	strb	r7, [r0, #7]
    7580:	7081      	strb	r1, [r0, #2]
    7582:	70c1      	strb	r1, [r0, #3]
    7584:	7184      	strb	r4, [r0, #6]
    7586:	7204      	strb	r4, [r0, #8]
    7588:	72c2      	strb	r2, [r0, #11]
    758a:	7343      	strb	r3, [r0, #13]
    758c:	4b03      	ldr	r3, [pc, #12]	; (759c <gapc_param_update_cfm_handler+0x4c>)
    758e:	4798      	blx	r3
    7590:	1c20      	adds	r0, r4, #0
    7592:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7594:	20001c54 	.word	0x20001c54
    7598:	0000ae2c 	.word	0x0000ae2c
    759c:	000061f9 	.word	0x000061f9

000075a0 <gapc_param_updated_ind>:
    75a0:	2300      	movs	r3, #0
    75a2:	0a00      	lsrs	r0, r0, #8
    75a4:	8010      	strh	r0, [r2, #0]
    75a6:	7093      	strb	r3, [r2, #2]
    75a8:	784b      	ldrb	r3, [r1, #1]
    75aa:	7808      	ldrb	r0, [r1, #0]
    75ac:	021b      	lsls	r3, r3, #8
    75ae:	4303      	orrs	r3, r0
    75b0:	8093      	strh	r3, [r2, #4]
    75b2:	78cb      	ldrb	r3, [r1, #3]
    75b4:	7888      	ldrb	r0, [r1, #2]
    75b6:	021b      	lsls	r3, r3, #8
    75b8:	4303      	orrs	r3, r0
    75ba:	80d3      	strh	r3, [r2, #6]
    75bc:	794b      	ldrb	r3, [r1, #5]
    75be:	7909      	ldrb	r1, [r1, #4]
    75c0:	021b      	lsls	r3, r3, #8
    75c2:	430b      	orrs	r3, r1
    75c4:	2007      	movs	r0, #7
    75c6:	8113      	strh	r3, [r2, #8]
    75c8:	4770      	bx	lr

000075ca <gapc_param_updated_req_ind>:
    75ca:	0a00      	lsrs	r0, r0, #8
    75cc:	8010      	strh	r0, [r2, #0]
    75ce:	784b      	ldrb	r3, [r1, #1]
    75d0:	7808      	ldrb	r0, [r1, #0]
    75d2:	021b      	lsls	r3, r3, #8
    75d4:	4303      	orrs	r3, r0
    75d6:	8053      	strh	r3, [r2, #2]
    75d8:	78cb      	ldrb	r3, [r1, #3]
    75da:	7888      	ldrb	r0, [r1, #2]
    75dc:	021b      	lsls	r3, r3, #8
    75de:	4303      	orrs	r3, r0
    75e0:	8093      	strh	r3, [r2, #4]
    75e2:	794b      	ldrb	r3, [r1, #5]
    75e4:	7908      	ldrb	r0, [r1, #4]
    75e6:	021b      	lsls	r3, r3, #8
    75e8:	4303      	orrs	r3, r0
    75ea:	80d3      	strh	r3, [r2, #6]
    75ec:	79cb      	ldrb	r3, [r1, #7]
    75ee:	7989      	ldrb	r1, [r1, #6]
    75f0:	021b      	lsls	r3, r3, #8
    75f2:	430b      	orrs	r3, r1
    75f4:	2008      	movs	r0, #8
    75f6:	8113      	strh	r3, [r2, #8]
    75f8:	4770      	bx	lr
	...

000075fc <gapc_dev_info_req_ind_handler>:
    75fc:	b538      	push	{r3, r4, r5, lr}
    75fe:	1c0b      	adds	r3, r1, #0
    7600:	0a01      	lsrs	r1, r0, #8
    7602:	8011      	strh	r1, [r2, #0]
    7604:	7818      	ldrb	r0, [r3, #0]
    7606:	7090      	strb	r0, [r2, #2]
    7608:	2800      	cmp	r0, #0
    760a:	d10f      	bne.n	762c <gapc_dev_info_req_ind_handler+0x30>
    760c:	4b09      	ldr	r3, [pc, #36]	; (7634 <gapc_dev_info_req_ind_handler+0x38>)
    760e:	33aa      	adds	r3, #170	; 0xaa
    7610:	881b      	ldrh	r3, [r3, #0]
    7612:	2b00      	cmp	r3, #0
    7614:	d10a      	bne.n	762c <gapc_dev_info_req_ind_handler+0x30>
    7616:	4c08      	ldr	r4, [pc, #32]	; (7638 <gapc_dev_info_req_ind_handler+0x3c>)
    7618:	4908      	ldr	r1, [pc, #32]	; (763c <gapc_dev_info_req_ind_handler+0x40>)
    761a:	4a09      	ldr	r2, [pc, #36]	; (7640 <gapc_dev_info_req_ind_handler+0x44>)
    761c:	4b09      	ldr	r3, [pc, #36]	; (7644 <gapc_dev_info_req_ind_handler+0x48>)
    761e:	6825      	ldr	r5, [r4, #0]
    7620:	4809      	ldr	r0, [pc, #36]	; (7648 <gapc_dev_info_req_ind_handler+0x4c>)
    7622:	47a8      	blx	r5
    7624:	6823      	ldr	r3, [r4, #0]
    7626:	4809      	ldr	r0, [pc, #36]	; (764c <gapc_dev_info_req_ind_handler+0x50>)
    7628:	4798      	blx	r3
    762a:	e001      	b.n	7630 <gapc_dev_info_req_ind_handler+0x34>
    762c:	4b08      	ldr	r3, [pc, #32]	; (7650 <gapc_dev_info_req_ind_handler+0x54>)
    762e:	4798      	blx	r3
    7630:	bd38      	pop	{r3, r4, r5, pc}
    7632:	46c0      	nop			; (mov r8, r8)
    7634:	20001cf4 	.word	0x20001cf4
    7638:	20000078 	.word	0x20000078
    763c:	0000b027 	.word	0x0000b027
    7640:	000002b2 	.word	0x000002b2
    7644:	0000b009 	.word	0x0000b009
    7648:	0000aab9 	.word	0x0000aab9
    764c:	0000b10c 	.word	0x0000b10c
    7650:	00006be5 	.word	0x00006be5

00007654 <gapc_sec_req_ind>:
    7654:	0a00      	lsrs	r0, r0, #8
    7656:	8010      	strh	r0, [r2, #0]
    7658:	7809      	ldrb	r1, [r1, #0]
    765a:	2301      	movs	r3, #1
    765c:	1c08      	adds	r0, r1, #0
    765e:	0889      	lsrs	r1, r1, #2
    7660:	4018      	ands	r0, r3
    7662:	400b      	ands	r3, r1
    7664:	70d0      	strb	r0, [r2, #3]
    7666:	7113      	strb	r3, [r2, #4]
    7668:	4770      	bx	lr

0000766a <gapc_sign_counter_ind_handler>:
    766a:	0a00      	lsrs	r0, r0, #8
    766c:	8010      	strh	r0, [r2, #0]
    766e:	784b      	ldrb	r3, [r1, #1]
    7670:	0218      	lsls	r0, r3, #8
    7672:	788b      	ldrb	r3, [r1, #2]
    7674:	041b      	lsls	r3, r3, #16
    7676:	4303      	orrs	r3, r0
    7678:	7808      	ldrb	r0, [r1, #0]
    767a:	4303      	orrs	r3, r0
    767c:	78c8      	ldrb	r0, [r1, #3]
    767e:	0600      	lsls	r0, r0, #24
    7680:	4303      	orrs	r3, r0
    7682:	6053      	str	r3, [r2, #4]
    7684:	794b      	ldrb	r3, [r1, #5]
    7686:	0218      	lsls	r0, r3, #8
    7688:	798b      	ldrb	r3, [r1, #6]
    768a:	041b      	lsls	r3, r3, #16
    768c:	4303      	orrs	r3, r0
    768e:	7908      	ldrb	r0, [r1, #4]
    7690:	79c9      	ldrb	r1, [r1, #7]
    7692:	4303      	orrs	r3, r0
    7694:	0609      	lsls	r1, r1, #24
    7696:	430b      	orrs	r3, r1
    7698:	2000      	movs	r0, #0
    769a:	6093      	str	r3, [r2, #8]
    769c:	4770      	bx	lr
	...

000076a0 <gapc_peer_att_info_ind_handler>:
    76a0:	b510      	push	{r4, lr}
    76a2:	0a00      	lsrs	r0, r0, #8
    76a4:	8010      	strh	r0, [r2, #0]
    76a6:	7808      	ldrb	r0, [r1, #0]
    76a8:	7090      	strb	r0, [r2, #2]
    76aa:	788b      	ldrb	r3, [r1, #2]
    76ac:	784c      	ldrb	r4, [r1, #1]
    76ae:	021b      	lsls	r3, r3, #8
    76b0:	4323      	orrs	r3, r4
    76b2:	8093      	strh	r3, [r2, #4]
    76b4:	2801      	cmp	r0, #1
    76b6:	d027      	beq.n	7708 <gapc_peer_att_info_ind_handler+0x68>
    76b8:	2800      	cmp	r0, #0
    76ba:	d017      	beq.n	76ec <gapc_peer_att_info_ind_handler+0x4c>
    76bc:	2802      	cmp	r0, #2
    76be:	d12a      	bne.n	7716 <gapc_peer_att_info_ind_handler+0x76>
    76c0:	790b      	ldrb	r3, [r1, #4]
    76c2:	78c8      	ldrb	r0, [r1, #3]
    76c4:	021b      	lsls	r3, r3, #8
    76c6:	4303      	orrs	r3, r0
    76c8:	8113      	strh	r3, [r2, #8]
    76ca:	798b      	ldrb	r3, [r1, #6]
    76cc:	7948      	ldrb	r0, [r1, #5]
    76ce:	021b      	lsls	r3, r3, #8
    76d0:	4303      	orrs	r3, r0
    76d2:	80d3      	strh	r3, [r2, #6]
    76d4:	7a0b      	ldrb	r3, [r1, #8]
    76d6:	79c8      	ldrb	r0, [r1, #7]
    76d8:	021b      	lsls	r3, r3, #8
    76da:	4303      	orrs	r3, r0
    76dc:	8193      	strh	r3, [r2, #12]
    76de:	7a8b      	ldrb	r3, [r1, #10]
    76e0:	7a49      	ldrb	r1, [r1, #9]
    76e2:	021b      	lsls	r3, r3, #8
    76e4:	430b      	orrs	r3, r1
    76e6:	8153      	strh	r3, [r2, #10]
    76e8:	2306      	movs	r3, #6
    76ea:	e013      	b.n	7714 <gapc_peer_att_info_ind_handler+0x74>
    76ec:	1c14      	adds	r4, r2, #0
    76ee:	1c20      	adds	r0, r4, #0
    76f0:	790a      	ldrb	r2, [r1, #4]
    76f2:	78cb      	ldrb	r3, [r1, #3]
    76f4:	0212      	lsls	r2, r2, #8
    76f6:	431a      	orrs	r2, r3
    76f8:	80e2      	strh	r2, [r4, #6]
    76fa:	4b07      	ldr	r3, [pc, #28]	; (7718 <gapc_peer_att_info_ind_handler+0x78>)
    76fc:	3008      	adds	r0, #8
    76fe:	3105      	adds	r1, #5
    7700:	4798      	blx	r3
    7702:	2302      	movs	r3, #2
    7704:	70a3      	strb	r3, [r4, #2]
    7706:	e006      	b.n	7716 <gapc_peer_att_info_ind_handler+0x76>
    7708:	790b      	ldrb	r3, [r1, #4]
    770a:	78c9      	ldrb	r1, [r1, #3]
    770c:	021b      	lsls	r3, r3, #8
    770e:	430b      	orrs	r3, r1
    7710:	80d3      	strh	r3, [r2, #6]
    7712:	2305      	movs	r3, #5
    7714:	7093      	strb	r3, [r2, #2]
    7716:	bd10      	pop	{r4, pc}
    7718:	00008a6f 	.word	0x00008a6f

0000771c <gapc_con_channel_map_ind_handler>:
    771c:	b508      	push	{r3, lr}
    771e:	2300      	movs	r3, #0
    7720:	0a00      	lsrs	r0, r0, #8
    7722:	7013      	strb	r3, [r2, #0]
    7724:	8050      	strh	r0, [r2, #2]
    7726:	4b02      	ldr	r3, [pc, #8]	; (7730 <gapc_con_channel_map_ind_handler+0x14>)
    7728:	1d10      	adds	r0, r2, #4
    772a:	2205      	movs	r2, #5
    772c:	4798      	blx	r3
    772e:	bd08      	pop	{r3, pc}
    7730:	00008a6f 	.word	0x00008a6f

00007734 <gapc_lecb_connected>:
    7734:	7843      	ldrb	r3, [r0, #1]
    7736:	7802      	ldrb	r2, [r0, #0]
    7738:	021b      	lsls	r3, r3, #8
    773a:	4313      	orrs	r3, r2
    773c:	800b      	strh	r3, [r1, #0]
    773e:	78c3      	ldrb	r3, [r0, #3]
    7740:	7882      	ldrb	r2, [r0, #2]
    7742:	021b      	lsls	r3, r3, #8
    7744:	4313      	orrs	r3, r2
    7746:	804b      	strh	r3, [r1, #2]
    7748:	7943      	ldrb	r3, [r0, #5]
    774a:	7902      	ldrb	r2, [r0, #4]
    774c:	021b      	lsls	r3, r3, #8
    774e:	4313      	orrs	r3, r2
    7750:	808b      	strh	r3, [r1, #4]
    7752:	79c3      	ldrb	r3, [r0, #7]
    7754:	7982      	ldrb	r2, [r0, #6]
    7756:	021b      	lsls	r3, r3, #8
    7758:	4313      	orrs	r3, r2
    775a:	80cb      	strh	r3, [r1, #6]
    775c:	2300      	movs	r3, #0
    775e:	720b      	strb	r3, [r1, #8]
    7760:	4770      	bx	lr

00007762 <gapc_lecb_disconnected>:
    7762:	7843      	ldrb	r3, [r0, #1]
    7764:	7802      	ldrb	r2, [r0, #0]
    7766:	021b      	lsls	r3, r3, #8
    7768:	4313      	orrs	r3, r2
    776a:	800b      	strh	r3, [r1, #0]
    776c:	78c3      	ldrb	r3, [r0, #3]
    776e:	7882      	ldrb	r2, [r0, #2]
    7770:	021b      	lsls	r3, r3, #8
    7772:	4313      	orrs	r3, r2
    7774:	804b      	strh	r3, [r1, #2]
    7776:	4770      	bx	lr

00007778 <gapc_lecb_connect_req_ind>:
    7778:	7843      	ldrb	r3, [r0, #1]
    777a:	7802      	ldrb	r2, [r0, #0]
    777c:	021b      	lsls	r3, r3, #8
    777e:	4313      	orrs	r3, r2
    7780:	800b      	strh	r3, [r1, #0]
    7782:	78c3      	ldrb	r3, [r0, #3]
    7784:	7882      	ldrb	r2, [r0, #2]
    7786:	021b      	lsls	r3, r3, #8
    7788:	4313      	orrs	r3, r2
    778a:	804b      	strh	r3, [r1, #2]
    778c:	7943      	ldrb	r3, [r0, #5]
    778e:	7902      	ldrb	r2, [r0, #4]
    7790:	021b      	lsls	r3, r3, #8
    7792:	4313      	orrs	r3, r2
    7794:	808b      	strh	r3, [r1, #4]
    7796:	79c3      	ldrb	r3, [r0, #7]
    7798:	7982      	ldrb	r2, [r0, #6]
    779a:	021b      	lsls	r3, r3, #8
    779c:	4313      	orrs	r3, r2
    779e:	80cb      	strh	r3, [r1, #6]
    77a0:	4770      	bx	lr

000077a2 <gapc_lecb_add_credit_resp_handler>:
    77a2:	7843      	ldrb	r3, [r0, #1]
    77a4:	7802      	ldrb	r2, [r0, #0]
    77a6:	021b      	lsls	r3, r3, #8
    77a8:	4313      	orrs	r3, r2
    77aa:	800b      	strh	r3, [r1, #0]
    77ac:	78c3      	ldrb	r3, [r0, #3]
    77ae:	7882      	ldrb	r2, [r0, #2]
    77b0:	021b      	lsls	r3, r3, #8
    77b2:	4313      	orrs	r3, r2
    77b4:	804b      	strh	r3, [r1, #2]
    77b6:	7943      	ldrb	r3, [r0, #5]
    77b8:	7902      	ldrb	r2, [r0, #4]
    77ba:	021b      	lsls	r3, r3, #8
    77bc:	4313      	orrs	r3, r2
    77be:	808b      	strh	r3, [r1, #4]
    77c0:	4770      	bx	lr
	...

000077c4 <gapm_reset_req_handler>:
    77c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    77c6:	2300      	movs	r3, #0
    77c8:	4a19      	ldr	r2, [pc, #100]	; (7830 <gapm_reset_req_handler+0x6c>)
    77ca:	4c1a      	ldr	r4, [pc, #104]	; (7834 <gapm_reset_req_handler+0x70>)
    77cc:	6810      	ldr	r0, [r2, #0]
    77ce:	2205      	movs	r2, #5
    77d0:	60a3      	str	r3, [r4, #8]
    77d2:	60e3      	str	r3, [r4, #12]
    77d4:	7103      	strb	r3, [r0, #4]
    77d6:	7183      	strb	r3, [r0, #6]
    77d8:	7203      	strb	r3, [r0, #8]
    77da:	23d0      	movs	r3, #208	; 0xd0
    77dc:	2110      	movs	r1, #16
    77de:	2501      	movs	r5, #1
    77e0:	7002      	strb	r2, [r0, #0]
    77e2:	3a03      	subs	r2, #3
    77e4:	7042      	strb	r2, [r0, #1]
    77e6:	011b      	lsls	r3, r3, #4
    77e8:	320b      	adds	r2, #11
    77ea:	7082      	strb	r2, [r0, #2]
    77ec:	70c2      	strb	r2, [r0, #3]
    77ee:	7141      	strb	r1, [r0, #5]
    77f0:	8023      	strh	r3, [r4, #0]
    77f2:	3906      	subs	r1, #6
    77f4:	4b10      	ldr	r3, [pc, #64]	; (7838 <gapm_reset_req_handler+0x74>)
    77f6:	7245      	strb	r5, [r0, #9]
    77f8:	71c5      	strb	r5, [r0, #7]
    77fa:	80a2      	strh	r2, [r4, #4]
    77fc:	4798      	blx	r3
    77fe:	4b0f      	ldr	r3, [pc, #60]	; (783c <gapm_reset_req_handler+0x78>)
    7800:	4798      	blx	r3
    7802:	23d0      	movs	r3, #208	; 0xd0
    7804:	4298      	cmp	r0, r3
    7806:	d011      	beq.n	782c <gapm_reset_req_handler+0x68>
    7808:	68a3      	ldr	r3, [r4, #8]
    780a:	781c      	ldrb	r4, [r3, #0]
    780c:	785b      	ldrb	r3, [r3, #1]
    780e:	42ac      	cmp	r4, r5
    7810:	d00c      	beq.n	782c <gapm_reset_req_handler+0x68>
    7812:	4e0b      	ldr	r6, [pc, #44]	; (7840 <gapm_reset_req_handler+0x7c>)
    7814:	490b      	ldr	r1, [pc, #44]	; (7844 <gapm_reset_req_handler+0x80>)
    7816:	2249      	movs	r2, #73	; 0x49
    7818:	4b0b      	ldr	r3, [pc, #44]	; (7848 <gapm_reset_req_handler+0x84>)
    781a:	480c      	ldr	r0, [pc, #48]	; (784c <gapm_reset_req_handler+0x88>)
    781c:	6837      	ldr	r7, [r6, #0]
    781e:	47b8      	blx	r7
    7820:	6833      	ldr	r3, [r6, #0]
    7822:	480b      	ldr	r0, [pc, #44]	; (7850 <gapm_reset_req_handler+0x8c>)
    7824:	1c29      	adds	r1, r5, #0
    7826:	1c22      	adds	r2, r4, #0
    7828:	4798      	blx	r3
    782a:	23e2      	movs	r3, #226	; 0xe2
    782c:	1c18      	adds	r0, r3, #0
    782e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7830:	0000ae2c 	.word	0x0000ae2c
    7834:	20001c54 	.word	0x20001c54
    7838:	000061f9 	.word	0x000061f9
    783c:	0000645d 	.word	0x0000645d
    7840:	20000078 	.word	0x20000078
    7844:	0000b157 	.word	0x0000b157
    7848:	0000b120 	.word	0x0000b120
    784c:	0000aab9 	.word	0x0000aab9
    7850:	0000b192 	.word	0x0000b192

00007854 <gapm_set_dev_config_cmd_handler>:
    7854:	b5f0      	push	{r4, r5, r6, r7, lr}
    7856:	b087      	sub	sp, #28
    7858:	9303      	str	r3, [sp, #12]
    785a:	ab0c      	add	r3, sp, #48	; 0x30
    785c:	781b      	ldrb	r3, [r3, #0]
    785e:	2605      	movs	r6, #5
    7860:	9304      	str	r3, [sp, #16]
    7862:	ab0d      	add	r3, sp, #52	; 0x34
    7864:	781b      	ldrb	r3, [r3, #0]
    7866:	2710      	movs	r7, #16
    7868:	9305      	str	r3, [sp, #20]
    786a:	ab0e      	add	r3, sp, #56	; 0x38
    786c:	881b      	ldrh	r3, [r3, #0]
    786e:	4c38      	ldr	r4, [pc, #224]	; (7950 <gapm_set_dev_config_cmd_handler+0xfc>)
    7870:	9300      	str	r3, [sp, #0]
    7872:	ab0f      	add	r3, sp, #60	; 0x3c
    7874:	881b      	ldrh	r3, [r3, #0]
    7876:	6824      	ldr	r4, [r4, #0]
    7878:	9301      	str	r3, [sp, #4]
    787a:	ab10      	add	r3, sp, #64	; 0x40
    787c:	881b      	ldrh	r3, [r3, #0]
    787e:	4d35      	ldr	r5, [pc, #212]	; (7954 <gapm_set_dev_config_cmd_handler+0x100>)
    7880:	9302      	str	r3, [sp, #8]
    7882:	2300      	movs	r3, #0
    7884:	60eb      	str	r3, [r5, #12]
    7886:	60ab      	str	r3, [r5, #8]
    7888:	7026      	strb	r6, [r4, #0]
    788a:	3e01      	subs	r6, #1
    788c:	7066      	strb	r6, [r4, #1]
    788e:	7123      	strb	r3, [r4, #4]
    7890:	3609      	adds	r6, #9
    7892:	71a3      	strb	r3, [r4, #6]
    7894:	71e3      	strb	r3, [r4, #7]
    7896:	7223      	strb	r3, [r4, #8]
    7898:	72e1      	strb	r1, [r4, #11]
    789a:	3303      	adds	r3, #3
    789c:	0a09      	lsrs	r1, r1, #8
    789e:	7263      	strb	r3, [r4, #9]
    78a0:	7167      	strb	r7, [r4, #5]
    78a2:	72a0      	strb	r0, [r4, #10]
    78a4:	7321      	strb	r1, [r4, #12]
    78a6:	4f2c      	ldr	r7, [pc, #176]	; (7958 <gapm_set_dev_config_cmd_handler+0x104>)
    78a8:	1c11      	adds	r1, r2, #0
    78aa:	70a6      	strb	r6, [r4, #2]
    78ac:	2206      	movs	r2, #6
    78ae:	70e6      	strb	r6, [r4, #3]
    78b0:	19a0      	adds	r0, r4, r6
    78b2:	47b8      	blx	r7
    78b4:	1c20      	adds	r0, r4, #0
    78b6:	9903      	ldr	r1, [sp, #12]
    78b8:	2210      	movs	r2, #16
    78ba:	3013      	adds	r0, #19
    78bc:	47b8      	blx	r7
    78be:	466a      	mov	r2, sp
    78c0:	7c12      	ldrb	r2, [r2, #16]
    78c2:	1d23      	adds	r3, r4, #4
    78c4:	77da      	strb	r2, [r3, #31]
    78c6:	466a      	mov	r2, sp
    78c8:	7d12      	ldrb	r2, [r2, #20]
    78ca:	1d63      	adds	r3, r4, #5
    78cc:	77da      	strb	r2, [r3, #31]
    78ce:	466a      	mov	r2, sp
    78d0:	7812      	ldrb	r2, [r2, #0]
    78d2:	1da3      	adds	r3, r4, #6
    78d4:	77da      	strb	r2, [r3, #31]
    78d6:	9b00      	ldr	r3, [sp, #0]
    78d8:	1de2      	adds	r2, r4, #7
    78da:	0a1b      	lsrs	r3, r3, #8
    78dc:	77d3      	strb	r3, [r2, #31]
    78de:	466a      	mov	r2, sp
    78e0:	1c23      	adds	r3, r4, #0
    78e2:	7912      	ldrb	r2, [r2, #4]
    78e4:	3308      	adds	r3, #8
    78e6:	77da      	strb	r2, [r3, #31]
    78e8:	1c22      	adds	r2, r4, #0
    78ea:	9b01      	ldr	r3, [sp, #4]
    78ec:	3228      	adds	r2, #40	; 0x28
    78ee:	0a1b      	lsrs	r3, r3, #8
    78f0:	7013      	strb	r3, [r2, #0]
    78f2:	466a      	mov	r2, sp
    78f4:	1c23      	adds	r3, r4, #0
    78f6:	7a12      	ldrb	r2, [r2, #8]
    78f8:	3329      	adds	r3, #41	; 0x29
    78fa:	701a      	strb	r2, [r3, #0]
    78fc:	1c22      	adds	r2, r4, #0
    78fe:	9b02      	ldr	r3, [sp, #8]
    7900:	322a      	adds	r2, #42	; 0x2a
    7902:	0a1b      	lsrs	r3, r3, #8
    7904:	7013      	strb	r3, [r2, #0]
    7906:	23d0      	movs	r3, #208	; 0xd0
    7908:	011b      	lsls	r3, r3, #4
    790a:	802b      	strh	r3, [r5, #0]
    790c:	2322      	movs	r3, #34	; 0x22
    790e:	212b      	movs	r1, #43	; 0x2b
    7910:	71e3      	strb	r3, [r4, #7]
    7912:	1c20      	adds	r0, r4, #0
    7914:	4b11      	ldr	r3, [pc, #68]	; (795c <gapm_set_dev_config_cmd_handler+0x108>)
    7916:	80ae      	strh	r6, [r5, #4]
    7918:	4798      	blx	r3
    791a:	4b11      	ldr	r3, [pc, #68]	; (7960 <gapm_set_dev_config_cmd_handler+0x10c>)
    791c:	4798      	blx	r3
    791e:	23d0      	movs	r3, #208	; 0xd0
    7920:	4298      	cmp	r0, r3
    7922:	d011      	beq.n	7948 <gapm_set_dev_config_cmd_handler+0xf4>
    7924:	68ab      	ldr	r3, [r5, #8]
    7926:	781c      	ldrb	r4, [r3, #0]
    7928:	785b      	ldrb	r3, [r3, #1]
    792a:	2c03      	cmp	r4, #3
    792c:	d00c      	beq.n	7948 <gapm_set_dev_config_cmd_handler+0xf4>
    792e:	4d0d      	ldr	r5, [pc, #52]	; (7964 <gapm_set_dev_config_cmd_handler+0x110>)
    7930:	490d      	ldr	r1, [pc, #52]	; (7968 <gapm_set_dev_config_cmd_handler+0x114>)
    7932:	2265      	movs	r2, #101	; 0x65
    7934:	4b0d      	ldr	r3, [pc, #52]	; (796c <gapm_set_dev_config_cmd_handler+0x118>)
    7936:	480e      	ldr	r0, [pc, #56]	; (7970 <gapm_set_dev_config_cmd_handler+0x11c>)
    7938:	682e      	ldr	r6, [r5, #0]
    793a:	47b0      	blx	r6
    793c:	682b      	ldr	r3, [r5, #0]
    793e:	480d      	ldr	r0, [pc, #52]	; (7974 <gapm_set_dev_config_cmd_handler+0x120>)
    7940:	2103      	movs	r1, #3
    7942:	1c22      	adds	r2, r4, #0
    7944:	4798      	blx	r3
    7946:	23e2      	movs	r3, #226	; 0xe2
    7948:	1c18      	adds	r0, r3, #0
    794a:	b007      	add	sp, #28
    794c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    794e:	46c0      	nop			; (mov r8, r8)
    7950:	0000ae2c 	.word	0x0000ae2c
    7954:	20001c54 	.word	0x20001c54
    7958:	00008a6f 	.word	0x00008a6f
    795c:	000061f9 	.word	0x000061f9
    7960:	0000645d 	.word	0x0000645d
    7964:	20000078 	.word	0x20000078
    7968:	0000b157 	.word	0x0000b157
    796c:	0000b137 	.word	0x0000b137
    7970:	0000aab9 	.word	0x0000aab9
    7974:	0000b192 	.word	0x0000b192

00007978 <gapm_get_dev_config_cmd_handler>:
    7978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    797a:	1c0d      	adds	r5, r1, #0
    797c:	21cf      	movs	r1, #207	; 0xcf
    797e:	2801      	cmp	r0, #1
    7980:	d84b      	bhi.n	7a1a <gapm_get_dev_config_cmd_handler+0xa2>
    7982:	2d00      	cmp	r5, #0
    7984:	d049      	beq.n	7a1a <gapm_get_dev_config_cmd_handler+0xa2>
    7986:	2200      	movs	r2, #0
    7988:	2605      	movs	r6, #5
    798a:	4b25      	ldr	r3, [pc, #148]	; (7a20 <gapm_get_dev_config_cmd_handler+0xa8>)
    798c:	4c25      	ldr	r4, [pc, #148]	; (7a24 <gapm_get_dev_config_cmd_handler+0xac>)
    798e:	681b      	ldr	r3, [r3, #0]
    7990:	60a2      	str	r2, [r4, #8]
    7992:	60e2      	str	r2, [r4, #12]
    7994:	701e      	strb	r6, [r3, #0]
    7996:	3601      	adds	r6, #1
    7998:	270d      	movs	r7, #13
    799a:	705e      	strb	r6, [r3, #1]
    799c:	2610      	movs	r6, #16
    799e:	709f      	strb	r7, [r3, #2]
    79a0:	70df      	strb	r7, [r3, #3]
    79a2:	711a      	strb	r2, [r3, #4]
    79a4:	715e      	strb	r6, [r3, #5]
    79a6:	719a      	strb	r2, [r3, #6]
    79a8:	71da      	strb	r2, [r3, #7]
    79aa:	721a      	strb	r2, [r3, #8]
    79ac:	2801      	cmp	r0, #1
    79ae:	d134      	bne.n	7a1a <gapm_get_dev_config_cmd_handler+0xa2>
    79b0:	3206      	adds	r2, #6
    79b2:	725a      	strb	r2, [r3, #9]
    79b4:	22d0      	movs	r2, #208	; 0xd0
    79b6:	0112      	lsls	r2, r2, #4
    79b8:	8062      	strh	r2, [r4, #2]
    79ba:	4a1b      	ldr	r2, [pc, #108]	; (7a28 <gapm_get_dev_config_cmd_handler+0xb0>)
    79bc:	71d8      	strb	r0, [r3, #7]
    79be:	39c5      	subs	r1, #197	; 0xc5
    79c0:	1c18      	adds	r0, r3, #0
    79c2:	4b1a      	ldr	r3, [pc, #104]	; (7a2c <gapm_get_dev_config_cmd_handler+0xb4>)
    79c4:	8022      	strh	r2, [r4, #0]
    79c6:	80a7      	strh	r7, [r4, #4]
    79c8:	4798      	blx	r3
    79ca:	4b19      	ldr	r3, [pc, #100]	; (7a30 <gapm_get_dev_config_cmd_handler+0xb8>)
    79cc:	4798      	blx	r3
    79ce:	21d0      	movs	r1, #208	; 0xd0
    79d0:	4288      	cmp	r0, r1
    79d2:	d022      	beq.n	7a1a <gapm_get_dev_config_cmd_handler+0xa2>
    79d4:	2301      	movs	r3, #1
    79d6:	8821      	ldrh	r1, [r4, #0]
    79d8:	4a16      	ldr	r2, [pc, #88]	; (7a34 <gapm_get_dev_config_cmd_handler+0xbc>)
    79da:	68a7      	ldr	r7, [r4, #8]
    79dc:	425b      	negs	r3, r3
    79de:	4291      	cmp	r1, r2
    79e0:	d001      	beq.n	79e6 <gapm_get_dev_config_cmd_handler+0x6e>
    79e2:	8023      	strh	r3, [r4, #0]
    79e4:	e008      	b.n	79f8 <gapm_get_dev_config_cmd_handler+0x80>
    79e6:	8063      	strh	r3, [r4, #2]
    79e8:	1c39      	adds	r1, r7, #0
    79ea:	4b13      	ldr	r3, [pc, #76]	; (7a38 <gapm_get_dev_config_cmd_handler+0xc0>)
    79ec:	1c68      	adds	r0, r5, #1
    79ee:	2206      	movs	r2, #6
    79f0:	4798      	blx	r3
    79f2:	79bb      	ldrb	r3, [r7, #6]
    79f4:	702b      	strb	r3, [r5, #0]
    79f6:	68e7      	ldr	r7, [r4, #12]
    79f8:	783c      	ldrb	r4, [r7, #0]
    79fa:	7879      	ldrb	r1, [r7, #1]
    79fc:	2c06      	cmp	r4, #6
    79fe:	d00c      	beq.n	7a1a <gapm_get_dev_config_cmd_handler+0xa2>
    7a00:	4d0e      	ldr	r5, [pc, #56]	; (7a3c <gapm_get_dev_config_cmd_handler+0xc4>)
    7a02:	490f      	ldr	r1, [pc, #60]	; (7a40 <gapm_get_dev_config_cmd_handler+0xc8>)
    7a04:	2286      	movs	r2, #134	; 0x86
    7a06:	4b0f      	ldr	r3, [pc, #60]	; (7a44 <gapm_get_dev_config_cmd_handler+0xcc>)
    7a08:	480f      	ldr	r0, [pc, #60]	; (7a48 <gapm_get_dev_config_cmd_handler+0xd0>)
    7a0a:	682e      	ldr	r6, [r5, #0]
    7a0c:	47b0      	blx	r6
    7a0e:	2106      	movs	r1, #6
    7a10:	682b      	ldr	r3, [r5, #0]
    7a12:	480e      	ldr	r0, [pc, #56]	; (7a4c <gapm_get_dev_config_cmd_handler+0xd4>)
    7a14:	1c22      	adds	r2, r4, #0
    7a16:	4798      	blx	r3
    7a18:	21e2      	movs	r1, #226	; 0xe2
    7a1a:	1c08      	adds	r0, r1, #0
    7a1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7a1e:	46c0      	nop			; (mov r8, r8)
    7a20:	0000ae2c 	.word	0x0000ae2c
    7a24:	20001c54 	.word	0x20001c54
    7a28:	00000d08 	.word	0x00000d08
    7a2c:	000061f9 	.word	0x000061f9
    7a30:	0000645d 	.word	0x0000645d
    7a34:	0000ffff 	.word	0x0000ffff
    7a38:	00008a6f 	.word	0x00008a6f
    7a3c:	20000078 	.word	0x20000078
    7a40:	0000b157 	.word	0x0000b157
    7a44:	0000b1c2 	.word	0x0000b1c2
    7a48:	0000aab9 	.word	0x0000aab9
    7a4c:	0000b192 	.word	0x0000b192

00007a50 <gapm_cancel_cmd_handler>:
    7a50:	b538      	push	{r3, r4, r5, lr}
    7a52:	2210      	movs	r2, #16
    7a54:	2400      	movs	r4, #0
    7a56:	4b13      	ldr	r3, [pc, #76]	; (7aa4 <gapm_cancel_cmd_handler+0x54>)
    7a58:	4d13      	ldr	r5, [pc, #76]	; (7aa8 <gapm_cancel_cmd_handler+0x58>)
    7a5a:	6818      	ldr	r0, [r3, #0]
    7a5c:	2305      	movs	r3, #5
    7a5e:	60ac      	str	r4, [r5, #8]
    7a60:	60ec      	str	r4, [r5, #12]
    7a62:	7142      	strb	r2, [r0, #5]
    7a64:	3a0e      	subs	r2, #14
    7a66:	7242      	strb	r2, [r0, #9]
    7a68:	22d0      	movs	r2, #208	; 0xd0
    7a6a:	7003      	strb	r3, [r0, #0]
    7a6c:	3b02      	subs	r3, #2
    7a6e:	7043      	strb	r3, [r0, #1]
    7a70:	330a      	adds	r3, #10
    7a72:	7083      	strb	r3, [r0, #2]
    7a74:	70c3      	strb	r3, [r0, #3]
    7a76:	7104      	strb	r4, [r0, #4]
    7a78:	80ab      	strh	r3, [r5, #4]
    7a7a:	3b0c      	subs	r3, #12
    7a7c:	0112      	lsls	r2, r2, #4
    7a7e:	71c3      	strb	r3, [r0, #7]
    7a80:	7184      	strb	r4, [r0, #6]
    7a82:	4b0a      	ldr	r3, [pc, #40]	; (7aac <gapm_cancel_cmd_handler+0x5c>)
    7a84:	7204      	strb	r4, [r0, #8]
    7a86:	210a      	movs	r1, #10
    7a88:	802a      	strh	r2, [r5, #0]
    7a8a:	4798      	blx	r3
    7a8c:	4b08      	ldr	r3, [pc, #32]	; (7ab0 <gapm_cancel_cmd_handler+0x60>)
    7a8e:	4798      	blx	r3
    7a90:	28d0      	cmp	r0, #208	; 0xd0
    7a92:	d005      	beq.n	7aa0 <gapm_cancel_cmd_handler+0x50>
    7a94:	68ab      	ldr	r3, [r5, #8]
    7a96:	1c20      	adds	r0, r4, #0
    7a98:	785b      	ldrb	r3, [r3, #1]
    7a9a:	2b44      	cmp	r3, #68	; 0x44
    7a9c:	d000      	beq.n	7aa0 <gapm_cancel_cmd_handler+0x50>
    7a9e:	1c18      	adds	r0, r3, #0
    7aa0:	bd38      	pop	{r3, r4, r5, pc}
    7aa2:	46c0      	nop			; (mov r8, r8)
    7aa4:	0000ae2c 	.word	0x0000ae2c
    7aa8:	20001c54 	.word	0x20001c54
    7aac:	000061f9 	.word	0x000061f9
    7ab0:	0000645d 	.word	0x0000645d

00007ab4 <gapm_dev_bdaddr_ind_handler>:
    7ab4:	b538      	push	{r3, r4, r5, lr}
    7ab6:	1c05      	adds	r5, r0, #0
    7ab8:	1c0c      	adds	r4, r1, #0
    7aba:	1c48      	adds	r0, r1, #1
    7abc:	2206      	movs	r2, #6
    7abe:	1c29      	adds	r1, r5, #0
    7ac0:	4b02      	ldr	r3, [pc, #8]	; (7acc <gapm_dev_bdaddr_ind_handler+0x18>)
    7ac2:	4798      	blx	r3
    7ac4:	79ab      	ldrb	r3, [r5, #6]
    7ac6:	2000      	movs	r0, #0
    7ac8:	7023      	strb	r3, [r4, #0]
    7aca:	bd38      	pop	{r3, r4, r5, pc}
    7acc:	00008a6f 	.word	0x00008a6f

00007ad0 <gapm_cmp_evt>:
    7ad0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    7ad2:	7806      	ldrb	r6, [r0, #0]
    7ad4:	7845      	ldrb	r5, [r0, #1]
    7ad6:	1c30      	adds	r0, r6, #0
    7ad8:	380c      	subs	r0, #12
    7ada:	1c0c      	adds	r4, r1, #0
    7adc:	280b      	cmp	r0, #11
    7ade:	d900      	bls.n	7ae2 <gapm_cmp_evt+0x12>
    7ae0:	e08c      	b.n	7bfc <gapm_cmp_evt+0x12c>
    7ae2:	f000 fea7 	bl	8834 <__gnu_thumb1_case_uqi>
    7ae6:	1952      	.short	0x1952
    7ae8:	068b1919 	.word	0x068b1919
    7aec:	8b595906 	.word	0x8b595906
    7af0:	0d8b      	.short	0x0d8b
    7af2:	2300      	movs	r3, #0
    7af4:	2d45      	cmp	r5, #69	; 0x45
    7af6:	d000      	beq.n	7afa <gapm_cmp_evt+0x2a>
    7af8:	1c2b      	adds	r3, r5, #0
    7afa:	7023      	strb	r3, [r4, #0]
    7afc:	2002      	movs	r0, #2
    7afe:	e08a      	b.n	7c16 <gapm_cmp_evt+0x146>
    7b00:	203a      	movs	r0, #58	; 0x3a
    7b02:	2d00      	cmp	r5, #0
    7b04:	d100      	bne.n	7b08 <gapm_cmp_evt+0x38>
    7b06:	e086      	b.n	7c16 <gapm_cmp_evt+0x146>
    7b08:	700d      	strb	r5, [r1, #0]
    7b0a:	1c48      	adds	r0, r1, #1
    7b0c:	2210      	movs	r2, #16
    7b0e:	2100      	movs	r1, #0
    7b10:	4b41      	ldr	r3, [pc, #260]	; (7c18 <gapm_cmp_evt+0x148>)
    7b12:	4798      	blx	r3
    7b14:	200f      	movs	r0, #15
    7b16:	e07e      	b.n	7c16 <gapm_cmp_evt+0x146>
    7b18:	2d00      	cmp	r5, #0
    7b1a:	d134      	bne.n	7b86 <gapm_cmp_evt+0xb6>
    7b1c:	4b3f      	ldr	r3, [pc, #252]	; (7c1c <gapm_cmp_evt+0x14c>)
    7b1e:	4798      	blx	r3
    7b20:	1e43      	subs	r3, r0, #1
    7b22:	b2db      	uxtb	r3, r3
    7b24:	1c28      	adds	r0, r5, #0
    7b26:	2b06      	cmp	r3, #6
    7b28:	d875      	bhi.n	7c16 <gapm_cmp_evt+0x146>
    7b2a:	466b      	mov	r3, sp
    7b2c:	4e3c      	ldr	r6, [pc, #240]	; (7c20 <gapm_cmp_evt+0x150>)
    7b2e:	1dd9      	adds	r1, r3, #7
    7b30:	8db0      	ldrh	r0, [r6, #44]	; 0x2c
    7b32:	4b3c      	ldr	r3, [pc, #240]	; (7c24 <gapm_cmp_evt+0x154>)
    7b34:	4798      	blx	r3
    7b36:	2312      	movs	r3, #18
    7b38:	4358      	muls	r0, r3
    7b3a:	493b      	ldr	r1, [pc, #236]	; (7c28 <gapm_cmp_evt+0x158>)
    7b3c:	1809      	adds	r1, r1, r0
    7b3e:	1c0b      	adds	r3, r1, #0
    7b40:	894a      	ldrh	r2, [r1, #10]
    7b42:	3308      	adds	r3, #8
    7b44:	8122      	strh	r2, [r4, #8]
    7b46:	784f      	ldrb	r7, [r1, #1]
    7b48:	72a5      	strb	r5, [r4, #10]
    7b4a:	7027      	strb	r7, [r4, #0]
    7b4c:	898a      	ldrh	r2, [r1, #12]
    7b4e:	1c60      	adds	r0, r4, #1
    7b50:	81a2      	strh	r2, [r4, #12]
    7b52:	88db      	ldrh	r3, [r3, #6]
    7b54:	3102      	adds	r1, #2
    7b56:	81e3      	strh	r3, [r4, #14]
    7b58:	89cb      	ldrh	r3, [r1, #14]
    7b5a:	2206      	movs	r2, #6
    7b5c:	8223      	strh	r3, [r4, #16]
    7b5e:	4b33      	ldr	r3, [pc, #204]	; (7c2c <gapm_cmp_evt+0x15c>)
    7b60:	4798      	blx	r3
    7b62:	2f00      	cmp	r7, #0
    7b64:	d00a      	beq.n	7b7c <gapm_cmp_evt+0xac>
    7b66:	79a3      	ldrb	r3, [r4, #6]
    7b68:	223f      	movs	r2, #63	; 0x3f
    7b6a:	1c19      	adds	r1, r3, #0
    7b6c:	3501      	adds	r5, #1
    7b6e:	4391      	bics	r1, r2
    7b70:	29c0      	cmp	r1, #192	; 0xc0
    7b72:	d003      	beq.n	7b7c <gapm_cmp_evt+0xac>
    7b74:	065b      	lsls	r3, r3, #25
    7b76:	0fdb      	lsrs	r3, r3, #31
    7b78:	3502      	adds	r5, #2
    7b7a:	1aed      	subs	r5, r5, r3
    7b7c:	2301      	movs	r3, #1
    7b7e:	425b      	negs	r3, r3
    7b80:	7025      	strb	r5, [r4, #0]
    7b82:	85b3      	strh	r3, [r6, #44]	; 0x2c
    7b84:	e038      	b.n	7bf8 <gapm_cmp_evt+0x128>
    7b86:	700d      	strb	r5, [r1, #0]
    7b88:	e004      	b.n	7b94 <gapm_cmp_evt+0xc4>
    7b8a:	2300      	movs	r3, #0
    7b8c:	2d45      	cmp	r5, #69	; 0x45
    7b8e:	d000      	beq.n	7b92 <gapm_cmp_evt+0xc2>
    7b90:	1c2b      	adds	r3, r5, #0
    7b92:	7023      	strb	r3, [r4, #0]
    7b94:	2003      	movs	r0, #3
    7b96:	e03e      	b.n	7c16 <gapm_cmp_evt+0x146>
    7b98:	4e21      	ldr	r6, [pc, #132]	; (7c20 <gapm_cmp_evt+0x150>)
    7b9a:	2100      	movs	r1, #0
    7b9c:	8db0      	ldrh	r0, [r6, #44]	; 0x2c
    7b9e:	4b21      	ldr	r3, [pc, #132]	; (7c24 <gapm_cmp_evt+0x154>)
    7ba0:	4798      	blx	r3
    7ba2:	2807      	cmp	r0, #7
    7ba4:	d818      	bhi.n	7bd8 <gapm_cmp_evt+0x108>
    7ba6:	2301      	movs	r3, #1
    7ba8:	425b      	negs	r3, r3
    7baa:	85b3      	strh	r3, [r6, #44]	; 0x2c
    7bac:	3313      	adds	r3, #19
    7bae:	4358      	muls	r0, r3
    7bb0:	491d      	ldr	r1, [pc, #116]	; (7c28 <gapm_cmp_evt+0x158>)
    7bb2:	1809      	adds	r1, r1, r0
    7bb4:	1c0b      	adds	r3, r1, #0
    7bb6:	894a      	ldrh	r2, [r1, #10]
    7bb8:	3308      	adds	r3, #8
    7bba:	8122      	strh	r2, [r4, #8]
    7bbc:	784a      	ldrb	r2, [r1, #1]
    7bbe:	72a5      	strb	r5, [r4, #10]
    7bc0:	7022      	strb	r2, [r4, #0]
    7bc2:	898a      	ldrh	r2, [r1, #12]
    7bc4:	1c60      	adds	r0, r4, #1
    7bc6:	81a2      	strh	r2, [r4, #12]
    7bc8:	88db      	ldrh	r3, [r3, #6]
    7bca:	3102      	adds	r1, #2
    7bcc:	81e3      	strh	r3, [r4, #14]
    7bce:	89cb      	ldrh	r3, [r1, #14]
    7bd0:	2206      	movs	r2, #6
    7bd2:	8223      	strh	r3, [r4, #16]
    7bd4:	4b15      	ldr	r3, [pc, #84]	; (7c2c <gapm_cmp_evt+0x15c>)
    7bd6:	4798      	blx	r3
    7bd8:	2200      	movs	r2, #0
    7bda:	7823      	ldrb	r3, [r4, #0]
    7bdc:	4293      	cmp	r3, r2
    7bde:	d00a      	beq.n	7bf6 <gapm_cmp_evt+0x126>
    7be0:	79a3      	ldrb	r3, [r4, #6]
    7be2:	323f      	adds	r2, #63	; 0x3f
    7be4:	1c19      	adds	r1, r3, #0
    7be6:	4391      	bics	r1, r2
    7be8:	3a3e      	subs	r2, #62	; 0x3e
    7bea:	29c0      	cmp	r1, #192	; 0xc0
    7bec:	d003      	beq.n	7bf6 <gapm_cmp_evt+0x126>
    7bee:	065b      	lsls	r3, r3, #25
    7bf0:	0fdb      	lsrs	r3, r3, #31
    7bf2:	3202      	adds	r2, #2
    7bf4:	1ad2      	subs	r2, r2, r3
    7bf6:	7022      	strb	r2, [r4, #0]
    7bf8:	2005      	movs	r0, #5
    7bfa:	e00c      	b.n	7c16 <gapm_cmp_evt+0x146>
    7bfc:	2292      	movs	r2, #146	; 0x92
    7bfe:	4c0c      	ldr	r4, [pc, #48]	; (7c30 <gapm_cmp_evt+0x160>)
    7c00:	490c      	ldr	r1, [pc, #48]	; (7c34 <gapm_cmp_evt+0x164>)
    7c02:	0052      	lsls	r2, r2, #1
    7c04:	4b0c      	ldr	r3, [pc, #48]	; (7c38 <gapm_cmp_evt+0x168>)
    7c06:	480d      	ldr	r0, [pc, #52]	; (7c3c <gapm_cmp_evt+0x16c>)
    7c08:	6825      	ldr	r5, [r4, #0]
    7c0a:	47a8      	blx	r5
    7c0c:	6823      	ldr	r3, [r4, #0]
    7c0e:	480c      	ldr	r0, [pc, #48]	; (7c40 <gapm_cmp_evt+0x170>)
    7c10:	1c31      	adds	r1, r6, #0
    7c12:	4798      	blx	r3
    7c14:	2000      	movs	r0, #0
    7c16:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    7c18:	00008a81 	.word	0x00008a81
    7c1c:	00006cf9 	.word	0x00006cf9
    7c20:	20001cf4 	.word	0x20001cf4
    7c24:	00006cbd 	.word	0x00006cbd
    7c28:	20001c64 	.word	0x20001c64
    7c2c:	00008a6f 	.word	0x00008a6f
    7c30:	20000078 	.word	0x20000078
    7c34:	0000b157 	.word	0x0000b157
    7c38:	0000b1e2 	.word	0x0000b1e2
    7c3c:	0000aab9 	.word	0x0000aab9
    7c40:	0000b1aa 	.word	0x0000b1aa

00007c44 <gapm_start_adv_cmd_handler>:
    7c44:	b5f0      	push	{r4, r5, r6, r7, lr}
    7c46:	b089      	sub	sp, #36	; 0x24
    7c48:	9303      	str	r3, [sp, #12]
    7c4a:	ab0e      	add	r3, sp, #56	; 0x38
    7c4c:	9102      	str	r1, [sp, #8]
    7c4e:	cb02      	ldmia	r3!, {r1}
    7c50:	aa08      	add	r2, sp, #32
    7c52:	881e      	ldrh	r6, [r3, #0]
    7c54:	ab10      	add	r3, sp, #64	; 0x40
    7c56:	881b      	ldrh	r3, [r3, #0]
    7c58:	4c3b      	ldr	r4, [pc, #236]	; (7d48 <gapm_start_adv_cmd_handler+0x104>)
    7c5a:	9300      	str	r3, [sp, #0]
    7c5c:	ab11      	add	r3, sp, #68	; 0x44
    7c5e:	781b      	ldrb	r3, [r3, #0]
    7c60:	9304      	str	r3, [sp, #16]
    7c62:	ab12      	add	r3, sp, #72	; 0x48
    7c64:	781b      	ldrb	r3, [r3, #0]
    7c66:	9305      	str	r3, [sp, #20]
    7c68:	ab13      	add	r3, sp, #76	; 0x4c
    7c6a:	781b      	ldrb	r3, [r3, #0]
    7c6c:	9306      	str	r3, [sp, #24]
    7c6e:	ab14      	add	r3, sp, #80	; 0x50
    7c70:	781b      	ldrb	r3, [r3, #0]
    7c72:	9301      	str	r3, [sp, #4]
    7c74:	2319      	movs	r3, #25
    7c76:	189b      	adds	r3, r3, r2
    7c78:	7fdd      	ldrb	r5, [r3, #31]
    7c7a:	ab18      	add	r3, sp, #96	; 0x60
    7c7c:	881f      	ldrh	r7, [r3, #0]
    7c7e:	ab19      	add	r3, sp, #100	; 0x64
    7c80:	781b      	ldrb	r3, [r3, #0]
    7c82:	2205      	movs	r2, #5
    7c84:	9307      	str	r3, [sp, #28]
    7c86:	2300      	movs	r3, #0
    7c88:	60a3      	str	r3, [r4, #8]
    7c8a:	60e3      	str	r3, [r4, #12]
    7c8c:	4c2f      	ldr	r4, [pc, #188]	; (7d4c <gapm_start_adv_cmd_handler+0x108>)
    7c8e:	6824      	ldr	r4, [r4, #0]
    7c90:	7022      	strb	r2, [r4, #0]
    7c92:	220d      	movs	r2, #13
    7c94:	7062      	strb	r2, [r4, #1]
    7c96:	70a2      	strb	r2, [r4, #2]
    7c98:	70e2      	strb	r2, [r4, #3]
    7c9a:	2210      	movs	r2, #16
    7c9c:	7123      	strb	r3, [r4, #4]
    7c9e:	7162      	strb	r2, [r4, #5]
    7ca0:	71a3      	strb	r3, [r4, #6]
    7ca2:	71e3      	strb	r3, [r4, #7]
    7ca4:	7223      	strb	r3, [r4, #8]
    7ca6:	7260      	strb	r0, [r4, #9]
    7ca8:	72e3      	strb	r3, [r4, #11]
    7caa:	7323      	strb	r3, [r4, #12]
    7cac:	466b      	mov	r3, sp
    7cae:	781b      	ldrb	r3, [r3, #0]
    7cb0:	466a      	mov	r2, sp
    7cb2:	73e3      	strb	r3, [r4, #15]
    7cb4:	9b00      	ldr	r3, [sp, #0]
    7cb6:	7a12      	ldrb	r2, [r2, #8]
    7cb8:	0a1b      	lsrs	r3, r3, #8
    7cba:	7423      	strb	r3, [r4, #16]
    7cbc:	466b      	mov	r3, sp
    7cbe:	7c1b      	ldrb	r3, [r3, #16]
    7cc0:	7366      	strb	r6, [r4, #13]
    7cc2:	380e      	subs	r0, #14
    7cc4:	0a36      	lsrs	r6, r6, #8
    7cc6:	72a2      	strb	r2, [r4, #10]
    7cc8:	73a6      	strb	r6, [r4, #14]
    7cca:	7463      	strb	r3, [r4, #17]
    7ccc:	2801      	cmp	r0, #1
    7cce:	d80a      	bhi.n	7ce6 <gapm_start_adv_cmd_handler+0xa2>
    7cd0:	2900      	cmp	r1, #0
    7cd2:	d004      	beq.n	7cde <gapm_start_adv_cmd_handler+0x9a>
    7cd4:	1c20      	adds	r0, r4, #0
    7cd6:	2206      	movs	r2, #6
    7cd8:	3012      	adds	r0, #18
    7cda:	4b1d      	ldr	r3, [pc, #116]	; (7d50 <gapm_start_adv_cmd_handler+0x10c>)
    7cdc:	4798      	blx	r3
    7cde:	466b      	mov	r3, sp
    7ce0:	7b1b      	ldrb	r3, [r3, #12]
    7ce2:	7623      	strb	r3, [r4, #24]
    7ce4:	e016      	b.n	7d14 <gapm_start_adv_cmd_handler+0xd0>
    7ce6:	466b      	mov	r3, sp
    7ce8:	7d1b      	ldrb	r3, [r3, #20]
    7cea:	1c20      	adds	r0, r4, #0
    7cec:	74a3      	strb	r3, [r4, #18]
    7cee:	466b      	mov	r3, sp
    7cf0:	7e1b      	ldrb	r3, [r3, #24]
    7cf2:	9915      	ldr	r1, [sp, #84]	; 0x54
    7cf4:	74e3      	strb	r3, [r4, #19]
    7cf6:	466b      	mov	r3, sp
    7cf8:	791b      	ldrb	r3, [r3, #4]
    7cfa:	9a01      	ldr	r2, [sp, #4]
    7cfc:	7523      	strb	r3, [r4, #20]
    7cfe:	3015      	adds	r0, #21
    7d00:	4e13      	ldr	r6, [pc, #76]	; (7d50 <gapm_start_adv_cmd_handler+0x10c>)
    7d02:	47b0      	blx	r6
    7d04:	1c23      	adds	r3, r4, #0
    7d06:	1c20      	adds	r0, r4, #0
    7d08:	3331      	adds	r3, #49	; 0x31
    7d0a:	701d      	strb	r5, [r3, #0]
    7d0c:	3032      	adds	r0, #50	; 0x32
    7d0e:	9917      	ldr	r1, [sp, #92]	; 0x5c
    7d10:	1c2a      	adds	r2, r5, #0
    7d12:	47b0      	blx	r6
    7d14:	1c22      	adds	r2, r4, #0
    7d16:	23a5      	movs	r3, #165	; 0xa5
    7d18:	3251      	adds	r2, #81	; 0x51
    7d1a:	7013      	strb	r3, [r2, #0]
    7d1c:	7053      	strb	r3, [r2, #1]
    7d1e:	1c23      	adds	r3, r4, #0
    7d20:	3353      	adds	r3, #83	; 0x53
    7d22:	701f      	strb	r7, [r3, #0]
    7d24:	0a3b      	lsrs	r3, r7, #8
    7d26:	70d3      	strb	r3, [r2, #3]
    7d28:	466a      	mov	r2, sp
    7d2a:	1c23      	adds	r3, r4, #0
    7d2c:	7f12      	ldrb	r2, [r2, #28]
    7d2e:	3355      	adds	r3, #85	; 0x55
    7d30:	701a      	strb	r2, [r3, #0]
    7d32:	2500      	movs	r5, #0
    7d34:	234d      	movs	r3, #77	; 0x4d
    7d36:	7225      	strb	r5, [r4, #8]
    7d38:	71e3      	strb	r3, [r4, #7]
    7d3a:	1c20      	adds	r0, r4, #0
    7d3c:	2156      	movs	r1, #86	; 0x56
    7d3e:	4b05      	ldr	r3, [pc, #20]	; (7d54 <gapm_start_adv_cmd_handler+0x110>)
    7d40:	4798      	blx	r3
    7d42:	1c28      	adds	r0, r5, #0
    7d44:	b009      	add	sp, #36	; 0x24
    7d46:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7d48:	20001c54 	.word	0x20001c54
    7d4c:	0000ae2c 	.word	0x0000ae2c
    7d50:	00008a6f 	.word	0x00008a6f
    7d54:	000061f9 	.word	0x000061f9

00007d58 <get_gap_local_addr_type>:
    7d58:	4b04      	ldr	r3, [pc, #16]	; (7d6c <get_gap_local_addr_type+0x14>)
    7d5a:	2001      	movs	r0, #1
    7d5c:	791b      	ldrb	r3, [r3, #4]
    7d5e:	2b02      	cmp	r3, #2
    7d60:	d003      	beq.n	7d6a <get_gap_local_addr_type+0x12>
    7d62:	3b03      	subs	r3, #3
    7d64:	4258      	negs	r0, r3
    7d66:	4158      	adcs	r0, r3
    7d68:	0040      	lsls	r0, r0, #1
    7d6a:	4770      	bx	lr
    7d6c:	20001cf4 	.word	0x20001cf4

00007d70 <gapm_adv_report_evt_handler>:
    7d70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    7d72:	7843      	ldrb	r3, [r0, #1]
    7d74:	1c05      	adds	r5, r0, #0
    7d76:	9301      	str	r3, [sp, #4]
    7d78:	466b      	mov	r3, sp
    7d7a:	1c0c      	adds	r4, r1, #0
    7d7c:	791b      	ldrb	r3, [r3, #4]
    7d7e:	7806      	ldrb	r6, [r0, #0]
    7d80:	2206      	movs	r2, #6
    7d82:	704b      	strb	r3, [r1, #1]
    7d84:	1c88      	adds	r0, r1, #2
    7d86:	4f1b      	ldr	r7, [pc, #108]	; (7df4 <gapm_adv_report_evt_handler+0x84>)
    7d88:	1ca9      	adds	r1, r5, #2
    7d8a:	47b8      	blx	r7
    7d8c:	1c20      	adds	r0, r4, #0
    7d8e:	1c29      	adds	r1, r5, #0
    7d90:	7a2a      	ldrb	r2, [r5, #8]
    7d92:	3008      	adds	r0, #8
    7d94:	77c2      	strb	r2, [r0, #31]
    7d96:	3109      	adds	r1, #9
    7d98:	3528      	adds	r5, #40	; 0x28
    7d9a:	47b8      	blx	r7
    7d9c:	782b      	ldrb	r3, [r5, #0]
    7d9e:	b25a      	sxtb	r2, r3
    7da0:	2a00      	cmp	r2, #0
    7da2:	da01      	bge.n	7da8 <gapm_adv_report_evt_handler+0x38>
    7da4:	3301      	adds	r3, #1
    7da6:	b2db      	uxtb	r3, r3
    7da8:	1c22      	adds	r2, r4, #0
    7daa:	3228      	adds	r2, #40	; 0x28
    7dac:	7013      	strb	r3, [r2, #0]
    7dae:	2200      	movs	r2, #0
    7db0:	9b01      	ldr	r3, [sp, #4]
    7db2:	4293      	cmp	r3, r2
    7db4:	d00a      	beq.n	7dcc <gapm_adv_report_evt_handler+0x5c>
    7db6:	79e3      	ldrb	r3, [r4, #7]
    7db8:	323f      	adds	r2, #63	; 0x3f
    7dba:	1c19      	adds	r1, r3, #0
    7dbc:	4391      	bics	r1, r2
    7dbe:	3a3e      	subs	r2, #62	; 0x3e
    7dc0:	29c0      	cmp	r1, #192	; 0xc0
    7dc2:	d003      	beq.n	7dcc <gapm_adv_report_evt_handler+0x5c>
    7dc4:	065b      	lsls	r3, r3, #25
    7dc6:	0fdb      	lsrs	r3, r3, #31
    7dc8:	3202      	adds	r2, #2
    7dca:	1ad2      	subs	r2, r2, r3
    7dcc:	7062      	strb	r2, [r4, #1]
    7dce:	2e04      	cmp	r6, #4
    7dd0:	d80f      	bhi.n	7df2 <gapm_adv_report_evt_handler+0x82>
    7dd2:	1c30      	adds	r0, r6, #0
    7dd4:	f000 fd2e 	bl	8834 <__gnu_thumb1_case_uqi>
    7dd8:	09070503 	.word	0x09070503
    7ddc:	0b          	.byte	0x0b
    7ddd:	00          	.byte	0x00
    7dde:	2300      	movs	r3, #0
    7de0:	e006      	b.n	7df0 <gapm_adv_report_evt_handler+0x80>
    7de2:	2301      	movs	r3, #1
    7de4:	e004      	b.n	7df0 <gapm_adv_report_evt_handler+0x80>
    7de6:	2302      	movs	r3, #2
    7de8:	e002      	b.n	7df0 <gapm_adv_report_evt_handler+0x80>
    7dea:	2303      	movs	r3, #3
    7dec:	e000      	b.n	7df0 <gapm_adv_report_evt_handler+0x80>
    7dee:	2305      	movs	r3, #5
    7df0:	7023      	strb	r3, [r4, #0]
    7df2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    7df4:	00008a6f 	.word	0x00008a6f

00007df8 <gapm_resolv_addr_cmd_handler>:
    7df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7dfa:	2300      	movs	r3, #0
    7dfc:	1c16      	adds	r6, r2, #0
    7dfe:	4a16      	ldr	r2, [pc, #88]	; (7e58 <gapm_resolv_addr_cmd_handler+0x60>)
    7e00:	1c05      	adds	r5, r0, #0
    7e02:	6093      	str	r3, [r2, #8]
    7e04:	60d3      	str	r3, [r2, #12]
    7e06:	4a15      	ldr	r2, [pc, #84]	; (7e5c <gapm_resolv_addr_cmd_handler+0x64>)
    7e08:	4f15      	ldr	r7, [pc, #84]	; (7e60 <gapm_resolv_addr_cmd_handler+0x68>)
    7e0a:	6814      	ldr	r4, [r2, #0]
    7e0c:	2205      	movs	r2, #5
    7e0e:	72a0      	strb	r0, [r4, #10]
    7e10:	1c20      	adds	r0, r4, #0
    7e12:	7022      	strb	r2, [r4, #0]
    7e14:	320f      	adds	r2, #15
    7e16:	7062      	strb	r2, [r4, #1]
    7e18:	3a07      	subs	r2, #7
    7e1a:	70a2      	strb	r2, [r4, #2]
    7e1c:	70e2      	strb	r2, [r4, #3]
    7e1e:	7123      	strb	r3, [r4, #4]
    7e20:	71a3      	strb	r3, [r4, #6]
    7e22:	71e3      	strb	r3, [r4, #7]
    7e24:	7223      	strb	r3, [r4, #8]
    7e26:	3203      	adds	r2, #3
    7e28:	3317      	adds	r3, #23
    7e2a:	7263      	strb	r3, [r4, #9]
    7e2c:	7162      	strb	r2, [r4, #5]
    7e2e:	300b      	adds	r0, #11
    7e30:	3a0a      	subs	r2, #10
    7e32:	47b8      	blx	r7
    7e34:	1c20      	adds	r0, r4, #0
    7e36:	012d      	lsls	r5, r5, #4
    7e38:	1c31      	adds	r1, r6, #0
    7e3a:	1c2a      	adds	r2, r5, #0
    7e3c:	3011      	adds	r0, #17
    7e3e:	47b8      	blx	r7
    7e40:	1c29      	adds	r1, r5, #0
    7e42:	3111      	adds	r1, #17
    7e44:	1c0b      	adds	r3, r1, #0
    7e46:	3b09      	subs	r3, #9
    7e48:	71e3      	strb	r3, [r4, #7]
    7e4a:	121b      	asrs	r3, r3, #8
    7e4c:	7223      	strb	r3, [r4, #8]
    7e4e:	1c20      	adds	r0, r4, #0
    7e50:	4b04      	ldr	r3, [pc, #16]	; (7e64 <gapm_resolv_addr_cmd_handler+0x6c>)
    7e52:	4798      	blx	r3
    7e54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7e56:	46c0      	nop			; (mov r8, r8)
    7e58:	20001c54 	.word	0x20001c54
    7e5c:	0000ae2c 	.word	0x0000ae2c
    7e60:	00008a6f 	.word	0x00008a6f
    7e64:	000061f9 	.word	0x000061f9

00007e68 <gapm_addr_solved_ind_handler>:
    7e68:	b570      	push	{r4, r5, r6, lr}
    7e6a:	1c04      	adds	r4, r0, #0
    7e6c:	1c08      	adds	r0, r1, #0
    7e6e:	1c0d      	adds	r5, r1, #0
    7e70:	4e05      	ldr	r6, [pc, #20]	; (7e88 <gapm_addr_solved_ind_handler+0x20>)
    7e72:	1c21      	adds	r1, r4, #0
    7e74:	2206      	movs	r2, #6
    7e76:	3011      	adds	r0, #17
    7e78:	47b0      	blx	r6
    7e7a:	1c68      	adds	r0, r5, #1
    7e7c:	1da1      	adds	r1, r4, #6
    7e7e:	2210      	movs	r2, #16
    7e80:	47b0      	blx	r6
    7e82:	2300      	movs	r3, #0
    7e84:	702b      	strb	r3, [r5, #0]
    7e86:	bd70      	pop	{r4, r5, r6, pc}
    7e88:	00008a6f 	.word	0x00008a6f

00007e8c <gapm_profile_added_ind_handler>:
    7e8c:	b510      	push	{r4, lr}
    7e8e:	7843      	ldrb	r3, [r0, #1]
    7e90:	7902      	ldrb	r2, [r0, #4]
    7e92:	7944      	ldrb	r4, [r0, #5]
    7e94:	7800      	ldrb	r0, [r0, #0]
    7e96:	021b      	lsls	r3, r3, #8
    7e98:	4303      	orrs	r3, r0
    7e9a:	2b1b      	cmp	r3, #27
    7e9c:	d104      	bne.n	7ea8 <gapm_profile_added_ind_handler+0x1c>
    7e9e:	2300      	movs	r3, #0
    7ea0:	700b      	strb	r3, [r1, #0]
    7ea2:	0223      	lsls	r3, r4, #8
    7ea4:	4313      	orrs	r3, r2
    7ea6:	804b      	strh	r3, [r1, #2]
    7ea8:	203a      	movs	r0, #58	; 0x3a
    7eaa:	bd10      	pop	{r4, pc}

00007eac <gattc_read_req_ind_parser>:
    7eac:	7843      	ldrb	r3, [r0, #1]
    7eae:	7802      	ldrb	r2, [r0, #0]
    7eb0:	021b      	lsls	r3, r3, #8
    7eb2:	4313      	orrs	r3, r2
    7eb4:	804b      	strh	r3, [r1, #2]
    7eb6:	4770      	bx	lr

00007eb8 <gattc_write_req_ind_parser>:
    7eb8:	b508      	push	{r3, lr}
    7eba:	1c13      	adds	r3, r2, #0
    7ebc:	0a00      	lsrs	r0, r0, #8
    7ebe:	8010      	strh	r0, [r2, #0]
    7ec0:	784a      	ldrb	r2, [r1, #1]
    7ec2:	7808      	ldrb	r0, [r1, #0]
    7ec4:	0212      	lsls	r2, r2, #8
    7ec6:	4302      	orrs	r2, r0
    7ec8:	805a      	strh	r2, [r3, #2]
    7eca:	78ca      	ldrb	r2, [r1, #3]
    7ecc:	7888      	ldrb	r0, [r1, #2]
    7ece:	0212      	lsls	r2, r2, #8
    7ed0:	4302      	orrs	r2, r0
    7ed2:	809a      	strh	r2, [r3, #4]
    7ed4:	794a      	ldrb	r2, [r1, #5]
    7ed6:	7908      	ldrb	r0, [r1, #4]
    7ed8:	0212      	lsls	r2, r2, #8
    7eda:	4302      	orrs	r2, r0
    7edc:	80da      	strh	r2, [r3, #6]
    7ede:	3308      	adds	r3, #8
    7ee0:	1c18      	adds	r0, r3, #0
    7ee2:	3106      	adds	r1, #6
    7ee4:	4b01      	ldr	r3, [pc, #4]	; (7eec <gattc_write_req_ind_parser+0x34>)
    7ee6:	4798      	blx	r3
    7ee8:	bd08      	pop	{r3, pc}
    7eea:	46c0      	nop			; (mov r8, r8)
    7eec:	00008a6f 	.word	0x00008a6f

00007ef0 <gattc_att_info_req_parser>:
    7ef0:	7843      	ldrb	r3, [r0, #1]
    7ef2:	7802      	ldrb	r2, [r0, #0]
    7ef4:	021b      	lsls	r3, r3, #8
    7ef6:	4313      	orrs	r3, r2
    7ef8:	800b      	strh	r3, [r1, #0]
    7efa:	4770      	bx	lr

00007efc <gattc_read_cfm>:
    7efc:	b570      	push	{r4, r5, r6, lr}
    7efe:	1c1d      	adds	r5, r3, #0
    7f00:	2300      	movs	r3, #0
    7f02:	4c17      	ldr	r4, [pc, #92]	; (7f60 <gattc_read_cfm+0x64>)
    7f04:	2605      	movs	r6, #5
    7f06:	60a3      	str	r3, [r4, #8]
    7f08:	60e3      	str	r3, [r4, #12]
    7f0a:	4c16      	ldr	r4, [pc, #88]	; (7f64 <gattc_read_cfm+0x68>)
    7f0c:	6824      	ldr	r4, [r4, #0]
    7f0e:	7121      	strb	r1, [r4, #4]
    7f10:	2110      	movs	r1, #16
    7f12:	7026      	strb	r6, [r4, #0]
    7f14:	360f      	adds	r6, #15
    7f16:	7066      	strb	r6, [r4, #1]
    7f18:	71a3      	strb	r3, [r4, #6]
    7f1a:	3e08      	subs	r6, #8
    7f1c:	71e3      	strb	r3, [r4, #7]
    7f1e:	7223      	strb	r3, [r4, #8]
    7f20:	7260      	strb	r0, [r4, #9]
    7f22:	0a2b      	lsrs	r3, r5, #8
    7f24:	0a00      	lsrs	r0, r0, #8
    7f26:	70a6      	strb	r6, [r4, #2]
    7f28:	70e6      	strb	r6, [r4, #3]
    7f2a:	7161      	strb	r1, [r4, #5]
    7f2c:	72a0      	strb	r0, [r4, #10]
    7f2e:	72e5      	strb	r5, [r4, #11]
    7f30:	7323      	strb	r3, [r4, #12]
    7f32:	7362      	strb	r2, [r4, #13]
    7f34:	2d00      	cmp	r5, #0
    7f36:	d008      	beq.n	7f4a <gattc_read_cfm+0x4e>
    7f38:	1c20      	adds	r0, r4, #0
    7f3a:	9904      	ldr	r1, [sp, #16]
    7f3c:	1c2a      	adds	r2, r5, #0
    7f3e:	300e      	adds	r0, #14
    7f40:	4b09      	ldr	r3, [pc, #36]	; (7f68 <gattc_read_cfm+0x6c>)
    7f42:	350e      	adds	r5, #14
    7f44:	4798      	blx	r3
    7f46:	b2a9      	uxth	r1, r5
    7f48:	e001      	b.n	7f4e <gattc_read_cfm+0x52>
    7f4a:	210f      	movs	r1, #15
    7f4c:	73a5      	strb	r5, [r4, #14]
    7f4e:	1c0b      	adds	r3, r1, #0
    7f50:	3b09      	subs	r3, #9
    7f52:	71e3      	strb	r3, [r4, #7]
    7f54:	121b      	asrs	r3, r3, #8
    7f56:	7223      	strb	r3, [r4, #8]
    7f58:	1c20      	adds	r0, r4, #0
    7f5a:	4b04      	ldr	r3, [pc, #16]	; (7f6c <gattc_read_cfm+0x70>)
    7f5c:	4798      	blx	r3
    7f5e:	bd70      	pop	{r4, r5, r6, pc}
    7f60:	20001c54 	.word	0x20001c54
    7f64:	0000ae2c 	.word	0x0000ae2c
    7f68:	00008a6f 	.word	0x00008a6f
    7f6c:	000061f9 	.word	0x000061f9

00007f70 <gattc_write_cfm>:
    7f70:	b538      	push	{r3, r4, r5, lr}
    7f72:	2400      	movs	r4, #0
    7f74:	1c0d      	adds	r5, r1, #0
    7f76:	4b0d      	ldr	r3, [pc, #52]	; (7fac <gattc_write_cfm+0x3c>)
    7f78:	2105      	movs	r1, #5
    7f7a:	609c      	str	r4, [r3, #8]
    7f7c:	60dc      	str	r4, [r3, #12]
    7f7e:	4b0c      	ldr	r3, [pc, #48]	; (7fb0 <gattc_write_cfm+0x40>)
    7f80:	681b      	ldr	r3, [r3, #0]
    7f82:	711d      	strb	r5, [r3, #4]
    7f84:	72da      	strb	r2, [r3, #11]
    7f86:	2510      	movs	r5, #16
    7f88:	2203      	movs	r2, #3
    7f8a:	7019      	strb	r1, [r3, #0]
    7f8c:	3111      	adds	r1, #17
    7f8e:	7059      	strb	r1, [r3, #1]
    7f90:	7258      	strb	r0, [r3, #9]
    7f92:	390a      	subs	r1, #10
    7f94:	0a00      	lsrs	r0, r0, #8
    7f96:	715d      	strb	r5, [r3, #5]
    7f98:	7099      	strb	r1, [r3, #2]
    7f9a:	70d9      	strb	r1, [r3, #3]
    7f9c:	719c      	strb	r4, [r3, #6]
    7f9e:	721c      	strb	r4, [r3, #8]
    7fa0:	7298      	strb	r0, [r3, #10]
    7fa2:	71da      	strb	r2, [r3, #7]
    7fa4:	1c18      	adds	r0, r3, #0
    7fa6:	4b03      	ldr	r3, [pc, #12]	; (7fb4 <gattc_write_cfm+0x44>)
    7fa8:	4798      	blx	r3
    7faa:	bd38      	pop	{r3, r4, r5, pc}
    7fac:	20001c54 	.word	0x20001c54
    7fb0:	0000ae2c 	.word	0x0000ae2c
    7fb4:	000061f9 	.word	0x000061f9

00007fb8 <gattc_att_info_cfm>:
    7fb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7fba:	2500      	movs	r5, #0
    7fbc:	4c0e      	ldr	r4, [pc, #56]	; (7ff8 <gattc_att_info_cfm+0x40>)
    7fbe:	2718      	movs	r7, #24
    7fc0:	60a5      	str	r5, [r4, #8]
    7fc2:	60e5      	str	r5, [r4, #12]
    7fc4:	4c0d      	ldr	r4, [pc, #52]	; (7ffc <gattc_att_info_cfm+0x44>)
    7fc6:	2605      	movs	r6, #5
    7fc8:	6824      	ldr	r4, [r4, #0]
    7fca:	7121      	strb	r1, [r4, #4]
    7fcc:	2110      	movs	r1, #16
    7fce:	7067      	strb	r7, [r4, #1]
    7fd0:	7260      	strb	r0, [r4, #9]
    7fd2:	3f0c      	subs	r7, #12
    7fd4:	72e2      	strb	r2, [r4, #11]
    7fd6:	0a00      	lsrs	r0, r0, #8
    7fd8:	0a12      	lsrs	r2, r2, #8
    7fda:	7026      	strb	r6, [r4, #0]
    7fdc:	70a7      	strb	r7, [r4, #2]
    7fde:	70e7      	strb	r7, [r4, #3]
    7fe0:	7161      	strb	r1, [r4, #5]
    7fe2:	71a5      	strb	r5, [r4, #6]
    7fe4:	7225      	strb	r5, [r4, #8]
    7fe6:	72a0      	strb	r0, [r4, #10]
    7fe8:	7363      	strb	r3, [r4, #13]
    7fea:	71e6      	strb	r6, [r4, #7]
    7fec:	7322      	strb	r2, [r4, #12]
    7fee:	1c20      	adds	r0, r4, #0
    7ff0:	3902      	subs	r1, #2
    7ff2:	4b03      	ldr	r3, [pc, #12]	; (8000 <gattc_att_info_cfm+0x48>)
    7ff4:	4798      	blx	r3
    7ff6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7ff8:	20001c54 	.word	0x20001c54
    7ffc:	0000ae2c 	.word	0x0000ae2c
    8000:	000061f9 	.word	0x000061f9

00008004 <gattc_send_evt_cmd_handler>:
    8004:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8006:	2600      	movs	r6, #0
    8008:	ac08      	add	r4, sp, #32
    800a:	2705      	movs	r7, #5
    800c:	8825      	ldrh	r5, [r4, #0]
    800e:	4c18      	ldr	r4, [pc, #96]	; (8070 <gattc_send_evt_cmd_handler+0x6c>)
    8010:	9301      	str	r3, [sp, #4]
    8012:	60a6      	str	r6, [r4, #8]
    8014:	60e6      	str	r6, [r4, #12]
    8016:	4c17      	ldr	r4, [pc, #92]	; (8074 <gattc_send_evt_cmd_handler+0x70>)
    8018:	230c      	movs	r3, #12
    801a:	6824      	ldr	r4, [r4, #0]
    801c:	7260      	strb	r0, [r4, #9]
    801e:	1c20      	adds	r0, r4, #0
    8020:	7027      	strb	r7, [r4, #0]
    8022:	7122      	strb	r2, [r4, #4]
    8024:	370b      	adds	r7, #11
    8026:	4a14      	ldr	r2, [pc, #80]	; (8078 <gattc_send_evt_cmd_handler+0x74>)
    8028:	7067      	strb	r7, [r4, #1]
    802a:	8812      	ldrh	r2, [r2, #0]
    802c:	7361      	strb	r1, [r4, #13]
    802e:	3201      	adds	r2, #1
    8030:	72a2      	strb	r2, [r4, #10]
    8032:	1212      	asrs	r2, r2, #8
    8034:	72e2      	strb	r2, [r4, #11]
    8036:	0a09      	lsrs	r1, r1, #8
    8038:	0a2a      	lsrs	r2, r5, #8
    803a:	70a3      	strb	r3, [r4, #2]
    803c:	70e3      	strb	r3, [r4, #3]
    803e:	7167      	strb	r7, [r4, #5]
    8040:	71a6      	strb	r6, [r4, #6]
    8042:	71e6      	strb	r6, [r4, #7]
    8044:	7226      	strb	r6, [r4, #8]
    8046:	7326      	strb	r6, [r4, #12]
    8048:	73a1      	strb	r1, [r4, #14]
    804a:	73e5      	strb	r5, [r4, #15]
    804c:	7422      	strb	r2, [r4, #16]
    804e:	9901      	ldr	r1, [sp, #4]
    8050:	1c2a      	adds	r2, r5, #0
    8052:	4b0a      	ldr	r3, [pc, #40]	; (807c <gattc_send_evt_cmd_handler+0x78>)
    8054:	3511      	adds	r5, #17
    8056:	3011      	adds	r0, #17
    8058:	4798      	blx	r3
    805a:	b2a9      	uxth	r1, r5
    805c:	1c0b      	adds	r3, r1, #0
    805e:	3b09      	subs	r3, #9
    8060:	71e3      	strb	r3, [r4, #7]
    8062:	121b      	asrs	r3, r3, #8
    8064:	7223      	strb	r3, [r4, #8]
    8066:	1c20      	adds	r0, r4, #0
    8068:	4b05      	ldr	r3, [pc, #20]	; (8080 <gattc_send_evt_cmd_handler+0x7c>)
    806a:	4798      	blx	r3
    806c:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    806e:	46c0      	nop			; (mov r8, r8)
    8070:	20001c54 	.word	0x20001c54
    8074:	0000ae2c 	.word	0x0000ae2c
    8078:	20000e0c 	.word	0x20000e0c
    807c:	00008a6f 	.word	0x00008a6f
    8080:	000061f9 	.word	0x000061f9

00008084 <gattc_event_cfm_handler>:
    8084:	2200      	movs	r2, #0
    8086:	4b0e      	ldr	r3, [pc, #56]	; (80c0 <gattc_event_cfm_handler+0x3c>)
    8088:	b510      	push	{r4, lr}
    808a:	609a      	str	r2, [r3, #8]
    808c:	60da      	str	r2, [r3, #12]
    808e:	4b0d      	ldr	r3, [pc, #52]	; (80c4 <gattc_event_cfm_handler+0x40>)
    8090:	2405      	movs	r4, #5
    8092:	681b      	ldr	r3, [r3, #0]
    8094:	7118      	strb	r0, [r3, #4]
    8096:	2010      	movs	r0, #16
    8098:	701c      	strb	r4, [r3, #0]
    809a:	3409      	adds	r4, #9
    809c:	705c      	strb	r4, [r3, #1]
    809e:	719a      	strb	r2, [r3, #6]
    80a0:	3c02      	subs	r4, #2
    80a2:	721a      	strb	r2, [r3, #8]
    80a4:	7259      	strb	r1, [r3, #9]
    80a6:	3202      	adds	r2, #2
    80a8:	0a09      	lsrs	r1, r1, #8
    80aa:	709c      	strb	r4, [r3, #2]
    80ac:	70dc      	strb	r4, [r3, #3]
    80ae:	7158      	strb	r0, [r3, #5]
    80b0:	7299      	strb	r1, [r3, #10]
    80b2:	71da      	strb	r2, [r3, #7]
    80b4:	1c18      	adds	r0, r3, #0
    80b6:	210b      	movs	r1, #11
    80b8:	4b03      	ldr	r3, [pc, #12]	; (80c8 <gattc_event_cfm_handler+0x44>)
    80ba:	4798      	blx	r3
    80bc:	bd10      	pop	{r4, pc}
    80be:	46c0      	nop			; (mov r8, r8)
    80c0:	20001c54 	.word	0x20001c54
    80c4:	0000ae2c 	.word	0x0000ae2c
    80c8:	000061f9 	.word	0x000061f9

000080cc <gattc_disc_svc_ind_parser>:
    80cc:	b570      	push	{r4, r5, r6, lr}
    80ce:	1c15      	adds	r5, r2, #0
    80d0:	0a00      	lsrs	r0, r0, #8
    80d2:	8010      	strh	r0, [r2, #0]
    80d4:	784b      	ldrb	r3, [r1, #1]
    80d6:	780a      	ldrb	r2, [r1, #0]
    80d8:	021b      	lsls	r3, r3, #8
    80da:	4313      	orrs	r3, r2
    80dc:	806b      	strh	r3, [r5, #2]
    80de:	78cb      	ldrb	r3, [r1, #3]
    80e0:	788a      	ldrb	r2, [r1, #2]
    80e2:	021b      	lsls	r3, r3, #8
    80e4:	4313      	orrs	r3, r2
    80e6:	80ab      	strh	r3, [r5, #4]
    80e8:	790e      	ldrb	r6, [r1, #4]
    80ea:	4b05      	ldr	r3, [pc, #20]	; (8100 <gattc_disc_svc_ind_parser+0x34>)
    80ec:	1c30      	adds	r0, r6, #0
    80ee:	1c0c      	adds	r4, r1, #0
    80f0:	4798      	blx	r3
    80f2:	1c32      	adds	r2, r6, #0
    80f4:	71a8      	strb	r0, [r5, #6]
    80f6:	1d61      	adds	r1, r4, #5
    80f8:	1de8      	adds	r0, r5, #7
    80fa:	4b02      	ldr	r3, [pc, #8]	; (8104 <gattc_disc_svc_ind_parser+0x38>)
    80fc:	4798      	blx	r3
    80fe:	bd70      	pop	{r4, r5, r6, pc}
    8100:	00005019 	.word	0x00005019
    8104:	00008a6f 	.word	0x00008a6f

00008108 <gattc_disc_svc_incl_ind_parser>:
    8108:	b570      	push	{r4, r5, r6, lr}
    810a:	1c15      	adds	r5, r2, #0
    810c:	0a00      	lsrs	r0, r0, #8
    810e:	8010      	strh	r0, [r2, #0]
    8110:	784b      	ldrb	r3, [r1, #1]
    8112:	780a      	ldrb	r2, [r1, #0]
    8114:	021b      	lsls	r3, r3, #8
    8116:	4313      	orrs	r3, r2
    8118:	806b      	strh	r3, [r5, #2]
    811a:	78cb      	ldrb	r3, [r1, #3]
    811c:	788a      	ldrb	r2, [r1, #2]
    811e:	021b      	lsls	r3, r3, #8
    8120:	4313      	orrs	r3, r2
    8122:	80ab      	strh	r3, [r5, #4]
    8124:	794b      	ldrb	r3, [r1, #5]
    8126:	790a      	ldrb	r2, [r1, #4]
    8128:	021b      	lsls	r3, r3, #8
    812a:	4313      	orrs	r3, r2
    812c:	80eb      	strh	r3, [r5, #6]
    812e:	798e      	ldrb	r6, [r1, #6]
    8130:	4b05      	ldr	r3, [pc, #20]	; (8148 <gattc_disc_svc_incl_ind_parser+0x40>)
    8132:	1c30      	adds	r0, r6, #0
    8134:	1c0c      	adds	r4, r1, #0
    8136:	4798      	blx	r3
    8138:	7228      	strb	r0, [r5, #8]
    813a:	1c28      	adds	r0, r5, #0
    813c:	1c32      	adds	r2, r6, #0
    813e:	1de1      	adds	r1, r4, #7
    8140:	4b02      	ldr	r3, [pc, #8]	; (814c <gattc_disc_svc_incl_ind_parser+0x44>)
    8142:	3009      	adds	r0, #9
    8144:	4798      	blx	r3
    8146:	bd70      	pop	{r4, r5, r6, pc}
    8148:	00005019 	.word	0x00005019
    814c:	00008a6f 	.word	0x00008a6f

00008150 <gattc_disc_char_ind_parser>:
    8150:	b570      	push	{r4, r5, r6, lr}
    8152:	1c15      	adds	r5, r2, #0
    8154:	0a00      	lsrs	r0, r0, #8
    8156:	8010      	strh	r0, [r2, #0]
    8158:	784b      	ldrb	r3, [r1, #1]
    815a:	780a      	ldrb	r2, [r1, #0]
    815c:	021b      	lsls	r3, r3, #8
    815e:	4313      	orrs	r3, r2
    8160:	806b      	strh	r3, [r5, #2]
    8162:	78cb      	ldrb	r3, [r1, #3]
    8164:	788a      	ldrb	r2, [r1, #2]
    8166:	021b      	lsls	r3, r3, #8
    8168:	4313      	orrs	r3, r2
    816a:	80ab      	strh	r3, [r5, #4]
    816c:	790b      	ldrb	r3, [r1, #4]
    816e:	1c0c      	adds	r4, r1, #0
    8170:	71ab      	strb	r3, [r5, #6]
    8172:	794e      	ldrb	r6, [r1, #5]
    8174:	4b05      	ldr	r3, [pc, #20]	; (818c <gattc_disc_char_ind_parser+0x3c>)
    8176:	1c30      	adds	r0, r6, #0
    8178:	4798      	blx	r3
    817a:	71e8      	strb	r0, [r5, #7]
    817c:	1c28      	adds	r0, r5, #0
    817e:	1c32      	adds	r2, r6, #0
    8180:	1da1      	adds	r1, r4, #6
    8182:	4b03      	ldr	r3, [pc, #12]	; (8190 <gattc_disc_char_ind_parser+0x40>)
    8184:	3008      	adds	r0, #8
    8186:	4798      	blx	r3
    8188:	bd70      	pop	{r4, r5, r6, pc}
    818a:	46c0      	nop			; (mov r8, r8)
    818c:	00005019 	.word	0x00005019
    8190:	00008a6f 	.word	0x00008a6f

00008194 <gattc_disc_char_desc_ind_parser>:
    8194:	b570      	push	{r4, r5, r6, lr}
    8196:	1c15      	adds	r5, r2, #0
    8198:	0a00      	lsrs	r0, r0, #8
    819a:	8010      	strh	r0, [r2, #0]
    819c:	784b      	ldrb	r3, [r1, #1]
    819e:	780a      	ldrb	r2, [r1, #0]
    81a0:	021b      	lsls	r3, r3, #8
    81a2:	4313      	orrs	r3, r2
    81a4:	806b      	strh	r3, [r5, #2]
    81a6:	788e      	ldrb	r6, [r1, #2]
    81a8:	4b05      	ldr	r3, [pc, #20]	; (81c0 <gattc_disc_char_desc_ind_parser+0x2c>)
    81aa:	1c30      	adds	r0, r6, #0
    81ac:	1c0c      	adds	r4, r1, #0
    81ae:	4798      	blx	r3
    81b0:	1c32      	adds	r2, r6, #0
    81b2:	7128      	strb	r0, [r5, #4]
    81b4:	1ce1      	adds	r1, r4, #3
    81b6:	1d68      	adds	r0, r5, #5
    81b8:	4b02      	ldr	r3, [pc, #8]	; (81c4 <gattc_disc_char_desc_ind_parser+0x30>)
    81ba:	4798      	blx	r3
    81bc:	bd70      	pop	{r4, r5, r6, pc}
    81be:	46c0      	nop			; (mov r8, r8)
    81c0:	00005019 	.word	0x00005019
    81c4:	00008a6f 	.word	0x00008a6f

000081c8 <gattc_event_ind_and_notification_parser>:
    81c8:	b510      	push	{r4, lr}
    81ca:	780c      	ldrb	r4, [r1, #0]
    81cc:	1c13      	adds	r3, r2, #0
    81ce:	2c12      	cmp	r4, #18
    81d0:	d10e      	bne.n	81f0 <gattc_event_ind_and_notification_parser+0x28>
    81d2:	0a00      	lsrs	r0, r0, #8
    81d4:	8010      	strh	r0, [r2, #0]
    81d6:	788a      	ldrb	r2, [r1, #2]
    81d8:	709a      	strb	r2, [r3, #2]
    81da:	7948      	ldrb	r0, [r1, #5]
    81dc:	790c      	ldrb	r4, [r1, #4]
    81de:	0200      	lsls	r0, r0, #8
    81e0:	4320      	orrs	r0, r4
    81e2:	8098      	strh	r0, [r3, #4]
    81e4:	3106      	adds	r1, #6
    81e6:	1d98      	adds	r0, r3, #6
    81e8:	4b0b      	ldr	r3, [pc, #44]	; (8218 <gattc_event_ind_and_notification_parser+0x50>)
    81ea:	4798      	blx	r3
    81ec:	221b      	movs	r2, #27
    81ee:	e010      	b.n	8212 <gattc_event_ind_and_notification_parser+0x4a>
    81f0:	2200      	movs	r2, #0
    81f2:	2c13      	cmp	r4, #19
    81f4:	d10d      	bne.n	8212 <gattc_event_ind_and_notification_parser+0x4a>
    81f6:	0a00      	lsrs	r0, r0, #8
    81f8:	8018      	strh	r0, [r3, #0]
    81fa:	788a      	ldrb	r2, [r1, #2]
    81fc:	709a      	strb	r2, [r3, #2]
    81fe:	7908      	ldrb	r0, [r1, #4]
    8200:	78cc      	ldrb	r4, [r1, #3]
    8202:	0200      	lsls	r0, r0, #8
    8204:	4320      	orrs	r0, r4
    8206:	8098      	strh	r0, [r3, #4]
    8208:	3106      	adds	r1, #6
    820a:	1d98      	adds	r0, r3, #6
    820c:	4b02      	ldr	r3, [pc, #8]	; (8218 <gattc_event_ind_and_notification_parser+0x50>)
    820e:	4798      	blx	r3
    8210:	221c      	movs	r2, #28
    8212:	1c10      	adds	r0, r2, #0
    8214:	bd10      	pop	{r4, pc}
    8216:	46c0      	nop			; (mov r8, r8)
    8218:	00008a6f 	.word	0x00008a6f

0000821c <gattc_complete_evt_handler>:
    821c:	b570      	push	{r4, r5, r6, lr}
    821e:	1c14      	adds	r4, r2, #0
    8220:	0a00      	lsrs	r0, r0, #8
    8222:	8010      	strh	r0, [r2, #0]
    8224:	7808      	ldrb	r0, [r1, #0]
    8226:	7090      	strb	r0, [r2, #2]
    8228:	78cb      	ldrb	r3, [r1, #3]
    822a:	784a      	ldrb	r2, [r1, #1]
    822c:	7889      	ldrb	r1, [r1, #2]
    822e:	021b      	lsls	r3, r3, #8
    8230:	430b      	orrs	r3, r1
    8232:	4926      	ldr	r1, [pc, #152]	; (82cc <gattc_complete_evt_handler+0xb0>)
    8234:	3801      	subs	r0, #1
    8236:	800b      	strh	r3, [r1, #0]
    8238:	70e2      	strb	r2, [r4, #3]
    823a:	2813      	cmp	r0, #19
    823c:	d835      	bhi.n	82aa <gattc_complete_evt_handler+0x8e>
    823e:	f000 faf9 	bl	8834 <__gnu_thumb1_case_uqi>
    8242:	420c      	.short	0x420c
    8244:	42424242 	.word	0x42424242
    8248:	1f1f1f42 	.word	0x1f1f1f42
    824c:	0a0a0a1d 	.word	0x0a0a0a1d
    8250:	1134340a 	.word	0x1134340a
    8254:	3217      	.short	0x3217
    8256:	2025      	movs	r0, #37	; 0x25
    8258:	e036      	b.n	82c8 <gattc_complete_evt_handler+0xac>
    825a:	2024      	movs	r0, #36	; 0x24
    825c:	2a00      	cmp	r2, #0
    825e:	d133      	bne.n	82c8 <gattc_complete_evt_handler+0xac>
    8260:	3016      	adds	r0, #22
    8262:	e031      	b.n	82c8 <gattc_complete_evt_handler+0xac>
    8264:	4a1a      	ldr	r2, [pc, #104]	; (82d0 <gattc_complete_evt_handler+0xb4>)
    8266:	201d      	movs	r0, #29
    8268:	6813      	ldr	r3, [r2, #0]
    826a:	3b01      	subs	r3, #1
    826c:	6013      	str	r3, [r2, #0]
    826e:	e02b      	b.n	82c8 <gattc_complete_evt_handler+0xac>
    8270:	4a17      	ldr	r2, [pc, #92]	; (82d0 <gattc_complete_evt_handler+0xb4>)
    8272:	201e      	movs	r0, #30
    8274:	6813      	ldr	r3, [r2, #0]
    8276:	3b01      	subs	r3, #1
    8278:	6013      	str	r3, [r2, #0]
    827a:	e025      	b.n	82c8 <gattc_complete_evt_handler+0xac>
    827c:	2019      	movs	r0, #25
    827e:	e023      	b.n	82c8 <gattc_complete_evt_handler+0xac>
    8280:	203a      	movs	r0, #58	; 0x3a
    8282:	2a00      	cmp	r2, #0
    8284:	d020      	beq.n	82c8 <gattc_complete_evt_handler+0xac>
    8286:	2382      	movs	r3, #130	; 0x82
    8288:	009b      	lsls	r3, r3, #2
    828a:	54e2      	strb	r2, [r4, r3]
    828c:	22c8      	movs	r2, #200	; 0xc8
    828e:	4c11      	ldr	r4, [pc, #68]	; (82d4 <gattc_complete_evt_handler+0xb8>)
    8290:	4911      	ldr	r1, [pc, #68]	; (82d8 <gattc_complete_evt_handler+0xbc>)
    8292:	32ff      	adds	r2, #255	; 0xff
    8294:	4b11      	ldr	r3, [pc, #68]	; (82dc <gattc_complete_evt_handler+0xc0>)
    8296:	4812      	ldr	r0, [pc, #72]	; (82e0 <gattc_complete_evt_handler+0xc4>)
    8298:	6825      	ldr	r5, [r4, #0]
    829a:	47a8      	blx	r5
    829c:	6823      	ldr	r3, [r4, #0]
    829e:	4811      	ldr	r0, [pc, #68]	; (82e4 <gattc_complete_evt_handler+0xc8>)
    82a0:	4798      	blx	r3
    82a2:	2018      	movs	r0, #24
    82a4:	e010      	b.n	82c8 <gattc_complete_evt_handler+0xac>
    82a6:	2021      	movs	r0, #33	; 0x21
    82a8:	e00e      	b.n	82c8 <gattc_complete_evt_handler+0xac>
    82aa:	22d8      	movs	r2, #216	; 0xd8
    82ac:	4d09      	ldr	r5, [pc, #36]	; (82d4 <gattc_complete_evt_handler+0xb8>)
    82ae:	490a      	ldr	r1, [pc, #40]	; (82d8 <gattc_complete_evt_handler+0xbc>)
    82b0:	32ff      	adds	r2, #255	; 0xff
    82b2:	4b0a      	ldr	r3, [pc, #40]	; (82dc <gattc_complete_evt_handler+0xc0>)
    82b4:	480a      	ldr	r0, [pc, #40]	; (82e0 <gattc_complete_evt_handler+0xc4>)
    82b6:	682e      	ldr	r6, [r5, #0]
    82b8:	47b0      	blx	r6
    82ba:	78a1      	ldrb	r1, [r4, #2]
    82bc:	682b      	ldr	r3, [r5, #0]
    82be:	480a      	ldr	r0, [pc, #40]	; (82e8 <gattc_complete_evt_handler+0xcc>)
    82c0:	4798      	blx	r3
    82c2:	2000      	movs	r0, #0
    82c4:	e000      	b.n	82c8 <gattc_complete_evt_handler+0xac>
    82c6:	2017      	movs	r0, #23
    82c8:	bd70      	pop	{r4, r5, r6, pc}
    82ca:	46c0      	nop			; (mov r8, r8)
    82cc:	20000e0e 	.word	0x20000e0e
    82d0:	20000e10 	.word	0x20000e10
    82d4:	20000078 	.word	0x20000078
    82d8:	0000b1ef 	.word	0x0000b1ef
    82dc:	0000b24b 	.word	0x0000b24b
    82e0:	0000aab9 	.word	0x0000aab9
    82e4:	0000b22b 	.word	0x0000b22b
    82e8:	0000b0f6 	.word	0x0000b0f6

000082ec <gattc_event_mtu_changed_ind_parser>:
    82ec:	0a00      	lsrs	r0, r0, #8
    82ee:	8010      	strh	r0, [r2, #0]
    82f0:	784b      	ldrb	r3, [r1, #1]
    82f2:	7809      	ldrb	r1, [r1, #0]
    82f4:	021b      	lsls	r3, r3, #8
    82f6:	430b      	orrs	r3, r1
    82f8:	8053      	strh	r3, [r2, #2]
    82fa:	4770      	bx	lr

000082fc <gattc_read_ind_parser>:
    82fc:	0a00      	lsrs	r0, r0, #8
    82fe:	b508      	push	{r3, lr}
    8300:	8010      	strh	r0, [r2, #0]
    8302:	1c13      	adds	r3, r2, #0
    8304:	2282      	movs	r2, #130	; 0x82
    8306:	2000      	movs	r0, #0
    8308:	0092      	lsls	r2, r2, #2
    830a:	5498      	strb	r0, [r3, r2]
    830c:	784a      	ldrb	r2, [r1, #1]
    830e:	7808      	ldrb	r0, [r1, #0]
    8310:	0212      	lsls	r2, r2, #8
    8312:	4302      	orrs	r2, r0
    8314:	805a      	strh	r2, [r3, #2]
    8316:	78ca      	ldrb	r2, [r1, #3]
    8318:	7888      	ldrb	r0, [r1, #2]
    831a:	0212      	lsls	r2, r2, #8
    831c:	4302      	orrs	r2, r0
    831e:	80da      	strh	r2, [r3, #6]
    8320:	794a      	ldrb	r2, [r1, #5]
    8322:	7908      	ldrb	r0, [r1, #4]
    8324:	0212      	lsls	r2, r2, #8
    8326:	4302      	orrs	r2, r0
    8328:	809a      	strh	r2, [r3, #4]
    832a:	3308      	adds	r3, #8
    832c:	1c18      	adds	r0, r3, #0
    832e:	3106      	adds	r1, #6
    8330:	4b01      	ldr	r3, [pc, #4]	; (8338 <gattc_read_ind_parser+0x3c>)
    8332:	4798      	blx	r3
    8334:	bd08      	pop	{r3, pc}
    8336:	46c0      	nop			; (mov r8, r8)
    8338:	00008a6f 	.word	0x00008a6f

0000833c <gattc_svc_changed_cfg_ind_parser>:
    833c:	0a00      	lsrs	r0, r0, #8
    833e:	8010      	strh	r0, [r2, #0]
    8340:	784b      	ldrb	r3, [r1, #1]
    8342:	7809      	ldrb	r1, [r1, #0]
    8344:	021b      	lsls	r3, r3, #8
    8346:	430b      	orrs	r3, r1
    8348:	8053      	strh	r3, [r2, #2]
    834a:	4770      	bx	lr

0000834c <gattm_add_svc_req_handler>:
    834c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    834e:	7943      	ldrb	r3, [r0, #5]
    8350:	4a3a      	ldr	r2, [pc, #232]	; (843c <gattm_add_svc_req_handler+0xf0>)
    8352:	9301      	str	r3, [sp, #4]
    8354:	2300      	movs	r3, #0
    8356:	60d3      	str	r3, [r2, #12]
    8358:	6093      	str	r3, [r2, #8]
    835a:	4a39      	ldr	r2, [pc, #228]	; (8440 <gattm_add_svc_req_handler+0xf4>)
    835c:	1c05      	adds	r5, r0, #0
    835e:	6814      	ldr	r4, [r2, #0]
    8360:	2205      	movs	r2, #5
    8362:	7022      	strb	r2, [r4, #0]
    8364:	3206      	adds	r2, #6
    8366:	70a2      	strb	r2, [r4, #2]
    8368:	70e2      	strb	r2, [r4, #3]
    836a:	3205      	adds	r2, #5
    836c:	7063      	strb	r3, [r4, #1]
    836e:	7123      	strb	r3, [r4, #4]
    8370:	7162      	strb	r2, [r4, #5]
    8372:	71a3      	strb	r3, [r4, #6]
    8374:	71e3      	strb	r3, [r4, #7]
    8376:	7223      	strb	r3, [r4, #8]
    8378:	8802      	ldrh	r2, [r0, #0]
    837a:	7262      	strb	r2, [r4, #9]
    837c:	8802      	ldrh	r2, [r0, #0]
    837e:	0a12      	lsrs	r2, r2, #8
    8380:	72a2      	strb	r2, [r4, #10]
    8382:	8842      	ldrh	r2, [r0, #2]
    8384:	72e2      	strb	r2, [r4, #11]
    8386:	8842      	ldrh	r2, [r0, #2]
    8388:	0a12      	lsrs	r2, r2, #8
    838a:	7322      	strb	r2, [r4, #12]
    838c:	7902      	ldrb	r2, [r0, #4]
    838e:	7362      	strb	r2, [r4, #13]
    8390:	466a      	mov	r2, sp
    8392:	7912      	ldrb	r2, [r2, #4]
    8394:	73a2      	strb	r2, [r4, #14]
    8396:	18ea      	adds	r2, r5, r3
    8398:	7991      	ldrb	r1, [r2, #6]
    839a:	18e2      	adds	r2, r4, r3
    839c:	3301      	adds	r3, #1
    839e:	73d1      	strb	r1, [r2, #15]
    83a0:	2b10      	cmp	r3, #16
    83a2:	d1f8      	bne.n	8396 <gattm_add_svc_req_handler+0x4a>
    83a4:	2300      	movs	r3, #0
    83a6:	1c29      	adds	r1, r5, #0
    83a8:	9300      	str	r3, [sp, #0]
    83aa:	1c0e      	adds	r6, r1, #0
    83ac:	b2af      	uxth	r7, r5
    83ae:	1bc8      	subs	r0, r1, r7
    83b0:	9b00      	ldr	r3, [sp, #0]
    83b2:	9a01      	ldr	r2, [sp, #4]
    83b4:	301f      	adds	r0, #31
    83b6:	b280      	uxth	r0, r0
    83b8:	3614      	adds	r6, #20
    83ba:	4293      	cmp	r3, r2
    83bc:	da20      	bge.n	8400 <gattm_add_svc_req_handler+0xb4>
    83be:	3116      	adds	r1, #22
    83c0:	2210      	movs	r2, #16
    83c2:	4b20      	ldr	r3, [pc, #128]	; (8444 <gattm_add_svc_req_handler+0xf8>)
    83c4:	1820      	adds	r0, r4, r0
    83c6:	4798      	blx	r3
    83c8:	b2b3      	uxth	r3, r6
    83ca:	1bda      	subs	r2, r3, r7
    83cc:	8a71      	ldrh	r1, [r6, #18]
    83ce:	321b      	adds	r2, #27
    83d0:	b292      	uxth	r2, r2
    83d2:	54a1      	strb	r1, [r4, r2]
    83d4:	8a71      	ldrh	r1, [r6, #18]
    83d6:	1bda      	subs	r2, r3, r7
    83d8:	321c      	adds	r2, #28
    83da:	b292      	uxth	r2, r2
    83dc:	0a09      	lsrs	r1, r1, #8
    83de:	54a1      	strb	r1, [r4, r2]
    83e0:	1bda      	subs	r2, r3, r7
    83e2:	8ab1      	ldrh	r1, [r6, #20]
    83e4:	321d      	adds	r2, #29
    83e6:	b292      	uxth	r2, r2
    83e8:	54a1      	strb	r1, [r4, r2]
    83ea:	1bdf      	subs	r7, r3, r7
    83ec:	8ab3      	ldrh	r3, [r6, #20]
    83ee:	371e      	adds	r7, #30
    83f0:	0a1b      	lsrs	r3, r3, #8
    83f2:	b2bf      	uxth	r7, r7
    83f4:	55e3      	strb	r3, [r4, r7]
    83f6:	9b00      	ldr	r3, [sp, #0]
    83f8:	1c31      	adds	r1, r6, #0
    83fa:	3301      	adds	r3, #1
    83fc:	9300      	str	r3, [sp, #0]
    83fe:	e7d4      	b.n	83aa <gattm_add_svc_req_handler+0x5e>
    8400:	2114      	movs	r1, #20
    8402:	4e0e      	ldr	r6, [pc, #56]	; (843c <gattm_add_svc_req_handler+0xf0>)
    8404:	4b10      	ldr	r3, [pc, #64]	; (8448 <gattm_add_svc_req_handler+0xfc>)
    8406:	4351      	muls	r1, r2
    8408:	8033      	strh	r3, [r6, #0]
    840a:	230b      	movs	r3, #11
    840c:	311f      	adds	r1, #31
    840e:	80b3      	strh	r3, [r6, #4]
    8410:	1c0b      	adds	r3, r1, #0
    8412:	3b09      	subs	r3, #9
    8414:	71e3      	strb	r3, [r4, #7]
    8416:	121b      	asrs	r3, r3, #8
    8418:	7223      	strb	r3, [r4, #8]
    841a:	1c20      	adds	r0, r4, #0
    841c:	4b0b      	ldr	r3, [pc, #44]	; (844c <gattm_add_svc_req_handler+0x100>)
    841e:	4798      	blx	r3
    8420:	4b0b      	ldr	r3, [pc, #44]	; (8450 <gattm_add_svc_req_handler+0x104>)
    8422:	4798      	blx	r3
    8424:	23d0      	movs	r3, #208	; 0xd0
    8426:	4298      	cmp	r0, r3
    8428:	d006      	beq.n	8438 <gattm_add_svc_req_handler+0xec>
    842a:	68b2      	ldr	r2, [r6, #8]
    842c:	7853      	ldrb	r3, [r2, #1]
    842e:	7811      	ldrb	r1, [r2, #0]
    8430:	021b      	lsls	r3, r3, #8
    8432:	430b      	orrs	r3, r1
    8434:	802b      	strh	r3, [r5, #0]
    8436:	7893      	ldrb	r3, [r2, #2]
    8438:	1c18      	adds	r0, r3, #0
    843a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    843c:	20001c54 	.word	0x20001c54
    8440:	0000ae2c 	.word	0x0000ae2c
    8444:	00008a6f 	.word	0x00008a6f
    8448:	00000b01 	.word	0x00000b01
    844c:	000061f9 	.word	0x000061f9
    8450:	0000645d 	.word	0x0000645d

00008454 <gattm_add_attribute_req_handler>:
    8454:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8456:	1c1f      	adds	r7, r3, #0
    8458:	4b1b      	ldr	r3, [pc, #108]	; (84c8 <gattm_add_attribute_req_handler+0x74>)
    845a:	9100      	str	r1, [sp, #0]
    845c:	9201      	str	r2, [sp, #4]
    845e:	7946      	ldrb	r6, [r0, #5]
    8460:	1c05      	adds	r5, r0, #0
    8462:	6818      	ldr	r0, [r3, #0]
    8464:	2114      	movs	r1, #20
    8466:	382a      	subs	r0, #42	; 0x2a
    8468:	4b18      	ldr	r3, [pc, #96]	; (84cc <gattm_add_attribute_req_handler+0x78>)
    846a:	4798      	blx	r3
    846c:	4286      	cmp	r6, r0
    846e:	d30b      	bcc.n	8488 <gattm_add_attribute_req_handler+0x34>
    8470:	4c17      	ldr	r4, [pc, #92]	; (84d0 <gattm_add_attribute_req_handler+0x7c>)
    8472:	4918      	ldr	r1, [pc, #96]	; (84d4 <gattm_add_attribute_req_handler+0x80>)
    8474:	222c      	movs	r2, #44	; 0x2c
    8476:	4b18      	ldr	r3, [pc, #96]	; (84d8 <gattm_add_attribute_req_handler+0x84>)
    8478:	4818      	ldr	r0, [pc, #96]	; (84dc <gattm_add_attribute_req_handler+0x88>)
    847a:	6825      	ldr	r5, [r4, #0]
    847c:	47a8      	blx	r5
    847e:	6823      	ldr	r3, [r4, #0]
    8480:	4817      	ldr	r0, [pc, #92]	; (84e0 <gattm_add_attribute_req_handler+0x8c>)
    8482:	4798      	blx	r3
    8484:	2011      	movs	r0, #17
    8486:	e01e      	b.n	84c6 <gattm_add_attribute_req_handler+0x72>
    8488:	2414      	movs	r4, #20
    848a:	4366      	muls	r6, r4
    848c:	19a8      	adds	r0, r5, r6
    848e:	2100      	movs	r1, #0
    8490:	2210      	movs	r2, #16
    8492:	4b14      	ldr	r3, [pc, #80]	; (84e4 <gattm_add_attribute_req_handler+0x90>)
    8494:	3016      	adds	r0, #22
    8496:	4798      	blx	r3
    8498:	7968      	ldrb	r0, [r5, #5]
    849a:	1c3a      	adds	r2, r7, #0
    849c:	4360      	muls	r0, r4
    849e:	1828      	adds	r0, r5, r0
    84a0:	4b11      	ldr	r3, [pc, #68]	; (84e8 <gattm_add_attribute_req_handler+0x94>)
    84a2:	3016      	adds	r0, #22
    84a4:	9908      	ldr	r1, [sp, #32]
    84a6:	4798      	blx	r3
    84a8:	466a      	mov	r2, sp
    84aa:	796b      	ldrb	r3, [r5, #5]
    84ac:	8812      	ldrh	r2, [r2, #0]
    84ae:	435c      	muls	r4, r3
    84b0:	192c      	adds	r4, r5, r4
    84b2:	8522      	strh	r2, [r4, #40]	; 0x28
    84b4:	466a      	mov	r2, sp
    84b6:	2000      	movs	r0, #0
    84b8:	8892      	ldrh	r2, [r2, #4]
    84ba:	84e2      	strh	r2, [r4, #38]	; 0x26
    84bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
    84be:	8013      	strh	r3, [r2, #0]
    84c0:	796b      	ldrb	r3, [r5, #5]
    84c2:	3301      	adds	r3, #1
    84c4:	716b      	strb	r3, [r5, #5]
    84c6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    84c8:	200006f8 	.word	0x200006f8
    84cc:	00008849 	.word	0x00008849
    84d0:	20000078 	.word	0x20000078
    84d4:	0000b266 	.word	0x0000b266
    84d8:	0000b2a2 	.word	0x0000b2a2
    84dc:	0000aab9 	.word	0x0000aab9
    84e0:	0000ac35 	.word	0x0000ac35
    84e4:	00008a81 	.word	0x00008a81
    84e8:	00008a6f 	.word	0x00008a6f

000084ec <gattm_att_set_value_req_handler>:
    84ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    84ee:	2300      	movs	r3, #0
    84f0:	1c0d      	adds	r5, r1, #0
    84f2:	491a      	ldr	r1, [pc, #104]	; (855c <gattm_att_set_value_req_handler+0x70>)
    84f4:	4e1a      	ldr	r6, [pc, #104]	; (8560 <gattm_att_set_value_req_handler+0x74>)
    84f6:	680c      	ldr	r4, [r1, #0]
    84f8:	2105      	movs	r1, #5
    84fa:	60f3      	str	r3, [r6, #12]
    84fc:	60b3      	str	r3, [r6, #8]
    84fe:	7260      	strb	r0, [r4, #9]
    8500:	0a00      	lsrs	r0, r0, #8
    8502:	270b      	movs	r7, #11
    8504:	72a0      	strb	r0, [r4, #10]
    8506:	1c20      	adds	r0, r4, #0
    8508:	7021      	strb	r1, [r4, #0]
    850a:	3107      	adds	r1, #7
    850c:	7061      	strb	r1, [r4, #1]
    850e:	7123      	strb	r3, [r4, #4]
    8510:	3104      	adds	r1, #4
    8512:	71a3      	strb	r3, [r4, #6]
    8514:	71e3      	strb	r3, [r4, #7]
    8516:	7223      	strb	r3, [r4, #8]
    8518:	0a2b      	lsrs	r3, r5, #8
    851a:	7161      	strb	r1, [r4, #5]
    851c:	72e5      	strb	r5, [r4, #11]
    851e:	1c11      	adds	r1, r2, #0
    8520:	7323      	strb	r3, [r4, #12]
    8522:	1c2a      	adds	r2, r5, #0
    8524:	4b0f      	ldr	r3, [pc, #60]	; (8564 <gattm_att_set_value_req_handler+0x78>)
    8526:	70a7      	strb	r7, [r4, #2]
    8528:	70e7      	strb	r7, [r4, #3]
    852a:	300d      	adds	r0, #13
    852c:	4798      	blx	r3
    852e:	350d      	adds	r5, #13
    8530:	4b0d      	ldr	r3, [pc, #52]	; (8568 <gattm_att_set_value_req_handler+0x7c>)
    8532:	b2a9      	uxth	r1, r5
    8534:	8033      	strh	r3, [r6, #0]
    8536:	1c0b      	adds	r3, r1, #0
    8538:	3b09      	subs	r3, #9
    853a:	71e3      	strb	r3, [r4, #7]
    853c:	121b      	asrs	r3, r3, #8
    853e:	7223      	strb	r3, [r4, #8]
    8540:	1c20      	adds	r0, r4, #0
    8542:	4b0a      	ldr	r3, [pc, #40]	; (856c <gattm_att_set_value_req_handler+0x80>)
    8544:	80b7      	strh	r7, [r6, #4]
    8546:	4798      	blx	r3
    8548:	4b09      	ldr	r3, [pc, #36]	; (8570 <gattm_att_set_value_req_handler+0x84>)
    854a:	4798      	blx	r3
    854c:	23d0      	movs	r3, #208	; 0xd0
    854e:	4298      	cmp	r0, r3
    8550:	d001      	beq.n	8556 <gattm_att_set_value_req_handler+0x6a>
    8552:	68b3      	ldr	r3, [r6, #8]
    8554:	789b      	ldrb	r3, [r3, #2]
    8556:	1c18      	adds	r0, r3, #0
    8558:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    855a:	46c0      	nop			; (mov r8, r8)
    855c:	0000ae2c 	.word	0x0000ae2c
    8560:	20001c54 	.word	0x20001c54
    8564:	00008a6f 	.word	0x00008a6f
    8568:	00000b0d 	.word	0x00000b0d
    856c:	000061f9 	.word	0x000061f9
    8570:	0000645d 	.word	0x0000645d

00008574 <gattm_att_get_value_req_handler>:
    8574:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8576:	2300      	movs	r3, #0
    8578:	1c06      	adds	r6, r0, #0
    857a:	9201      	str	r2, [sp, #4]
    857c:	4a1a      	ldr	r2, [pc, #104]	; (85e8 <gattm_att_get_value_req_handler+0x74>)
    857e:	4c1b      	ldr	r4, [pc, #108]	; (85ec <gattm_att_get_value_req_handler+0x78>)
    8580:	6810      	ldr	r0, [r2, #0]
    8582:	2205      	movs	r2, #5
    8584:	60a3      	str	r3, [r4, #8]
    8586:	60e3      	str	r3, [r4, #12]
    8588:	7103      	strb	r3, [r0, #4]
    858a:	7183      	strb	r3, [r0, #6]
    858c:	7203      	strb	r3, [r0, #8]
    858e:	0a33      	lsrs	r3, r6, #8
    8590:	7283      	strb	r3, [r0, #10]
    8592:	4b17      	ldr	r3, [pc, #92]	; (85f0 <gattm_att_get_value_req_handler+0x7c>)
    8594:	7002      	strb	r2, [r0, #0]
    8596:	1892      	adds	r2, r2, r2
    8598:	7042      	strb	r2, [r0, #1]
    859a:	1c0f      	adds	r7, r1, #0
    859c:	8023      	strh	r3, [r4, #0]
    859e:	210b      	movs	r1, #11
    85a0:	2302      	movs	r3, #2
    85a2:	3206      	adds	r2, #6
    85a4:	7081      	strb	r1, [r0, #2]
    85a6:	70c1      	strb	r1, [r0, #3]
    85a8:	7142      	strb	r2, [r0, #5]
    85aa:	71c3      	strb	r3, [r0, #7]
    85ac:	7246      	strb	r6, [r0, #9]
    85ae:	4b11      	ldr	r3, [pc, #68]	; (85f4 <gattm_att_get_value_req_handler+0x80>)
    85b0:	80a1      	strh	r1, [r4, #4]
    85b2:	4798      	blx	r3
    85b4:	4b10      	ldr	r3, [pc, #64]	; (85f8 <gattm_att_get_value_req_handler+0x84>)
    85b6:	4798      	blx	r3
    85b8:	25d0      	movs	r5, #208	; 0xd0
    85ba:	42a8      	cmp	r0, r5
    85bc:	d011      	beq.n	85e2 <gattm_att_get_value_req_handler+0x6e>
    85be:	68a1      	ldr	r1, [r4, #8]
    85c0:	9801      	ldr	r0, [sp, #4]
    85c2:	784c      	ldrb	r4, [r1, #1]
    85c4:	780b      	ldrb	r3, [r1, #0]
    85c6:	78ca      	ldrb	r2, [r1, #3]
    85c8:	0224      	lsls	r4, r4, #8
    85ca:	431c      	orrs	r4, r3
    85cc:	788b      	ldrb	r3, [r1, #2]
    85ce:	0212      	lsls	r2, r2, #8
    85d0:	431a      	orrs	r2, r3
    85d2:	803a      	strh	r2, [r7, #0]
    85d4:	790d      	ldrb	r5, [r1, #4]
    85d6:	4b09      	ldr	r3, [pc, #36]	; (85fc <gattm_att_get_value_req_handler+0x88>)
    85d8:	3105      	adds	r1, #5
    85da:	4798      	blx	r3
    85dc:	42a6      	cmp	r6, r4
    85de:	d000      	beq.n	85e2 <gattm_att_get_value_req_handler+0x6e>
    85e0:	25e2      	movs	r5, #226	; 0xe2
    85e2:	1c28      	adds	r0, r5, #0
    85e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    85e6:	46c0      	nop			; (mov r8, r8)
    85e8:	0000ae2c 	.word	0x0000ae2c
    85ec:	20001c54 	.word	0x20001c54
    85f0:	00000b0b 	.word	0x00000b0b
    85f4:	000061f9 	.word	0x000061f9
    85f8:	0000645d 	.word	0x0000645d
    85fc:	00008a6f 	.word	0x00008a6f

00008600 <htpt_enable_rsp_handler>:
    8600:	780b      	ldrb	r3, [r1, #0]
    8602:	7013      	strb	r3, [r2, #0]
    8604:	784b      	ldrb	r3, [r1, #1]
    8606:	7053      	strb	r3, [r2, #1]
    8608:	4770      	bx	lr

0000860a <htpt_temp_send_rsp_handler>:
    860a:	780b      	ldrb	r3, [r1, #0]
    860c:	7013      	strb	r3, [r2, #0]
    860e:	4770      	bx	lr

00008610 <htpt_meas_intv_upd_rsp_handler>:
    8610:	780b      	ldrb	r3, [r1, #0]
    8612:	7013      	strb	r3, [r2, #0]
    8614:	4770      	bx	lr

00008616 <htpt_meas_intv_chg_req_ind_handler>:
    8616:	78cb      	ldrb	r3, [r1, #3]
    8618:	7889      	ldrb	r1, [r1, #2]
    861a:	021b      	lsls	r3, r3, #8
    861c:	430b      	orrs	r3, r1
    861e:	8013      	strh	r3, [r2, #0]
    8620:	4770      	bx	lr

00008622 <htpt_cfg_indntf_ind_handler>:
    8622:	780b      	ldrb	r3, [r1, #0]
    8624:	7013      	strb	r3, [r2, #0]
    8626:	784b      	ldrb	r3, [r1, #1]
    8628:	7053      	strb	r3, [r2, #1]
    862a:	4770      	bx	lr

0000862c <write_32_to_BTLC1000>:
    862c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    862e:	2206      	movs	r2, #6
    8630:	ab01      	add	r3, sp, #4
    8632:	701a      	strb	r2, [r3, #0]
    8634:	0e02      	lsrs	r2, r0, #24
    8636:	705a      	strb	r2, [r3, #1]
    8638:	0c02      	lsrs	r2, r0, #16
    863a:	709a      	strb	r2, [r3, #2]
    863c:	0a02      	lsrs	r2, r0, #8
    863e:	70da      	strb	r2, [r3, #3]
    8640:	0e0a      	lsrs	r2, r1, #24
    8642:	715a      	strb	r2, [r3, #5]
    8644:	0c0a      	lsrs	r2, r1, #16
    8646:	719a      	strb	r2, [r3, #6]
    8648:	0a0a      	lsrs	r2, r1, #8
    864a:	7118      	strb	r0, [r3, #4]
    864c:	71da      	strb	r2, [r3, #7]
    864e:	7219      	strb	r1, [r3, #8]
    8650:	1c18      	adds	r0, r3, #0
    8652:	2109      	movs	r1, #9
    8654:	4b01      	ldr	r3, [pc, #4]	; (865c <write_32_to_BTLC1000+0x30>)
    8656:	4798      	blx	r3
    8658:	b005      	add	sp, #20
    865a:	bd00      	pop	{pc}
    865c:	000061f9 	.word	0x000061f9

00008660 <patch_init>:
    8660:	b5f0      	push	{r4, r5, r6, r7, lr}
    8662:	b085      	sub	sp, #20
    8664:	4935      	ldr	r1, [pc, #212]	; (873c <patch_init+0xdc>)
    8666:	2202      	movs	r2, #2
    8668:	4b35      	ldr	r3, [pc, #212]	; (8740 <patch_init+0xe0>)
    866a:	1c05      	adds	r5, r0, #0
    866c:	a803      	add	r0, sp, #12
    866e:	4798      	blx	r3
    8670:	a803      	add	r0, sp, #12
    8672:	2101      	movs	r1, #1
    8674:	4e33      	ldr	r6, [pc, #204]	; (8744 <patch_init+0xe4>)
    8676:	47b0      	blx	r6
    8678:	24fa      	movs	r4, #250	; 0xfa
    867a:	1c07      	adds	r7, r0, #0
    867c:	00e4      	lsls	r4, r4, #3
    867e:	4b32      	ldr	r3, [pc, #200]	; (8748 <patch_init+0xe8>)
    8680:	781a      	ldrb	r2, [r3, #0]
    8682:	9300      	str	r3, [sp, #0]
    8684:	2a00      	cmp	r2, #0
    8686:	d111      	bne.n	86ac <patch_init+0x4c>
    8688:	69ab      	ldr	r3, [r5, #24]
    868a:	2001      	movs	r0, #1
    868c:	4798      	blx	r3
    868e:	1c2b      	adds	r3, r5, #0
    8690:	332c      	adds	r3, #44	; 0x2c
    8692:	781b      	ldrb	r3, [r3, #0]
    8694:	2b02      	cmp	r3, #2
    8696:	d106      	bne.n	86a6 <patch_init+0x46>
    8698:	ab02      	add	r3, sp, #8
    869a:	1cd8      	adds	r0, r3, #3
    869c:	23fe      	movs	r3, #254	; 0xfe
    869e:	2101      	movs	r1, #1
    86a0:	7003      	strb	r3, [r0, #0]
    86a2:	6a2b      	ldr	r3, [r5, #32]
    86a4:	4798      	blx	r3
    86a6:	3c01      	subs	r4, #1
    86a8:	2c00      	cmp	r4, #0
    86aa:	d1e8      	bne.n	867e <patch_init+0x1e>
    86ac:	9b00      	ldr	r3, [sp, #0]
    86ae:	781b      	ldrb	r3, [r3, #0]
    86b0:	2b00      	cmp	r3, #0
    86b2:	d03f      	beq.n	8734 <patch_init+0xd4>
    86b4:	2302      	movs	r3, #2
    86b6:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
    86b8:	33ff      	adds	r3, #255	; 0xff
    86ba:	4c24      	ldr	r4, [pc, #144]	; (874c <patch_init+0xec>)
    86bc:	429a      	cmp	r2, r3
    86be:	d110      	bne.n	86e2 <patch_init+0x82>
    86c0:	4823      	ldr	r0, [pc, #140]	; (8750 <patch_init+0xf0>)
    86c2:	4924      	ldr	r1, [pc, #144]	; (8754 <patch_init+0xf4>)
    86c4:	47a0      	blx	r4
    86c6:	4824      	ldr	r0, [pc, #144]	; (8758 <patch_init+0xf8>)
    86c8:	4924      	ldr	r1, [pc, #144]	; (875c <patch_init+0xfc>)
    86ca:	47a0      	blx	r4
    86cc:	4824      	ldr	r0, [pc, #144]	; (8760 <patch_init+0x100>)
    86ce:	4925      	ldr	r1, [pc, #148]	; (8764 <patch_init+0x104>)
    86d0:	47a0      	blx	r4
    86d2:	4825      	ldr	r0, [pc, #148]	; (8768 <patch_init+0x108>)
    86d4:	2122      	movs	r1, #34	; 0x22
    86d6:	47a0      	blx	r4
    86d8:	6aab      	ldr	r3, [r5, #40]	; 0x28
    86da:	4798      	blx	r3
    86dc:	4823      	ldr	r0, [pc, #140]	; (876c <patch_init+0x10c>)
    86de:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    86e0:	4798      	blx	r3
    86e2:	352c      	adds	r5, #44	; 0x2c
    86e4:	2103      	movs	r1, #3
    86e6:	4822      	ldr	r0, [pc, #136]	; (8770 <patch_init+0x110>)
    86e8:	9501      	str	r5, [sp, #4]
    86ea:	47b0      	blx	r6
    86ec:	4821      	ldr	r0, [pc, #132]	; (8774 <patch_init+0x114>)
    86ee:	4922      	ldr	r1, [pc, #136]	; (8778 <patch_init+0x118>)
    86f0:	47a0      	blx	r4
    86f2:	4d22      	ldr	r5, [pc, #136]	; (877c <patch_init+0x11c>)
    86f4:	4e22      	ldr	r6, [pc, #136]	; (8780 <patch_init+0x120>)
    86f6:	3501      	adds	r5, #1
    86f8:	4b22      	ldr	r3, [pc, #136]	; (8784 <patch_init+0x124>)
    86fa:	4a20      	ldr	r2, [pc, #128]	; (877c <patch_init+0x11c>)
    86fc:	7829      	ldrb	r1, [r5, #0]
    86fe:	18f3      	adds	r3, r6, r3
    8700:	5cd3      	ldrb	r3, [r2, r3]
    8702:	0209      	lsls	r1, r1, #8
    8704:	4319      	orrs	r1, r3
    8706:	786b      	ldrb	r3, [r5, #1]
    8708:	1c30      	adds	r0, r6, #0
    870a:	041b      	lsls	r3, r3, #16
    870c:	4319      	orrs	r1, r3
    870e:	78ab      	ldrb	r3, [r5, #2]
    8710:	3604      	adds	r6, #4
    8712:	061b      	lsls	r3, r3, #24
    8714:	4319      	orrs	r1, r3
    8716:	47a0      	blx	r4
    8718:	4b1b      	ldr	r3, [pc, #108]	; (8788 <patch_init+0x128>)
    871a:	3504      	adds	r5, #4
    871c:	429e      	cmp	r6, r3
    871e:	d1eb      	bne.n	86f8 <patch_init+0x98>
    8720:	481a      	ldr	r0, [pc, #104]	; (878c <patch_init+0x12c>)
    8722:	2178      	movs	r1, #120	; 0x78
    8724:	47a0      	blx	r4
    8726:	4b1a      	ldr	r3, [pc, #104]	; (8790 <patch_init+0x130>)
    8728:	9801      	ldr	r0, [sp, #4]
    872a:	4798      	blx	r3
    872c:	2302      	movs	r3, #2
    872e:	9a00      	ldr	r2, [sp, #0]
    8730:	7013      	strb	r3, [r2, #0]
    8732:	e000      	b.n	8736 <patch_init+0xd6>
    8734:	27d1      	movs	r7, #209	; 0xd1
    8736:	1c38      	adds	r0, r7, #0
    8738:	b005      	add	sp, #20
    873a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    873c:	0000b2c2 	.word	0x0000b2c2
    8740:	00008a6f 	.word	0x00008a6f
    8744:	000061f9 	.word	0x000061f9
    8748:	20000e14 	.word	0x20000e14
    874c:	0000862d 	.word	0x0000862d
    8750:	4000b1a8 	.word	0x4000b1a8
    8754:	02033f3f 	.word	0x02033f3f
    8758:	4000b1ac 	.word	0x4000b1ac
    875c:	3f3f0001 	.word	0x3f3f0001
    8760:	4000b048 	.word	0x4000b048
    8764:	00111133 	.word	0x00111133
    8768:	4000b044 	.word	0x4000b044
    876c:	00005ead 	.word	0x00005ead
    8770:	0000ae30 	.word	0x0000ae30
    8774:	4000f408 	.word	0x4000f408
    8778:	00000c06 	.word	0x00000c06
    877c:	0000b2c4 	.word	0x0000b2c4
    8780:	10005184 	.word	0x10005184
    8784:	efffae7c 	.word	0xefffae7c
    8788:	10007d40 	.word	0x10007d40
    878c:	4000f044 	.word	0x4000f044
    8790:	00006a15 	.word	0x00006a15

00008794 <fifo_init>:
    8794:	b510      	push	{r4, lr}
    8796:	1e03      	subs	r3, r0, #0
    8798:	d00b      	beq.n	87b2 <fifo_init+0x1e>
    879a:	2000      	movs	r0, #0
    879c:	4282      	cmp	r2, r0
    879e:	d008      	beq.n	87b2 <fifo_init+0x1e>
    87a0:	1e54      	subs	r4, r2, #1
    87a2:	4222      	tst	r2, r4
    87a4:	d105      	bne.n	87b2 <fifo_init+0x1e>
    87a6:	6018      	str	r0, [r3, #0]
    87a8:	6119      	str	r1, [r3, #16]
    87aa:	6058      	str	r0, [r3, #4]
    87ac:	609a      	str	r2, [r3, #8]
    87ae:	60dc      	str	r4, [r3, #12]
    87b0:	3001      	adds	r0, #1
    87b2:	bd10      	pop	{r4, pc}

000087b4 <fifo_empty>:
    87b4:	6803      	ldr	r3, [r0, #0]
    87b6:	6840      	ldr	r0, [r0, #4]
    87b8:	1a18      	subs	r0, r3, r0
    87ba:	4243      	negs	r3, r0
    87bc:	4158      	adcs	r0, r3
    87be:	b2c0      	uxtb	r0, r0
    87c0:	4770      	bx	lr

000087c2 <fifo_full>:
    87c2:	6803      	ldr	r3, [r0, #0]
    87c4:	6842      	ldr	r2, [r0, #4]
    87c6:	6880      	ldr	r0, [r0, #8]
    87c8:	1a9b      	subs	r3, r3, r2
    87ca:	1a18      	subs	r0, r3, r0
    87cc:	4243      	negs	r3, r0
    87ce:	4158      	adcs	r0, r3
    87d0:	b2c0      	uxtb	r0, r0
    87d2:	4770      	bx	lr

000087d4 <fifo_get>:
    87d4:	b530      	push	{r4, r5, lr}
    87d6:	6804      	ldr	r4, [r0, #0]
    87d8:	6842      	ldr	r2, [r0, #4]
    87da:	1c03      	adds	r3, r0, #0
    87dc:	2000      	movs	r0, #0
    87de:	4294      	cmp	r4, r2
    87e0:	d008      	beq.n	87f4 <fifo_get+0x20>
    87e2:	685a      	ldr	r2, [r3, #4]
    87e4:	68dc      	ldr	r4, [r3, #12]
    87e6:	6918      	ldr	r0, [r3, #16]
    87e8:	1c55      	adds	r5, r2, #1
    87ea:	605d      	str	r5, [r3, #4]
    87ec:	4022      	ands	r2, r4
    87ee:	5c83      	ldrb	r3, [r0, r2]
    87f0:	2001      	movs	r0, #1
    87f2:	700b      	strb	r3, [r1, #0]
    87f4:	bd30      	pop	{r4, r5, pc}
	...

000087f8 <fifo_put>:
    87f8:	b538      	push	{r3, r4, r5, lr}
    87fa:	4b08      	ldr	r3, [pc, #32]	; (881c <fifo_put+0x24>)
    87fc:	1c04      	adds	r4, r0, #0
    87fe:	1c0d      	adds	r5, r1, #0
    8800:	4798      	blx	r3
    8802:	2300      	movs	r3, #0
    8804:	4298      	cmp	r0, r3
    8806:	d107      	bne.n	8818 <fifo_put+0x20>
    8808:	6823      	ldr	r3, [r4, #0]
    880a:	68e1      	ldr	r1, [r4, #12]
    880c:	6922      	ldr	r2, [r4, #16]
    880e:	1c58      	adds	r0, r3, #1
    8810:	400b      	ands	r3, r1
    8812:	6020      	str	r0, [r4, #0]
    8814:	54d5      	strb	r5, [r2, r3]
    8816:	2301      	movs	r3, #1
    8818:	1c18      	adds	r0, r3, #0
    881a:	bd38      	pop	{r3, r4, r5, pc}
    881c:	000087c3 	.word	0x000087c3

00008820 <__gnu_thumb1_case_sqi>:
    8820:	b402      	push	{r1}
    8822:	4671      	mov	r1, lr
    8824:	0849      	lsrs	r1, r1, #1
    8826:	0049      	lsls	r1, r1, #1
    8828:	5609      	ldrsb	r1, [r1, r0]
    882a:	0049      	lsls	r1, r1, #1
    882c:	448e      	add	lr, r1
    882e:	bc02      	pop	{r1}
    8830:	4770      	bx	lr
    8832:	46c0      	nop			; (mov r8, r8)

00008834 <__gnu_thumb1_case_uqi>:
    8834:	b402      	push	{r1}
    8836:	4671      	mov	r1, lr
    8838:	0849      	lsrs	r1, r1, #1
    883a:	0049      	lsls	r1, r1, #1
    883c:	5c09      	ldrb	r1, [r1, r0]
    883e:	0049      	lsls	r1, r1, #1
    8840:	448e      	add	lr, r1
    8842:	bc02      	pop	{r1}
    8844:	4770      	bx	lr
    8846:	46c0      	nop			; (mov r8, r8)

00008848 <__udivsi3>:
    8848:	2200      	movs	r2, #0
    884a:	0843      	lsrs	r3, r0, #1
    884c:	428b      	cmp	r3, r1
    884e:	d374      	bcc.n	893a <__udivsi3+0xf2>
    8850:	0903      	lsrs	r3, r0, #4
    8852:	428b      	cmp	r3, r1
    8854:	d35f      	bcc.n	8916 <__udivsi3+0xce>
    8856:	0a03      	lsrs	r3, r0, #8
    8858:	428b      	cmp	r3, r1
    885a:	d344      	bcc.n	88e6 <__udivsi3+0x9e>
    885c:	0b03      	lsrs	r3, r0, #12
    885e:	428b      	cmp	r3, r1
    8860:	d328      	bcc.n	88b4 <__udivsi3+0x6c>
    8862:	0c03      	lsrs	r3, r0, #16
    8864:	428b      	cmp	r3, r1
    8866:	d30d      	bcc.n	8884 <__udivsi3+0x3c>
    8868:	22ff      	movs	r2, #255	; 0xff
    886a:	0209      	lsls	r1, r1, #8
    886c:	ba12      	rev	r2, r2
    886e:	0c03      	lsrs	r3, r0, #16
    8870:	428b      	cmp	r3, r1
    8872:	d302      	bcc.n	887a <__udivsi3+0x32>
    8874:	1212      	asrs	r2, r2, #8
    8876:	0209      	lsls	r1, r1, #8
    8878:	d065      	beq.n	8946 <__udivsi3+0xfe>
    887a:	0b03      	lsrs	r3, r0, #12
    887c:	428b      	cmp	r3, r1
    887e:	d319      	bcc.n	88b4 <__udivsi3+0x6c>
    8880:	e000      	b.n	8884 <__udivsi3+0x3c>
    8882:	0a09      	lsrs	r1, r1, #8
    8884:	0bc3      	lsrs	r3, r0, #15
    8886:	428b      	cmp	r3, r1
    8888:	d301      	bcc.n	888e <__udivsi3+0x46>
    888a:	03cb      	lsls	r3, r1, #15
    888c:	1ac0      	subs	r0, r0, r3
    888e:	4152      	adcs	r2, r2
    8890:	0b83      	lsrs	r3, r0, #14
    8892:	428b      	cmp	r3, r1
    8894:	d301      	bcc.n	889a <__udivsi3+0x52>
    8896:	038b      	lsls	r3, r1, #14
    8898:	1ac0      	subs	r0, r0, r3
    889a:	4152      	adcs	r2, r2
    889c:	0b43      	lsrs	r3, r0, #13
    889e:	428b      	cmp	r3, r1
    88a0:	d301      	bcc.n	88a6 <__udivsi3+0x5e>
    88a2:	034b      	lsls	r3, r1, #13
    88a4:	1ac0      	subs	r0, r0, r3
    88a6:	4152      	adcs	r2, r2
    88a8:	0b03      	lsrs	r3, r0, #12
    88aa:	428b      	cmp	r3, r1
    88ac:	d301      	bcc.n	88b2 <__udivsi3+0x6a>
    88ae:	030b      	lsls	r3, r1, #12
    88b0:	1ac0      	subs	r0, r0, r3
    88b2:	4152      	adcs	r2, r2
    88b4:	0ac3      	lsrs	r3, r0, #11
    88b6:	428b      	cmp	r3, r1
    88b8:	d301      	bcc.n	88be <__udivsi3+0x76>
    88ba:	02cb      	lsls	r3, r1, #11
    88bc:	1ac0      	subs	r0, r0, r3
    88be:	4152      	adcs	r2, r2
    88c0:	0a83      	lsrs	r3, r0, #10
    88c2:	428b      	cmp	r3, r1
    88c4:	d301      	bcc.n	88ca <__udivsi3+0x82>
    88c6:	028b      	lsls	r3, r1, #10
    88c8:	1ac0      	subs	r0, r0, r3
    88ca:	4152      	adcs	r2, r2
    88cc:	0a43      	lsrs	r3, r0, #9
    88ce:	428b      	cmp	r3, r1
    88d0:	d301      	bcc.n	88d6 <__udivsi3+0x8e>
    88d2:	024b      	lsls	r3, r1, #9
    88d4:	1ac0      	subs	r0, r0, r3
    88d6:	4152      	adcs	r2, r2
    88d8:	0a03      	lsrs	r3, r0, #8
    88da:	428b      	cmp	r3, r1
    88dc:	d301      	bcc.n	88e2 <__udivsi3+0x9a>
    88de:	020b      	lsls	r3, r1, #8
    88e0:	1ac0      	subs	r0, r0, r3
    88e2:	4152      	adcs	r2, r2
    88e4:	d2cd      	bcs.n	8882 <__udivsi3+0x3a>
    88e6:	09c3      	lsrs	r3, r0, #7
    88e8:	428b      	cmp	r3, r1
    88ea:	d301      	bcc.n	88f0 <__udivsi3+0xa8>
    88ec:	01cb      	lsls	r3, r1, #7
    88ee:	1ac0      	subs	r0, r0, r3
    88f0:	4152      	adcs	r2, r2
    88f2:	0983      	lsrs	r3, r0, #6
    88f4:	428b      	cmp	r3, r1
    88f6:	d301      	bcc.n	88fc <__udivsi3+0xb4>
    88f8:	018b      	lsls	r3, r1, #6
    88fa:	1ac0      	subs	r0, r0, r3
    88fc:	4152      	adcs	r2, r2
    88fe:	0943      	lsrs	r3, r0, #5
    8900:	428b      	cmp	r3, r1
    8902:	d301      	bcc.n	8908 <__udivsi3+0xc0>
    8904:	014b      	lsls	r3, r1, #5
    8906:	1ac0      	subs	r0, r0, r3
    8908:	4152      	adcs	r2, r2
    890a:	0903      	lsrs	r3, r0, #4
    890c:	428b      	cmp	r3, r1
    890e:	d301      	bcc.n	8914 <__udivsi3+0xcc>
    8910:	010b      	lsls	r3, r1, #4
    8912:	1ac0      	subs	r0, r0, r3
    8914:	4152      	adcs	r2, r2
    8916:	08c3      	lsrs	r3, r0, #3
    8918:	428b      	cmp	r3, r1
    891a:	d301      	bcc.n	8920 <__udivsi3+0xd8>
    891c:	00cb      	lsls	r3, r1, #3
    891e:	1ac0      	subs	r0, r0, r3
    8920:	4152      	adcs	r2, r2
    8922:	0883      	lsrs	r3, r0, #2
    8924:	428b      	cmp	r3, r1
    8926:	d301      	bcc.n	892c <__udivsi3+0xe4>
    8928:	008b      	lsls	r3, r1, #2
    892a:	1ac0      	subs	r0, r0, r3
    892c:	4152      	adcs	r2, r2
    892e:	0843      	lsrs	r3, r0, #1
    8930:	428b      	cmp	r3, r1
    8932:	d301      	bcc.n	8938 <__udivsi3+0xf0>
    8934:	004b      	lsls	r3, r1, #1
    8936:	1ac0      	subs	r0, r0, r3
    8938:	4152      	adcs	r2, r2
    893a:	1a41      	subs	r1, r0, r1
    893c:	d200      	bcs.n	8940 <__udivsi3+0xf8>
    893e:	4601      	mov	r1, r0
    8940:	4152      	adcs	r2, r2
    8942:	4610      	mov	r0, r2
    8944:	4770      	bx	lr
    8946:	e7ff      	b.n	8948 <__udivsi3+0x100>
    8948:	b501      	push	{r0, lr}
    894a:	2000      	movs	r0, #0
    894c:	f000 f806 	bl	895c <__aeabi_idiv0>
    8950:	bd02      	pop	{r1, pc}
    8952:	46c0      	nop			; (mov r8, r8)

00008954 <__aeabi_uidivmod>:
    8954:	2900      	cmp	r1, #0
    8956:	d0f7      	beq.n	8948 <__udivsi3+0x100>
    8958:	e776      	b.n	8848 <__udivsi3>
    895a:	4770      	bx	lr

0000895c <__aeabi_idiv0>:
    895c:	4770      	bx	lr
    895e:	46c0      	nop			; (mov r8, r8)

00008960 <__aeabi_lmul>:
    8960:	b5f0      	push	{r4, r5, r6, r7, lr}
    8962:	46ce      	mov	lr, r9
    8964:	4647      	mov	r7, r8
    8966:	0415      	lsls	r5, r2, #16
    8968:	0c2d      	lsrs	r5, r5, #16
    896a:	002e      	movs	r6, r5
    896c:	b580      	push	{r7, lr}
    896e:	0407      	lsls	r7, r0, #16
    8970:	0c14      	lsrs	r4, r2, #16
    8972:	0c3f      	lsrs	r7, r7, #16
    8974:	4699      	mov	r9, r3
    8976:	0c03      	lsrs	r3, r0, #16
    8978:	437e      	muls	r6, r7
    897a:	435d      	muls	r5, r3
    897c:	4367      	muls	r7, r4
    897e:	4363      	muls	r3, r4
    8980:	197f      	adds	r7, r7, r5
    8982:	0c34      	lsrs	r4, r6, #16
    8984:	19e4      	adds	r4, r4, r7
    8986:	469c      	mov	ip, r3
    8988:	42a5      	cmp	r5, r4
    898a:	d903      	bls.n	8994 <__aeabi_lmul+0x34>
    898c:	2380      	movs	r3, #128	; 0x80
    898e:	025b      	lsls	r3, r3, #9
    8990:	4698      	mov	r8, r3
    8992:	44c4      	add	ip, r8
    8994:	464b      	mov	r3, r9
    8996:	4351      	muls	r1, r2
    8998:	4343      	muls	r3, r0
    899a:	0436      	lsls	r6, r6, #16
    899c:	0c36      	lsrs	r6, r6, #16
    899e:	0c25      	lsrs	r5, r4, #16
    89a0:	0424      	lsls	r4, r4, #16
    89a2:	4465      	add	r5, ip
    89a4:	19a4      	adds	r4, r4, r6
    89a6:	1859      	adds	r1, r3, r1
    89a8:	1949      	adds	r1, r1, r5
    89aa:	0020      	movs	r0, r4
    89ac:	bc0c      	pop	{r2, r3}
    89ae:	4690      	mov	r8, r2
    89b0:	4699      	mov	r9, r3
    89b2:	bdf0      	pop	{r4, r5, r6, r7, pc}

000089b4 <__ffssi2>:
    89b4:	b510      	push	{r4, lr}
    89b6:	2300      	movs	r3, #0
    89b8:	2800      	cmp	r0, #0
    89ba:	d002      	beq.n	89c2 <__ffssi2+0xe>
    89bc:	f000 f804 	bl	89c8 <__ctzsi2>
    89c0:	1c43      	adds	r3, r0, #1
    89c2:	0018      	movs	r0, r3
    89c4:	bd10      	pop	{r4, pc}
    89c6:	46c0      	nop			; (mov r8, r8)

000089c8 <__ctzsi2>:
    89c8:	4241      	negs	r1, r0
    89ca:	4008      	ands	r0, r1
    89cc:	211c      	movs	r1, #28
    89ce:	2301      	movs	r3, #1
    89d0:	041b      	lsls	r3, r3, #16
    89d2:	4298      	cmp	r0, r3
    89d4:	d301      	bcc.n	89da <__ctzsi2+0x12>
    89d6:	0c00      	lsrs	r0, r0, #16
    89d8:	3910      	subs	r1, #16
    89da:	0a1b      	lsrs	r3, r3, #8
    89dc:	4298      	cmp	r0, r3
    89de:	d301      	bcc.n	89e4 <__ctzsi2+0x1c>
    89e0:	0a00      	lsrs	r0, r0, #8
    89e2:	3908      	subs	r1, #8
    89e4:	091b      	lsrs	r3, r3, #4
    89e6:	4298      	cmp	r0, r3
    89e8:	d301      	bcc.n	89ee <__ctzsi2+0x26>
    89ea:	0900      	lsrs	r0, r0, #4
    89ec:	3904      	subs	r1, #4
    89ee:	a202      	add	r2, pc, #8	; (adr r2, 89f8 <__ctzsi2+0x30>)
    89f0:	5c10      	ldrb	r0, [r2, r0]
    89f2:	1a40      	subs	r0, r0, r1
    89f4:	4770      	bx	lr
    89f6:	46c0      	nop			; (mov r8, r8)
    89f8:	1d1d1c1b 	.word	0x1d1d1c1b
    89fc:	1e1e1e1e 	.word	0x1e1e1e1e
    8a00:	1f1f1f1f 	.word	0x1f1f1f1f
    8a04:	1f1f1f1f 	.word	0x1f1f1f1f

00008a08 <__libc_init_array>:
    8a08:	b570      	push	{r4, r5, r6, lr}
    8a0a:	2600      	movs	r6, #0
    8a0c:	4d0c      	ldr	r5, [pc, #48]	; (8a40 <__libc_init_array+0x38>)
    8a0e:	4c0d      	ldr	r4, [pc, #52]	; (8a44 <__libc_init_array+0x3c>)
    8a10:	1b64      	subs	r4, r4, r5
    8a12:	10a4      	asrs	r4, r4, #2
    8a14:	42a6      	cmp	r6, r4
    8a16:	d109      	bne.n	8a2c <__libc_init_array+0x24>
    8a18:	2600      	movs	r6, #0
    8a1a:	f005 fa7d 	bl	df18 <_init>
    8a1e:	4d0a      	ldr	r5, [pc, #40]	; (8a48 <__libc_init_array+0x40>)
    8a20:	4c0a      	ldr	r4, [pc, #40]	; (8a4c <__libc_init_array+0x44>)
    8a22:	1b64      	subs	r4, r4, r5
    8a24:	10a4      	asrs	r4, r4, #2
    8a26:	42a6      	cmp	r6, r4
    8a28:	d105      	bne.n	8a36 <__libc_init_array+0x2e>
    8a2a:	bd70      	pop	{r4, r5, r6, pc}
    8a2c:	00b3      	lsls	r3, r6, #2
    8a2e:	58eb      	ldr	r3, [r5, r3]
    8a30:	4798      	blx	r3
    8a32:	3601      	adds	r6, #1
    8a34:	e7ee      	b.n	8a14 <__libc_init_array+0xc>
    8a36:	00b3      	lsls	r3, r6, #2
    8a38:	58eb      	ldr	r3, [r5, r3]
    8a3a:	4798      	blx	r3
    8a3c:	3601      	adds	r6, #1
    8a3e:	e7f2      	b.n	8a26 <__libc_init_array+0x1e>
    8a40:	0000df24 	.word	0x0000df24
    8a44:	0000df24 	.word	0x0000df24
    8a48:	0000df24 	.word	0x0000df24
    8a4c:	0000df28 	.word	0x0000df28

00008a50 <memcmp>:
    8a50:	b530      	push	{r4, r5, lr}
    8a52:	2400      	movs	r4, #0
    8a54:	42a2      	cmp	r2, r4
    8a56:	d101      	bne.n	8a5c <memcmp+0xc>
    8a58:	2000      	movs	r0, #0
    8a5a:	e005      	b.n	8a68 <memcmp+0x18>
    8a5c:	5d03      	ldrb	r3, [r0, r4]
    8a5e:	1c65      	adds	r5, r4, #1
    8a60:	5d0c      	ldrb	r4, [r1, r4]
    8a62:	42a3      	cmp	r3, r4
    8a64:	d001      	beq.n	8a6a <memcmp+0x1a>
    8a66:	1b18      	subs	r0, r3, r4
    8a68:	bd30      	pop	{r4, r5, pc}
    8a6a:	002c      	movs	r4, r5
    8a6c:	e7f2      	b.n	8a54 <memcmp+0x4>

00008a6e <memcpy>:
    8a6e:	2300      	movs	r3, #0
    8a70:	b510      	push	{r4, lr}
    8a72:	429a      	cmp	r2, r3
    8a74:	d100      	bne.n	8a78 <memcpy+0xa>
    8a76:	bd10      	pop	{r4, pc}
    8a78:	5ccc      	ldrb	r4, [r1, r3]
    8a7a:	54c4      	strb	r4, [r0, r3]
    8a7c:	3301      	adds	r3, #1
    8a7e:	e7f8      	b.n	8a72 <memcpy+0x4>

00008a80 <memset>:
    8a80:	0003      	movs	r3, r0
    8a82:	1882      	adds	r2, r0, r2
    8a84:	4293      	cmp	r3, r2
    8a86:	d100      	bne.n	8a8a <memset+0xa>
    8a88:	4770      	bx	lr
    8a8a:	7019      	strb	r1, [r3, #0]
    8a8c:	3301      	adds	r3, #1
    8a8e:	e7f9      	b.n	8a84 <memset+0x4>

00008a90 <iprintf>:
    8a90:	b40f      	push	{r0, r1, r2, r3}
    8a92:	4b0b      	ldr	r3, [pc, #44]	; (8ac0 <iprintf+0x30>)
    8a94:	b513      	push	{r0, r1, r4, lr}
    8a96:	681c      	ldr	r4, [r3, #0]
    8a98:	2c00      	cmp	r4, #0
    8a9a:	d005      	beq.n	8aa8 <iprintf+0x18>
    8a9c:	69a3      	ldr	r3, [r4, #24]
    8a9e:	2b00      	cmp	r3, #0
    8aa0:	d102      	bne.n	8aa8 <iprintf+0x18>
    8aa2:	0020      	movs	r0, r4
    8aa4:	f000 fb86 	bl	91b4 <__sinit>
    8aa8:	ab05      	add	r3, sp, #20
    8aaa:	9a04      	ldr	r2, [sp, #16]
    8aac:	68a1      	ldr	r1, [r4, #8]
    8aae:	0020      	movs	r0, r4
    8ab0:	9301      	str	r3, [sp, #4]
    8ab2:	f000 fd77 	bl	95a4 <_vfiprintf_r>
    8ab6:	bc16      	pop	{r1, r2, r4}
    8ab8:	bc08      	pop	{r3}
    8aba:	b004      	add	sp, #16
    8abc:	4718      	bx	r3
    8abe:	46c0      	nop			; (mov r8, r8)
    8ac0:	2000007c 	.word	0x2000007c

00008ac4 <putchar>:
    8ac4:	4b08      	ldr	r3, [pc, #32]	; (8ae8 <putchar+0x24>)
    8ac6:	b570      	push	{r4, r5, r6, lr}
    8ac8:	681c      	ldr	r4, [r3, #0]
    8aca:	0005      	movs	r5, r0
    8acc:	2c00      	cmp	r4, #0
    8ace:	d005      	beq.n	8adc <putchar+0x18>
    8ad0:	69a3      	ldr	r3, [r4, #24]
    8ad2:	2b00      	cmp	r3, #0
    8ad4:	d102      	bne.n	8adc <putchar+0x18>
    8ad6:	0020      	movs	r0, r4
    8ad8:	f000 fb6c 	bl	91b4 <__sinit>
    8adc:	0029      	movs	r1, r5
    8ade:	68a2      	ldr	r2, [r4, #8]
    8ae0:	0020      	movs	r0, r4
    8ae2:	f001 f803 	bl	9aec <_putc_r>
    8ae6:	bd70      	pop	{r4, r5, r6, pc}
    8ae8:	2000007c 	.word	0x2000007c

00008aec <_puts_r>:
    8aec:	b570      	push	{r4, r5, r6, lr}
    8aee:	0005      	movs	r5, r0
    8af0:	000e      	movs	r6, r1
    8af2:	2800      	cmp	r0, #0
    8af4:	d004      	beq.n	8b00 <_puts_r+0x14>
    8af6:	6983      	ldr	r3, [r0, #24]
    8af8:	2b00      	cmp	r3, #0
    8afa:	d101      	bne.n	8b00 <_puts_r+0x14>
    8afc:	f000 fb5a 	bl	91b4 <__sinit>
    8b00:	69ab      	ldr	r3, [r5, #24]
    8b02:	68ac      	ldr	r4, [r5, #8]
    8b04:	2b00      	cmp	r3, #0
    8b06:	d102      	bne.n	8b0e <_puts_r+0x22>
    8b08:	0028      	movs	r0, r5
    8b0a:	f000 fb53 	bl	91b4 <__sinit>
    8b0e:	4b24      	ldr	r3, [pc, #144]	; (8ba0 <_puts_r+0xb4>)
    8b10:	429c      	cmp	r4, r3
    8b12:	d10f      	bne.n	8b34 <_puts_r+0x48>
    8b14:	686c      	ldr	r4, [r5, #4]
    8b16:	89a3      	ldrh	r3, [r4, #12]
    8b18:	071b      	lsls	r3, r3, #28
    8b1a:	d502      	bpl.n	8b22 <_puts_r+0x36>
    8b1c:	6923      	ldr	r3, [r4, #16]
    8b1e:	2b00      	cmp	r3, #0
    8b20:	d120      	bne.n	8b64 <_puts_r+0x78>
    8b22:	0021      	movs	r1, r4
    8b24:	0028      	movs	r0, r5
    8b26:	f000 f9c3 	bl	8eb0 <__swsetup_r>
    8b2a:	2800      	cmp	r0, #0
    8b2c:	d01a      	beq.n	8b64 <_puts_r+0x78>
    8b2e:	2001      	movs	r0, #1
    8b30:	4240      	negs	r0, r0
    8b32:	bd70      	pop	{r4, r5, r6, pc}
    8b34:	4b1b      	ldr	r3, [pc, #108]	; (8ba4 <_puts_r+0xb8>)
    8b36:	429c      	cmp	r4, r3
    8b38:	d101      	bne.n	8b3e <_puts_r+0x52>
    8b3a:	68ac      	ldr	r4, [r5, #8]
    8b3c:	e7eb      	b.n	8b16 <_puts_r+0x2a>
    8b3e:	4b1a      	ldr	r3, [pc, #104]	; (8ba8 <_puts_r+0xbc>)
    8b40:	429c      	cmp	r4, r3
    8b42:	d1e8      	bne.n	8b16 <_puts_r+0x2a>
    8b44:	68ec      	ldr	r4, [r5, #12]
    8b46:	e7e6      	b.n	8b16 <_puts_r+0x2a>
    8b48:	3b01      	subs	r3, #1
    8b4a:	3601      	adds	r6, #1
    8b4c:	60a3      	str	r3, [r4, #8]
    8b4e:	2b00      	cmp	r3, #0
    8b50:	da04      	bge.n	8b5c <_puts_r+0x70>
    8b52:	69a2      	ldr	r2, [r4, #24]
    8b54:	4293      	cmp	r3, r2
    8b56:	db16      	blt.n	8b86 <_puts_r+0x9a>
    8b58:	290a      	cmp	r1, #10
    8b5a:	d014      	beq.n	8b86 <_puts_r+0x9a>
    8b5c:	6823      	ldr	r3, [r4, #0]
    8b5e:	1c5a      	adds	r2, r3, #1
    8b60:	6022      	str	r2, [r4, #0]
    8b62:	7019      	strb	r1, [r3, #0]
    8b64:	7831      	ldrb	r1, [r6, #0]
    8b66:	68a3      	ldr	r3, [r4, #8]
    8b68:	2900      	cmp	r1, #0
    8b6a:	d1ed      	bne.n	8b48 <_puts_r+0x5c>
    8b6c:	3b01      	subs	r3, #1
    8b6e:	60a3      	str	r3, [r4, #8]
    8b70:	2b00      	cmp	r3, #0
    8b72:	da0f      	bge.n	8b94 <_puts_r+0xa8>
    8b74:	0022      	movs	r2, r4
    8b76:	310a      	adds	r1, #10
    8b78:	0028      	movs	r0, r5
    8b7a:	f000 f943 	bl	8e04 <__swbuf_r>
    8b7e:	1c43      	adds	r3, r0, #1
    8b80:	d0d5      	beq.n	8b2e <_puts_r+0x42>
    8b82:	200a      	movs	r0, #10
    8b84:	e7d5      	b.n	8b32 <_puts_r+0x46>
    8b86:	0022      	movs	r2, r4
    8b88:	0028      	movs	r0, r5
    8b8a:	f000 f93b 	bl	8e04 <__swbuf_r>
    8b8e:	1c43      	adds	r3, r0, #1
    8b90:	d1e8      	bne.n	8b64 <_puts_r+0x78>
    8b92:	e7cc      	b.n	8b2e <_puts_r+0x42>
    8b94:	200a      	movs	r0, #10
    8b96:	6823      	ldr	r3, [r4, #0]
    8b98:	1c5a      	adds	r2, r3, #1
    8b9a:	6022      	str	r2, [r4, #0]
    8b9c:	7018      	strb	r0, [r3, #0]
    8b9e:	e7c8      	b.n	8b32 <_puts_r+0x46>
    8ba0:	0000dea4 	.word	0x0000dea4
    8ba4:	0000dec4 	.word	0x0000dec4
    8ba8:	0000de84 	.word	0x0000de84

00008bac <puts>:
    8bac:	b510      	push	{r4, lr}
    8bae:	4b03      	ldr	r3, [pc, #12]	; (8bbc <puts+0x10>)
    8bb0:	0001      	movs	r1, r0
    8bb2:	6818      	ldr	r0, [r3, #0]
    8bb4:	f7ff ff9a 	bl	8aec <_puts_r>
    8bb8:	bd10      	pop	{r4, pc}
    8bba:	46c0      	nop			; (mov r8, r8)
    8bbc:	2000007c 	.word	0x2000007c

00008bc0 <rand>:
    8bc0:	4b15      	ldr	r3, [pc, #84]	; (8c18 <rand+0x58>)
    8bc2:	b510      	push	{r4, lr}
    8bc4:	681c      	ldr	r4, [r3, #0]
    8bc6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    8bc8:	2b00      	cmp	r3, #0
    8bca:	d115      	bne.n	8bf8 <rand+0x38>
    8bcc:	2018      	movs	r0, #24
    8bce:	f000 fc0f 	bl	93f0 <malloc>
    8bd2:	4b12      	ldr	r3, [pc, #72]	; (8c1c <rand+0x5c>)
    8bd4:	63a0      	str	r0, [r4, #56]	; 0x38
    8bd6:	8003      	strh	r3, [r0, #0]
    8bd8:	4b11      	ldr	r3, [pc, #68]	; (8c20 <rand+0x60>)
    8bda:	2201      	movs	r2, #1
    8bdc:	8043      	strh	r3, [r0, #2]
    8bde:	4b11      	ldr	r3, [pc, #68]	; (8c24 <rand+0x64>)
    8be0:	8083      	strh	r3, [r0, #4]
    8be2:	4b11      	ldr	r3, [pc, #68]	; (8c28 <rand+0x68>)
    8be4:	80c3      	strh	r3, [r0, #6]
    8be6:	4b11      	ldr	r3, [pc, #68]	; (8c2c <rand+0x6c>)
    8be8:	8103      	strh	r3, [r0, #8]
    8bea:	2305      	movs	r3, #5
    8bec:	8143      	strh	r3, [r0, #10]
    8bee:	3306      	adds	r3, #6
    8bf0:	8183      	strh	r3, [r0, #12]
    8bf2:	2300      	movs	r3, #0
    8bf4:	6102      	str	r2, [r0, #16]
    8bf6:	6143      	str	r3, [r0, #20]
    8bf8:	6ba4      	ldr	r4, [r4, #56]	; 0x38
    8bfa:	4a0d      	ldr	r2, [pc, #52]	; (8c30 <rand+0x70>)
    8bfc:	6920      	ldr	r0, [r4, #16]
    8bfe:	6961      	ldr	r1, [r4, #20]
    8c00:	4b0c      	ldr	r3, [pc, #48]	; (8c34 <rand+0x74>)
    8c02:	f7ff fead 	bl	8960 <__aeabi_lmul>
    8c06:	2201      	movs	r2, #1
    8c08:	2300      	movs	r3, #0
    8c0a:	1880      	adds	r0, r0, r2
    8c0c:	4159      	adcs	r1, r3
    8c0e:	6120      	str	r0, [r4, #16]
    8c10:	6161      	str	r1, [r4, #20]
    8c12:	0048      	lsls	r0, r1, #1
    8c14:	0840      	lsrs	r0, r0, #1
    8c16:	bd10      	pop	{r4, pc}
    8c18:	2000007c 	.word	0x2000007c
    8c1c:	0000330e 	.word	0x0000330e
    8c20:	ffffabcd 	.word	0xffffabcd
    8c24:	00001234 	.word	0x00001234
    8c28:	ffffe66d 	.word	0xffffe66d
    8c2c:	ffffdeec 	.word	0xffffdeec
    8c30:	4c957f2d 	.word	0x4c957f2d
    8c34:	5851f42d 	.word	0x5851f42d

00008c38 <__srget_r>:
    8c38:	b570      	push	{r4, r5, r6, lr}
    8c3a:	0005      	movs	r5, r0
    8c3c:	000c      	movs	r4, r1
    8c3e:	2800      	cmp	r0, #0
    8c40:	d004      	beq.n	8c4c <__srget_r+0x14>
    8c42:	6983      	ldr	r3, [r0, #24]
    8c44:	2b00      	cmp	r3, #0
    8c46:	d101      	bne.n	8c4c <__srget_r+0x14>
    8c48:	f000 fab4 	bl	91b4 <__sinit>
    8c4c:	4b0f      	ldr	r3, [pc, #60]	; (8c8c <__srget_r+0x54>)
    8c4e:	429c      	cmp	r4, r3
    8c50:	d10e      	bne.n	8c70 <__srget_r+0x38>
    8c52:	686c      	ldr	r4, [r5, #4]
    8c54:	0021      	movs	r1, r4
    8c56:	0028      	movs	r0, r5
    8c58:	f000 ff8a 	bl	9b70 <__srefill_r>
    8c5c:	2800      	cmp	r0, #0
    8c5e:	d111      	bne.n	8c84 <__srget_r+0x4c>
    8c60:	6863      	ldr	r3, [r4, #4]
    8c62:	3b01      	subs	r3, #1
    8c64:	6063      	str	r3, [r4, #4]
    8c66:	6823      	ldr	r3, [r4, #0]
    8c68:	1c5a      	adds	r2, r3, #1
    8c6a:	6022      	str	r2, [r4, #0]
    8c6c:	7818      	ldrb	r0, [r3, #0]
    8c6e:	bd70      	pop	{r4, r5, r6, pc}
    8c70:	4b07      	ldr	r3, [pc, #28]	; (8c90 <__srget_r+0x58>)
    8c72:	429c      	cmp	r4, r3
    8c74:	d101      	bne.n	8c7a <__srget_r+0x42>
    8c76:	68ac      	ldr	r4, [r5, #8]
    8c78:	e7ec      	b.n	8c54 <__srget_r+0x1c>
    8c7a:	4b06      	ldr	r3, [pc, #24]	; (8c94 <__srget_r+0x5c>)
    8c7c:	429c      	cmp	r4, r3
    8c7e:	d1e9      	bne.n	8c54 <__srget_r+0x1c>
    8c80:	68ec      	ldr	r4, [r5, #12]
    8c82:	e7e7      	b.n	8c54 <__srget_r+0x1c>
    8c84:	2001      	movs	r0, #1
    8c86:	4240      	negs	r0, r0
    8c88:	e7f1      	b.n	8c6e <__srget_r+0x36>
    8c8a:	46c0      	nop			; (mov r8, r8)
    8c8c:	0000dea4 	.word	0x0000dea4
    8c90:	0000dec4 	.word	0x0000dec4
    8c94:	0000de84 	.word	0x0000de84

00008c98 <setbuf>:
    8c98:	424a      	negs	r2, r1
    8c9a:	414a      	adcs	r2, r1
    8c9c:	2380      	movs	r3, #128	; 0x80
    8c9e:	b510      	push	{r4, lr}
    8ca0:	0052      	lsls	r2, r2, #1
    8ca2:	00db      	lsls	r3, r3, #3
    8ca4:	f000 f802 	bl	8cac <setvbuf>
    8ca8:	bd10      	pop	{r4, pc}
	...

00008cac <setvbuf>:
    8cac:	b5f0      	push	{r4, r5, r6, r7, lr}
    8cae:	001d      	movs	r5, r3
    8cb0:	4b4f      	ldr	r3, [pc, #316]	; (8df0 <setvbuf+0x144>)
    8cb2:	b085      	sub	sp, #20
    8cb4:	681e      	ldr	r6, [r3, #0]
    8cb6:	0004      	movs	r4, r0
    8cb8:	000f      	movs	r7, r1
    8cba:	9200      	str	r2, [sp, #0]
    8cbc:	2e00      	cmp	r6, #0
    8cbe:	d005      	beq.n	8ccc <setvbuf+0x20>
    8cc0:	69b3      	ldr	r3, [r6, #24]
    8cc2:	2b00      	cmp	r3, #0
    8cc4:	d102      	bne.n	8ccc <setvbuf+0x20>
    8cc6:	0030      	movs	r0, r6
    8cc8:	f000 fa74 	bl	91b4 <__sinit>
    8ccc:	4b49      	ldr	r3, [pc, #292]	; (8df4 <setvbuf+0x148>)
    8cce:	429c      	cmp	r4, r3
    8cd0:	d150      	bne.n	8d74 <setvbuf+0xc8>
    8cd2:	6874      	ldr	r4, [r6, #4]
    8cd4:	9b00      	ldr	r3, [sp, #0]
    8cd6:	2b02      	cmp	r3, #2
    8cd8:	d005      	beq.n	8ce6 <setvbuf+0x3a>
    8cda:	2b01      	cmp	r3, #1
    8cdc:	d900      	bls.n	8ce0 <setvbuf+0x34>
    8cde:	e084      	b.n	8dea <setvbuf+0x13e>
    8ce0:	2d00      	cmp	r5, #0
    8ce2:	da00      	bge.n	8ce6 <setvbuf+0x3a>
    8ce4:	e081      	b.n	8dea <setvbuf+0x13e>
    8ce6:	0021      	movs	r1, r4
    8ce8:	0030      	movs	r0, r6
    8cea:	f000 f9e1 	bl	90b0 <_fflush_r>
    8cee:	6b61      	ldr	r1, [r4, #52]	; 0x34
    8cf0:	2900      	cmp	r1, #0
    8cf2:	d008      	beq.n	8d06 <setvbuf+0x5a>
    8cf4:	0023      	movs	r3, r4
    8cf6:	3344      	adds	r3, #68	; 0x44
    8cf8:	4299      	cmp	r1, r3
    8cfa:	d002      	beq.n	8d02 <setvbuf+0x56>
    8cfc:	0030      	movs	r0, r6
    8cfe:	f000 fb81 	bl	9404 <_free_r>
    8d02:	2300      	movs	r3, #0
    8d04:	6363      	str	r3, [r4, #52]	; 0x34
    8d06:	2300      	movs	r3, #0
    8d08:	61a3      	str	r3, [r4, #24]
    8d0a:	6063      	str	r3, [r4, #4]
    8d0c:	89a3      	ldrh	r3, [r4, #12]
    8d0e:	061b      	lsls	r3, r3, #24
    8d10:	d503      	bpl.n	8d1a <setvbuf+0x6e>
    8d12:	6921      	ldr	r1, [r4, #16]
    8d14:	0030      	movs	r0, r6
    8d16:	f000 fb75 	bl	9404 <_free_r>
    8d1a:	89a3      	ldrh	r3, [r4, #12]
    8d1c:	4a36      	ldr	r2, [pc, #216]	; (8df8 <setvbuf+0x14c>)
    8d1e:	4013      	ands	r3, r2
    8d20:	81a3      	strh	r3, [r4, #12]
    8d22:	9b00      	ldr	r3, [sp, #0]
    8d24:	2b02      	cmp	r3, #2
    8d26:	d05a      	beq.n	8dde <setvbuf+0x132>
    8d28:	ab03      	add	r3, sp, #12
    8d2a:	aa02      	add	r2, sp, #8
    8d2c:	0021      	movs	r1, r4
    8d2e:	0030      	movs	r0, r6
    8d30:	f000 faf2 	bl	9318 <__swhatbuf_r>
    8d34:	89a3      	ldrh	r3, [r4, #12]
    8d36:	4318      	orrs	r0, r3
    8d38:	81a0      	strh	r0, [r4, #12]
    8d3a:	2d00      	cmp	r5, #0
    8d3c:	d124      	bne.n	8d88 <setvbuf+0xdc>
    8d3e:	9d02      	ldr	r5, [sp, #8]
    8d40:	0028      	movs	r0, r5
    8d42:	f000 fb55 	bl	93f0 <malloc>
    8d46:	9501      	str	r5, [sp, #4]
    8d48:	1e07      	subs	r7, r0, #0
    8d4a:	d142      	bne.n	8dd2 <setvbuf+0x126>
    8d4c:	9b02      	ldr	r3, [sp, #8]
    8d4e:	9301      	str	r3, [sp, #4]
    8d50:	42ab      	cmp	r3, r5
    8d52:	d139      	bne.n	8dc8 <setvbuf+0x11c>
    8d54:	2001      	movs	r0, #1
    8d56:	4240      	negs	r0, r0
    8d58:	2302      	movs	r3, #2
    8d5a:	89a2      	ldrh	r2, [r4, #12]
    8d5c:	4313      	orrs	r3, r2
    8d5e:	81a3      	strh	r3, [r4, #12]
    8d60:	2300      	movs	r3, #0
    8d62:	60a3      	str	r3, [r4, #8]
    8d64:	0023      	movs	r3, r4
    8d66:	3347      	adds	r3, #71	; 0x47
    8d68:	6023      	str	r3, [r4, #0]
    8d6a:	6123      	str	r3, [r4, #16]
    8d6c:	2301      	movs	r3, #1
    8d6e:	6163      	str	r3, [r4, #20]
    8d70:	b005      	add	sp, #20
    8d72:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8d74:	4b21      	ldr	r3, [pc, #132]	; (8dfc <setvbuf+0x150>)
    8d76:	429c      	cmp	r4, r3
    8d78:	d101      	bne.n	8d7e <setvbuf+0xd2>
    8d7a:	68b4      	ldr	r4, [r6, #8]
    8d7c:	e7aa      	b.n	8cd4 <setvbuf+0x28>
    8d7e:	4b20      	ldr	r3, [pc, #128]	; (8e00 <setvbuf+0x154>)
    8d80:	429c      	cmp	r4, r3
    8d82:	d1a7      	bne.n	8cd4 <setvbuf+0x28>
    8d84:	68f4      	ldr	r4, [r6, #12]
    8d86:	e7a5      	b.n	8cd4 <setvbuf+0x28>
    8d88:	2f00      	cmp	r7, #0
    8d8a:	d0d9      	beq.n	8d40 <setvbuf+0x94>
    8d8c:	69b3      	ldr	r3, [r6, #24]
    8d8e:	2b00      	cmp	r3, #0
    8d90:	d102      	bne.n	8d98 <setvbuf+0xec>
    8d92:	0030      	movs	r0, r6
    8d94:	f000 fa0e 	bl	91b4 <__sinit>
    8d98:	9b00      	ldr	r3, [sp, #0]
    8d9a:	2b01      	cmp	r3, #1
    8d9c:	d103      	bne.n	8da6 <setvbuf+0xfa>
    8d9e:	89a3      	ldrh	r3, [r4, #12]
    8da0:	9a00      	ldr	r2, [sp, #0]
    8da2:	431a      	orrs	r2, r3
    8da4:	81a2      	strh	r2, [r4, #12]
    8da6:	2008      	movs	r0, #8
    8da8:	89a3      	ldrh	r3, [r4, #12]
    8daa:	6027      	str	r7, [r4, #0]
    8dac:	6127      	str	r7, [r4, #16]
    8dae:	6165      	str	r5, [r4, #20]
    8db0:	4018      	ands	r0, r3
    8db2:	d018      	beq.n	8de6 <setvbuf+0x13a>
    8db4:	2001      	movs	r0, #1
    8db6:	4018      	ands	r0, r3
    8db8:	2300      	movs	r3, #0
    8dba:	4298      	cmp	r0, r3
    8dbc:	d011      	beq.n	8de2 <setvbuf+0x136>
    8dbe:	426d      	negs	r5, r5
    8dc0:	60a3      	str	r3, [r4, #8]
    8dc2:	61a5      	str	r5, [r4, #24]
    8dc4:	0018      	movs	r0, r3
    8dc6:	e7d3      	b.n	8d70 <setvbuf+0xc4>
    8dc8:	9801      	ldr	r0, [sp, #4]
    8dca:	f000 fb11 	bl	93f0 <malloc>
    8dce:	1e07      	subs	r7, r0, #0
    8dd0:	d0c0      	beq.n	8d54 <setvbuf+0xa8>
    8dd2:	2380      	movs	r3, #128	; 0x80
    8dd4:	89a2      	ldrh	r2, [r4, #12]
    8dd6:	9d01      	ldr	r5, [sp, #4]
    8dd8:	4313      	orrs	r3, r2
    8dda:	81a3      	strh	r3, [r4, #12]
    8ddc:	e7d6      	b.n	8d8c <setvbuf+0xe0>
    8dde:	2000      	movs	r0, #0
    8de0:	e7ba      	b.n	8d58 <setvbuf+0xac>
    8de2:	60a5      	str	r5, [r4, #8]
    8de4:	e7c4      	b.n	8d70 <setvbuf+0xc4>
    8de6:	60a0      	str	r0, [r4, #8]
    8de8:	e7c2      	b.n	8d70 <setvbuf+0xc4>
    8dea:	2001      	movs	r0, #1
    8dec:	4240      	negs	r0, r0
    8dee:	e7bf      	b.n	8d70 <setvbuf+0xc4>
    8df0:	2000007c 	.word	0x2000007c
    8df4:	0000dea4 	.word	0x0000dea4
    8df8:	fffff35c 	.word	0xfffff35c
    8dfc:	0000dec4 	.word	0x0000dec4
    8e00:	0000de84 	.word	0x0000de84

00008e04 <__swbuf_r>:
    8e04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8e06:	0005      	movs	r5, r0
    8e08:	000e      	movs	r6, r1
    8e0a:	0014      	movs	r4, r2
    8e0c:	2800      	cmp	r0, #0
    8e0e:	d004      	beq.n	8e1a <__swbuf_r+0x16>
    8e10:	6983      	ldr	r3, [r0, #24]
    8e12:	2b00      	cmp	r3, #0
    8e14:	d101      	bne.n	8e1a <__swbuf_r+0x16>
    8e16:	f000 f9cd 	bl	91b4 <__sinit>
    8e1a:	4b22      	ldr	r3, [pc, #136]	; (8ea4 <__swbuf_r+0xa0>)
    8e1c:	429c      	cmp	r4, r3
    8e1e:	d12d      	bne.n	8e7c <__swbuf_r+0x78>
    8e20:	686c      	ldr	r4, [r5, #4]
    8e22:	69a3      	ldr	r3, [r4, #24]
    8e24:	60a3      	str	r3, [r4, #8]
    8e26:	89a3      	ldrh	r3, [r4, #12]
    8e28:	071b      	lsls	r3, r3, #28
    8e2a:	d531      	bpl.n	8e90 <__swbuf_r+0x8c>
    8e2c:	6923      	ldr	r3, [r4, #16]
    8e2e:	2b00      	cmp	r3, #0
    8e30:	d02e      	beq.n	8e90 <__swbuf_r+0x8c>
    8e32:	6823      	ldr	r3, [r4, #0]
    8e34:	6922      	ldr	r2, [r4, #16]
    8e36:	b2f7      	uxtb	r7, r6
    8e38:	1a98      	subs	r0, r3, r2
    8e3a:	6963      	ldr	r3, [r4, #20]
    8e3c:	b2f6      	uxtb	r6, r6
    8e3e:	4298      	cmp	r0, r3
    8e40:	db05      	blt.n	8e4e <__swbuf_r+0x4a>
    8e42:	0021      	movs	r1, r4
    8e44:	0028      	movs	r0, r5
    8e46:	f000 f933 	bl	90b0 <_fflush_r>
    8e4a:	2800      	cmp	r0, #0
    8e4c:	d126      	bne.n	8e9c <__swbuf_r+0x98>
    8e4e:	68a3      	ldr	r3, [r4, #8]
    8e50:	3001      	adds	r0, #1
    8e52:	3b01      	subs	r3, #1
    8e54:	60a3      	str	r3, [r4, #8]
    8e56:	6823      	ldr	r3, [r4, #0]
    8e58:	1c5a      	adds	r2, r3, #1
    8e5a:	6022      	str	r2, [r4, #0]
    8e5c:	701f      	strb	r7, [r3, #0]
    8e5e:	6963      	ldr	r3, [r4, #20]
    8e60:	4298      	cmp	r0, r3
    8e62:	d004      	beq.n	8e6e <__swbuf_r+0x6a>
    8e64:	89a3      	ldrh	r3, [r4, #12]
    8e66:	07db      	lsls	r3, r3, #31
    8e68:	d51a      	bpl.n	8ea0 <__swbuf_r+0x9c>
    8e6a:	2e0a      	cmp	r6, #10
    8e6c:	d118      	bne.n	8ea0 <__swbuf_r+0x9c>
    8e6e:	0021      	movs	r1, r4
    8e70:	0028      	movs	r0, r5
    8e72:	f000 f91d 	bl	90b0 <_fflush_r>
    8e76:	2800      	cmp	r0, #0
    8e78:	d012      	beq.n	8ea0 <__swbuf_r+0x9c>
    8e7a:	e00f      	b.n	8e9c <__swbuf_r+0x98>
    8e7c:	4b0a      	ldr	r3, [pc, #40]	; (8ea8 <__swbuf_r+0xa4>)
    8e7e:	429c      	cmp	r4, r3
    8e80:	d101      	bne.n	8e86 <__swbuf_r+0x82>
    8e82:	68ac      	ldr	r4, [r5, #8]
    8e84:	e7cd      	b.n	8e22 <__swbuf_r+0x1e>
    8e86:	4b09      	ldr	r3, [pc, #36]	; (8eac <__swbuf_r+0xa8>)
    8e88:	429c      	cmp	r4, r3
    8e8a:	d1ca      	bne.n	8e22 <__swbuf_r+0x1e>
    8e8c:	68ec      	ldr	r4, [r5, #12]
    8e8e:	e7c8      	b.n	8e22 <__swbuf_r+0x1e>
    8e90:	0021      	movs	r1, r4
    8e92:	0028      	movs	r0, r5
    8e94:	f000 f80c 	bl	8eb0 <__swsetup_r>
    8e98:	2800      	cmp	r0, #0
    8e9a:	d0ca      	beq.n	8e32 <__swbuf_r+0x2e>
    8e9c:	2601      	movs	r6, #1
    8e9e:	4276      	negs	r6, r6
    8ea0:	0030      	movs	r0, r6
    8ea2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8ea4:	0000dea4 	.word	0x0000dea4
    8ea8:	0000dec4 	.word	0x0000dec4
    8eac:	0000de84 	.word	0x0000de84

00008eb0 <__swsetup_r>:
    8eb0:	4b36      	ldr	r3, [pc, #216]	; (8f8c <__swsetup_r+0xdc>)
    8eb2:	b570      	push	{r4, r5, r6, lr}
    8eb4:	681d      	ldr	r5, [r3, #0]
    8eb6:	0006      	movs	r6, r0
    8eb8:	000c      	movs	r4, r1
    8eba:	2d00      	cmp	r5, #0
    8ebc:	d005      	beq.n	8eca <__swsetup_r+0x1a>
    8ebe:	69ab      	ldr	r3, [r5, #24]
    8ec0:	2b00      	cmp	r3, #0
    8ec2:	d102      	bne.n	8eca <__swsetup_r+0x1a>
    8ec4:	0028      	movs	r0, r5
    8ec6:	f000 f975 	bl	91b4 <__sinit>
    8eca:	4b31      	ldr	r3, [pc, #196]	; (8f90 <__swsetup_r+0xe0>)
    8ecc:	429c      	cmp	r4, r3
    8ece:	d10f      	bne.n	8ef0 <__swsetup_r+0x40>
    8ed0:	686c      	ldr	r4, [r5, #4]
    8ed2:	230c      	movs	r3, #12
    8ed4:	5ee2      	ldrsh	r2, [r4, r3]
    8ed6:	b293      	uxth	r3, r2
    8ed8:	0719      	lsls	r1, r3, #28
    8eda:	d42d      	bmi.n	8f38 <__swsetup_r+0x88>
    8edc:	06d9      	lsls	r1, r3, #27
    8ede:	d411      	bmi.n	8f04 <__swsetup_r+0x54>
    8ee0:	2309      	movs	r3, #9
    8ee2:	2001      	movs	r0, #1
    8ee4:	6033      	str	r3, [r6, #0]
    8ee6:	3337      	adds	r3, #55	; 0x37
    8ee8:	4313      	orrs	r3, r2
    8eea:	81a3      	strh	r3, [r4, #12]
    8eec:	4240      	negs	r0, r0
    8eee:	bd70      	pop	{r4, r5, r6, pc}
    8ef0:	4b28      	ldr	r3, [pc, #160]	; (8f94 <__swsetup_r+0xe4>)
    8ef2:	429c      	cmp	r4, r3
    8ef4:	d101      	bne.n	8efa <__swsetup_r+0x4a>
    8ef6:	68ac      	ldr	r4, [r5, #8]
    8ef8:	e7eb      	b.n	8ed2 <__swsetup_r+0x22>
    8efa:	4b27      	ldr	r3, [pc, #156]	; (8f98 <__swsetup_r+0xe8>)
    8efc:	429c      	cmp	r4, r3
    8efe:	d1e8      	bne.n	8ed2 <__swsetup_r+0x22>
    8f00:	68ec      	ldr	r4, [r5, #12]
    8f02:	e7e6      	b.n	8ed2 <__swsetup_r+0x22>
    8f04:	075b      	lsls	r3, r3, #29
    8f06:	d513      	bpl.n	8f30 <__swsetup_r+0x80>
    8f08:	6b61      	ldr	r1, [r4, #52]	; 0x34
    8f0a:	2900      	cmp	r1, #0
    8f0c:	d008      	beq.n	8f20 <__swsetup_r+0x70>
    8f0e:	0023      	movs	r3, r4
    8f10:	3344      	adds	r3, #68	; 0x44
    8f12:	4299      	cmp	r1, r3
    8f14:	d002      	beq.n	8f1c <__swsetup_r+0x6c>
    8f16:	0030      	movs	r0, r6
    8f18:	f000 fa74 	bl	9404 <_free_r>
    8f1c:	2300      	movs	r3, #0
    8f1e:	6363      	str	r3, [r4, #52]	; 0x34
    8f20:	2224      	movs	r2, #36	; 0x24
    8f22:	89a3      	ldrh	r3, [r4, #12]
    8f24:	4393      	bics	r3, r2
    8f26:	81a3      	strh	r3, [r4, #12]
    8f28:	2300      	movs	r3, #0
    8f2a:	6063      	str	r3, [r4, #4]
    8f2c:	6923      	ldr	r3, [r4, #16]
    8f2e:	6023      	str	r3, [r4, #0]
    8f30:	2308      	movs	r3, #8
    8f32:	89a2      	ldrh	r2, [r4, #12]
    8f34:	4313      	orrs	r3, r2
    8f36:	81a3      	strh	r3, [r4, #12]
    8f38:	6923      	ldr	r3, [r4, #16]
    8f3a:	2b00      	cmp	r3, #0
    8f3c:	d10b      	bne.n	8f56 <__swsetup_r+0xa6>
    8f3e:	21a0      	movs	r1, #160	; 0xa0
    8f40:	2280      	movs	r2, #128	; 0x80
    8f42:	89a3      	ldrh	r3, [r4, #12]
    8f44:	0089      	lsls	r1, r1, #2
    8f46:	0092      	lsls	r2, r2, #2
    8f48:	400b      	ands	r3, r1
    8f4a:	4293      	cmp	r3, r2
    8f4c:	d003      	beq.n	8f56 <__swsetup_r+0xa6>
    8f4e:	0021      	movs	r1, r4
    8f50:	0030      	movs	r0, r6
    8f52:	f000 fa09 	bl	9368 <__smakebuf_r>
    8f56:	2301      	movs	r3, #1
    8f58:	89a2      	ldrh	r2, [r4, #12]
    8f5a:	4013      	ands	r3, r2
    8f5c:	d011      	beq.n	8f82 <__swsetup_r+0xd2>
    8f5e:	2300      	movs	r3, #0
    8f60:	60a3      	str	r3, [r4, #8]
    8f62:	6963      	ldr	r3, [r4, #20]
    8f64:	425b      	negs	r3, r3
    8f66:	61a3      	str	r3, [r4, #24]
    8f68:	2000      	movs	r0, #0
    8f6a:	6923      	ldr	r3, [r4, #16]
    8f6c:	4283      	cmp	r3, r0
    8f6e:	d1be      	bne.n	8eee <__swsetup_r+0x3e>
    8f70:	230c      	movs	r3, #12
    8f72:	5ee2      	ldrsh	r2, [r4, r3]
    8f74:	0613      	lsls	r3, r2, #24
    8f76:	d5ba      	bpl.n	8eee <__swsetup_r+0x3e>
    8f78:	2340      	movs	r3, #64	; 0x40
    8f7a:	4313      	orrs	r3, r2
    8f7c:	81a3      	strh	r3, [r4, #12]
    8f7e:	3801      	subs	r0, #1
    8f80:	e7b5      	b.n	8eee <__swsetup_r+0x3e>
    8f82:	0792      	lsls	r2, r2, #30
    8f84:	d400      	bmi.n	8f88 <__swsetup_r+0xd8>
    8f86:	6963      	ldr	r3, [r4, #20]
    8f88:	60a3      	str	r3, [r4, #8]
    8f8a:	e7ed      	b.n	8f68 <__swsetup_r+0xb8>
    8f8c:	2000007c 	.word	0x2000007c
    8f90:	0000dea4 	.word	0x0000dea4
    8f94:	0000dec4 	.word	0x0000dec4
    8f98:	0000de84 	.word	0x0000de84

00008f9c <__sflush_r>:
    8f9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8f9e:	898a      	ldrh	r2, [r1, #12]
    8fa0:	0005      	movs	r5, r0
    8fa2:	000c      	movs	r4, r1
    8fa4:	0713      	lsls	r3, r2, #28
    8fa6:	d460      	bmi.n	906a <__sflush_r+0xce>
    8fa8:	684b      	ldr	r3, [r1, #4]
    8faa:	2b00      	cmp	r3, #0
    8fac:	dc04      	bgt.n	8fb8 <__sflush_r+0x1c>
    8fae:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    8fb0:	2b00      	cmp	r3, #0
    8fb2:	dc01      	bgt.n	8fb8 <__sflush_r+0x1c>
    8fb4:	2000      	movs	r0, #0
    8fb6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    8fb8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    8fba:	2f00      	cmp	r7, #0
    8fbc:	d0fa      	beq.n	8fb4 <__sflush_r+0x18>
    8fbe:	2300      	movs	r3, #0
    8fc0:	682e      	ldr	r6, [r5, #0]
    8fc2:	602b      	str	r3, [r5, #0]
    8fc4:	2380      	movs	r3, #128	; 0x80
    8fc6:	015b      	lsls	r3, r3, #5
    8fc8:	401a      	ands	r2, r3
    8fca:	d034      	beq.n	9036 <__sflush_r+0x9a>
    8fcc:	6d60      	ldr	r0, [r4, #84]	; 0x54
    8fce:	89a3      	ldrh	r3, [r4, #12]
    8fd0:	075b      	lsls	r3, r3, #29
    8fd2:	d506      	bpl.n	8fe2 <__sflush_r+0x46>
    8fd4:	6863      	ldr	r3, [r4, #4]
    8fd6:	1ac0      	subs	r0, r0, r3
    8fd8:	6b63      	ldr	r3, [r4, #52]	; 0x34
    8fda:	2b00      	cmp	r3, #0
    8fdc:	d001      	beq.n	8fe2 <__sflush_r+0x46>
    8fde:	6c23      	ldr	r3, [r4, #64]	; 0x40
    8fe0:	1ac0      	subs	r0, r0, r3
    8fe2:	0002      	movs	r2, r0
    8fe4:	6a21      	ldr	r1, [r4, #32]
    8fe6:	2300      	movs	r3, #0
    8fe8:	0028      	movs	r0, r5
    8fea:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    8fec:	47b8      	blx	r7
    8fee:	89a1      	ldrh	r1, [r4, #12]
    8ff0:	1c43      	adds	r3, r0, #1
    8ff2:	d106      	bne.n	9002 <__sflush_r+0x66>
    8ff4:	682b      	ldr	r3, [r5, #0]
    8ff6:	2b1d      	cmp	r3, #29
    8ff8:	d831      	bhi.n	905e <__sflush_r+0xc2>
    8ffa:	4a2c      	ldr	r2, [pc, #176]	; (90ac <__sflush_r+0x110>)
    8ffc:	40da      	lsrs	r2, r3
    8ffe:	07d3      	lsls	r3, r2, #31
    9000:	d52d      	bpl.n	905e <__sflush_r+0xc2>
    9002:	2300      	movs	r3, #0
    9004:	6063      	str	r3, [r4, #4]
    9006:	6923      	ldr	r3, [r4, #16]
    9008:	6023      	str	r3, [r4, #0]
    900a:	04cb      	lsls	r3, r1, #19
    900c:	d505      	bpl.n	901a <__sflush_r+0x7e>
    900e:	1c43      	adds	r3, r0, #1
    9010:	d102      	bne.n	9018 <__sflush_r+0x7c>
    9012:	682b      	ldr	r3, [r5, #0]
    9014:	2b00      	cmp	r3, #0
    9016:	d100      	bne.n	901a <__sflush_r+0x7e>
    9018:	6560      	str	r0, [r4, #84]	; 0x54
    901a:	6b61      	ldr	r1, [r4, #52]	; 0x34
    901c:	602e      	str	r6, [r5, #0]
    901e:	2900      	cmp	r1, #0
    9020:	d0c8      	beq.n	8fb4 <__sflush_r+0x18>
    9022:	0023      	movs	r3, r4
    9024:	3344      	adds	r3, #68	; 0x44
    9026:	4299      	cmp	r1, r3
    9028:	d002      	beq.n	9030 <__sflush_r+0x94>
    902a:	0028      	movs	r0, r5
    902c:	f000 f9ea 	bl	9404 <_free_r>
    9030:	2000      	movs	r0, #0
    9032:	6360      	str	r0, [r4, #52]	; 0x34
    9034:	e7bf      	b.n	8fb6 <__sflush_r+0x1a>
    9036:	2301      	movs	r3, #1
    9038:	6a21      	ldr	r1, [r4, #32]
    903a:	0028      	movs	r0, r5
    903c:	47b8      	blx	r7
    903e:	1c43      	adds	r3, r0, #1
    9040:	d1c5      	bne.n	8fce <__sflush_r+0x32>
    9042:	682b      	ldr	r3, [r5, #0]
    9044:	2b00      	cmp	r3, #0
    9046:	d0c2      	beq.n	8fce <__sflush_r+0x32>
    9048:	2b1d      	cmp	r3, #29
    904a:	d001      	beq.n	9050 <__sflush_r+0xb4>
    904c:	2b16      	cmp	r3, #22
    904e:	d101      	bne.n	9054 <__sflush_r+0xb8>
    9050:	602e      	str	r6, [r5, #0]
    9052:	e7af      	b.n	8fb4 <__sflush_r+0x18>
    9054:	2340      	movs	r3, #64	; 0x40
    9056:	89a2      	ldrh	r2, [r4, #12]
    9058:	4313      	orrs	r3, r2
    905a:	81a3      	strh	r3, [r4, #12]
    905c:	e7ab      	b.n	8fb6 <__sflush_r+0x1a>
    905e:	2340      	movs	r3, #64	; 0x40
    9060:	430b      	orrs	r3, r1
    9062:	2001      	movs	r0, #1
    9064:	81a3      	strh	r3, [r4, #12]
    9066:	4240      	negs	r0, r0
    9068:	e7a5      	b.n	8fb6 <__sflush_r+0x1a>
    906a:	690f      	ldr	r7, [r1, #16]
    906c:	2f00      	cmp	r7, #0
    906e:	d0a1      	beq.n	8fb4 <__sflush_r+0x18>
    9070:	680b      	ldr	r3, [r1, #0]
    9072:	600f      	str	r7, [r1, #0]
    9074:	1bdb      	subs	r3, r3, r7
    9076:	9301      	str	r3, [sp, #4]
    9078:	2300      	movs	r3, #0
    907a:	0792      	lsls	r2, r2, #30
    907c:	d100      	bne.n	9080 <__sflush_r+0xe4>
    907e:	694b      	ldr	r3, [r1, #20]
    9080:	60a3      	str	r3, [r4, #8]
    9082:	9b01      	ldr	r3, [sp, #4]
    9084:	2b00      	cmp	r3, #0
    9086:	dc00      	bgt.n	908a <__sflush_r+0xee>
    9088:	e794      	b.n	8fb4 <__sflush_r+0x18>
    908a:	9b01      	ldr	r3, [sp, #4]
    908c:	003a      	movs	r2, r7
    908e:	6a21      	ldr	r1, [r4, #32]
    9090:	0028      	movs	r0, r5
    9092:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    9094:	47b0      	blx	r6
    9096:	2800      	cmp	r0, #0
    9098:	dc03      	bgt.n	90a2 <__sflush_r+0x106>
    909a:	2340      	movs	r3, #64	; 0x40
    909c:	89a2      	ldrh	r2, [r4, #12]
    909e:	4313      	orrs	r3, r2
    90a0:	e7df      	b.n	9062 <__sflush_r+0xc6>
    90a2:	9b01      	ldr	r3, [sp, #4]
    90a4:	183f      	adds	r7, r7, r0
    90a6:	1a1b      	subs	r3, r3, r0
    90a8:	9301      	str	r3, [sp, #4]
    90aa:	e7ea      	b.n	9082 <__sflush_r+0xe6>
    90ac:	20400001 	.word	0x20400001

000090b0 <_fflush_r>:
    90b0:	690b      	ldr	r3, [r1, #16]
    90b2:	b570      	push	{r4, r5, r6, lr}
    90b4:	0005      	movs	r5, r0
    90b6:	000c      	movs	r4, r1
    90b8:	2b00      	cmp	r3, #0
    90ba:	d101      	bne.n	90c0 <_fflush_r+0x10>
    90bc:	2000      	movs	r0, #0
    90be:	bd70      	pop	{r4, r5, r6, pc}
    90c0:	2800      	cmp	r0, #0
    90c2:	d004      	beq.n	90ce <_fflush_r+0x1e>
    90c4:	6983      	ldr	r3, [r0, #24]
    90c6:	2b00      	cmp	r3, #0
    90c8:	d101      	bne.n	90ce <_fflush_r+0x1e>
    90ca:	f000 f873 	bl	91b4 <__sinit>
    90ce:	4b0b      	ldr	r3, [pc, #44]	; (90fc <_fflush_r+0x4c>)
    90d0:	429c      	cmp	r4, r3
    90d2:	d109      	bne.n	90e8 <_fflush_r+0x38>
    90d4:	686c      	ldr	r4, [r5, #4]
    90d6:	220c      	movs	r2, #12
    90d8:	5ea3      	ldrsh	r3, [r4, r2]
    90da:	2b00      	cmp	r3, #0
    90dc:	d0ee      	beq.n	90bc <_fflush_r+0xc>
    90de:	0021      	movs	r1, r4
    90e0:	0028      	movs	r0, r5
    90e2:	f7ff ff5b 	bl	8f9c <__sflush_r>
    90e6:	e7ea      	b.n	90be <_fflush_r+0xe>
    90e8:	4b05      	ldr	r3, [pc, #20]	; (9100 <_fflush_r+0x50>)
    90ea:	429c      	cmp	r4, r3
    90ec:	d101      	bne.n	90f2 <_fflush_r+0x42>
    90ee:	68ac      	ldr	r4, [r5, #8]
    90f0:	e7f1      	b.n	90d6 <_fflush_r+0x26>
    90f2:	4b04      	ldr	r3, [pc, #16]	; (9104 <_fflush_r+0x54>)
    90f4:	429c      	cmp	r4, r3
    90f6:	d1ee      	bne.n	90d6 <_fflush_r+0x26>
    90f8:	68ec      	ldr	r4, [r5, #12]
    90fa:	e7ec      	b.n	90d6 <_fflush_r+0x26>
    90fc:	0000dea4 	.word	0x0000dea4
    9100:	0000dec4 	.word	0x0000dec4
    9104:	0000de84 	.word	0x0000de84

00009108 <fflush>:
    9108:	b510      	push	{r4, lr}
    910a:	1e01      	subs	r1, r0, #0
    910c:	d105      	bne.n	911a <fflush+0x12>
    910e:	4b05      	ldr	r3, [pc, #20]	; (9124 <fflush+0x1c>)
    9110:	4905      	ldr	r1, [pc, #20]	; (9128 <fflush+0x20>)
    9112:	6818      	ldr	r0, [r3, #0]
    9114:	f000 f8de 	bl	92d4 <_fwalk_reent>
    9118:	bd10      	pop	{r4, pc}
    911a:	4b04      	ldr	r3, [pc, #16]	; (912c <fflush+0x24>)
    911c:	6818      	ldr	r0, [r3, #0]
    911e:	f7ff ffc7 	bl	90b0 <_fflush_r>
    9122:	e7f9      	b.n	9118 <fflush+0x10>
    9124:	0000de80 	.word	0x0000de80
    9128:	000090b1 	.word	0x000090b1
    912c:	2000007c 	.word	0x2000007c

00009130 <_cleanup_r>:
    9130:	b510      	push	{r4, lr}
    9132:	4902      	ldr	r1, [pc, #8]	; (913c <_cleanup_r+0xc>)
    9134:	f000 f8ce 	bl	92d4 <_fwalk_reent>
    9138:	bd10      	pop	{r4, pc}
    913a:	46c0      	nop			; (mov r8, r8)
    913c:	000090b1 	.word	0x000090b1

00009140 <std.isra.0>:
    9140:	2300      	movs	r3, #0
    9142:	b510      	push	{r4, lr}
    9144:	0004      	movs	r4, r0
    9146:	6003      	str	r3, [r0, #0]
    9148:	6043      	str	r3, [r0, #4]
    914a:	6083      	str	r3, [r0, #8]
    914c:	8181      	strh	r1, [r0, #12]
    914e:	6643      	str	r3, [r0, #100]	; 0x64
    9150:	81c2      	strh	r2, [r0, #14]
    9152:	6103      	str	r3, [r0, #16]
    9154:	6143      	str	r3, [r0, #20]
    9156:	6183      	str	r3, [r0, #24]
    9158:	0019      	movs	r1, r3
    915a:	2208      	movs	r2, #8
    915c:	305c      	adds	r0, #92	; 0x5c
    915e:	f7ff fc8f 	bl	8a80 <memset>
    9162:	4b05      	ldr	r3, [pc, #20]	; (9178 <std.isra.0+0x38>)
    9164:	6224      	str	r4, [r4, #32]
    9166:	6263      	str	r3, [r4, #36]	; 0x24
    9168:	4b04      	ldr	r3, [pc, #16]	; (917c <std.isra.0+0x3c>)
    916a:	62a3      	str	r3, [r4, #40]	; 0x28
    916c:	4b04      	ldr	r3, [pc, #16]	; (9180 <std.isra.0+0x40>)
    916e:	62e3      	str	r3, [r4, #44]	; 0x2c
    9170:	4b04      	ldr	r3, [pc, #16]	; (9184 <std.isra.0+0x44>)
    9172:	6323      	str	r3, [r4, #48]	; 0x30
    9174:	bd10      	pop	{r4, pc}
    9176:	46c0      	nop			; (mov r8, r8)
    9178:	00009cb5 	.word	0x00009cb5
    917c:	00009cdd 	.word	0x00009cdd
    9180:	00009d15 	.word	0x00009d15
    9184:	00009d41 	.word	0x00009d41

00009188 <__sfmoreglue>:
    9188:	b570      	push	{r4, r5, r6, lr}
    918a:	2568      	movs	r5, #104	; 0x68
    918c:	1e4a      	subs	r2, r1, #1
    918e:	4355      	muls	r5, r2
    9190:	000e      	movs	r6, r1
    9192:	0029      	movs	r1, r5
    9194:	3174      	adds	r1, #116	; 0x74
    9196:	f000 f97f 	bl	9498 <_malloc_r>
    919a:	1e04      	subs	r4, r0, #0
    919c:	d008      	beq.n	91b0 <__sfmoreglue+0x28>
    919e:	2100      	movs	r1, #0
    91a0:	002a      	movs	r2, r5
    91a2:	6001      	str	r1, [r0, #0]
    91a4:	6046      	str	r6, [r0, #4]
    91a6:	300c      	adds	r0, #12
    91a8:	60a0      	str	r0, [r4, #8]
    91aa:	3268      	adds	r2, #104	; 0x68
    91ac:	f7ff fc68 	bl	8a80 <memset>
    91b0:	0020      	movs	r0, r4
    91b2:	bd70      	pop	{r4, r5, r6, pc}

000091b4 <__sinit>:
    91b4:	6983      	ldr	r3, [r0, #24]
    91b6:	b513      	push	{r0, r1, r4, lr}
    91b8:	0004      	movs	r4, r0
    91ba:	2b00      	cmp	r3, #0
    91bc:	d128      	bne.n	9210 <__sinit+0x5c>
    91be:	6483      	str	r3, [r0, #72]	; 0x48
    91c0:	64c3      	str	r3, [r0, #76]	; 0x4c
    91c2:	6503      	str	r3, [r0, #80]	; 0x50
    91c4:	4b13      	ldr	r3, [pc, #76]	; (9214 <__sinit+0x60>)
    91c6:	4a14      	ldr	r2, [pc, #80]	; (9218 <__sinit+0x64>)
    91c8:	681b      	ldr	r3, [r3, #0]
    91ca:	6282      	str	r2, [r0, #40]	; 0x28
    91cc:	9301      	str	r3, [sp, #4]
    91ce:	4298      	cmp	r0, r3
    91d0:	d101      	bne.n	91d6 <__sinit+0x22>
    91d2:	2301      	movs	r3, #1
    91d4:	6183      	str	r3, [r0, #24]
    91d6:	0020      	movs	r0, r4
    91d8:	f000 f820 	bl	921c <__sfp>
    91dc:	6060      	str	r0, [r4, #4]
    91de:	0020      	movs	r0, r4
    91e0:	f000 f81c 	bl	921c <__sfp>
    91e4:	60a0      	str	r0, [r4, #8]
    91e6:	0020      	movs	r0, r4
    91e8:	f000 f818 	bl	921c <__sfp>
    91ec:	2200      	movs	r2, #0
    91ee:	60e0      	str	r0, [r4, #12]
    91f0:	2104      	movs	r1, #4
    91f2:	6860      	ldr	r0, [r4, #4]
    91f4:	f7ff ffa4 	bl	9140 <std.isra.0>
    91f8:	2201      	movs	r2, #1
    91fa:	2109      	movs	r1, #9
    91fc:	68a0      	ldr	r0, [r4, #8]
    91fe:	f7ff ff9f 	bl	9140 <std.isra.0>
    9202:	2202      	movs	r2, #2
    9204:	2112      	movs	r1, #18
    9206:	68e0      	ldr	r0, [r4, #12]
    9208:	f7ff ff9a 	bl	9140 <std.isra.0>
    920c:	2301      	movs	r3, #1
    920e:	61a3      	str	r3, [r4, #24]
    9210:	bd13      	pop	{r0, r1, r4, pc}
    9212:	46c0      	nop			; (mov r8, r8)
    9214:	0000de80 	.word	0x0000de80
    9218:	00009131 	.word	0x00009131

0000921c <__sfp>:
    921c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    921e:	4b1e      	ldr	r3, [pc, #120]	; (9298 <__sfp+0x7c>)
    9220:	0007      	movs	r7, r0
    9222:	681e      	ldr	r6, [r3, #0]
    9224:	69b3      	ldr	r3, [r6, #24]
    9226:	2b00      	cmp	r3, #0
    9228:	d102      	bne.n	9230 <__sfp+0x14>
    922a:	0030      	movs	r0, r6
    922c:	f7ff ffc2 	bl	91b4 <__sinit>
    9230:	3648      	adds	r6, #72	; 0x48
    9232:	68b4      	ldr	r4, [r6, #8]
    9234:	6873      	ldr	r3, [r6, #4]
    9236:	3b01      	subs	r3, #1
    9238:	d504      	bpl.n	9244 <__sfp+0x28>
    923a:	6833      	ldr	r3, [r6, #0]
    923c:	2b00      	cmp	r3, #0
    923e:	d007      	beq.n	9250 <__sfp+0x34>
    9240:	6836      	ldr	r6, [r6, #0]
    9242:	e7f6      	b.n	9232 <__sfp+0x16>
    9244:	220c      	movs	r2, #12
    9246:	5ea5      	ldrsh	r5, [r4, r2]
    9248:	2d00      	cmp	r5, #0
    924a:	d00d      	beq.n	9268 <__sfp+0x4c>
    924c:	3468      	adds	r4, #104	; 0x68
    924e:	e7f2      	b.n	9236 <__sfp+0x1a>
    9250:	2104      	movs	r1, #4
    9252:	0038      	movs	r0, r7
    9254:	f7ff ff98 	bl	9188 <__sfmoreglue>
    9258:	6030      	str	r0, [r6, #0]
    925a:	2800      	cmp	r0, #0
    925c:	d1f0      	bne.n	9240 <__sfp+0x24>
    925e:	230c      	movs	r3, #12
    9260:	0004      	movs	r4, r0
    9262:	603b      	str	r3, [r7, #0]
    9264:	0020      	movs	r0, r4
    9266:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9268:	2301      	movs	r3, #1
    926a:	0020      	movs	r0, r4
    926c:	425b      	negs	r3, r3
    926e:	81e3      	strh	r3, [r4, #14]
    9270:	3302      	adds	r3, #2
    9272:	81a3      	strh	r3, [r4, #12]
    9274:	6665      	str	r5, [r4, #100]	; 0x64
    9276:	6025      	str	r5, [r4, #0]
    9278:	60a5      	str	r5, [r4, #8]
    927a:	6065      	str	r5, [r4, #4]
    927c:	6125      	str	r5, [r4, #16]
    927e:	6165      	str	r5, [r4, #20]
    9280:	61a5      	str	r5, [r4, #24]
    9282:	2208      	movs	r2, #8
    9284:	0029      	movs	r1, r5
    9286:	305c      	adds	r0, #92	; 0x5c
    9288:	f7ff fbfa 	bl	8a80 <memset>
    928c:	6365      	str	r5, [r4, #52]	; 0x34
    928e:	63a5      	str	r5, [r4, #56]	; 0x38
    9290:	64a5      	str	r5, [r4, #72]	; 0x48
    9292:	64e5      	str	r5, [r4, #76]	; 0x4c
    9294:	e7e6      	b.n	9264 <__sfp+0x48>
    9296:	46c0      	nop			; (mov r8, r8)
    9298:	0000de80 	.word	0x0000de80

0000929c <_fwalk>:
    929c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    929e:	3048      	adds	r0, #72	; 0x48
    92a0:	0004      	movs	r4, r0
    92a2:	2600      	movs	r6, #0
    92a4:	9101      	str	r1, [sp, #4]
    92a6:	2c00      	cmp	r4, #0
    92a8:	d101      	bne.n	92ae <_fwalk+0x12>
    92aa:	0030      	movs	r0, r6
    92ac:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    92ae:	68a5      	ldr	r5, [r4, #8]
    92b0:	6867      	ldr	r7, [r4, #4]
    92b2:	3f01      	subs	r7, #1
    92b4:	d501      	bpl.n	92ba <_fwalk+0x1e>
    92b6:	6824      	ldr	r4, [r4, #0]
    92b8:	e7f5      	b.n	92a6 <_fwalk+0xa>
    92ba:	89ab      	ldrh	r3, [r5, #12]
    92bc:	2b01      	cmp	r3, #1
    92be:	d907      	bls.n	92d0 <_fwalk+0x34>
    92c0:	220e      	movs	r2, #14
    92c2:	5eab      	ldrsh	r3, [r5, r2]
    92c4:	3301      	adds	r3, #1
    92c6:	d003      	beq.n	92d0 <_fwalk+0x34>
    92c8:	0028      	movs	r0, r5
    92ca:	9b01      	ldr	r3, [sp, #4]
    92cc:	4798      	blx	r3
    92ce:	4306      	orrs	r6, r0
    92d0:	3568      	adds	r5, #104	; 0x68
    92d2:	e7ee      	b.n	92b2 <_fwalk+0x16>

000092d4 <_fwalk_reent>:
    92d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    92d6:	0004      	movs	r4, r0
    92d8:	0007      	movs	r7, r0
    92da:	2600      	movs	r6, #0
    92dc:	9101      	str	r1, [sp, #4]
    92de:	3448      	adds	r4, #72	; 0x48
    92e0:	2c00      	cmp	r4, #0
    92e2:	d101      	bne.n	92e8 <_fwalk_reent+0x14>
    92e4:	0030      	movs	r0, r6
    92e6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    92e8:	6863      	ldr	r3, [r4, #4]
    92ea:	68a5      	ldr	r5, [r4, #8]
    92ec:	9300      	str	r3, [sp, #0]
    92ee:	9b00      	ldr	r3, [sp, #0]
    92f0:	3b01      	subs	r3, #1
    92f2:	9300      	str	r3, [sp, #0]
    92f4:	d501      	bpl.n	92fa <_fwalk_reent+0x26>
    92f6:	6824      	ldr	r4, [r4, #0]
    92f8:	e7f2      	b.n	92e0 <_fwalk_reent+0xc>
    92fa:	89ab      	ldrh	r3, [r5, #12]
    92fc:	2b01      	cmp	r3, #1
    92fe:	d908      	bls.n	9312 <_fwalk_reent+0x3e>
    9300:	220e      	movs	r2, #14
    9302:	5eab      	ldrsh	r3, [r5, r2]
    9304:	3301      	adds	r3, #1
    9306:	d004      	beq.n	9312 <_fwalk_reent+0x3e>
    9308:	0029      	movs	r1, r5
    930a:	0038      	movs	r0, r7
    930c:	9b01      	ldr	r3, [sp, #4]
    930e:	4798      	blx	r3
    9310:	4306      	orrs	r6, r0
    9312:	3568      	adds	r5, #104	; 0x68
    9314:	e7eb      	b.n	92ee <_fwalk_reent+0x1a>
	...

00009318 <__swhatbuf_r>:
    9318:	b570      	push	{r4, r5, r6, lr}
    931a:	000e      	movs	r6, r1
    931c:	001d      	movs	r5, r3
    931e:	230e      	movs	r3, #14
    9320:	5ec9      	ldrsh	r1, [r1, r3]
    9322:	b090      	sub	sp, #64	; 0x40
    9324:	0014      	movs	r4, r2
    9326:	2900      	cmp	r1, #0
    9328:	da07      	bge.n	933a <__swhatbuf_r+0x22>
    932a:	2300      	movs	r3, #0
    932c:	602b      	str	r3, [r5, #0]
    932e:	89b3      	ldrh	r3, [r6, #12]
    9330:	061b      	lsls	r3, r3, #24
    9332:	d411      	bmi.n	9358 <__swhatbuf_r+0x40>
    9334:	2380      	movs	r3, #128	; 0x80
    9336:	00db      	lsls	r3, r3, #3
    9338:	e00f      	b.n	935a <__swhatbuf_r+0x42>
    933a:	aa01      	add	r2, sp, #4
    933c:	f000 fd2c 	bl	9d98 <_fstat_r>
    9340:	2800      	cmp	r0, #0
    9342:	dbf2      	blt.n	932a <__swhatbuf_r+0x12>
    9344:	22f0      	movs	r2, #240	; 0xf0
    9346:	9b02      	ldr	r3, [sp, #8]
    9348:	0212      	lsls	r2, r2, #8
    934a:	4013      	ands	r3, r2
    934c:	4a05      	ldr	r2, [pc, #20]	; (9364 <__swhatbuf_r+0x4c>)
    934e:	189b      	adds	r3, r3, r2
    9350:	425a      	negs	r2, r3
    9352:	4153      	adcs	r3, r2
    9354:	602b      	str	r3, [r5, #0]
    9356:	e7ed      	b.n	9334 <__swhatbuf_r+0x1c>
    9358:	2340      	movs	r3, #64	; 0x40
    935a:	2000      	movs	r0, #0
    935c:	6023      	str	r3, [r4, #0]
    935e:	b010      	add	sp, #64	; 0x40
    9360:	bd70      	pop	{r4, r5, r6, pc}
    9362:	46c0      	nop			; (mov r8, r8)
    9364:	ffffe000 	.word	0xffffe000

00009368 <__smakebuf_r>:
    9368:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    936a:	2602      	movs	r6, #2
    936c:	898b      	ldrh	r3, [r1, #12]
    936e:	0005      	movs	r5, r0
    9370:	000c      	movs	r4, r1
    9372:	4233      	tst	r3, r6
    9374:	d006      	beq.n	9384 <__smakebuf_r+0x1c>
    9376:	0023      	movs	r3, r4
    9378:	3347      	adds	r3, #71	; 0x47
    937a:	6023      	str	r3, [r4, #0]
    937c:	6123      	str	r3, [r4, #16]
    937e:	2301      	movs	r3, #1
    9380:	6163      	str	r3, [r4, #20]
    9382:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    9384:	ab01      	add	r3, sp, #4
    9386:	466a      	mov	r2, sp
    9388:	f7ff ffc6 	bl	9318 <__swhatbuf_r>
    938c:	9900      	ldr	r1, [sp, #0]
    938e:	0007      	movs	r7, r0
    9390:	0028      	movs	r0, r5
    9392:	f000 f881 	bl	9498 <_malloc_r>
    9396:	2800      	cmp	r0, #0
    9398:	d108      	bne.n	93ac <__smakebuf_r+0x44>
    939a:	220c      	movs	r2, #12
    939c:	5ea3      	ldrsh	r3, [r4, r2]
    939e:	059a      	lsls	r2, r3, #22
    93a0:	d4ef      	bmi.n	9382 <__smakebuf_r+0x1a>
    93a2:	2203      	movs	r2, #3
    93a4:	4393      	bics	r3, r2
    93a6:	431e      	orrs	r6, r3
    93a8:	81a6      	strh	r6, [r4, #12]
    93aa:	e7e4      	b.n	9376 <__smakebuf_r+0xe>
    93ac:	4b0f      	ldr	r3, [pc, #60]	; (93ec <__smakebuf_r+0x84>)
    93ae:	62ab      	str	r3, [r5, #40]	; 0x28
    93b0:	2380      	movs	r3, #128	; 0x80
    93b2:	89a2      	ldrh	r2, [r4, #12]
    93b4:	6020      	str	r0, [r4, #0]
    93b6:	4313      	orrs	r3, r2
    93b8:	81a3      	strh	r3, [r4, #12]
    93ba:	9b00      	ldr	r3, [sp, #0]
    93bc:	6120      	str	r0, [r4, #16]
    93be:	6163      	str	r3, [r4, #20]
    93c0:	9b01      	ldr	r3, [sp, #4]
    93c2:	2b00      	cmp	r3, #0
    93c4:	d00d      	beq.n	93e2 <__smakebuf_r+0x7a>
    93c6:	230e      	movs	r3, #14
    93c8:	5ee1      	ldrsh	r1, [r4, r3]
    93ca:	0028      	movs	r0, r5
    93cc:	f000 fcf6 	bl	9dbc <_isatty_r>
    93d0:	2800      	cmp	r0, #0
    93d2:	d006      	beq.n	93e2 <__smakebuf_r+0x7a>
    93d4:	2203      	movs	r2, #3
    93d6:	89a3      	ldrh	r3, [r4, #12]
    93d8:	4393      	bics	r3, r2
    93da:	001a      	movs	r2, r3
    93dc:	2301      	movs	r3, #1
    93de:	4313      	orrs	r3, r2
    93e0:	81a3      	strh	r3, [r4, #12]
    93e2:	89a0      	ldrh	r0, [r4, #12]
    93e4:	4338      	orrs	r0, r7
    93e6:	81a0      	strh	r0, [r4, #12]
    93e8:	e7cb      	b.n	9382 <__smakebuf_r+0x1a>
    93ea:	46c0      	nop			; (mov r8, r8)
    93ec:	00009131 	.word	0x00009131

000093f0 <malloc>:
    93f0:	b510      	push	{r4, lr}
    93f2:	4b03      	ldr	r3, [pc, #12]	; (9400 <malloc+0x10>)
    93f4:	0001      	movs	r1, r0
    93f6:	6818      	ldr	r0, [r3, #0]
    93f8:	f000 f84e 	bl	9498 <_malloc_r>
    93fc:	bd10      	pop	{r4, pc}
    93fe:	46c0      	nop			; (mov r8, r8)
    9400:	2000007c 	.word	0x2000007c

00009404 <_free_r>:
    9404:	b570      	push	{r4, r5, r6, lr}
    9406:	0005      	movs	r5, r0
    9408:	2900      	cmp	r1, #0
    940a:	d010      	beq.n	942e <_free_r+0x2a>
    940c:	1f0c      	subs	r4, r1, #4
    940e:	6823      	ldr	r3, [r4, #0]
    9410:	2b00      	cmp	r3, #0
    9412:	da00      	bge.n	9416 <_free_r+0x12>
    9414:	18e4      	adds	r4, r4, r3
    9416:	0028      	movs	r0, r5
    9418:	f000 fd01 	bl	9e1e <__malloc_lock>
    941c:	4a1d      	ldr	r2, [pc, #116]	; (9494 <_free_r+0x90>)
    941e:	6813      	ldr	r3, [r2, #0]
    9420:	2b00      	cmp	r3, #0
    9422:	d105      	bne.n	9430 <_free_r+0x2c>
    9424:	6063      	str	r3, [r4, #4]
    9426:	6014      	str	r4, [r2, #0]
    9428:	0028      	movs	r0, r5
    942a:	f000 fcf9 	bl	9e20 <__malloc_unlock>
    942e:	bd70      	pop	{r4, r5, r6, pc}
    9430:	42a3      	cmp	r3, r4
    9432:	d909      	bls.n	9448 <_free_r+0x44>
    9434:	6821      	ldr	r1, [r4, #0]
    9436:	1860      	adds	r0, r4, r1
    9438:	4283      	cmp	r3, r0
    943a:	d1f3      	bne.n	9424 <_free_r+0x20>
    943c:	6818      	ldr	r0, [r3, #0]
    943e:	685b      	ldr	r3, [r3, #4]
    9440:	1841      	adds	r1, r0, r1
    9442:	6021      	str	r1, [r4, #0]
    9444:	e7ee      	b.n	9424 <_free_r+0x20>
    9446:	0013      	movs	r3, r2
    9448:	685a      	ldr	r2, [r3, #4]
    944a:	2a00      	cmp	r2, #0
    944c:	d001      	beq.n	9452 <_free_r+0x4e>
    944e:	42a2      	cmp	r2, r4
    9450:	d9f9      	bls.n	9446 <_free_r+0x42>
    9452:	6819      	ldr	r1, [r3, #0]
    9454:	1858      	adds	r0, r3, r1
    9456:	42a0      	cmp	r0, r4
    9458:	d10b      	bne.n	9472 <_free_r+0x6e>
    945a:	6820      	ldr	r0, [r4, #0]
    945c:	1809      	adds	r1, r1, r0
    945e:	1858      	adds	r0, r3, r1
    9460:	6019      	str	r1, [r3, #0]
    9462:	4282      	cmp	r2, r0
    9464:	d1e0      	bne.n	9428 <_free_r+0x24>
    9466:	6810      	ldr	r0, [r2, #0]
    9468:	6852      	ldr	r2, [r2, #4]
    946a:	1841      	adds	r1, r0, r1
    946c:	6019      	str	r1, [r3, #0]
    946e:	605a      	str	r2, [r3, #4]
    9470:	e7da      	b.n	9428 <_free_r+0x24>
    9472:	42a0      	cmp	r0, r4
    9474:	d902      	bls.n	947c <_free_r+0x78>
    9476:	230c      	movs	r3, #12
    9478:	602b      	str	r3, [r5, #0]
    947a:	e7d5      	b.n	9428 <_free_r+0x24>
    947c:	6821      	ldr	r1, [r4, #0]
    947e:	1860      	adds	r0, r4, r1
    9480:	4282      	cmp	r2, r0
    9482:	d103      	bne.n	948c <_free_r+0x88>
    9484:	6810      	ldr	r0, [r2, #0]
    9486:	6852      	ldr	r2, [r2, #4]
    9488:	1841      	adds	r1, r0, r1
    948a:	6021      	str	r1, [r4, #0]
    948c:	6062      	str	r2, [r4, #4]
    948e:	605c      	str	r4, [r3, #4]
    9490:	e7ca      	b.n	9428 <_free_r+0x24>
    9492:	46c0      	nop			; (mov r8, r8)
    9494:	20000e18 	.word	0x20000e18

00009498 <_malloc_r>:
    9498:	2303      	movs	r3, #3
    949a:	b570      	push	{r4, r5, r6, lr}
    949c:	1ccd      	adds	r5, r1, #3
    949e:	439d      	bics	r5, r3
    94a0:	3508      	adds	r5, #8
    94a2:	0006      	movs	r6, r0
    94a4:	2d0c      	cmp	r5, #12
    94a6:	d21e      	bcs.n	94e6 <_malloc_r+0x4e>
    94a8:	250c      	movs	r5, #12
    94aa:	42a9      	cmp	r1, r5
    94ac:	d81d      	bhi.n	94ea <_malloc_r+0x52>
    94ae:	0030      	movs	r0, r6
    94b0:	f000 fcb5 	bl	9e1e <__malloc_lock>
    94b4:	4a25      	ldr	r2, [pc, #148]	; (954c <_malloc_r+0xb4>)
    94b6:	6814      	ldr	r4, [r2, #0]
    94b8:	0021      	movs	r1, r4
    94ba:	2900      	cmp	r1, #0
    94bc:	d119      	bne.n	94f2 <_malloc_r+0x5a>
    94be:	4c24      	ldr	r4, [pc, #144]	; (9550 <_malloc_r+0xb8>)
    94c0:	6823      	ldr	r3, [r4, #0]
    94c2:	2b00      	cmp	r3, #0
    94c4:	d103      	bne.n	94ce <_malloc_r+0x36>
    94c6:	0030      	movs	r0, r6
    94c8:	f000 fbe2 	bl	9c90 <_sbrk_r>
    94cc:	6020      	str	r0, [r4, #0]
    94ce:	0029      	movs	r1, r5
    94d0:	0030      	movs	r0, r6
    94d2:	f000 fbdd 	bl	9c90 <_sbrk_r>
    94d6:	1c43      	adds	r3, r0, #1
    94d8:	d12c      	bne.n	9534 <_malloc_r+0x9c>
    94da:	230c      	movs	r3, #12
    94dc:	0030      	movs	r0, r6
    94de:	6033      	str	r3, [r6, #0]
    94e0:	f000 fc9e 	bl	9e20 <__malloc_unlock>
    94e4:	e003      	b.n	94ee <_malloc_r+0x56>
    94e6:	2d00      	cmp	r5, #0
    94e8:	dadf      	bge.n	94aa <_malloc_r+0x12>
    94ea:	230c      	movs	r3, #12
    94ec:	6033      	str	r3, [r6, #0]
    94ee:	2000      	movs	r0, #0
    94f0:	bd70      	pop	{r4, r5, r6, pc}
    94f2:	680b      	ldr	r3, [r1, #0]
    94f4:	1b5b      	subs	r3, r3, r5
    94f6:	d41a      	bmi.n	952e <_malloc_r+0x96>
    94f8:	2b0b      	cmp	r3, #11
    94fa:	d903      	bls.n	9504 <_malloc_r+0x6c>
    94fc:	600b      	str	r3, [r1, #0]
    94fe:	18cc      	adds	r4, r1, r3
    9500:	6025      	str	r5, [r4, #0]
    9502:	e003      	b.n	950c <_malloc_r+0x74>
    9504:	428c      	cmp	r4, r1
    9506:	d10e      	bne.n	9526 <_malloc_r+0x8e>
    9508:	6863      	ldr	r3, [r4, #4]
    950a:	6013      	str	r3, [r2, #0]
    950c:	0030      	movs	r0, r6
    950e:	f000 fc87 	bl	9e20 <__malloc_unlock>
    9512:	0020      	movs	r0, r4
    9514:	2207      	movs	r2, #7
    9516:	300b      	adds	r0, #11
    9518:	1d23      	adds	r3, r4, #4
    951a:	4390      	bics	r0, r2
    951c:	1ac3      	subs	r3, r0, r3
    951e:	d0e7      	beq.n	94f0 <_malloc_r+0x58>
    9520:	425a      	negs	r2, r3
    9522:	50e2      	str	r2, [r4, r3]
    9524:	e7e4      	b.n	94f0 <_malloc_r+0x58>
    9526:	684b      	ldr	r3, [r1, #4]
    9528:	6063      	str	r3, [r4, #4]
    952a:	000c      	movs	r4, r1
    952c:	e7ee      	b.n	950c <_malloc_r+0x74>
    952e:	000c      	movs	r4, r1
    9530:	6849      	ldr	r1, [r1, #4]
    9532:	e7c2      	b.n	94ba <_malloc_r+0x22>
    9534:	2303      	movs	r3, #3
    9536:	1cc4      	adds	r4, r0, #3
    9538:	439c      	bics	r4, r3
    953a:	42a0      	cmp	r0, r4
    953c:	d0e0      	beq.n	9500 <_malloc_r+0x68>
    953e:	1a21      	subs	r1, r4, r0
    9540:	0030      	movs	r0, r6
    9542:	f000 fba5 	bl	9c90 <_sbrk_r>
    9546:	1c43      	adds	r3, r0, #1
    9548:	d1da      	bne.n	9500 <_malloc_r+0x68>
    954a:	e7c6      	b.n	94da <_malloc_r+0x42>
    954c:	20000e18 	.word	0x20000e18
    9550:	20000e1c 	.word	0x20000e1c

00009554 <__sfputc_r>:
    9554:	6893      	ldr	r3, [r2, #8]
    9556:	b510      	push	{r4, lr}
    9558:	3b01      	subs	r3, #1
    955a:	6093      	str	r3, [r2, #8]
    955c:	2b00      	cmp	r3, #0
    955e:	da05      	bge.n	956c <__sfputc_r+0x18>
    9560:	6994      	ldr	r4, [r2, #24]
    9562:	42a3      	cmp	r3, r4
    9564:	db08      	blt.n	9578 <__sfputc_r+0x24>
    9566:	b2cb      	uxtb	r3, r1
    9568:	2b0a      	cmp	r3, #10
    956a:	d005      	beq.n	9578 <__sfputc_r+0x24>
    956c:	6813      	ldr	r3, [r2, #0]
    956e:	1c58      	adds	r0, r3, #1
    9570:	6010      	str	r0, [r2, #0]
    9572:	7019      	strb	r1, [r3, #0]
    9574:	b2c8      	uxtb	r0, r1
    9576:	bd10      	pop	{r4, pc}
    9578:	f7ff fc44 	bl	8e04 <__swbuf_r>
    957c:	e7fb      	b.n	9576 <__sfputc_r+0x22>

0000957e <__sfputs_r>:
    957e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9580:	0006      	movs	r6, r0
    9582:	000f      	movs	r7, r1
    9584:	0014      	movs	r4, r2
    9586:	18d5      	adds	r5, r2, r3
    9588:	42ac      	cmp	r4, r5
    958a:	d101      	bne.n	9590 <__sfputs_r+0x12>
    958c:	2000      	movs	r0, #0
    958e:	e007      	b.n	95a0 <__sfputs_r+0x22>
    9590:	7821      	ldrb	r1, [r4, #0]
    9592:	003a      	movs	r2, r7
    9594:	0030      	movs	r0, r6
    9596:	f7ff ffdd 	bl	9554 <__sfputc_r>
    959a:	3401      	adds	r4, #1
    959c:	1c43      	adds	r3, r0, #1
    959e:	d1f3      	bne.n	9588 <__sfputs_r+0xa>
    95a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

000095a4 <_vfiprintf_r>:
    95a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    95a6:	b09f      	sub	sp, #124	; 0x7c
    95a8:	0006      	movs	r6, r0
    95aa:	000f      	movs	r7, r1
    95ac:	0014      	movs	r4, r2
    95ae:	9305      	str	r3, [sp, #20]
    95b0:	2800      	cmp	r0, #0
    95b2:	d004      	beq.n	95be <_vfiprintf_r+0x1a>
    95b4:	6983      	ldr	r3, [r0, #24]
    95b6:	2b00      	cmp	r3, #0
    95b8:	d101      	bne.n	95be <_vfiprintf_r+0x1a>
    95ba:	f7ff fdfb 	bl	91b4 <__sinit>
    95be:	4b7f      	ldr	r3, [pc, #508]	; (97bc <_vfiprintf_r+0x218>)
    95c0:	429f      	cmp	r7, r3
    95c2:	d15c      	bne.n	967e <_vfiprintf_r+0xda>
    95c4:	6877      	ldr	r7, [r6, #4]
    95c6:	89bb      	ldrh	r3, [r7, #12]
    95c8:	071b      	lsls	r3, r3, #28
    95ca:	d562      	bpl.n	9692 <_vfiprintf_r+0xee>
    95cc:	693b      	ldr	r3, [r7, #16]
    95ce:	2b00      	cmp	r3, #0
    95d0:	d05f      	beq.n	9692 <_vfiprintf_r+0xee>
    95d2:	2300      	movs	r3, #0
    95d4:	ad06      	add	r5, sp, #24
    95d6:	616b      	str	r3, [r5, #20]
    95d8:	3320      	adds	r3, #32
    95da:	766b      	strb	r3, [r5, #25]
    95dc:	3310      	adds	r3, #16
    95de:	76ab      	strb	r3, [r5, #26]
    95e0:	9402      	str	r4, [sp, #8]
    95e2:	9c02      	ldr	r4, [sp, #8]
    95e4:	7823      	ldrb	r3, [r4, #0]
    95e6:	2b00      	cmp	r3, #0
    95e8:	d15d      	bne.n	96a6 <_vfiprintf_r+0x102>
    95ea:	9b02      	ldr	r3, [sp, #8]
    95ec:	1ae3      	subs	r3, r4, r3
    95ee:	9304      	str	r3, [sp, #16]
    95f0:	d00d      	beq.n	960e <_vfiprintf_r+0x6a>
    95f2:	9b04      	ldr	r3, [sp, #16]
    95f4:	9a02      	ldr	r2, [sp, #8]
    95f6:	0039      	movs	r1, r7
    95f8:	0030      	movs	r0, r6
    95fa:	f7ff ffc0 	bl	957e <__sfputs_r>
    95fe:	1c43      	adds	r3, r0, #1
    9600:	d100      	bne.n	9604 <_vfiprintf_r+0x60>
    9602:	e0cc      	b.n	979e <_vfiprintf_r+0x1fa>
    9604:	696a      	ldr	r2, [r5, #20]
    9606:	9b04      	ldr	r3, [sp, #16]
    9608:	4694      	mov	ip, r2
    960a:	4463      	add	r3, ip
    960c:	616b      	str	r3, [r5, #20]
    960e:	7823      	ldrb	r3, [r4, #0]
    9610:	2b00      	cmp	r3, #0
    9612:	d100      	bne.n	9616 <_vfiprintf_r+0x72>
    9614:	e0c3      	b.n	979e <_vfiprintf_r+0x1fa>
    9616:	2201      	movs	r2, #1
    9618:	2300      	movs	r3, #0
    961a:	4252      	negs	r2, r2
    961c:	606a      	str	r2, [r5, #4]
    961e:	a902      	add	r1, sp, #8
    9620:	3254      	adds	r2, #84	; 0x54
    9622:	1852      	adds	r2, r2, r1
    9624:	3401      	adds	r4, #1
    9626:	602b      	str	r3, [r5, #0]
    9628:	60eb      	str	r3, [r5, #12]
    962a:	60ab      	str	r3, [r5, #8]
    962c:	7013      	strb	r3, [r2, #0]
    962e:	65ab      	str	r3, [r5, #88]	; 0x58
    9630:	7821      	ldrb	r1, [r4, #0]
    9632:	2205      	movs	r2, #5
    9634:	4862      	ldr	r0, [pc, #392]	; (97c0 <_vfiprintf_r+0x21c>)
    9636:	f000 fbe7 	bl	9e08 <memchr>
    963a:	1c63      	adds	r3, r4, #1
    963c:	469c      	mov	ip, r3
    963e:	2800      	cmp	r0, #0
    9640:	d135      	bne.n	96ae <_vfiprintf_r+0x10a>
    9642:	6829      	ldr	r1, [r5, #0]
    9644:	06cb      	lsls	r3, r1, #27
    9646:	d504      	bpl.n	9652 <_vfiprintf_r+0xae>
    9648:	2353      	movs	r3, #83	; 0x53
    964a:	aa02      	add	r2, sp, #8
    964c:	3020      	adds	r0, #32
    964e:	189b      	adds	r3, r3, r2
    9650:	7018      	strb	r0, [r3, #0]
    9652:	070b      	lsls	r3, r1, #28
    9654:	d504      	bpl.n	9660 <_vfiprintf_r+0xbc>
    9656:	2353      	movs	r3, #83	; 0x53
    9658:	202b      	movs	r0, #43	; 0x2b
    965a:	aa02      	add	r2, sp, #8
    965c:	189b      	adds	r3, r3, r2
    965e:	7018      	strb	r0, [r3, #0]
    9660:	7823      	ldrb	r3, [r4, #0]
    9662:	2b2a      	cmp	r3, #42	; 0x2a
    9664:	d02c      	beq.n	96c0 <_vfiprintf_r+0x11c>
    9666:	2000      	movs	r0, #0
    9668:	210a      	movs	r1, #10
    966a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    966c:	7822      	ldrb	r2, [r4, #0]
    966e:	3a30      	subs	r2, #48	; 0x30
    9670:	2a09      	cmp	r2, #9
    9672:	d800      	bhi.n	9676 <_vfiprintf_r+0xd2>
    9674:	e06b      	b.n	974e <_vfiprintf_r+0x1aa>
    9676:	2800      	cmp	r0, #0
    9678:	d02a      	beq.n	96d0 <_vfiprintf_r+0x12c>
    967a:	9309      	str	r3, [sp, #36]	; 0x24
    967c:	e028      	b.n	96d0 <_vfiprintf_r+0x12c>
    967e:	4b51      	ldr	r3, [pc, #324]	; (97c4 <_vfiprintf_r+0x220>)
    9680:	429f      	cmp	r7, r3
    9682:	d101      	bne.n	9688 <_vfiprintf_r+0xe4>
    9684:	68b7      	ldr	r7, [r6, #8]
    9686:	e79e      	b.n	95c6 <_vfiprintf_r+0x22>
    9688:	4b4f      	ldr	r3, [pc, #316]	; (97c8 <_vfiprintf_r+0x224>)
    968a:	429f      	cmp	r7, r3
    968c:	d19b      	bne.n	95c6 <_vfiprintf_r+0x22>
    968e:	68f7      	ldr	r7, [r6, #12]
    9690:	e799      	b.n	95c6 <_vfiprintf_r+0x22>
    9692:	0039      	movs	r1, r7
    9694:	0030      	movs	r0, r6
    9696:	f7ff fc0b 	bl	8eb0 <__swsetup_r>
    969a:	2800      	cmp	r0, #0
    969c:	d099      	beq.n	95d2 <_vfiprintf_r+0x2e>
    969e:	2001      	movs	r0, #1
    96a0:	4240      	negs	r0, r0
    96a2:	b01f      	add	sp, #124	; 0x7c
    96a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    96a6:	2b25      	cmp	r3, #37	; 0x25
    96a8:	d09f      	beq.n	95ea <_vfiprintf_r+0x46>
    96aa:	3401      	adds	r4, #1
    96ac:	e79a      	b.n	95e4 <_vfiprintf_r+0x40>
    96ae:	4b44      	ldr	r3, [pc, #272]	; (97c0 <_vfiprintf_r+0x21c>)
    96b0:	6829      	ldr	r1, [r5, #0]
    96b2:	1ac0      	subs	r0, r0, r3
    96b4:	2301      	movs	r3, #1
    96b6:	4083      	lsls	r3, r0
    96b8:	430b      	orrs	r3, r1
    96ba:	602b      	str	r3, [r5, #0]
    96bc:	4664      	mov	r4, ip
    96be:	e7b7      	b.n	9630 <_vfiprintf_r+0x8c>
    96c0:	9b05      	ldr	r3, [sp, #20]
    96c2:	1d18      	adds	r0, r3, #4
    96c4:	681b      	ldr	r3, [r3, #0]
    96c6:	9005      	str	r0, [sp, #20]
    96c8:	2b00      	cmp	r3, #0
    96ca:	db3a      	blt.n	9742 <_vfiprintf_r+0x19e>
    96cc:	9309      	str	r3, [sp, #36]	; 0x24
    96ce:	4664      	mov	r4, ip
    96d0:	7823      	ldrb	r3, [r4, #0]
    96d2:	2b2e      	cmp	r3, #46	; 0x2e
    96d4:	d10b      	bne.n	96ee <_vfiprintf_r+0x14a>
    96d6:	7863      	ldrb	r3, [r4, #1]
    96d8:	1c62      	adds	r2, r4, #1
    96da:	2b2a      	cmp	r3, #42	; 0x2a
    96dc:	d13f      	bne.n	975e <_vfiprintf_r+0x1ba>
    96de:	9b05      	ldr	r3, [sp, #20]
    96e0:	3402      	adds	r4, #2
    96e2:	1d1a      	adds	r2, r3, #4
    96e4:	681b      	ldr	r3, [r3, #0]
    96e6:	9205      	str	r2, [sp, #20]
    96e8:	2b00      	cmp	r3, #0
    96ea:	db35      	blt.n	9758 <_vfiprintf_r+0x1b4>
    96ec:	9307      	str	r3, [sp, #28]
    96ee:	7821      	ldrb	r1, [r4, #0]
    96f0:	2203      	movs	r2, #3
    96f2:	4836      	ldr	r0, [pc, #216]	; (97cc <_vfiprintf_r+0x228>)
    96f4:	f000 fb88 	bl	9e08 <memchr>
    96f8:	2800      	cmp	r0, #0
    96fa:	d007      	beq.n	970c <_vfiprintf_r+0x168>
    96fc:	4b33      	ldr	r3, [pc, #204]	; (97cc <_vfiprintf_r+0x228>)
    96fe:	682a      	ldr	r2, [r5, #0]
    9700:	1ac0      	subs	r0, r0, r3
    9702:	2340      	movs	r3, #64	; 0x40
    9704:	4083      	lsls	r3, r0
    9706:	4313      	orrs	r3, r2
    9708:	602b      	str	r3, [r5, #0]
    970a:	3401      	adds	r4, #1
    970c:	7821      	ldrb	r1, [r4, #0]
    970e:	1c63      	adds	r3, r4, #1
    9710:	2206      	movs	r2, #6
    9712:	482f      	ldr	r0, [pc, #188]	; (97d0 <_vfiprintf_r+0x22c>)
    9714:	9302      	str	r3, [sp, #8]
    9716:	7629      	strb	r1, [r5, #24]
    9718:	f000 fb76 	bl	9e08 <memchr>
    971c:	2800      	cmp	r0, #0
    971e:	d044      	beq.n	97aa <_vfiprintf_r+0x206>
    9720:	4b2c      	ldr	r3, [pc, #176]	; (97d4 <_vfiprintf_r+0x230>)
    9722:	2b00      	cmp	r3, #0
    9724:	d12f      	bne.n	9786 <_vfiprintf_r+0x1e2>
    9726:	6829      	ldr	r1, [r5, #0]
    9728:	9b05      	ldr	r3, [sp, #20]
    972a:	2207      	movs	r2, #7
    972c:	05c9      	lsls	r1, r1, #23
    972e:	d528      	bpl.n	9782 <_vfiprintf_r+0x1de>
    9730:	189b      	adds	r3, r3, r2
    9732:	4393      	bics	r3, r2
    9734:	3308      	adds	r3, #8
    9736:	9305      	str	r3, [sp, #20]
    9738:	696b      	ldr	r3, [r5, #20]
    973a:	9a03      	ldr	r2, [sp, #12]
    973c:	189b      	adds	r3, r3, r2
    973e:	616b      	str	r3, [r5, #20]
    9740:	e74f      	b.n	95e2 <_vfiprintf_r+0x3e>
    9742:	425b      	negs	r3, r3
    9744:	60eb      	str	r3, [r5, #12]
    9746:	2302      	movs	r3, #2
    9748:	430b      	orrs	r3, r1
    974a:	602b      	str	r3, [r5, #0]
    974c:	e7bf      	b.n	96ce <_vfiprintf_r+0x12a>
    974e:	434b      	muls	r3, r1
    9750:	3401      	adds	r4, #1
    9752:	189b      	adds	r3, r3, r2
    9754:	2001      	movs	r0, #1
    9756:	e789      	b.n	966c <_vfiprintf_r+0xc8>
    9758:	2301      	movs	r3, #1
    975a:	425b      	negs	r3, r3
    975c:	e7c6      	b.n	96ec <_vfiprintf_r+0x148>
    975e:	2300      	movs	r3, #0
    9760:	0014      	movs	r4, r2
    9762:	200a      	movs	r0, #10
    9764:	001a      	movs	r2, r3
    9766:	606b      	str	r3, [r5, #4]
    9768:	7821      	ldrb	r1, [r4, #0]
    976a:	3930      	subs	r1, #48	; 0x30
    976c:	2909      	cmp	r1, #9
    976e:	d903      	bls.n	9778 <_vfiprintf_r+0x1d4>
    9770:	2b00      	cmp	r3, #0
    9772:	d0bc      	beq.n	96ee <_vfiprintf_r+0x14a>
    9774:	9207      	str	r2, [sp, #28]
    9776:	e7ba      	b.n	96ee <_vfiprintf_r+0x14a>
    9778:	4342      	muls	r2, r0
    977a:	3401      	adds	r4, #1
    977c:	1852      	adds	r2, r2, r1
    977e:	2301      	movs	r3, #1
    9780:	e7f2      	b.n	9768 <_vfiprintf_r+0x1c4>
    9782:	3307      	adds	r3, #7
    9784:	e7d5      	b.n	9732 <_vfiprintf_r+0x18e>
    9786:	ab05      	add	r3, sp, #20
    9788:	9300      	str	r3, [sp, #0]
    978a:	003a      	movs	r2, r7
    978c:	4b12      	ldr	r3, [pc, #72]	; (97d8 <_vfiprintf_r+0x234>)
    978e:	0029      	movs	r1, r5
    9790:	0030      	movs	r0, r6
    9792:	e000      	b.n	9796 <_vfiprintf_r+0x1f2>
    9794:	bf00      	nop
    9796:	9003      	str	r0, [sp, #12]
    9798:	9b03      	ldr	r3, [sp, #12]
    979a:	3301      	adds	r3, #1
    979c:	d1cc      	bne.n	9738 <_vfiprintf_r+0x194>
    979e:	89bb      	ldrh	r3, [r7, #12]
    97a0:	065b      	lsls	r3, r3, #25
    97a2:	d500      	bpl.n	97a6 <_vfiprintf_r+0x202>
    97a4:	e77b      	b.n	969e <_vfiprintf_r+0xfa>
    97a6:	980b      	ldr	r0, [sp, #44]	; 0x2c
    97a8:	e77b      	b.n	96a2 <_vfiprintf_r+0xfe>
    97aa:	ab05      	add	r3, sp, #20
    97ac:	9300      	str	r3, [sp, #0]
    97ae:	003a      	movs	r2, r7
    97b0:	4b09      	ldr	r3, [pc, #36]	; (97d8 <_vfiprintf_r+0x234>)
    97b2:	0029      	movs	r1, r5
    97b4:	0030      	movs	r0, r6
    97b6:	f000 f87f 	bl	98b8 <_printf_i>
    97ba:	e7ec      	b.n	9796 <_vfiprintf_r+0x1f2>
    97bc:	0000dea4 	.word	0x0000dea4
    97c0:	0000dee4 	.word	0x0000dee4
    97c4:	0000dec4 	.word	0x0000dec4
    97c8:	0000de84 	.word	0x0000de84
    97cc:	0000deea 	.word	0x0000deea
    97d0:	0000deee 	.word	0x0000deee
    97d4:	00000000 	.word	0x00000000
    97d8:	0000957f 	.word	0x0000957f

000097dc <_printf_common>:
    97dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    97de:	0015      	movs	r5, r2
    97e0:	9301      	str	r3, [sp, #4]
    97e2:	688a      	ldr	r2, [r1, #8]
    97e4:	690b      	ldr	r3, [r1, #16]
    97e6:	9000      	str	r0, [sp, #0]
    97e8:	000c      	movs	r4, r1
    97ea:	4293      	cmp	r3, r2
    97ec:	da00      	bge.n	97f0 <_printf_common+0x14>
    97ee:	0013      	movs	r3, r2
    97f0:	0022      	movs	r2, r4
    97f2:	602b      	str	r3, [r5, #0]
    97f4:	3243      	adds	r2, #67	; 0x43
    97f6:	7812      	ldrb	r2, [r2, #0]
    97f8:	2a00      	cmp	r2, #0
    97fa:	d001      	beq.n	9800 <_printf_common+0x24>
    97fc:	3301      	adds	r3, #1
    97fe:	602b      	str	r3, [r5, #0]
    9800:	6823      	ldr	r3, [r4, #0]
    9802:	069b      	lsls	r3, r3, #26
    9804:	d502      	bpl.n	980c <_printf_common+0x30>
    9806:	682b      	ldr	r3, [r5, #0]
    9808:	3302      	adds	r3, #2
    980a:	602b      	str	r3, [r5, #0]
    980c:	2706      	movs	r7, #6
    980e:	6823      	ldr	r3, [r4, #0]
    9810:	401f      	ands	r7, r3
    9812:	d027      	beq.n	9864 <_printf_common+0x88>
    9814:	0023      	movs	r3, r4
    9816:	3343      	adds	r3, #67	; 0x43
    9818:	781b      	ldrb	r3, [r3, #0]
    981a:	1e5a      	subs	r2, r3, #1
    981c:	4193      	sbcs	r3, r2
    981e:	6822      	ldr	r2, [r4, #0]
    9820:	0692      	lsls	r2, r2, #26
    9822:	d430      	bmi.n	9886 <_printf_common+0xaa>
    9824:	0022      	movs	r2, r4
    9826:	9901      	ldr	r1, [sp, #4]
    9828:	3243      	adds	r2, #67	; 0x43
    982a:	9800      	ldr	r0, [sp, #0]
    982c:	9e08      	ldr	r6, [sp, #32]
    982e:	47b0      	blx	r6
    9830:	1c43      	adds	r3, r0, #1
    9832:	d025      	beq.n	9880 <_printf_common+0xa4>
    9834:	2306      	movs	r3, #6
    9836:	6820      	ldr	r0, [r4, #0]
    9838:	682a      	ldr	r2, [r5, #0]
    983a:	68e1      	ldr	r1, [r4, #12]
    983c:	4003      	ands	r3, r0
    983e:	2500      	movs	r5, #0
    9840:	2b04      	cmp	r3, #4
    9842:	d103      	bne.n	984c <_printf_common+0x70>
    9844:	1a8d      	subs	r5, r1, r2
    9846:	43eb      	mvns	r3, r5
    9848:	17db      	asrs	r3, r3, #31
    984a:	401d      	ands	r5, r3
    984c:	68a3      	ldr	r3, [r4, #8]
    984e:	6922      	ldr	r2, [r4, #16]
    9850:	4293      	cmp	r3, r2
    9852:	dd01      	ble.n	9858 <_printf_common+0x7c>
    9854:	1a9b      	subs	r3, r3, r2
    9856:	18ed      	adds	r5, r5, r3
    9858:	2700      	movs	r7, #0
    985a:	42bd      	cmp	r5, r7
    985c:	d120      	bne.n	98a0 <_printf_common+0xc4>
    985e:	2000      	movs	r0, #0
    9860:	e010      	b.n	9884 <_printf_common+0xa8>
    9862:	3701      	adds	r7, #1
    9864:	68e3      	ldr	r3, [r4, #12]
    9866:	682a      	ldr	r2, [r5, #0]
    9868:	1a9b      	subs	r3, r3, r2
    986a:	429f      	cmp	r7, r3
    986c:	dad2      	bge.n	9814 <_printf_common+0x38>
    986e:	0022      	movs	r2, r4
    9870:	2301      	movs	r3, #1
    9872:	3219      	adds	r2, #25
    9874:	9901      	ldr	r1, [sp, #4]
    9876:	9800      	ldr	r0, [sp, #0]
    9878:	9e08      	ldr	r6, [sp, #32]
    987a:	47b0      	blx	r6
    987c:	1c43      	adds	r3, r0, #1
    987e:	d1f0      	bne.n	9862 <_printf_common+0x86>
    9880:	2001      	movs	r0, #1
    9882:	4240      	negs	r0, r0
    9884:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    9886:	2030      	movs	r0, #48	; 0x30
    9888:	18e1      	adds	r1, r4, r3
    988a:	3143      	adds	r1, #67	; 0x43
    988c:	7008      	strb	r0, [r1, #0]
    988e:	0021      	movs	r1, r4
    9890:	1c5a      	adds	r2, r3, #1
    9892:	3145      	adds	r1, #69	; 0x45
    9894:	7809      	ldrb	r1, [r1, #0]
    9896:	18a2      	adds	r2, r4, r2
    9898:	3243      	adds	r2, #67	; 0x43
    989a:	3302      	adds	r3, #2
    989c:	7011      	strb	r1, [r2, #0]
    989e:	e7c1      	b.n	9824 <_printf_common+0x48>
    98a0:	0022      	movs	r2, r4
    98a2:	2301      	movs	r3, #1
    98a4:	321a      	adds	r2, #26
    98a6:	9901      	ldr	r1, [sp, #4]
    98a8:	9800      	ldr	r0, [sp, #0]
    98aa:	9e08      	ldr	r6, [sp, #32]
    98ac:	47b0      	blx	r6
    98ae:	1c43      	adds	r3, r0, #1
    98b0:	d0e6      	beq.n	9880 <_printf_common+0xa4>
    98b2:	3701      	adds	r7, #1
    98b4:	e7d1      	b.n	985a <_printf_common+0x7e>
	...

000098b8 <_printf_i>:
    98b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    98ba:	b08b      	sub	sp, #44	; 0x2c
    98bc:	9206      	str	r2, [sp, #24]
    98be:	000a      	movs	r2, r1
    98c0:	3243      	adds	r2, #67	; 0x43
    98c2:	9307      	str	r3, [sp, #28]
    98c4:	9005      	str	r0, [sp, #20]
    98c6:	9204      	str	r2, [sp, #16]
    98c8:	7e0a      	ldrb	r2, [r1, #24]
    98ca:	000c      	movs	r4, r1
    98cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
    98ce:	2a6e      	cmp	r2, #110	; 0x6e
    98d0:	d100      	bne.n	98d4 <_printf_i+0x1c>
    98d2:	e08f      	b.n	99f4 <_printf_i+0x13c>
    98d4:	d817      	bhi.n	9906 <_printf_i+0x4e>
    98d6:	2a63      	cmp	r2, #99	; 0x63
    98d8:	d02c      	beq.n	9934 <_printf_i+0x7c>
    98da:	d808      	bhi.n	98ee <_printf_i+0x36>
    98dc:	2a00      	cmp	r2, #0
    98de:	d100      	bne.n	98e2 <_printf_i+0x2a>
    98e0:	e099      	b.n	9a16 <_printf_i+0x15e>
    98e2:	2a58      	cmp	r2, #88	; 0x58
    98e4:	d054      	beq.n	9990 <_printf_i+0xd8>
    98e6:	0026      	movs	r6, r4
    98e8:	3642      	adds	r6, #66	; 0x42
    98ea:	7032      	strb	r2, [r6, #0]
    98ec:	e029      	b.n	9942 <_printf_i+0x8a>
    98ee:	2a64      	cmp	r2, #100	; 0x64
    98f0:	d001      	beq.n	98f6 <_printf_i+0x3e>
    98f2:	2a69      	cmp	r2, #105	; 0x69
    98f4:	d1f7      	bne.n	98e6 <_printf_i+0x2e>
    98f6:	6821      	ldr	r1, [r4, #0]
    98f8:	681a      	ldr	r2, [r3, #0]
    98fa:	0608      	lsls	r0, r1, #24
    98fc:	d523      	bpl.n	9946 <_printf_i+0x8e>
    98fe:	1d11      	adds	r1, r2, #4
    9900:	6019      	str	r1, [r3, #0]
    9902:	6815      	ldr	r5, [r2, #0]
    9904:	e025      	b.n	9952 <_printf_i+0x9a>
    9906:	2a73      	cmp	r2, #115	; 0x73
    9908:	d100      	bne.n	990c <_printf_i+0x54>
    990a:	e088      	b.n	9a1e <_printf_i+0x166>
    990c:	d808      	bhi.n	9920 <_printf_i+0x68>
    990e:	2a6f      	cmp	r2, #111	; 0x6f
    9910:	d029      	beq.n	9966 <_printf_i+0xae>
    9912:	2a70      	cmp	r2, #112	; 0x70
    9914:	d1e7      	bne.n	98e6 <_printf_i+0x2e>
    9916:	2220      	movs	r2, #32
    9918:	6809      	ldr	r1, [r1, #0]
    991a:	430a      	orrs	r2, r1
    991c:	6022      	str	r2, [r4, #0]
    991e:	e003      	b.n	9928 <_printf_i+0x70>
    9920:	2a75      	cmp	r2, #117	; 0x75
    9922:	d020      	beq.n	9966 <_printf_i+0xae>
    9924:	2a78      	cmp	r2, #120	; 0x78
    9926:	d1de      	bne.n	98e6 <_printf_i+0x2e>
    9928:	0022      	movs	r2, r4
    992a:	2178      	movs	r1, #120	; 0x78
    992c:	3245      	adds	r2, #69	; 0x45
    992e:	7011      	strb	r1, [r2, #0]
    9930:	4a6c      	ldr	r2, [pc, #432]	; (9ae4 <_printf_i+0x22c>)
    9932:	e030      	b.n	9996 <_printf_i+0xde>
    9934:	000e      	movs	r6, r1
    9936:	681a      	ldr	r2, [r3, #0]
    9938:	3642      	adds	r6, #66	; 0x42
    993a:	1d11      	adds	r1, r2, #4
    993c:	6019      	str	r1, [r3, #0]
    993e:	6813      	ldr	r3, [r2, #0]
    9940:	7033      	strb	r3, [r6, #0]
    9942:	2301      	movs	r3, #1
    9944:	e079      	b.n	9a3a <_printf_i+0x182>
    9946:	0649      	lsls	r1, r1, #25
    9948:	d5d9      	bpl.n	98fe <_printf_i+0x46>
    994a:	1d11      	adds	r1, r2, #4
    994c:	6019      	str	r1, [r3, #0]
    994e:	2300      	movs	r3, #0
    9950:	5ed5      	ldrsh	r5, [r2, r3]
    9952:	2d00      	cmp	r5, #0
    9954:	da03      	bge.n	995e <_printf_i+0xa6>
    9956:	232d      	movs	r3, #45	; 0x2d
    9958:	9a04      	ldr	r2, [sp, #16]
    995a:	426d      	negs	r5, r5
    995c:	7013      	strb	r3, [r2, #0]
    995e:	4b62      	ldr	r3, [pc, #392]	; (9ae8 <_printf_i+0x230>)
    9960:	270a      	movs	r7, #10
    9962:	9303      	str	r3, [sp, #12]
    9964:	e02f      	b.n	99c6 <_printf_i+0x10e>
    9966:	6820      	ldr	r0, [r4, #0]
    9968:	6819      	ldr	r1, [r3, #0]
    996a:	0605      	lsls	r5, r0, #24
    996c:	d503      	bpl.n	9976 <_printf_i+0xbe>
    996e:	1d08      	adds	r0, r1, #4
    9970:	6018      	str	r0, [r3, #0]
    9972:	680d      	ldr	r5, [r1, #0]
    9974:	e005      	b.n	9982 <_printf_i+0xca>
    9976:	0640      	lsls	r0, r0, #25
    9978:	d5f9      	bpl.n	996e <_printf_i+0xb6>
    997a:	680d      	ldr	r5, [r1, #0]
    997c:	1d08      	adds	r0, r1, #4
    997e:	6018      	str	r0, [r3, #0]
    9980:	b2ad      	uxth	r5, r5
    9982:	4b59      	ldr	r3, [pc, #356]	; (9ae8 <_printf_i+0x230>)
    9984:	2708      	movs	r7, #8
    9986:	9303      	str	r3, [sp, #12]
    9988:	2a6f      	cmp	r2, #111	; 0x6f
    998a:	d018      	beq.n	99be <_printf_i+0x106>
    998c:	270a      	movs	r7, #10
    998e:	e016      	b.n	99be <_printf_i+0x106>
    9990:	3145      	adds	r1, #69	; 0x45
    9992:	700a      	strb	r2, [r1, #0]
    9994:	4a54      	ldr	r2, [pc, #336]	; (9ae8 <_printf_i+0x230>)
    9996:	9203      	str	r2, [sp, #12]
    9998:	681a      	ldr	r2, [r3, #0]
    999a:	6821      	ldr	r1, [r4, #0]
    999c:	1d10      	adds	r0, r2, #4
    999e:	6018      	str	r0, [r3, #0]
    99a0:	6815      	ldr	r5, [r2, #0]
    99a2:	0608      	lsls	r0, r1, #24
    99a4:	d522      	bpl.n	99ec <_printf_i+0x134>
    99a6:	07cb      	lsls	r3, r1, #31
    99a8:	d502      	bpl.n	99b0 <_printf_i+0xf8>
    99aa:	2320      	movs	r3, #32
    99ac:	4319      	orrs	r1, r3
    99ae:	6021      	str	r1, [r4, #0]
    99b0:	2710      	movs	r7, #16
    99b2:	2d00      	cmp	r5, #0
    99b4:	d103      	bne.n	99be <_printf_i+0x106>
    99b6:	2320      	movs	r3, #32
    99b8:	6822      	ldr	r2, [r4, #0]
    99ba:	439a      	bics	r2, r3
    99bc:	6022      	str	r2, [r4, #0]
    99be:	0023      	movs	r3, r4
    99c0:	2200      	movs	r2, #0
    99c2:	3343      	adds	r3, #67	; 0x43
    99c4:	701a      	strb	r2, [r3, #0]
    99c6:	6863      	ldr	r3, [r4, #4]
    99c8:	60a3      	str	r3, [r4, #8]
    99ca:	2b00      	cmp	r3, #0
    99cc:	db5c      	blt.n	9a88 <_printf_i+0x1d0>
    99ce:	2204      	movs	r2, #4
    99d0:	6821      	ldr	r1, [r4, #0]
    99d2:	4391      	bics	r1, r2
    99d4:	6021      	str	r1, [r4, #0]
    99d6:	2d00      	cmp	r5, #0
    99d8:	d158      	bne.n	9a8c <_printf_i+0x1d4>
    99da:	9e04      	ldr	r6, [sp, #16]
    99dc:	2b00      	cmp	r3, #0
    99de:	d064      	beq.n	9aaa <_printf_i+0x1f2>
    99e0:	0026      	movs	r6, r4
    99e2:	9b03      	ldr	r3, [sp, #12]
    99e4:	3642      	adds	r6, #66	; 0x42
    99e6:	781b      	ldrb	r3, [r3, #0]
    99e8:	7033      	strb	r3, [r6, #0]
    99ea:	e05e      	b.n	9aaa <_printf_i+0x1f2>
    99ec:	0648      	lsls	r0, r1, #25
    99ee:	d5da      	bpl.n	99a6 <_printf_i+0xee>
    99f0:	b2ad      	uxth	r5, r5
    99f2:	e7d8      	b.n	99a6 <_printf_i+0xee>
    99f4:	6809      	ldr	r1, [r1, #0]
    99f6:	681a      	ldr	r2, [r3, #0]
    99f8:	0608      	lsls	r0, r1, #24
    99fa:	d505      	bpl.n	9a08 <_printf_i+0x150>
    99fc:	1d11      	adds	r1, r2, #4
    99fe:	6019      	str	r1, [r3, #0]
    9a00:	6813      	ldr	r3, [r2, #0]
    9a02:	6962      	ldr	r2, [r4, #20]
    9a04:	601a      	str	r2, [r3, #0]
    9a06:	e006      	b.n	9a16 <_printf_i+0x15e>
    9a08:	0649      	lsls	r1, r1, #25
    9a0a:	d5f7      	bpl.n	99fc <_printf_i+0x144>
    9a0c:	1d11      	adds	r1, r2, #4
    9a0e:	6019      	str	r1, [r3, #0]
    9a10:	6813      	ldr	r3, [r2, #0]
    9a12:	8aa2      	ldrh	r2, [r4, #20]
    9a14:	801a      	strh	r2, [r3, #0]
    9a16:	2300      	movs	r3, #0
    9a18:	9e04      	ldr	r6, [sp, #16]
    9a1a:	6123      	str	r3, [r4, #16]
    9a1c:	e054      	b.n	9ac8 <_printf_i+0x210>
    9a1e:	681a      	ldr	r2, [r3, #0]
    9a20:	1d11      	adds	r1, r2, #4
    9a22:	6019      	str	r1, [r3, #0]
    9a24:	6816      	ldr	r6, [r2, #0]
    9a26:	2100      	movs	r1, #0
    9a28:	6862      	ldr	r2, [r4, #4]
    9a2a:	0030      	movs	r0, r6
    9a2c:	f000 f9ec 	bl	9e08 <memchr>
    9a30:	2800      	cmp	r0, #0
    9a32:	d001      	beq.n	9a38 <_printf_i+0x180>
    9a34:	1b80      	subs	r0, r0, r6
    9a36:	6060      	str	r0, [r4, #4]
    9a38:	6863      	ldr	r3, [r4, #4]
    9a3a:	6123      	str	r3, [r4, #16]
    9a3c:	2300      	movs	r3, #0
    9a3e:	9a04      	ldr	r2, [sp, #16]
    9a40:	7013      	strb	r3, [r2, #0]
    9a42:	e041      	b.n	9ac8 <_printf_i+0x210>
    9a44:	6923      	ldr	r3, [r4, #16]
    9a46:	0032      	movs	r2, r6
    9a48:	9906      	ldr	r1, [sp, #24]
    9a4a:	9805      	ldr	r0, [sp, #20]
    9a4c:	9d07      	ldr	r5, [sp, #28]
    9a4e:	47a8      	blx	r5
    9a50:	1c43      	adds	r3, r0, #1
    9a52:	d043      	beq.n	9adc <_printf_i+0x224>
    9a54:	6823      	ldr	r3, [r4, #0]
    9a56:	2500      	movs	r5, #0
    9a58:	079b      	lsls	r3, r3, #30
    9a5a:	d40f      	bmi.n	9a7c <_printf_i+0x1c4>
    9a5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9a5e:	68e0      	ldr	r0, [r4, #12]
    9a60:	4298      	cmp	r0, r3
    9a62:	da3d      	bge.n	9ae0 <_printf_i+0x228>
    9a64:	0018      	movs	r0, r3
    9a66:	e03b      	b.n	9ae0 <_printf_i+0x228>
    9a68:	0022      	movs	r2, r4
    9a6a:	2301      	movs	r3, #1
    9a6c:	3219      	adds	r2, #25
    9a6e:	9906      	ldr	r1, [sp, #24]
    9a70:	9805      	ldr	r0, [sp, #20]
    9a72:	9e07      	ldr	r6, [sp, #28]
    9a74:	47b0      	blx	r6
    9a76:	1c43      	adds	r3, r0, #1
    9a78:	d030      	beq.n	9adc <_printf_i+0x224>
    9a7a:	3501      	adds	r5, #1
    9a7c:	68e3      	ldr	r3, [r4, #12]
    9a7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    9a80:	1a9b      	subs	r3, r3, r2
    9a82:	429d      	cmp	r5, r3
    9a84:	dbf0      	blt.n	9a68 <_printf_i+0x1b0>
    9a86:	e7e9      	b.n	9a5c <_printf_i+0x1a4>
    9a88:	2d00      	cmp	r5, #0
    9a8a:	d0a9      	beq.n	99e0 <_printf_i+0x128>
    9a8c:	9e04      	ldr	r6, [sp, #16]
    9a8e:	0028      	movs	r0, r5
    9a90:	0039      	movs	r1, r7
    9a92:	f7fe ff5f 	bl	8954 <__aeabi_uidivmod>
    9a96:	9b03      	ldr	r3, [sp, #12]
    9a98:	3e01      	subs	r6, #1
    9a9a:	5c5b      	ldrb	r3, [r3, r1]
    9a9c:	0028      	movs	r0, r5
    9a9e:	7033      	strb	r3, [r6, #0]
    9aa0:	0039      	movs	r1, r7
    9aa2:	f7fe fed1 	bl	8848 <__udivsi3>
    9aa6:	1e05      	subs	r5, r0, #0
    9aa8:	d1f1      	bne.n	9a8e <_printf_i+0x1d6>
    9aaa:	2f08      	cmp	r7, #8
    9aac:	d109      	bne.n	9ac2 <_printf_i+0x20a>
    9aae:	6823      	ldr	r3, [r4, #0]
    9ab0:	07db      	lsls	r3, r3, #31
    9ab2:	d506      	bpl.n	9ac2 <_printf_i+0x20a>
    9ab4:	6863      	ldr	r3, [r4, #4]
    9ab6:	6922      	ldr	r2, [r4, #16]
    9ab8:	4293      	cmp	r3, r2
    9aba:	dc02      	bgt.n	9ac2 <_printf_i+0x20a>
    9abc:	2330      	movs	r3, #48	; 0x30
    9abe:	3e01      	subs	r6, #1
    9ac0:	7033      	strb	r3, [r6, #0]
    9ac2:	9b04      	ldr	r3, [sp, #16]
    9ac4:	1b9b      	subs	r3, r3, r6
    9ac6:	6123      	str	r3, [r4, #16]
    9ac8:	9b07      	ldr	r3, [sp, #28]
    9aca:	aa09      	add	r2, sp, #36	; 0x24
    9acc:	9300      	str	r3, [sp, #0]
    9ace:	0021      	movs	r1, r4
    9ad0:	9b06      	ldr	r3, [sp, #24]
    9ad2:	9805      	ldr	r0, [sp, #20]
    9ad4:	f7ff fe82 	bl	97dc <_printf_common>
    9ad8:	1c43      	adds	r3, r0, #1
    9ada:	d1b3      	bne.n	9a44 <_printf_i+0x18c>
    9adc:	2001      	movs	r0, #1
    9ade:	4240      	negs	r0, r0
    9ae0:	b00b      	add	sp, #44	; 0x2c
    9ae2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9ae4:	0000df06 	.word	0x0000df06
    9ae8:	0000def5 	.word	0x0000def5

00009aec <_putc_r>:
    9aec:	b570      	push	{r4, r5, r6, lr}
    9aee:	0006      	movs	r6, r0
    9af0:	000d      	movs	r5, r1
    9af2:	0014      	movs	r4, r2
    9af4:	2800      	cmp	r0, #0
    9af6:	d004      	beq.n	9b02 <_putc_r+0x16>
    9af8:	6983      	ldr	r3, [r0, #24]
    9afa:	2b00      	cmp	r3, #0
    9afc:	d101      	bne.n	9b02 <_putc_r+0x16>
    9afe:	f7ff fb59 	bl	91b4 <__sinit>
    9b02:	4b12      	ldr	r3, [pc, #72]	; (9b4c <_putc_r+0x60>)
    9b04:	429c      	cmp	r4, r3
    9b06:	d111      	bne.n	9b2c <_putc_r+0x40>
    9b08:	6874      	ldr	r4, [r6, #4]
    9b0a:	68a3      	ldr	r3, [r4, #8]
    9b0c:	3b01      	subs	r3, #1
    9b0e:	60a3      	str	r3, [r4, #8]
    9b10:	2b00      	cmp	r3, #0
    9b12:	da05      	bge.n	9b20 <_putc_r+0x34>
    9b14:	69a2      	ldr	r2, [r4, #24]
    9b16:	4293      	cmp	r3, r2
    9b18:	db12      	blt.n	9b40 <_putc_r+0x54>
    9b1a:	b2eb      	uxtb	r3, r5
    9b1c:	2b0a      	cmp	r3, #10
    9b1e:	d00f      	beq.n	9b40 <_putc_r+0x54>
    9b20:	6823      	ldr	r3, [r4, #0]
    9b22:	b2e8      	uxtb	r0, r5
    9b24:	1c5a      	adds	r2, r3, #1
    9b26:	6022      	str	r2, [r4, #0]
    9b28:	701d      	strb	r5, [r3, #0]
    9b2a:	bd70      	pop	{r4, r5, r6, pc}
    9b2c:	4b08      	ldr	r3, [pc, #32]	; (9b50 <_putc_r+0x64>)
    9b2e:	429c      	cmp	r4, r3
    9b30:	d101      	bne.n	9b36 <_putc_r+0x4a>
    9b32:	68b4      	ldr	r4, [r6, #8]
    9b34:	e7e9      	b.n	9b0a <_putc_r+0x1e>
    9b36:	4b07      	ldr	r3, [pc, #28]	; (9b54 <_putc_r+0x68>)
    9b38:	429c      	cmp	r4, r3
    9b3a:	d1e6      	bne.n	9b0a <_putc_r+0x1e>
    9b3c:	68f4      	ldr	r4, [r6, #12]
    9b3e:	e7e4      	b.n	9b0a <_putc_r+0x1e>
    9b40:	0022      	movs	r2, r4
    9b42:	0029      	movs	r1, r5
    9b44:	0030      	movs	r0, r6
    9b46:	f7ff f95d 	bl	8e04 <__swbuf_r>
    9b4a:	e7ee      	b.n	9b2a <_putc_r+0x3e>
    9b4c:	0000dea4 	.word	0x0000dea4
    9b50:	0000dec4 	.word	0x0000dec4
    9b54:	0000de84 	.word	0x0000de84

00009b58 <lflush>:
    9b58:	2209      	movs	r2, #9
    9b5a:	b510      	push	{r4, lr}
    9b5c:	8983      	ldrh	r3, [r0, #12]
    9b5e:	4013      	ands	r3, r2
    9b60:	2200      	movs	r2, #0
    9b62:	2b09      	cmp	r3, #9
    9b64:	d102      	bne.n	9b6c <lflush+0x14>
    9b66:	f7ff facf 	bl	9108 <fflush>
    9b6a:	0002      	movs	r2, r0
    9b6c:	0010      	movs	r0, r2
    9b6e:	bd10      	pop	{r4, pc}

00009b70 <__srefill_r>:
    9b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9b72:	0005      	movs	r5, r0
    9b74:	000c      	movs	r4, r1
    9b76:	2800      	cmp	r0, #0
    9b78:	d004      	beq.n	9b84 <__srefill_r+0x14>
    9b7a:	6983      	ldr	r3, [r0, #24]
    9b7c:	2b00      	cmp	r3, #0
    9b7e:	d101      	bne.n	9b84 <__srefill_r+0x14>
    9b80:	f7ff fb18 	bl	91b4 <__sinit>
    9b84:	4b3d      	ldr	r3, [pc, #244]	; (9c7c <__srefill_r+0x10c>)
    9b86:	429c      	cmp	r4, r3
    9b88:	d10a      	bne.n	9ba0 <__srefill_r+0x30>
    9b8a:	686c      	ldr	r4, [r5, #4]
    9b8c:	2300      	movs	r3, #0
    9b8e:	6063      	str	r3, [r4, #4]
    9b90:	230c      	movs	r3, #12
    9b92:	5ee2      	ldrsh	r2, [r4, r3]
    9b94:	b293      	uxth	r3, r2
    9b96:	0699      	lsls	r1, r3, #26
    9b98:	d50c      	bpl.n	9bb4 <__srefill_r+0x44>
    9b9a:	2001      	movs	r0, #1
    9b9c:	4240      	negs	r0, r0
    9b9e:	e068      	b.n	9c72 <__srefill_r+0x102>
    9ba0:	4b37      	ldr	r3, [pc, #220]	; (9c80 <__srefill_r+0x110>)
    9ba2:	429c      	cmp	r4, r3
    9ba4:	d101      	bne.n	9baa <__srefill_r+0x3a>
    9ba6:	68ac      	ldr	r4, [r5, #8]
    9ba8:	e7f0      	b.n	9b8c <__srefill_r+0x1c>
    9baa:	4b36      	ldr	r3, [pc, #216]	; (9c84 <__srefill_r+0x114>)
    9bac:	429c      	cmp	r4, r3
    9bae:	d1ed      	bne.n	9b8c <__srefill_r+0x1c>
    9bb0:	68ec      	ldr	r4, [r5, #12]
    9bb2:	e7eb      	b.n	9b8c <__srefill_r+0x1c>
    9bb4:	0759      	lsls	r1, r3, #29
    9bb6:	d44a      	bmi.n	9c4e <__srefill_r+0xde>
    9bb8:	06d9      	lsls	r1, r3, #27
    9bba:	d405      	bmi.n	9bc8 <__srefill_r+0x58>
    9bbc:	2309      	movs	r3, #9
    9bbe:	602b      	str	r3, [r5, #0]
    9bc0:	3337      	adds	r3, #55	; 0x37
    9bc2:	4313      	orrs	r3, r2
    9bc4:	81a3      	strh	r3, [r4, #12]
    9bc6:	e7e8      	b.n	9b9a <__srefill_r+0x2a>
    9bc8:	2608      	movs	r6, #8
    9bca:	4233      	tst	r3, r6
    9bcc:	d00a      	beq.n	9be4 <__srefill_r+0x74>
    9bce:	0021      	movs	r1, r4
    9bd0:	0028      	movs	r0, r5
    9bd2:	f7ff fa6d 	bl	90b0 <_fflush_r>
    9bd6:	2800      	cmp	r0, #0
    9bd8:	d1df      	bne.n	9b9a <__srefill_r+0x2a>
    9bda:	89a3      	ldrh	r3, [r4, #12]
    9bdc:	60a0      	str	r0, [r4, #8]
    9bde:	43b3      	bics	r3, r6
    9be0:	81a3      	strh	r3, [r4, #12]
    9be2:	61a0      	str	r0, [r4, #24]
    9be4:	2304      	movs	r3, #4
    9be6:	89a2      	ldrh	r2, [r4, #12]
    9be8:	4313      	orrs	r3, r2
    9bea:	81a3      	strh	r3, [r4, #12]
    9bec:	6923      	ldr	r3, [r4, #16]
    9bee:	2b00      	cmp	r3, #0
    9bf0:	d103      	bne.n	9bfa <__srefill_r+0x8a>
    9bf2:	0021      	movs	r1, r4
    9bf4:	0028      	movs	r0, r5
    9bf6:	f7ff fbb7 	bl	9368 <__smakebuf_r>
    9bfa:	230c      	movs	r3, #12
    9bfc:	5ee7      	ldrsh	r7, [r4, r3]
    9bfe:	b2be      	uxth	r6, r7
    9c00:	07b3      	lsls	r3, r6, #30
    9c02:	d00f      	beq.n	9c24 <__srefill_r+0xb4>
    9c04:	2301      	movs	r3, #1
    9c06:	81a3      	strh	r3, [r4, #12]
    9c08:	4b1f      	ldr	r3, [pc, #124]	; (9c88 <__srefill_r+0x118>)
    9c0a:	4920      	ldr	r1, [pc, #128]	; (9c8c <__srefill_r+0x11c>)
    9c0c:	6818      	ldr	r0, [r3, #0]
    9c0e:	f7ff fb45 	bl	929c <_fwalk>
    9c12:	2309      	movs	r3, #9
    9c14:	81a7      	strh	r7, [r4, #12]
    9c16:	401e      	ands	r6, r3
    9c18:	429e      	cmp	r6, r3
    9c1a:	d103      	bne.n	9c24 <__srefill_r+0xb4>
    9c1c:	0021      	movs	r1, r4
    9c1e:	0028      	movs	r0, r5
    9c20:	f7ff f9bc 	bl	8f9c <__sflush_r>
    9c24:	6923      	ldr	r3, [r4, #16]
    9c26:	6922      	ldr	r2, [r4, #16]
    9c28:	6023      	str	r3, [r4, #0]
    9c2a:	0028      	movs	r0, r5
    9c2c:	6963      	ldr	r3, [r4, #20]
    9c2e:	6a21      	ldr	r1, [r4, #32]
    9c30:	6a65      	ldr	r5, [r4, #36]	; 0x24
    9c32:	47a8      	blx	r5
    9c34:	0002      	movs	r2, r0
    9c36:	6060      	str	r0, [r4, #4]
    9c38:	2000      	movs	r0, #0
    9c3a:	4282      	cmp	r2, r0
    9c3c:	dc19      	bgt.n	9c72 <__srefill_r+0x102>
    9c3e:	89a1      	ldrh	r1, [r4, #12]
    9c40:	4282      	cmp	r2, r0
    9c42:	d117      	bne.n	9c74 <__srefill_r+0x104>
    9c44:	2320      	movs	r3, #32
    9c46:	430b      	orrs	r3, r1
    9c48:	81a3      	strh	r3, [r4, #12]
    9c4a:	3801      	subs	r0, #1
    9c4c:	e011      	b.n	9c72 <__srefill_r+0x102>
    9c4e:	6b61      	ldr	r1, [r4, #52]	; 0x34
    9c50:	2900      	cmp	r1, #0
    9c52:	d0cb      	beq.n	9bec <__srefill_r+0x7c>
    9c54:	0023      	movs	r3, r4
    9c56:	3344      	adds	r3, #68	; 0x44
    9c58:	4299      	cmp	r1, r3
    9c5a:	d002      	beq.n	9c62 <__srefill_r+0xf2>
    9c5c:	0028      	movs	r0, r5
    9c5e:	f7ff fbd1 	bl	9404 <_free_r>
    9c62:	2000      	movs	r0, #0
    9c64:	6c23      	ldr	r3, [r4, #64]	; 0x40
    9c66:	6360      	str	r0, [r4, #52]	; 0x34
    9c68:	6063      	str	r3, [r4, #4]
    9c6a:	4283      	cmp	r3, r0
    9c6c:	d0be      	beq.n	9bec <__srefill_r+0x7c>
    9c6e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    9c70:	6023      	str	r3, [r4, #0]
    9c72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9c74:	2340      	movs	r3, #64	; 0x40
    9c76:	6060      	str	r0, [r4, #4]
    9c78:	430b      	orrs	r3, r1
    9c7a:	e7a3      	b.n	9bc4 <__srefill_r+0x54>
    9c7c:	0000dea4 	.word	0x0000dea4
    9c80:	0000dec4 	.word	0x0000dec4
    9c84:	0000de84 	.word	0x0000de84
    9c88:	0000de80 	.word	0x0000de80
    9c8c:	00009b59 	.word	0x00009b59

00009c90 <_sbrk_r>:
    9c90:	2300      	movs	r3, #0
    9c92:	b570      	push	{r4, r5, r6, lr}
    9c94:	4c06      	ldr	r4, [pc, #24]	; (9cb0 <_sbrk_r+0x20>)
    9c96:	0005      	movs	r5, r0
    9c98:	0008      	movs	r0, r1
    9c9a:	6023      	str	r3, [r4, #0]
    9c9c:	f7f7 fa36 	bl	110c <_sbrk>
    9ca0:	1c43      	adds	r3, r0, #1
    9ca2:	d103      	bne.n	9cac <_sbrk_r+0x1c>
    9ca4:	6823      	ldr	r3, [r4, #0]
    9ca6:	2b00      	cmp	r3, #0
    9ca8:	d000      	beq.n	9cac <_sbrk_r+0x1c>
    9caa:	602b      	str	r3, [r5, #0]
    9cac:	bd70      	pop	{r4, r5, r6, pc}
    9cae:	46c0      	nop			; (mov r8, r8)
    9cb0:	200025cc 	.word	0x200025cc

00009cb4 <__sread>:
    9cb4:	b570      	push	{r4, r5, r6, lr}
    9cb6:	000c      	movs	r4, r1
    9cb8:	250e      	movs	r5, #14
    9cba:	5f49      	ldrsh	r1, [r1, r5]
    9cbc:	f000 f8b2 	bl	9e24 <_read_r>
    9cc0:	2800      	cmp	r0, #0
    9cc2:	db03      	blt.n	9ccc <__sread+0x18>
    9cc4:	6d63      	ldr	r3, [r4, #84]	; 0x54
    9cc6:	181b      	adds	r3, r3, r0
    9cc8:	6563      	str	r3, [r4, #84]	; 0x54
    9cca:	bd70      	pop	{r4, r5, r6, pc}
    9ccc:	89a3      	ldrh	r3, [r4, #12]
    9cce:	4a02      	ldr	r2, [pc, #8]	; (9cd8 <__sread+0x24>)
    9cd0:	4013      	ands	r3, r2
    9cd2:	81a3      	strh	r3, [r4, #12]
    9cd4:	e7f9      	b.n	9cca <__sread+0x16>
    9cd6:	46c0      	nop			; (mov r8, r8)
    9cd8:	ffffefff 	.word	0xffffefff

00009cdc <__swrite>:
    9cdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9cde:	001f      	movs	r7, r3
    9ce0:	898b      	ldrh	r3, [r1, #12]
    9ce2:	0005      	movs	r5, r0
    9ce4:	000c      	movs	r4, r1
    9ce6:	0016      	movs	r6, r2
    9ce8:	05db      	lsls	r3, r3, #23
    9cea:	d505      	bpl.n	9cf8 <__swrite+0x1c>
    9cec:	230e      	movs	r3, #14
    9cee:	5ec9      	ldrsh	r1, [r1, r3]
    9cf0:	2200      	movs	r2, #0
    9cf2:	2302      	movs	r3, #2
    9cf4:	f000 f874 	bl	9de0 <_lseek_r>
    9cf8:	89a3      	ldrh	r3, [r4, #12]
    9cfa:	4a05      	ldr	r2, [pc, #20]	; (9d10 <__swrite+0x34>)
    9cfc:	0028      	movs	r0, r5
    9cfe:	4013      	ands	r3, r2
    9d00:	81a3      	strh	r3, [r4, #12]
    9d02:	0032      	movs	r2, r6
    9d04:	230e      	movs	r3, #14
    9d06:	5ee1      	ldrsh	r1, [r4, r3]
    9d08:	003b      	movs	r3, r7
    9d0a:	f000 f81f 	bl	9d4c <_write_r>
    9d0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9d10:	ffffefff 	.word	0xffffefff

00009d14 <__sseek>:
    9d14:	b570      	push	{r4, r5, r6, lr}
    9d16:	000c      	movs	r4, r1
    9d18:	250e      	movs	r5, #14
    9d1a:	5f49      	ldrsh	r1, [r1, r5]
    9d1c:	f000 f860 	bl	9de0 <_lseek_r>
    9d20:	89a3      	ldrh	r3, [r4, #12]
    9d22:	1c42      	adds	r2, r0, #1
    9d24:	d103      	bne.n	9d2e <__sseek+0x1a>
    9d26:	4a05      	ldr	r2, [pc, #20]	; (9d3c <__sseek+0x28>)
    9d28:	4013      	ands	r3, r2
    9d2a:	81a3      	strh	r3, [r4, #12]
    9d2c:	bd70      	pop	{r4, r5, r6, pc}
    9d2e:	2280      	movs	r2, #128	; 0x80
    9d30:	0152      	lsls	r2, r2, #5
    9d32:	4313      	orrs	r3, r2
    9d34:	81a3      	strh	r3, [r4, #12]
    9d36:	6560      	str	r0, [r4, #84]	; 0x54
    9d38:	e7f8      	b.n	9d2c <__sseek+0x18>
    9d3a:	46c0      	nop			; (mov r8, r8)
    9d3c:	ffffefff 	.word	0xffffefff

00009d40 <__sclose>:
    9d40:	b510      	push	{r4, lr}
    9d42:	230e      	movs	r3, #14
    9d44:	5ec9      	ldrsh	r1, [r1, r3]
    9d46:	f000 f815 	bl	9d74 <_close_r>
    9d4a:	bd10      	pop	{r4, pc}

00009d4c <_write_r>:
    9d4c:	b570      	push	{r4, r5, r6, lr}
    9d4e:	0005      	movs	r5, r0
    9d50:	0008      	movs	r0, r1
    9d52:	0011      	movs	r1, r2
    9d54:	2200      	movs	r2, #0
    9d56:	4c06      	ldr	r4, [pc, #24]	; (9d70 <_write_r+0x24>)
    9d58:	6022      	str	r2, [r4, #0]
    9d5a:	001a      	movs	r2, r3
    9d5c:	f7f7 ff3a 	bl	1bd4 <_write>
    9d60:	1c43      	adds	r3, r0, #1
    9d62:	d103      	bne.n	9d6c <_write_r+0x20>
    9d64:	6823      	ldr	r3, [r4, #0]
    9d66:	2b00      	cmp	r3, #0
    9d68:	d000      	beq.n	9d6c <_write_r+0x20>
    9d6a:	602b      	str	r3, [r5, #0]
    9d6c:	bd70      	pop	{r4, r5, r6, pc}
    9d6e:	46c0      	nop			; (mov r8, r8)
    9d70:	200025cc 	.word	0x200025cc

00009d74 <_close_r>:
    9d74:	2300      	movs	r3, #0
    9d76:	b570      	push	{r4, r5, r6, lr}
    9d78:	4c06      	ldr	r4, [pc, #24]	; (9d94 <_close_r+0x20>)
    9d7a:	0005      	movs	r5, r0
    9d7c:	0008      	movs	r0, r1
    9d7e:	6023      	str	r3, [r4, #0]
    9d80:	f7f7 f9d6 	bl	1130 <_close>
    9d84:	1c43      	adds	r3, r0, #1
    9d86:	d103      	bne.n	9d90 <_close_r+0x1c>
    9d88:	6823      	ldr	r3, [r4, #0]
    9d8a:	2b00      	cmp	r3, #0
    9d8c:	d000      	beq.n	9d90 <_close_r+0x1c>
    9d8e:	602b      	str	r3, [r5, #0]
    9d90:	bd70      	pop	{r4, r5, r6, pc}
    9d92:	46c0      	nop			; (mov r8, r8)
    9d94:	200025cc 	.word	0x200025cc

00009d98 <_fstat_r>:
    9d98:	2300      	movs	r3, #0
    9d9a:	b570      	push	{r4, r5, r6, lr}
    9d9c:	4c06      	ldr	r4, [pc, #24]	; (9db8 <_fstat_r+0x20>)
    9d9e:	0005      	movs	r5, r0
    9da0:	0008      	movs	r0, r1
    9da2:	0011      	movs	r1, r2
    9da4:	6023      	str	r3, [r4, #0]
    9da6:	f7f7 f9c6 	bl	1136 <_fstat>
    9daa:	1c43      	adds	r3, r0, #1
    9dac:	d103      	bne.n	9db6 <_fstat_r+0x1e>
    9dae:	6823      	ldr	r3, [r4, #0]
    9db0:	2b00      	cmp	r3, #0
    9db2:	d000      	beq.n	9db6 <_fstat_r+0x1e>
    9db4:	602b      	str	r3, [r5, #0]
    9db6:	bd70      	pop	{r4, r5, r6, pc}
    9db8:	200025cc 	.word	0x200025cc

00009dbc <_isatty_r>:
    9dbc:	2300      	movs	r3, #0
    9dbe:	b570      	push	{r4, r5, r6, lr}
    9dc0:	4c06      	ldr	r4, [pc, #24]	; (9ddc <_isatty_r+0x20>)
    9dc2:	0005      	movs	r5, r0
    9dc4:	0008      	movs	r0, r1
    9dc6:	6023      	str	r3, [r4, #0]
    9dc8:	f7f7 f9ba 	bl	1140 <_isatty>
    9dcc:	1c43      	adds	r3, r0, #1
    9dce:	d103      	bne.n	9dd8 <_isatty_r+0x1c>
    9dd0:	6823      	ldr	r3, [r4, #0]
    9dd2:	2b00      	cmp	r3, #0
    9dd4:	d000      	beq.n	9dd8 <_isatty_r+0x1c>
    9dd6:	602b      	str	r3, [r5, #0]
    9dd8:	bd70      	pop	{r4, r5, r6, pc}
    9dda:	46c0      	nop			; (mov r8, r8)
    9ddc:	200025cc 	.word	0x200025cc

00009de0 <_lseek_r>:
    9de0:	b570      	push	{r4, r5, r6, lr}
    9de2:	0005      	movs	r5, r0
    9de4:	0008      	movs	r0, r1
    9de6:	0011      	movs	r1, r2
    9de8:	2200      	movs	r2, #0
    9dea:	4c06      	ldr	r4, [pc, #24]	; (9e04 <_lseek_r+0x24>)
    9dec:	6022      	str	r2, [r4, #0]
    9dee:	001a      	movs	r2, r3
    9df0:	f7f7 f9a8 	bl	1144 <_lseek>
    9df4:	1c43      	adds	r3, r0, #1
    9df6:	d103      	bne.n	9e00 <_lseek_r+0x20>
    9df8:	6823      	ldr	r3, [r4, #0]
    9dfa:	2b00      	cmp	r3, #0
    9dfc:	d000      	beq.n	9e00 <_lseek_r+0x20>
    9dfe:	602b      	str	r3, [r5, #0]
    9e00:	bd70      	pop	{r4, r5, r6, pc}
    9e02:	46c0      	nop			; (mov r8, r8)
    9e04:	200025cc 	.word	0x200025cc

00009e08 <memchr>:
    9e08:	b2c9      	uxtb	r1, r1
    9e0a:	1882      	adds	r2, r0, r2
    9e0c:	4290      	cmp	r0, r2
    9e0e:	d101      	bne.n	9e14 <memchr+0xc>
    9e10:	2000      	movs	r0, #0
    9e12:	4770      	bx	lr
    9e14:	7803      	ldrb	r3, [r0, #0]
    9e16:	428b      	cmp	r3, r1
    9e18:	d0fb      	beq.n	9e12 <memchr+0xa>
    9e1a:	3001      	adds	r0, #1
    9e1c:	e7f6      	b.n	9e0c <memchr+0x4>

00009e1e <__malloc_lock>:
    9e1e:	4770      	bx	lr

00009e20 <__malloc_unlock>:
    9e20:	4770      	bx	lr
	...

00009e24 <_read_r>:
    9e24:	b570      	push	{r4, r5, r6, lr}
    9e26:	0005      	movs	r5, r0
    9e28:	0008      	movs	r0, r1
    9e2a:	0011      	movs	r1, r2
    9e2c:	2200      	movs	r2, #0
    9e2e:	4c06      	ldr	r4, [pc, #24]	; (9e48 <_read_r+0x24>)
    9e30:	6022      	str	r2, [r4, #0]
    9e32:	001a      	movs	r2, r3
    9e34:	f7f7 feba 	bl	1bac <_read>
    9e38:	1c43      	adds	r3, r0, #1
    9e3a:	d103      	bne.n	9e44 <_read_r+0x20>
    9e3c:	6823      	ldr	r3, [r4, #0]
    9e3e:	2b00      	cmp	r3, #0
    9e40:	d000      	beq.n	9e44 <_read_r+0x20>
    9e42:	602b      	str	r3, [r5, #0]
    9e44:	bd70      	pop	{r4, r5, r6, pc}
    9e46:	46c0      	nop			; (mov r8, r8)
    9e48:	200025cc 	.word	0x200025cc
    9e4c:	732f2e2e 	.word	0x732f2e2e
    9e50:	682f6372 	.word	0x682f6372
    9e54:	732f6c61 	.word	0x732f6c61
    9e58:	682f6372 	.word	0x682f6372
    9e5c:	695f6c61 	.word	0x695f6c61
    9e60:	00632e6f 	.word	0x00632e6f
    9e64:	732f2e2e 	.word	0x732f2e2e
    9e68:	682f6372 	.word	0x682f6372
    9e6c:	732f6c61 	.word	0x732f6c61
    9e70:	682f6372 	.word	0x682f6372
    9e74:	745f6c61 	.word	0x745f6c61
    9e78:	72656d69 	.word	0x72656d69
    9e7c:	0000632e 	.word	0x0000632e
    9e80:	732f2e2e 	.word	0x732f2e2e
    9e84:	682f6372 	.word	0x682f6372
    9e88:	732f6c61 	.word	0x732f6c61
    9e8c:	682f6372 	.word	0x682f6372
    9e90:	755f6c61 	.word	0x755f6c61
    9e94:	74726173 	.word	0x74726173
    9e98:	7973615f 	.word	0x7973615f
    9e9c:	632e636e 	.word	0x632e636e
    9ea0:	00000000 	.word	0x00000000
    9ea4:	732f2e2e 	.word	0x732f2e2e
    9ea8:	682f6372 	.word	0x682f6372
    9eac:	732f6c61 	.word	0x732f6c61
    9eb0:	682f6372 	.word	0x682f6372
    9eb4:	755f6c61 	.word	0x755f6c61
    9eb8:	74726173 	.word	0x74726173
    9ebc:	6e79735f 	.word	0x6e79735f
    9ec0:	00632e63 	.word	0x00632e63
    9ec4:	732f2e2e 	.word	0x732f2e2e
    9ec8:	682f6372 	.word	0x682f6372
    9ecc:	752f6c61 	.word	0x752f6c61
    9ed0:	736c6974 	.word	0x736c6974
    9ed4:	6372732f 	.word	0x6372732f
    9ed8:	6974752f 	.word	0x6974752f
    9edc:	6c5f736c 	.word	0x6c5f736c
    9ee0:	2e747369 	.word	0x2e747369
    9ee4:	00000063 	.word	0x00000063
    9ee8:	732f2e2e 	.word	0x732f2e2e
    9eec:	682f6372 	.word	0x682f6372
    9ef0:	752f6c61 	.word	0x752f6c61
    9ef4:	736c6974 	.word	0x736c6974
    9ef8:	6372732f 	.word	0x6372732f
    9efc:	6974752f 	.word	0x6974752f
    9f00:	725f736c 	.word	0x725f736c
    9f04:	62676e69 	.word	0x62676e69
    9f08:	65666675 	.word	0x65666675
    9f0c:	00632e72 	.word	0x00632e72

00009f10 <hid_app_gap_handle>:
	...
    9f24:	00001149 0000115d 00000000 00000000     I...]...........
	...

00009f5c <hid_app_gatt_server_handle>:
    9f5c:	0000118d 00000000 00000000 00000000     ................
	...
    9f84:	0000000d 74696e49 696c6169 676e697a     ....Initializing
    9f94:	44494820 79654b20 72616f62 70412064      HID Keyboard Ap
    9fa4:	63696c70 6f697461 0000006e 20444948     plication...HID 
    9fb4:	666f7250 20656c69 666e6f43 72756769     Profile Configur
    9fc4:	00006465 20444948 666f7250 20656c69     ed..HID Profile 
    9fd4:	666e6f43 72756769 6f697461 6146206e     Configuration Fa
    9fe4:	64656c69 00000000 2079654b 73657250     iled....Key Pres
    9ff4:	2e646573 00002e2e                       sed.....

00009ffc <_map>:
    9ffc:	0000000f 0000000f 732f2e2e 682f6372     ........../src/h
    a00c:	652f6c70 682f6369 655f6c70 632e6369     pl/eic/hpl_eic.c
    a01c:	00000000                                ....

0000a020 <_i2cms>:
	...

0000a038 <_usarts>:
    a038:	00000000 40120004 00030000 0000b14f     .......@....O...
    a048:	00000000 00000002 40100004 00030000     ...........@....
    a058:	0000b14f 00000000 00000003 40100004     O..............@
    a068:	00030000 0000f629 00000000 732f2e2e     ....)........./s
    a078:	682f6372 732f6c70 6f637265 70682f6d     rc/hpl/sercom/hp
    a088:	65735f6c 6d6f6372 0000632e              l_sercom.c..

0000a094 <_tcs>:
    a094:	07680003 00000000 00000000 00000000     ..h.............
    a0a4:	00000000 732f2e2e 682f6372 742f6c70     ....../src/hpl/t
    a0b4:	70682f63 63745f6c 0000632e              c/hpl_tc.c..

0000a0c0 <hid_gap_handle>:
	...
    a0d8:	00001c71 00000000 00000000 00000000     q...............
	...

0000a10c <hid_gatt_server_handle>:
	...
    a114:	00001cd1 00000000 00000000 00000000     ................
	...
    a134:	69766544 41206563 72657664 65736974     Device Advertise
    a144:	746e656d 69614620 0064656c 69766544     ment Failed.Devi
    a154:	53206563 74726174 41206465 72657664     ce Started Adver
    a164:	65736974 746e656d 00000000 6c696146     tisement....Fail
    a174:	206f7420 20746573 65766441 73697472      to set Advertis
    a184:	6e656d65 61642074 00006174 0000205a     ement data..Z ..
    a194:	00002018 00002042 00002042 00002042     . ..B ..B ..B ..
    a1a4:	0000205a 00002042 00002042 000028e6     Z ..B ..B ...(..
    a1b4:	00002952 000028ce 00002958 000028d4     R)...(..X)...(..
    a1c4:	000028da 000028e0 00002f84 00002f84     .(...(.../.../..
    a1d4:	00002f84 00002f84 00002f84 00002f84     ./.../.../.../..
    a1e4:	00002f84 00002f84 00002f84 00002f84     ./.../.../.../..
    a1f4:	00002f84 00002f84 00002f84 00002f84     ./.../.../.../..
    a204:	00002f84 00002f84 00002f84 00002f84     ./.../.../.../..
    a214:	00002f84 00002fa4 00002fa4 00002fa4     ./.../.../.../..
    a224:	00002fa4 00002fa4 00002fa4 00002fa4     ./.../.../.../..
    a234:	00002fa4 00002fa4 00002fa4 00002fc8     ./.../.../.../..
    a244:	00002fc8 00002fc8 00002fc8 00002fc8     ./.../.../.../..
    a254:	00002fc8 00002fc8 00002fc8 00002fc8     ./.../.../.../..
    a264:	00002fc8 00002fec 00002fec 00002fec     ./.../.../.../..
    a274:	00002fec 00002fec 00002fec 00003006     ./.../.../...0..
    a284:	00003006 00003006 00003006 00003006     .0...0...0...0..
    a294:	00003006 00003006 00003006 00003006     .0...0...0...0..
    a2a4:	00003020 00003020 00003044 00003044      0.. 0..D0..D0..
    a2b4:	00003044                                D0..

0000a2b8 <ble_mgr_gap_handle>:
    a2b8:	00001f91 0000214d 00001fa9 00000000     ....M!..........
    a2c8:	00000000 00002c2d 00002005 00001fa3     ....-,... ......
    a2d8:	000022f5 000021d1 000024fd 0000230d     ."...!...$...#..
    a2e8:	00002661 000027d1 00002091 00002e55     a&...'... ..U...
	...

0000a304 <ble_mgr_gatt_server_handle>:
	...
    a31c:	00001f95 00001fd5 00001f99 00000000     ................
    a32c:	00000080 b2d60600 f8f005f0 00000000     ................
    a33c:	34333231 00003635 efcdab00 00efcdab     123456..........
    a34c:	6e616353 676e696e 61662020 64656c69     Scanning  failed
    a35c:	00000000 2055544d 6e616843 46206567     ....MTU Change F
    a36c:	656c6961 43202c64 656e6e6f 6f697463     ailed, Connectio
    a37c:	6148206e 656c646e 2c64253a 65704f20     n Handle:%d, Ope
    a38c:	69746172 253a6e6f 00000064 69766544     ration:%d...Devi
    a39c:	64206563 6f637369 63656e6e 20646574     ce disconnected 
    a3ac:	73616552 303a6e6f 32302578 61482078     Reason:0x%02x Ha
    a3bc:	656c646e 2578303d 00000078 72636e45     ndle=0x%x...Encr
    a3cc:	69747079 66206e6f 656c6961 00000064     yption failed...
    a3dc:	72636e45 69747079 63206e6f 6c706d6f     Encryption compl
    a3ec:	64657465 63757320 73736563 6c6c7566     eted successfull
    a3fc:	00000079 20454c42 69766544 6e206563     y...BLE Device n
    a40c:	6620746f 646e756f 636e6520 74707972     ot found encrypt
    a41c:	206e6f69 6f666e69 00000000 6f666e49     ion info....Info
    a42c:	78616d3a 6d756d69 2e6f6e20 7320666f     :maximum no.of s
    a43c:	206e6163 69766564 72206563 68636165     can device reach
    a44c:	2e2e6465 6f74532e 6e697070 63532067     ed...Stopping Sc
    a45c:	00006e61 6c696146 74206465 7473206f     an..Failed to st
    a46c:	7320706f 6e6e6163 00676e69 72696150     op scanning.Pair
    a47c:	20676e69 6c696166 2e2e6465 7369442e     ing failed...Dis
    a48c:	6e6e6f63 69746365 0000676e 63736944     connecting..Disc
    a49c:	656e6e6f 52207463 65757165 46207473     onnect Request F
    a4ac:	656c6961 00000064 72696150 20676e69     ailed...Pairing 
    a4bc:	636f7270 72756465 6f632065 656c706d     procedure comple
    a4cc:	20646574 63637573 66737365 796c6c75     ted successfully
    a4dc:	00000000 20454c42 69766544 6e206563     ....BLE Device n
    a4ec:	6620746f 646e756f 206f7420 726f7473     ot found to stor
    a4fc:	68742065 61702065 6e697269 6e692067     e the pairing in
    a50c:	00006f66 72636e45 69747079 4e206e6f     fo..Encryption N
    a51c:	7320746f 74726174 00006465 76616c53     ot started..Slav
    a52c:	65532065 69727563 52207974 2d207165     e Security Req -
    a53c:	74754120 746e6568 74616369 206e6f69      Authentication 
    a54c:	6c696146 00006465 72696150 71655220     Failed..Pair Req
    a55c:	74736575 41202d20 65687475 6369746e     uest - Authentic
    a56c:	6f697461 6146206e 64656c69 00000000     ation Failed....
    a57c:	65746e45 68742072 61502065 656b7373     Enter the Passke
    a58c:	2d362879 69676944 69202974 6554206e     y(6-Digit) in Te
    a59c:	6e696d72 003a6c61 206e6950 656d6954     rminal:.Pin Time
    a5ac:	0074756f 63736944 656e6e6f 6e697463     out.Disconnectin
    a5bc:	2e2e2067 0000002e 61656c50 45206573     g ......Please E
    a5cc:	7265746e 65687420 6c6f6620 69776f6c     nter the followi
    a5dc:	5020676e 2d737361 65646f63 206e6f28     ng Pass-code(on 
    a5ec:	6568746f 65442072 65636976 00003a29     other Device):..
    a5fc:	72696150 79656b2d 70657220 6620796c     Pair-key reply f
    a60c:	656c6961 00000064 20424f4f 74616546     ailed...OOB Feat
    a61c:	20657275 20746f4e 70707573 6574726f     ure Not supporte
    a62c:	00000064 65746e45 20646572 73736150     d...Entered Pass
    a63c:	646f632d 00003a65 72696150 20676e69     -code:..Pairing 
    a64c:	6f666e69 74616d72 206e6f69 7020666f     information of p
    a65c:	20726565 69766564 69206563 6f6e2073     eer device is no
    a66c:	76612074 616c6961 2e656c62 00000000     t available.....
    a67c:	61656c50 75206573 6961706e 68742072     Please unpair th
    a68c:	65642065 65636976 6f726620 6570206d     e device from pe
    a69c:	64207265 63697665 6f6d2865 656c6962     er device(mobile
    a6ac:	65732029 6e697474 6d207367 20756e65     ) settings menu 
    a6bc:	20646e61 72617473 61702074 6e697269     and start pairin
    a6cc:	67612067 006e6961 72636e45 69747079     g again.Encrypti
    a6dc:	52206e6f 65757165 52207473 796c7065     on Request Reply
    a6ec:	69614620 0064656c 74696e49 696c6169      Failed.Initiali
    a6fc:	676e697a 4c544220 30303143 00000030     zing BTLC1000...
    a70c:	434c5442 30303031 696e4920 6c616974     BTLC1000 Initial
    a71c:	74617a69 206e6f69 6c696166 00006465     ization failed..
    a72c:	61656c50 63206573 6b636568 65687420     Please check the
    a73c:	776f7020 61207265 6320646e 656e6e6f      power and conne
    a74c:	6f697463 202f206e 64726168 65726177     ction / hardware
    a75c:	6e6f6320 7463656e 0000726f 454d5441      connector..ATME
    a76c:	49482d4c 00000044 69766544 6e206563     L-HID...Device n
    a77c:	20656d61 20746573 6c696166 00006465     ame set failed..
    a78c:	61204442 65726464 67207373 66207465     BD address get f
    a79c:	656c6961 00000064 41204442 65726464     ailed...BD Addre
    a7ac:	303a7373 32302578 32302558 32302558     ss:0x%02X%02X%02
    a7bc:	32302558 32302558 32302558 41202c58     X%02X%02X%02X, A
    a7cc:	65726464 54207373 3a657079 00006425     ddress Type:%d..
    a7dc:	20746553 20454c42 69766544 63206563     Set BLE Device c
    a7ec:	69666e6f 61727567 6e6f6974 69616620     onfiguration fai
    a7fc:	0064656c 20746553 20454c42 69766544     led.Set BLE Devi
    a80c:	41206563 65726464 66207373 656c6961     ce Address faile
    a81c:	00000064 6e616353 676e696e 502e2e2e     d...Scanning...P
    a82c:	7361656c 61772065 2e2e7469 0000002e     lease wait......
    a83c:	76616c53 65732065 69727563 72207974     Slave security r
    a84c:	65757165 66207473 656c6961 00000064     equest failed...
    a85c:	6e6e6f43 65746365 6f742064 65657020     Connected to pee
    a86c:	65642072 65636976 74697720 64612068     r device with ad
    a87c:	73657264 78302073 78323025 78323025     dress 0x%02x%02x
    a88c:	78323025 78323025 78323025 78323025     %02x%02x%02x%02x
    a89c:	00000000 6e6e6f43 69746365 48206e6f     ....Connection H
    a8ac:	6c646e61 64252065 00000000 6f736552     andle %d....Reso
    a8bc:	6e69766c 61522067 6d6f646e 64646120     lving Random add
    a8cc:	73736572 69616620 2a64656c 0000002a     ress failed**...
    a8dc:	2078614d 626d756e 6f207265 6f632066     Max number of co
    a8ec:	63656e6e 6e6f6974 61657220 64656863     nnection reached
    a8fc:	6425203a 3d3d3d20 7369443e 6e6e6f63     : %d ===>Disconn
    a90c:	69746365 2e2e676e 0000002e 69766544     ecting......Devi
    a91c:	43206563 656e6e6f 6f697463 6146206e     ce Connection Fa
    a92c:	64656c69 53202d20 75746174 25203a73     iled - Status: %
    a93c:	00000064 20454c42 65766441 73697472     d...BLE Advertis
    a94c:	6e656d65 61642074 73206174 66207465     ement data set f
    a95c:	656c6961 00000064 00000000 00000000     ailed...........
    a96c:	00250400 70657453 206e6168 63656c45     ..%.Stephan Elec
    a97c:	6e6f7274 00736369 6c6f6f4d 61706974     tronics.Mooltipa
    a98c:	4d207373 20696e69 00454c42 5f524553     ss Mini BLE.SER_
    a99c:	004d554e 525f5748 00005645 525f5746     NUM.HW_REV..FW_R
    a9ac:	00005645 525f5753 00005645 61766e69     EV..SW_REV..inva
    a9bc:	2064696c 676e656c 70206874 6d617261     lid length param
    a9cc:	72657465 00000000 61647075 676e6974     eter....updating
    a9dc:	65687420 61686320 74636172 73697265      the characteris
    a9ec:	20636974 6c696166 000d6465 20444948     tic failed..HID 
    a9fc:	76726553 20656369 68203a3a 735f6469     Service :: hid_s
    aa0c:	69767265 645f6563 67657262 203a3a20     ervice_dbreg :: 
    aa1c:	6f706552 52207472 72656665 65636e65     Report Reference
    aa2c:	73654420 70697263 20726f74 756c6156      Descriptor Valu
    aa3c:	65532065 61462074 52206c69 6f736165     e Set Fail Reaso
    aa4c:	6425206e 00000000 20444948 76726553     n %d....HID Serv
    aa5c:	20656369 68203a3a 735f6469 5f767265     ice :: hid_serv_
    aa6c:	6f706572 755f7472 74616470 3a3a2065     report_update ::
    aa7c:	61684320 74636172 73697265 20636974      Characteristic 
    aa8c:	756c6156 65532065 61462074 64656c69     Value Set Failed
    aa9c:	61655220 206e6f73 00006425               Reason %d..

0000aaa8 <__FUNCTION__.7971>:
    aaa8:	646e6168 625f656c 655f656c 746e6576     handle_ble_event
    aab8:	42494c00 20294528 36312d25 30252873     .LIB(E) %-16s(%0
    aac8:	20296433 73323325 3a202928 2e2e0020     3d) %32s() : ...
    aad8:	2f2e2e2f 2e2f2e2e 6c622f2e 74735f65     /../../../ble_st
    aae8:	2f6b6361 5f697061 65726f63 6576652f     ack/api_core/eve
    aaf8:	632e746e 686e5500 6c646e61 0a3a6465     nt.c.Unhandled:.
    ab08:	63727309 3a64695f 30257830 090a7834     .src_id:0x%04x..
    ab18:	5f67736d 303a6469 34302578 41000a78     msg_id:0x%04x..A
    ab28:	6c656d74 726f4320 74612e70                       tmel Corp.

0000ab32 <__FUNCTION__.7955>:
    ab32:	625f7461 735f656c 645f7465 635f7665     at_ble_set_dev_c
    ab42:	69666e6f 74610067                                onfig.

0000ab48 <__FUNCTION__.8096>:
    ab48:	625f7461 635f656c 5f6e6e6f 61647075     at_ble_conn_upda
    ab58:	725f6574 796c7065 01030000                       te_reply.

0000ab61 <CSWTCH.64>:
    ab61:	03010300 03030303 03030303 2e020303     ................
    ab71:	2e2e2f2e 2f2e2e2f 622f2e2e 735f656c     ./../../../ble_s
    ab81:	6b636174 6970612f 726f635f 61672f65     tack/api_core/ga
    ab91:	00632e70 61766e49 2064696c 61726150     p.c.Invalid Para
    aba1:	6574656d 65207372 726f7272 61745300     meters error.Sta
    abb1:	20737574 7830203a 58323025 6e49000a     tus : 0x%02X..In
    abc1:	696c6176 61502064 656d6172 73726574     valid Parameters
    abd1:	6b6e5500 6e776f6e 64646120 73736572     .Unknown address
    abe1:	70797420 78302065 3e32253c 55000a0d      type 0x<%2>...U
    abf1:	6f6e6b6e 64206e77 63697665 6f722065     nknown device ro
    ac01:	3020656c 32253c78 000a0d3e 2055544d     le 0x<%2>...MTU 
    ac11:	756c6156 78652065 64656563 78616d20     Value exceed max
    ac21:	6d756d69 6c6c6120 6465776f 6c617620     imum allowed val
    ac31:	0d206575 6e69000a 66726574 5f656361     ue ...interface_
    ac41:	74696e69 2e2e2e20 25783020 0d583230     init ... 0x%02X.
    ac51:	6e55000a 656c6261 206f7420 65736572     ..Unable to rese
    ac61:	253c2074 3e583230 61000a0d 6c625f74     t <%02X>...at_bl
    ac71:	65735f65 65645f74 6f635f76 6769666e     e_set_dev_config
    ac81:	2e2e2e20 25783020 0d583230 6e55000a      ... 0x%02X...Un
    ac91:	656c6261 206f7420 20746573 61666564     able to set defa
    aca1:	20746c75 69766564 6e206563 20656d61     ult device name 
    acb1:	3230253c 0a0d3e58 746e4900 61767265     <%02X>...Interva
    acc1:	6163206c 2074276e 30206562 20726f20     l can't be 0 or 
    acd1:	7373656c 4e000a0d 204c4c55 6e696f70     less...NULL poin
    ace1:	0d726574 554e000a 70204c4c 746e696f     ter...NULL point
    acf1:	65207265 726f7272 766e4900 64696c61     er error.Invalid
    ad01:	76656420 20656369 656d616e 69727720      device name wri
    ad11:	70206574 696d7265 6f697373 6573006e     te permission.se
    ad21:	65642074 65636976 6e6f6320 20676966     t device config 
    ad31:	6c696166 202c6465 74617473 203a7375     failed, status: 
    ad41:	3e64253c 766e4900 64696c61 6e6f4320     <%d>.Invalid Con
    ad51:	6f4d202e 3c206564 0d3e6425 6f4e000a     . Mode <%d>...No
    ad61:	706d4520 45207974 7972746e 726f6620      Empty Entry for
    ad71:	6e6f6320 7463656e 0d6e6f69 6e49000a      connection...In
    ad81:	696c6176 6e692064 76726574 0a0d6c61     valid interval..
    ad91:	616e5500 20656c62 67206f74 61207465     .Unable to get a
    ada1:	65726464 0a0d7373 766e4900 64696c61     ddress...Invalid
    adb1:	74754120 79542068 25206570 000a0d64      Auth Type %d...

0000adc1 <__FUNCTION__.7934>:
    adc1:	625f7461 645f656c 63697665 616e5f65     at_ble_device_na
    add1:	735f656d 61007465                                me_set.

0000add8 <__FUNCTION__.7888>:
    add8:	625f7461 695f656c 0074696e              at_ble_init.

0000ade4 <CSWTCH.62>:
    ade4:	75100402                                         ...

0000ade7 <__FUNCTION__.7256>:
    ade7:	72657375 7365645f 70697263 6e6f6974     user_description
    adf7:	6665645f 00656e69 2e2f2e2e 2e2e2f2e     _define.../../..
    ae07:	2f2e2e2f 5f656c62 63617473 70612f6b     /../ble_stack/ap
    ae17:	6f635f69 672f6572 5f747461 76726573     i_core/gatt_serv
    ae27:	632e7265 0021cc00                                er.c.

0000ae2c <interface_send_msg>:
    ae2c:	200021cc 00215752                       .!. RW!.

0000ae34 <dummy_buffer>:
    ae34:	20001dcc                                ... 

0000ae38 <__FUNCTION__.7900>:
    ae38:	625f7461 655f656c 7972636e 6f697470     at_ble_encryptio
    ae48:	65725f6e 73657571 65725f74 00796c70     n_request_reply.

0000ae58 <__FUNCTION__.7856>:
    ae58:	625f7461 705f656c 5f726961 5f79656b     at_ble_pair_key_
    ae68:	6c706572 74610079                                reply.

0000ae6e <__FUNCTION__.7866>:
    ae6e:	625f7461 735f656c 5f646e65 76616c73     at_ble_send_slav
    ae7e:	65735f65 65725f63 73657571 2e2e0074     e_sec_request...
    ae8e:	2f2e2e2f 2e2f2e2e 6c622f2e 74735f65     /../../../ble_st
    ae9e:	2f6b6361 5f697061 65726f63 6365732f     ack/api_core/sec
    aeae:	74697275 00632e79 61766e49 2064696c     urity.c.Invalid 
    aebe:	2079654b 657a6973 0d642520 6e55000a     Key size %d...Un
    aece:	776f6e6b 6e616820 20656c64 49007825     know handle %x.I
    aede:	4c41564e 43204449 2e4e4e4f 4e414820     NVALID CONN. HAN
    aeee:	0a454c44 564e4900 44494c41 41454620     DLE..INVALID FEA
    aefe:	45525554 49000a53 4c41564e 4b204449     TURES..INVALID K
    af0e:	53205945 0d455a49 4e55000a 574f4e4b     EY SIZE...UNKNOW
    af1e:	5541204e 4e454854 5954202e 0a0d4550     N AUTHEN. TYPE..
    af2e:	4b4e5500 4e574f4e 59454b20 53494420     .UNKNOWN KEY DIS
    af3e:	0a0d2e54 4b544c00 20736920 20746f6e     T....LTK is not 
    af4e:	766f7270 64656469 49000a0d 4c41564e     provided...INVAL
    af5e:	4b204449 45205945 5952544e 49000a0d     ID KEY ENTRY...I
    af6e:	4c41564e 44204449 4d205645 0d45444f     NVALID DEV MODE.
    af7e:	4e49000a 494c4156 59542044 0a0d4550     ..INVALID TYPE..
    af8e:	6b6e5500 20776f6e 646e6148 0a0d656c     .Unknow Handle..
    af9e:	766e4900 64696c61 6c6f5220 000a0d65     .Invalid Role...
    afae:	61766e49 2064696c 656c6f52 00782520     Invalid Role %x.

0000afbe <__FUNCTION__.7881>:
    afbe:	63656863 6e655f6b 72705f63 7365636f     check_enc_proces
    afce:	74610073                                         s.

0000afd0 <__FUNCTION__.7891>:
    afd0:	625f7461 655f656c 7972636e 6f697470     at_ble_encryptio
    afe0:	74735f6e 00747261                       n_start.

0000afe8 <__FUNCTION__.7837>:
    afe8:	625f7461 615f656c 65687475 6369746e     at_ble_authentic
    aff8:	00657461                                ate.

0000affc <__FUNCTION__.7247>:
    affc:	63706167 706d635f 7476655f 70616700              gapc_cmp_evt.

0000b009 <__FUNCTION__.7476>:
    b009:	63706167 7665645f 666e695f 65725f6f     gapc_dev_info_re
    b019:	6e695f71 61685f64 656c646e 2e2e0072     q_ind_handler...
    b029:	2f2e2e2f 2e2f2e2e 6c622f2e 74735f65     /../../../ble_st
    b039:	2f6b6361 5f697061 746e6f63 6c6c6f72     ack/api_controll
    b049:	695f7265 7265746e 65636166 7061672f     er_interface/gap
    b059:	61745f63 632e6b73 43454c00 6f632042     c_task.c.LECB co
    b069:	63656e6e 6e6f6974 65726320 6f697461     nnection creatio
    b079:	6166206e 64656c69 4c000a20 20424345     n failed ..LECB 
    b089:	6b6e696c 73696420 6e6e6f63 69746365     link disconnecti
    b099:	66206e6f 756c6961 0a206572 74654700     on failure ..Get
    b0a9:	65657020 65642072 65636976 666e6920      peer device inf
    b0b9:	7265206f 2c726f72 61745320 3a737574     o error, Status:
    b0c9:	00642520 43504147 5445475f 4e4f435f      %d.GAPC_GET_CON
    b0d9:	4148435f 4c454e4e 50414d5f 7453202c     _CHANNEL_MAP, St
    b0e9:	73757461 7830203a 58323025 686e5500     atus: 0x%02X.Unh
    b0f9:	6c646e61 4f206465 253c2050 3e583230     andled OP <%02X>
    b109:	44000a0d 63697665 614e2065 6e20656d     ...Device Name n
    b119:	7320746f 67007465                                ot set.

0000b120 <__FUNCTION__.7677>:
    b120:	6d706167 7365725f 725f7465 685f7165     gapm_reset_req_h
    b130:	6c646e61 67007265                                andler.

0000b137 <__FUNCTION__.7694>:
    b137:	6d706167 7465735f 7665645f 6e6f635f     gapm_set_dev_con
    b147:	5f676966 5f646d63 646e6168 0072656c     fig_cmd_handler.
    b157:	2e2f2e2e 2e2e2f2e 2f2e2e2f 5f656c62     ../../../../ble_
    b167:	63617473 70612f6b 6f635f69 6f72746e     stack/api_contro
    b177:	72656c6c 746e695f 61667265 672f6563     ller_interface/g
    b187:	5f6d7061 6b736174 5700632e 3a504f2e     apm_task.c.W.OP:
    b197:	32302520 52202c78 3a504f2e 78323025      %02x, R.OP:%02x
    b1a7:	55000a0d 6e61686e 64656c64 20504f20     ...Unhandled OP 
    b1b7:	253c7830 3e583230 67000a0d                       0x<%02X>...

0000b1c2 <__FUNCTION__.7706>:
    b1c2:	6d706167 7465675f 7665645f 6e6f635f     gapm_get_dev_con
    b1d2:	5f676966 5f646d63 646e6168 0072656c     fig_cmd_handler.

0000b1e2 <__FUNCTION__.7761>:
    b1e2:	6d706167 706d635f 7476655f 2f2e2e00     gapm_cmp_evt.../
    b1f2:	2e2f2e2e 2e2e2f2e 656c622f 6174735f     ../../../ble_sta
    b202:	612f6b63 635f6970 72746e6f 656c6c6f     ck/api_controlle
    b212:	6e695f72 66726574 2f656361 74746167     r_interface/gatt
    b222:	61745f63 632e6b73 69614600 2064656c     c_task.c.Failed 
    b232:	64616572 20676e69 72616863 65746361     reading characte
    b242:	74736972 0a206369 74616700                       ristic ..

0000b24b <__FUNCTION__.7433>:
    b24b:	74746167 6f635f63 656c706d 655f6574     gattc_complete_e
    b25b:	685f7476 6c646e61 2e007265 2e2e2f2e     vt_handler.../..
    b26b:	2f2e2e2f 622f2e2e 735f656c 6b636174     /../../ble_stack
    b27b:	6970612f 6e6f635f 6c6f7274 5f72656c     /api_controller_
    b28b:	65746e69 63616672 61672f65 5f6d7474     interface/gattm_
    b29b:	6b736174 6700632e                                task.c.

0000b2a2 <__FUNCTION__.6998>:
    b2a2:	74746167 64615f6d 74615f64 62697274     gattm_add_attrib
    b2b2:	5f657475 5f716572 646e6168 0072656c     ute_req_handler.
    b2c2:	b5f8fea5                                         ..

0000b2c4 <patch_data>:
    b2c4:	461eb5f8 460c4617 f0024610 283ffab7     ...F.F.F.F....?(
    b2d4:	484cd031 89808821 d0052800 4d4a1d82     1.LH!....(....JM
    b2e4:	d1034291 e0102402 e7f82200 d0042800     .B...$..."...(..
    b2f4:	42911c82 2400d103 2200e007 2800e7f9     ...B...$..."...(
    b304:	1d00d000 d10a4281 48402401 23016800     .....B...$@H.h.#
    b314:	463ab281 f002483e 7004fa97 2306e009     ..:F>H.....p...#
    b324:	4631463a f002483b 8821fa8f 21808001     :F1F;H....!....!
    b334:	68297101 20004788 b5ffbdf8 460cb081     .q)h.G. .......F
    b344:	f0029803 283ffa7b 9803d036 0a007822     ....{.?(6..."x..
    b354:	26000201 4d2b482f 2a003109 2702d005     ...&/H+M.1.*...'
    b364:	d0172a01 d1272a02 8862e029 b2931d92     .*...*'.).b.....
    b374:	f0029a03 4607fa69 280089a8 1c80d000     ....i..F...(....
    b384:	713e8038 807a8862 1d781d21 fa62f002     8.>qb.z.!.x...b.
    b394:	e00e4638 9a032308 fa56f002 290089a9     8F...#....V....)
    b3a4:	1d09d000 71068001 88628047 0a127142     .......qG.b.Bq..
    b3b4:	49157182 47886809 b0052000 230ebdf0     .q.I.h.G. .....#
    b3c4:	f0029a03 89a9fa41 d0002900 80011d89     ....A....)......
    b3d4:	21087106 88628041 0a127142 88a27182     .q.!A.b.Bq...q..
    b3e4:	0a1271c2 88e27202 0a127242 89227282     .q...r..Br...r".
    b3f4:	0a1272c2 e7dc7302 4907b510 f0022014     .r...s.....I. ..
    b404:	bd10fa2f 100408e4 100400e4 10040018     /...............
    b414:	00000e0a 00000c14 10007c44 4610b510     ........D|.....F
    b424:	f002460c cc07fa0b ffdaf001 bd102000     .F........... ..
    b434:	4614b570 f0024610 2306fa01 21044622     p..F.F.....#"F.!
    b444:	f0024824 4604fa01 f0012000 4605fce5     $H.....F. .....F
    b454:	1ca02104 fa0af002 122970a5 120970e1     .!.......p)..p..
    b464:	12097121 20017161 20007060 7020491a     !q..aq. `p. .I p
    b474:	46206809 20004788 b570bd70 46104614     .h F.G. p.p..F.F
    b484:	f9dcf002 23064813 21044622 f0021c40     .....H.#"F.!@...
    b494:	4604f9db f0012000 4605fd47 1ca02104     ...F. ..G..F.!..
    b4a4:	f9e4f002 0a2970a5 0a0970e1 0a097121     .....p)..p..!q..
    b4b4:	20017161 20007060 70204907 46206809     aq. `p. .I p.h F
    b4c4:	20004788 b510bd70 20154904 f9c8f002     .G. p....I. ....
    b4d4:	0000bd10 00003801 100400e4 10007c84     .....8.......|..
    b4e4:	2001b51c f9c8f002 f9ccf002 68004844     ... ........DH.h
    b4f4:	4d444780 07407b28 28030f40 4942d803     .GDM({@.@..(..BI
    b504:	68092000 48414788 26007801 d00e2900     . .h.GAH.x.&.)..
    b514:	ca06a23f 91009201 22007006 46682105     ?........p.".!hF
    b524:	f9b6f002 21052200 f0024668 68a8f9b7     .....".!hF.....h
    b534:	d4030040 78014838 d0fc2900 f9b4f002     @...8H.x.)......
    b544:	f9b8f002 f9bcf002 4c344935 68606809     ........5I4L.h`h
    b554:	49344788 f0022003 f000f9b9 68a0fbe9     .G4I. .........h
    b564:	68a84780 d40a0040 28017820 7860d1fc     .G.h@... x.(..`x
    b574:	d0042800 492d7066 60c8482b f002e7fe     .(..fp-I+H.`....
    b584:	f7fff9ab f7ffff39 4829ff9e 47806800     ....9.....)H.h.G
    b594:	4828b662 f9a6f002 07007b28 f002d501     b.(H....({......
    b5a4:	4c25f9a7 15a56860 606043a8 20064923     ..%L`h...C``#I. 
    b5b4:	47886809 43286860 68a06060 430801e9     .h.G`h(C``.h...C
    b5c4:	4c1f60a0 f99af002 47806820 d0f92800     .`.L.... h.G.(..
    b5d4:	f002481c e7f5f999 20004601 d00d2900     .H.......F. .)..
    b5e4:	d1072902 780a490c d0042a02 29017809     .)...I.x.*...x.)
    b5f4:	4815d100 48144770 47703010 47704813     ...HpG.H.0pG.HpG
    b604:	10040160 10040828 100401c0 10040025     `...(.......%...
    b614:	54554f42 00000021 100400d9 10040000     BOUT!...........
    b624:	10040104 10005e1d 05fa0004 e000ed00     .....^..........
    b634:	10040154 100403bc 4000f400 10040210     T..........@....
    b644:	1004010c 100405ec 10007bb0 0001e2bc     .........{......
    b654:	4addb5f0 49dd6816 48dd4bdd 128c3340     ...J.h.I.K.H@3..
    b664:	2e0012cd 6886d026 400e6857 0fff073f     ....&..hWh.@?...
    b674:	4337047f 689e6087 6851400e 0fc90709     ..7C.`.h.@Qh....
    b684:	43310449 69416099 40216853 0fdb075b     I.1C.`AiSh!@[...
    b694:	430b01db 69416143 40296853 0fdb079b     ...CCaAiSh)@....
    b6a4:	430b019b 49cb6143 400b6943 07c96851     ...CCa.ICi.@Qh..
    b6b4:	e02e0fc9 68d64ac8 07f60d76 68d6d12c     .....J.hv...,..h
    b6c4:	07f60d36 6886d028 400e68d7 0fff033f     6...(..h.h.@?...
    b6d4:	4337047f 689e6087 68d1400e 0fc90309     ..7C.`.h.@.h....
    b6e4:	43310449 69416099 402168d3 0fdb04db     I.1C.`Ai.h!@....
    b6f4:	430b01db 69416143 402968d3 0fdb051b     ...CCaAi.h)@....
    b704:	430b019b 49b36143 400b6943 054968d1     ...CCa.ICi.@.hI.
    b714:	03c90fc9 61414319 4770bdf0 49afb530     .....CAa..pG0..I
    b724:	61082000 684849ae 43102201 49ad6048     . .a.IHh.".CH`.I
    b734:	158a6988 61884390 680048ab d1042800     .i...C.a.H.h.(..
    b744:	69184baa 43202404 69086118 78254ca8     .K.i.$ C.a.i.L%x
    b754:	02db2303 d1002d01 25e14398 43a803ad     .#...-...C.%...C
    b764:	68c86108 78242502 2c0143a8 241cd101     .a.h.%$x.C.,...$
    b774:	242043a0 439043a0 43984a9e 60c84390     .C $.C.C.J.C.C.`
    b784:	4f9dbd30 26004c9d 47806838 d10d2800     0..O.L.&8h.G.(..
    b794:	28027a20 f002d00a 2802f8bd f002d0fb      z.(.......(....
    b7a4:	2800f8b9 bf00d102 72202001 25007a20     ...(.....  r z.%
    b7b4:	d03b2800 d04e2801 d1e52802 88004890     .(;..(N..(...H..
    b7c4:	d0022800 6800488f f0024780 7860f8a9     .(...H.h.G....`x
    b7d4:	d0012800 f8aaf002 f8aef002 20016aa1     .(...........j. 
    b7e4:	f0024788 4888f8af 47806800 68004887     .G.....H.h.G.H.h
    b7f4:	48794780 074068c0 28030f40 4984d803     .GyH.h@.@..(...I
    b804:	68092001 78a04788 70a01c40 68004881     . .h.G.x@..p.H.h
    b814:	6a204780 d0012800 47806a20 ff7ef7ff     .G j.(.. j.G..~.
    b824:	2001497d 61886809 e01bb662 280079e0     }I. .h.ab....y.(
    b834:	bf30d100 78284d79 d1a52801 f888f002     ..0.yM(x.(......
    b844:	f002702e 4876f88b 28006800 4874d19c     .p....vH.h.(..tH
    b854:	f848f002 2004e798 f886f002 47806838     ..H.... ....8h.G
    b864:	d0012800 e78f7226 f884f002 f888f002     .(..&r..........
    b874:	d1fb2800 f86cf002 f888f002 28027a20     .(....l..... z.(
    b884:	2002d043 48677220 07c16800 2101d005     C..  rgH.h.....!
    b894:	430d0449 1c497921 07807121 6960d402     I..C!yI.!q....`i
    b8a4:	d0052800 04802001 79604305 71601c40     .(... ...C`y@.`q
    b8b4:	04002001 70664305 495b78e0 70e01c40     . ...Cfp.x[I@..p
    b8c4:	20016809 4f444788 28017c38 2000d020     .h. .GDO8|.( .. 
    b8d4:	43284956 f0024308 743ef85f 20006aa1     VI(C.C.._.>t.j. 
    b8e4:	48404788 22026981 61814311 69814850     .G@H.i.".C.aPH.i
    b8f4:	439122c0 69816181 43911582 4c4d6181     .".C.a.i...C.aML
    b904:	47806820 d1fb2800 f002e7fe e73bf827      h.G.(......'.;.
    b914:	02402001 b510e7dc 8410f3ef b6724a46     . @.........FJr.
    b924:	68506811 23001c49 60114158 f0016050     .hPhI..#XA.`P`..
    b934:	b662ff3b 8810f384 b510bd10 207c493f     ;.b.........?I| 
    b944:	4a216048 7a11483e d10e2901 493d4b3e     H`!J>H.z.)..>K=I
    b954:	4b3e8019 61592101 21044b3d 493d8019     ..>K.!Ya=K.!..=I
    b964:	493d6001 21006041 68d37211 680c491e     .`=IA`.!.r.h.I.h
    b974:	d01842a3 60d3680b 4a38680b 2b004938     .B...h.`.h8J8I.+
    b984:	4b38d007 4a388013 4a3860c2 4a386102     ..8K..8J.`8J.a8J
    b994:	4b38e006 4a388013 4a3860c2 4a386102     ..8K..8J.`8J.a8J
    b9a4:	8809800a 49376081 22076848 43100712     .....`7IHh."...C
    b9b4:	48326048 1e404934 bd106208 48332101     H`2H4I@..b...!3H
    b9c4:	60480709 ffeef001 10007bd0 fffdffff     ..H`.....{......
    b9d4:	40020800 ffff7fff 10040828 4000b200     ...@....(......@
    b9e4:	40014000 4000b000 10007d38 e000ed00     .@.@...@8}......
    b9f4:	100400d9 20058000 1004018c 1004001c     ....... ........
    ba04:	10040094 100400a0 10040170 10040160     ........p...`...
    ba14:	100401c0 10040154 1004015c 10040141     ....T...\...A...
    ba24:	100405ec 10040168 10040210 00400001     ....h.........@.
    ba34:	4000e200 10040188 10040240 40025100     ...@....@....Q.@
    ba44:	4000e040 000009c4 10007be8 4000f000     @..@.....{.....@
    ba54:	1004009c 03020000 06050403 10040090     ................
    ba64:	10040096 000004a6 01020c0d 00000c03     ................
    ba74:	00001f12 000005d7 01021617 00001603     ................
    ba84:	0000291c 40024000 40041840 0001e1ad     .)...@.@@..@....
    ba94:	4c39b5f8 28006920 4838d006 28006800     ..9L i.(..8H.h.(
    baa4:	4836d102 ff1ef001 4f364e35 2d006925     ..6H....5N6O%i.-
    bab4:	0628d060 2080d503 f00161a0 07a8ff79     `.(.... .a..y...
    bac4:	2002d503 f00161a0 0728ff79 2008d504     ... .a..y.(.... 
    bad4:	200061a0 ff78f001 d50505e8 300120ff     .a. ..x...... .0
    bae4:	200161a0 ff70f001 d50405a8 02402001     .a. ..p...... @.
    baf4:	f00161a0 0668ff6f 2040d503 f00161a0     .a..o.h...@ .a..
    bb04:	06e8ff6f 2010d503 f00161a0 0768ff6f     o...... .a..o.h.
    bb14:	4919d51e 31c02001 6bc863c8 d1fc2800     ...I. .1.c.k.(..
    bb24:	491969e0 49196008 68092004 20044788     .i.I.`.I. .h.G. 
    bb34:	491761a0 62082000 68004816 88304780     .a.I. .b.H.h.G0.
    bb44:	d0052800 47806838 ff56f001 ff30f001     .(..8h.G..V...0.
    bb54:	d00a07e8 28008830 2001d107 683861a0     ....0..(... .a8h
    bb64:	f0014780 f001ff49 06a8ff23 2020d59e     .G..I...#.....  
    bb74:	e79b61a0 0000bdf8 40040000 100405ec     .a.........@....
    bb84:	10040094 10040174 10007be0 10040210     ....t....{......
    bb94:	4000b000 10040110 4604b5fe ff32f001     ...@.......F..2.
    bba4:	f0019000 4607ff35 46257a20 0f000700     ....5..F z%F....
    bbb4:	90013564 78a84626 28003624 f001d101     d5..&F.x$6.(....
    bbc4:	4630ff2d ff30f001 481e4621 ff32f001     -.0F..0.!F.H..2.
    bbd4:	481d78a9 d1032900 42f99900 8801d000     .x.H.).....B....
    bbe4:	22029901 4919008b 800a1859 804a8df2     ..."...IY.....J.
    bbf4:	78ab9900 430b19c9 4a164e15 25014916     ...x...C.N.J.I.%
    bc04:	d1142b00 07db8803 2300d011 6836800b     .+.........#..6h
    bc14:	d0012e00 e0008015 804b8013 490f68a2     ..........K..h.I
    bc24:	624a1e52 620a8882 62888840 800dbdfe     R.Jb...b@..b....
    bc34:	28006830 2004d001 2003e000 804d8010     0h.(... ... ..M.
    bc44:	0000bdfe 1004085c 1004007c 40030000     ....\...|......@
    bc54:	10007d38 1004009c 10007be4 40024040     8}.......{..@@.@
    bc64:	68094911 0a814348 18890bc2 18080c00     .I.hHC..........
    bc74:	30ff30ff 0a803002 b5304770 8800480b     .0.0.0..pG0..H..
    bc84:	ffeef7ff 46034d0a f7ff8828 b284ffe9     .....M.F(.......
    bc94:	f7ff8868 0559ffe5 b28002a2 43014311     h.....Y......C.C
    bca4:	63c14804 0000bd30 10040204 10007be8     .H.c0........{..
    bcb4:	10040090 40040000 0a04b510 2810b2c0     .......@.......(
    bcc4:	dc0ed034 d023280c 2803dc06 280ad017     4....(#....(...(
    bcd4:	280bd020 e019d111 d013280d d10c280e      ..(.....(...(..
    bce4:	2837e012 dc04d01a d0152811 d1042812     ..7(.....(...(..
    bcf4:	2838e01a 2839d014 f001d014 0221fea1     ..8(..9(......!.
    bd04:	bd104308 e7fa200a e7f8200b e7f62008     .C... ... ... ..
    bd14:	e7f42009 e7f22007 e7f02005 e7ee2014     . ... ... ... ..
    bd24:	e7ec2015 e7ea200e e7e82006 e7e62004     . ... ... ... ..
    bd34:	2003b510 fe8af001 20034902 fd90f001     ... .....I. ....
    bd44:	0000bd10 10007b18 4618b570 4601460d     .....{..p..F.F.F
    bd54:	23822400 f001481e 7969fd77 2900682a     .$.#.H..w.iy*h.)
    bd64:	2980d001 2112d901 792be027 d0082b08     ...)...!'.+y.+..
    bd74:	d00f2b10 d01b2b20 5d13e01e 70ab1905     .+.. +.....]...p
    bd84:	428c1c64 e016d3f9 19055b13 0a1b70ab     d..B.....[...p..
    bd94:	1ca470eb d3f7428c e00c0049 19055913     .p...B..I....Y..
    bda4:	0a1b70ab 0a1b70eb 0a1b712b 1d24716b     .p...p..+q..kq$.
    bdb4:	d3f3428c 70410089 70012100 78424601     .B....Ap.!.p.FBx
    bdc4:	1c92390c 4903814a 47886809 bd702000     .9..J..I.h.G. p.
    bdd4:	00000319 100400e4 4c6eb5f8 d00f0005     ..........nL....
    bde4:	28027fa0 7fe0d107 d0012801 d1022805     ...(.....(...(..
    bdf4:	f00168e0 2d01fe31 2000d13e fe32f001     .h..1..->.. ..2.
    be04:	29007fa1 4863d00a 29013016 2902d01b     ...)..cH.0.)...)
    be14:	f001d070 2800fe2d e09ad12e 28017fe0     p...-..(.......(
    be24:	2805d006 2806d008 2807d006 e005d108     ...(...(...(....
    be34:	f0012003 bdf8fe23 e7fa2008 e7f82004     . ..#.... ... ..
    be44:	fe10f001 7fe1bdf8 d0162901 d0252905     .........)...)%.
    be54:	d0502906 d1f52907 f0014605 ba00fe15     .)P..)...F......
    be64:	78e90a00 43080200 90006800 220068a0     ...x...C.h...h."
    be74:	21046843 47984668 4605e068 fe0af001     Ch.!hF.Gh..F....
    be84:	280078a8 2822d003 7fe0d906 882be7d8     .x.(.."(......+.
    be94:	22004601 e0574618 e01b493f 46054f3f     .F.".FW.?I..?O.F
    bea4:	88406839 46064788 060043f0 d0140e00     9h@..G.F.C......
    beb4:	88a86839 80a84788 88eb4602 46318828     9h...G...F..(.1F
    bec4:	fcc2f001 60e0380c 894868e1 d00f2800     .....8.`.hH..(..
    bed4:	310c88e8 fde4f001 88ebbdf8 210a886a     ...1........j..!
    bee4:	f001482f 380cfcb1 882960e0 e7eb8141     /H.....8.`).A...
    bef4:	e01e4608 4604e017 fdc6f001 0a05ba00     .F.....F........
    bf04:	022d78e0 1d204305 fdbef001 0a00ba00     .x-..C .........
    bf14:	020079e1 60284308 fdc8f001 46282104     .y...C(`.....!(F
    bf24:	fdcaf001 7fe1bdf8 d0072901 d1f92905     .........)...)..
    bf34:	491c68e0 300c6809 e0074788 f0014604     .h.I.h.0.G...F..
    bf44:	78a1fda9 4a148820 fdbcf001 fdaef001     ...x ..J........
    bf54:	f001bdf8 bdf8fdbd 2003b510 fdbef001     ........... ....
    bf64:	69204c0c fd78f001 28006a20 f001d003     .L i..x. j.(....
    bf74:	2000fdbb 68206220 d0052800 f0014805     ...  b h.(...H..
    bf84:	f001fdb9 bd10fdbd 20042100 fdbef001     .........!. ....
    bf94:	0000bd10 10040bb0 10007bea 100400bc     .........{......
    bfa4:	00000d21 100400e4 4604b570 3c0c4828     !.......p..F(H.<
    bfb4:	07c56ac0 0fed88e0 d0122805 8610f3ef     .j.......(......
    bfc4:	4824b672 f0014621 b662fd35 8810f386     r.$H!F..5.b.....
    bfd4:	492188a0 d10d4288 b2c188e0 d005290b     ..!I.B.......)..
    bfe4:	4621e008 f001481d e02cfd97 02000a00     ..!F.H....,.....
    bff4:	80e03014 491a88a0 d1104288 88e04919     .0.....I.B...I..
    c004:	42886809 201bd10b fd1af001 f0014606     .h.B... .....F..
    c014:	2801fc15 2100d103 f0014630 88e0fd77     ...(...!0F..w...
    c024:	d0102804 28048920 2d00d10d 480ed004     .(.. ..(...-...H
    c034:	28006800 e006d004 2001490c e0026208     .h.(.....I. .b..
    c044:	f0014809 2001fc4f fd6cf001 0000bd70     .H..O.. ..l.p...
    c054:	4000b1c0 10040bd4 00000c13 10040c20     ...@........ ...
    c064:	00000e03 10040018 100405ec 4000b000     ...............@
    c074:	48c6b5fe 4dc44ec3 24006941 01c909c9     ...H.N.MAi.$....
    c084:	43112255 68816141 00490849 69c16081     U".CAa.hI.I..`.i
    c094:	40114abf 69c161c1 43112202 48bd61c1     .J.@.a.i.".C.a.H
    c0a4:	18380527 f001210d 9001fd43 210d48ba     '.8..!..C....H.!
    c0b4:	f0011838 9000fd3d 006148b8 0480180f     8...=....Ha.....
    c0c4:	f0014639 4ab5fd3b 43504639 fd36f001     9F..;..J9FPC..6.
    c0d4:	46394ab2 f0014350 219dfd31 21014348     .J9FPC..1..!HC.!
    c0e4:	18400449 0c80219d 18420209 230c4621     I.@..!....B.!F.#
    c0f4:	98014359 4baa5070 60431988 98006082     YC..pP.K..C`.`..
    c104:	48a85068 60481949 b2e41c64 d3c62c28     hP.HI.H`d...(,..
    c114:	48a52501 600505ed 60424aa4 60812100     .%.H...`.JB`.!.`
    c124:	60c34ba3 61416101 61c26185 62436205     .K.`.aAa.a.a.bCb
    c134:	62c16281 69e04c95 43882102 69e061e0     .b.b.L.i.!.C.a.i
    c144:	43c94993 61e04308 210168a0 60a04308     .I.C.C.a.h.!.C.`
    c154:	61e04898 49984899 49996001 49996041     .H.a.H.I.`.IA`.I
    c164:	f7ff6081 4898fa75 48996160 60014997     .`..u..H`a.H.I.`
    c174:	60416841 22806841 60414391 68084995     AhA`Ah.".CA`.I.h
    c184:	43100492 49946008 12126808 439043a8     ...C.`.I.h...C.C
    c194:	68124a92 d1012a00 43904a91 05122207     .J.h.*...J.C."..
    c1a4:	60084390 b510bdfe 69604c78 09c02155     .C.`....xL`iU!..
    c1b4:	430801c0 48816160 6001497f 60414980     ...C`a.H.I.`.IA`
    c1c4:	60814980 fa44f7ff 6160487f 61e04879     .I.`..D..H`ayH.a
    c1d4:	497869e0 43083980 68a061e0 43082101     .ixI.9.C.a.h.!.C
    c1e4:	497b60a0 158a6848 60484310 68084979     .`{IHh...CH`yI.h
    c1f4:	43100452 49786008 22416808 43900452     R..C.`xI.hA"R..C
    c204:	68124a76 d1012a00 43904a75 05122207     vJ.h.*..uJ.C."..
    c214:	60084390 b240bd10 b5704770 4a712100     .C.`..@.pGp..!qJ
    c224:	460d2315 188c021b 1d096025 d3fa4299     .#.F....%`...B..
    c234:	4a6d2103 62d10409 6201496c 6241496c     .!mJ...blI.blIAb
    c244:	2206496c 212c6141 496b540a 496b6281     lI."Aa,!.TkI.bkI
    c254:	496b6001 496b6041 496c61c1 6008486a     .`kIA`kI.alIjH.`
    c264:	3c404c6a 03896b20 43084388 f0016320     jL@< k...C.C c..
    c274:	4867fc6b 6ba06085 09000100 430805a1     k.gH.`.k.......C
    c284:	4c4263a0 63602003 49622009 60c80580     .cBL. `c. bI...`
    c294:	feeef7ff 4860494f 60483180 495f4860     ....OI`H.1H``H_I
    c2a4:	49606141 49606181 495b61c1 62013113     Aa`I.a`I.a[I.1.b
    c2b4:	30404842 4a5d68c1 68120989 43110189     BH@0.h]J...h...C
    c2c4:	68a060c1 03892101 60a04388 200c4958     .`.h.!...C.`XI. 
    c2d4:	bd706188 4857b570 28008800 2005d00a     .ap.p.WH...(... 
    c2e4:	23000200 2215493f 18440212 1d006023     ...#?I."..D.#`..
    c2f4:	d3fa4290 68004850 61604c24 6800484f     .B..PH.h$L`aOH.h
    c304:	6148492e 49382003 62c80400 483e493f     .IHa. 8I...b?I>H
    c314:	4d3e6008 6b283d40 43880389 63284308     .`>M@=(k...C.C(c
    c324:	fc12f001 fb09f7ff 01006ba8 02e10900     .........k......
    c334:	63a84308 68004842 20034780 20096360     .C.cBH.h.G. `c. 
    c344:	05804934 f7ff60c8 4922ff2e 31804832     4I...`...."I2H.1
    c354:	48336048 61414931 61814932 61c14932     H`3H1IAa2I.a2I.a
    c364:	3113492d 48156201 68c13040 09894a2f     -I.1.b.H@0.h/J..
    c374:	01896812 60c14311 210168a0 43880389     .h...C.`.h.!...C
    c384:	bd7060a0 40022800 40022a00 40020000     .`p..(.@.*.@...@
    c394:	feefcfff 4b100007 4b180007 00000962     .......K...Kb...
    c3a4:	423d55af 420155af 40022c00 00048060     .U=B.U.B.,.@`...
    c3b4:	00008060 01103080 00002402 40020800     `....0...$.....@
    c3c4:	6438ee11 00010ee4 6a029143 0f600107     ..8d....C..j..`.
    c3d4:	4000f400 40041800 40020180 10007d38     ...@...@...@8}..
    c3e4:	04000700 40030000 40041a80 0001b645     .......@...@E...
    c3f4:	0001b637 0001b35b 0001b363 0001b32f     7...[...c.../...
    c404:	0001b349 100060db 054a0756 40040080     I....`..V.J....@
    c414:	4000f000 40024000 00000303 d6d6e8ff     ...@.@.@........
    c424:	40041900 8199afc4 0000516a 10007c14     ...@....jQ...|..
    c434:	4000e200 10007be4 10007c1c 10007c20     ...@.{...|.. |..
    c444:	10040184 03892101 d3004288 49704608     .....!...B...FpI
    c454:	43486809 0b420ac1 0c421851 0c821851     .hHC..B.Q.B.Q...
    c464:	0cc21851 0d021851 0d821851 0e021851     Q...Q...Q...Q...
    c474:	0e421851 0e821851 18511c40 18400f80     Q.B.Q...@.Q...@.
    c484:	1e40d000 47704770 2600b5fe 90002040     ..@.pGpG...&@ ..
    c494:	8010f3ef 4c5f9001 2001b672 f0018060     ......_Lr.. `...
    c4a4:	2800fb59 2002d074 80602601 fa32f001     Y..(t.. .&`...2.
    c4b4:	d0fb2802 80602003 fa2cf001 d0f12800     .(... `...,..(..
    c4c4:	20044d54 350c8060 280078e8 2005d060     TM. `..5.x.(`.. 
    c4d4:	88288060 d15b2800 80602007 9000484e     `.(..([.. `.NH..
    c4e4:	8800484e d0042800 78a9484d 180f8800     NH...(..MH.x....
    c4f4:	78a8e002 18476861 80602008 88004849     ...xahG.. `.IH..
    c504:	d0032800 fb2cf001 d0fb2800 80602009     .(....,..(... `.
    c514:	46684639 fb2af001 d0732800 8060200a     9FhF..*..(s.. `.
    c524:	fb2af001 d06d2800 8060200b 46684639     ..*..(m.. `.9FhF
    c534:	fb28f001 d0652800 98004f39 1a408839     ..(..(e.9O..9.@.
    c544:	d35f2805 8060200c fb22f001 d0202800     .(_.. `..."..( .
    c554:	8060200f 68004834 28004780 4833d003     . `.4H.h.G.(..3H
    c564:	07806800 2010d44e 49318060 62082000     .h..N.. `.1I. .b
    c574:	68c04830 06804930 60080e80 fb0ef001     0H.h0I.....`....
    c584:	fb12f001 98004924 d1044288 e00a2000     ....$I...B... ..
    c594:	2600e038 4921e036 29008809 8839d001     8..&6.!I...)..9.
    c5a4:	6861e000 90001a40 80602011 21014823     ..ah@.... `.#H.!
    c5b4:	6bc163c1 d1fc2900 38c04820 4f2069c0     .c.k.).. H.8.i O
    c5c4:	98006038 ff3ef7ff 201260a0 79298060     8`....>..`. `.)y
    c5d4:	f00168a0 2001faef 0780491a 78206008     .h..... .I...` x
    c5e4:	70201c40 80602013 69404817 48116078     @. p. `..H@ix`.H
    c5f4:	69403840 481560b8 47806a80 68014814     @8@i.`.H.j.G.H.h
    c604:	d5fc0049 9801b662 8810f380 bdfe4630     I...b.......0F..
    c614:	10040204 100400f0 0000ffff 10040094     ................
    c624:	1004009c 10007be6 1004018c 4000e000     .....{.........@
    c634:	4000b000 40020840 10007c14 400400c0     ...@@..@.|.....@
    c644:	10007c18 e000e100 40020000 10040d90     .|.........@....
    c654:	e000e200 0ec906c1 40882001 6008492f     ......... .@/I.`
    c664:	06c14770 20010ec9 492c4088 60083180     pG..... .@,I.1.`
    c674:	06c14770 20010ec9 49294088 47706008     pG..... .@)I.`pG
    c684:	f001b570 2501fa9d 106c03ed 4a251063     p......%..l.c.%J
    c694:	d0122800 60102000 63901e40 f7ff2018     .(... .`@..c. ..
    c6a4:	6950ffe8 61504328 43206950 69506150     ..Pi(CPaPi CPaPi
    c6b4:	61504318 f7ff2018 481bffdc 481b6390     .CPa. .....H.c.H
    c6c4:	07896801 6ad1d006 62d14329 43296b11     .h.....j)C.b.k)C
    c6d4:	62156311 06896801 d0060f89 43216ad1     .c.b.h.......j!C
    c6e4:	6b1162d1 63114321 68006214 0f800580     .b.k!C.c.b.h....
    c6f4:	6ad0d006 62d04318 43186b10 62136310     ...j.C.b.k.C.c.b
    c704:	f7ff2018 201fffa7 ffa4f7ff f7ff2015     . ..... ..... ..
    c714:	201bffa1 ff9ef7ff 0000bd70 e000e100     ... ....p.......
    c724:	e000e280 40011000 0000ffff 4000f000     .......@.......@
    c734:	4857b5f8 48577801 68462901 d11d4856     ..WH.xWH.)FhVH..
    c744:	d11b2e01 6a8a4955 401a4b55 431a4b55     ....UI.jUK.@UK.C
    c754:	6aca628a 401a4b54 431a2301 688162ca     .b.jTK.@.#.C.b.h
    c764:	40114a52 43114a52 69016081 4311220c     RJ.@RJ.C.`.i.".C
    c774:	68416101 02122277 60414391 220f6901     .aAhw"...CA`.i."
    c784:	43110292 484b6101 e0006805 69686928     ...C.aKH.h..(ihi
    c794:	d1fb07c0 68004848 0f400080 f0010003     ....HH.h..@.....
    c7a4:	0508fa15 110e0b08 1c1a1714 026424e1     .............$d.
    c7b4:	24e1e013 e01002a4 02e424e1 24e1e00d     ...$.....$.....$
    c7c4:	e00a0324 022424e1 244be007 e0040264     $....$$...K$d...
    c7d4:	0224244b 244be001 483801e4 46216807     K$$...K$..8H.h!F
    c7e4:	f0014638 b282f9ab 43504620 20001a39     8F...... FPC9.. 
    c7f4:	e0020923 b2c01c40 428b1ac9 1c40d3fa     #...@......B..@.
    c804:	48230841 28017800 2e01d103 2020d101     A.#H.x.(......  
    c814:	20006228 00d262a8 626a430a 21014a28     (b. .b...Cjb(J.!
    c824:	491d6011 680a3180 01120912 60a8600a     .`.I.1.h.....`.`
    c834:	210269a8 61a84308 b430bdf8 4c1d4b21     .i.!.C.a..0.!K.L
    c844:	6019609a 68246058 d10d290a 2d047805     .`.`X`$h.)...x.-
    c854:	7845d10a d1072d0e 2d1f7905 7940d104     ..Ex.-...y.-..@y
    c864:	d1012820 60191e49 d0082900 07c06860      (..I..`.)..`h..
    c874:	6858d0fc 60257805 60581c40 2000e7f2     ..Xh.x%`@.X`... 
    c884:	2a006058 6098d002 4710bc30 4770bc30     X`.*...`0..G0.pG
    c894:	100400d9 10007c9c 4000b040 4000b180     .....|..@..@...@
    c8a4:	c0c0ffff 02030000 ffffc0c0 ff8888ff     ................
    c8b4:	00111100 1004015c 10040828 10007cb0     ....\...(....|..
    c8c4:	e000e100 10041968 493ab5fe 68094838     ....h.....:I8H.h
    c8d4:	4d394788 4a382000 3d504b38 24261c41     .G9M. 8J8KP=A.&$
    c8e4:	43440749 0f49260a 434618a4 807c18f7     I.DC.&I...FC..|.
    c8f4:	4361240a 19494c31 19343c40 1c408761     .$aC1LI.@<4.a.@.
    c904:	dbeb2808 68204c2e 438821f0 430821e0     .(...L h.!.C.!.C
    c914:	482b6020 30c02196 0a526b02 430a0252      `+H.!.0.kR.R..C
    c924:	6b016302 40114a27 43114a27 48276301     .c.k'J.@'J.C.c'H
    c934:	682060e0 438800e1 68206020 43881049     .` h...C ` hI..C
    c944:	22066020 46684922 ff84f000 88084669      `.""IhF....iF..
    c954:	04098849 62614301 88884669 682062a0     I....CabiF...b h
    c964:	43881561 60204308 21074815 61013080     a..C.C `.H.!.0.a
    c974:	39184916 49156301 63413124 39c0490e     .I.9.c.I$1Ac.I.9
    c984:	48146381 7c00210a 19404348 f7ff62e0     .c.H.!.|HC@..b..
    c994:	2001f974 f920f001 f924f001 7800480e     t.. .. ...$..H.x
    c9a4:	d0012800 f924f001 f928f001 0000bdfe     .(....$...(.....
    c9b4:	10040d90 100400ec 00000aca 40030a80     ...............@
    c9c4:	40040000 fc00ffff 01e50000 0000033a     ...@........:...
    c9d4:	0001f8b2 10040b9c 100400a4 21004803     .............H.!
    c9e4:	60016041 21026801 47706001 4000d000     A`.`.h.!.`pG...@
    c9f4:	6802b510 43086b10 20046310 fe2af7ff     ...h.k.C.c. ..*.
    ca04:	b510bd10 6b106802 63104388 f7ff2004     .....h.k.C.c. ..
    ca14:	bd10fe28 2101b5f0 0f240704 2300460a     (......!..$..F.#
    ca24:	40a24db3 d82a2818 28074cb2 6863d801     .M.@.(*..L.(..ch
    ca34:	280fe006 68a3d801 2817e002 68e3d800     ...(...h...(...h
    ca44:	0ef70746 40be2607 280743b3 6063d801     F....&.@.C.(..c`
    ca54:	280fe006 60a3d801 2817e002 60e3d800     ...(...`...(...`
    ca64:	d2082810 68534aa4 430b4081 69136053     .(...JSh.@.CS`.i
    ca74:	6113430b 49a1e001 7728e00d 4603bdf0     .C.a...I..(w...F
    ca84:	2b033b2c 4c9ed8fa 07866923 40b10fb6     ,;.+...L#i.....@
    ca94:	6123438b 684b499b 604b4313 4313690b     .C#a.IKh.CK`.i.C
    caa4:	e7ea610b 4892b530 7f022101 d2062a10     .a..0..H.!...*..
    cab4:	685c4b91 4095460d 605c43ac 4b8ce009     .K\h.F.@.C\`...K
    cac4:	071c7f1b 23010f24 2a1840a3 4a8bd203     ....$..#.@.*...J
    cad4:	7741e005 3a2cbd30 d8042a03 68544a89     ..Aw0.,:.*...JTh
    cae4:	6054439c 2100e7f5 b530e7f3 23004880     .CT`...!..0..H.#
    caf4:	24017f01 d2052910 68554a7f 4325408c     ...$.)...JUh.@%C
    cb04:	e0096055 7f124a7a 0f240714 40a22201     U`..zJ....$..".@
    cb14:	d2032918 e0054979 bd307743 2903392c     .)..yI..Cw0.,9.)
    cb24:	4978d8fb 4314684c e7f5604c 4606b570     ..xILh.CL`..p..F
    cb34:	460c4615 f7ff2004 4b6dfd94 609e2001     .F.F. ....mK. .`
    cb44:	605c60dd 841c7798 6801e004 02090a09     .`\`.w.....h....
    cb54:	600131fe 68006818 07c96881 2004d1f5     .1.`.h.h.h..... 
    cb64:	fd78f7ff ff9ef7ff 20094967 bd706048     ..x.....gI. H`p.
    cb74:	2500b570 e04c4c5e 2a007fa2 6862d026     p..%^LL....*&.bh
    cb84:	d00d2a00 780268a0 60a01c40 68016808     .*...h.x@..`.h.h
    cb94:	02090a09 60014311 1e406860 e01a6060     .....C.``h@.``..
    cba4:	0a096801 31fe0209 48576001 1e496841     .h.....1.`WHAhI.
    cbb4:	68406041 d10e2800 f7ff77a5 68e1ff96     A`@h.(...w.....h
    cbc4:	d0082900 60e52000 e0044788 0a096801     .)... .`.G...h..
    cbd4:	31fe0209 69606001 d0172800 68096821     ...1.``i.(..!h.h
    cbe4:	70016849 1e406920 69616120 61611c49     Ih.p i@. aaiI.aa
    cbf4:	d10e2800 21016165 f7ff6820 69a1ff02     .(..ea.! h.....i
    cc04:	d0022900 61a52000 bd704788 68006820     .)... .a.Gp. h.h
    cc14:	68216840 68c26808 d1ad07d2 b5f0bd70     @h!h.h.h....p...
    cc24:	4606b087 4668211c ffeef000 2e004f37     ...F.!hF....7O..
    cc34:	7838d106 d1032800 482d2124 ffe4f000     ..8x.(..$!-H....
    cc44:	46692000 74087048 744a2201 70887008     . iFHp.t."Jt.p.p
    cc54:	7b00482f 0f400740 d80b2803 492d00c2     /H.{@.@..(....-I
    cc64:	5a8b4668 18518243 8282884a 82c2888a     hF.ZC.Q.J.......
    cc74:	830188c9 4c284d1e d0022e01 d00d2e00     .....M(L........
    cc84:	7820e012 d0022800 28027820 4821d10c     .. x.(.. x.(..!H
    cc94:	4922466a f0003808 e005ffbd 28007838     jF"I.8......8x.(
    cca4:	481cd102 60283808 28007820 7820d002     ...H.8(` x.(.. x
    ccb4:	d1032802 78004814 feacf7ff 68282101     .(...H.x.....!(h
    ccc4:	fe9ff7ff f0002014 7820ffab d00c2800     ..... .... x.(..
    ccd4:	28027820 4912d107 f0002014 2101ffa7      x.(...I. .....!
    cce4:	f7ff6828 b007fe85 490ebdf0 0000e7f4     (h.........I....
    ccf4:	10041e00 4000b040 40010000 40011000     ....@..@...@...@
    cd04:	4000f400 40013000 10007ca8 10040000     ...@.0.@.|......
    cd14:	10040828 10040198 100400d9 40006000     (............`.@
    cd24:	10006a35 0001d1c7 428849f8 2000d301     5j.......I.B... 
    cd34:	49f74770 29951841 2001d201 49f54770     pG.IA..)... pG.I
    cd44:	184122ff 42913216 2002d201 49f14770     ."A..2.B... pG.I
    cd54:	1840318b d201288b 47702003 47702004     .1@..(... pG. pG
    cd64:	01092129 d2014288 47702000 29131a41     )!...B... pGA..)
    cd74:	2001d201 49e84770 29121841 2002d201     ... pG.IA..)... 
    cd84:	49e54770 18413912 d2012912 47702003     pG.I.9A..)... pG
    cd94:	392449e1 29241841 2004d201 49de4770     .I$9A.$)... pG.I
    cda4:	18413948 d2012912 47702005 395a49da     H9A..)... pG.IZ9
    cdb4:	295b1841 2006d201 216b4770 1a4000c9     A.[)... pGk!..@.
    cdc4:	d20128da 47702007 47702008 010049d3     .(... pG. pG.I..
    cdd4:	03411a08 18890302 18890282 18890242     ..A.........B...
    cde4:	18890202 18890182 18890102 188900c2     ................
    cdf4:	21011808 280004c9 1840dd02 47701500     ...!...(..@...pG
    ce04:	15001a08 47704240 0080b508 28009000     ....@BpG.......(
    ce14:	1e40dd01 bd08e7fa 4606b5f0 4fc048c1     ..@........F.H.O
    ce24:	b0896841 22072500 43910412 04122205     Ah...%."...C."..
    ce34:	60414311 684849bc 020022f9 06120a00     .CA`.IHh."......
    ce44:	09c04310 220301c0 60484310 48b42205     .C.....".CH`.".H
    ce54:	38080292 4ab56002 230c6990 01000900     ...8.`.J.i.#....
    ce64:	61904318 23386888 23184398 60884318     .C.a.h8#.C.#.C.`
    ce74:	15096910 61104308 f7ff2028 48acffc5     .i...C.a( .....H
    ce84:	21096884 f0004668 49a5febf 3908466a     .h.!hF.....IjF.9
    ce94:	6848e00d d5fc03c0 f7ff200a 6838ffb5     ..Hh..... ....8h
    cea4:	50d000a3 68481945 d4fc03c0 2c001e64     ...PE.Hh....d..,
    ceb4:	489cd1ef 22076841 43910412 04522201     ...HAh."...C."R.
    cec4:	60414311 6881489a f0004628 4601fe37     .CA`.H.h(F..7..F
    ced4:	6b804898 d40c00c0 30404896 69806982     .H.k.....H@0.i.i
    cee4:	d5030612 0e400640 e0034240 0e400640     ....@.@.@B..@.@.
    cef4:	2000e000 60114a90 2e001a08 6030d000     ... .J.`......0`
    cf04:	ff64f7ff bdf0b009 0280498c 02011840     ..d......I..@...
    cf14:	18890182 18890142 188900c2 21011808     ....B..........!
    cf24:	18400489 47700cc0 497eb5f0 4f7c4606     ..@...pG..~I.F|O
    cf34:	68482500 1d3fb089 04122207 22054390     .%Hh..?.."...C."
    cf44:	43100412 4a786048 21fb6850 0a000200     ...CH`xJPh.!....
    cf54:	43080609 01c009c0 43082102 21056050     ...C.....!.CP`.!
    cf64:	0289486f 60013808 69884970 0900230c     oH...8.`pI.i.#..
    cf74:	43180100 68906188 43982338 43182318     ...C.a.h8#.C.#.C
    cf84:	69086090 4310150a 48696108 20286884     .`.i...C.aiH.h( 
    cf94:	ff3af7ff 46682109 fe36f000 466a4960     ..:..!hF..6.`IjF
    cfa4:	e00d3908 03c06848 200ad5fc ff2cf7ff     .9..Hh..... ..,.
    cfb4:	00a36838 194550d0 03c06848 1e64d4fc     8h...PE.Hh....d.
    cfc4:	d1ef2c00 68484957 04122207 43902401     .,..WIHh."...$.C
    cfd4:	43200464 48566048 46286881 fdaef000     d. CH`VH.h(F....
    cfe4:	46024955 60483980 6b814852 d40a0089     UI.F.9H`RH.k....
    cff4:	01896b81 d5036b81 0dc901c9 e0034249     .k...k......IB..
    d004:	0dc901c9 2100e000 00406b80 4849d413     .......!.k@...IH
    d014:	69833040 021d6980 d5074b49 28084018     @0.i.i..IK...@.(
    d024:	2001d901 2000e000 e0054240 28084018     ... ... @B...@.(
    d034:	2001d901 2000e000 226b1a51 1a8900d2     ... ... Q.k"....
    d044:	00804348 18400489 18400491 0c801900     HC....@...@.....
    d054:	d0002e00 f7ff6030 e753ff57 2800b5fe     ....0`..W.S....(
    d064:	4833d076 4d376840 26024c37 d0702800     v.3H@h7M7L.&.(p.
    d074:	f7ffa801 4f30ff59 37409901 04096339     ....Y.0O..@79c..
    d084:	63381808 f7ff4668 6378fec7 62389800     ..8chF....xc..8b
    d094:	68034825 02002007 98014383 fe60f7ff     %H.h. ...C....`.
    d0a4:	18400081 392c4922 98001847 fe3cf7ff     ..@."I,9G.....<.
    d0b4:	491d5c38 0d400740 60084318 09c16960     8\.I@.@..C.``i..
    d0c4:	01c94822 221e6940 22f34390 00d29b00     "H..@i.".C."....
    d0d4:	42932710 2234d901 4a0de005 189a322d     .'.B..4"...J-2..
    d0e4:	d8032a5b 43112244 e0484338 32894a08     [*..D".C8CH..J.2
    d0f4:	220e189f d8012f5b e0052355 1ebf4f05     ..."[/..U#...O..
    d104:	2f8919df 2356d826 e0334319 000007ff     .../&.V#.C3.....
    d114:	fffff896 fffff9ab fffffd5d 000076a0     ........]....v..
    d124:	4000b1c8 4000f000 4000f400 4000b000     ...@...@...@...@
    d134:	10007d34 4000a000 10007f80 00003d43     4}.....@....C=..
    d144:	007fff00 40022a00 40020000 40020800     .....*.@...@...@
    d154:	e076e0a2 189a4afe d8032a5b 43112267     ..v..J..[*..g".C
    d164:	e007220a 325c4afa 2a5b189a 2278d804     ."...J\2..[*..x"
    d174:	22064311 e0024310 43112279 61614330     .C.".C..y".C0Caa
    d184:	614849f4 68a249f4 08522000 60a20052     .IHa.I.h. R.R..`
    d194:	4bf269e2 61e2401a 433269e2 23f361e2     .i.K.@.a.i2C.a.#
    d1a4:	00db9a00 d906429a 4342220c 18574bec     .....B..."BC.KW.
    d1b4:	4bec607b 4bece03f 2b5b18d3 220cd806     {`.K?..K..[+..."
    d1c4:	4bea4342 607b1857 e0344be9 335c4be6     BC.KW.{`.K4..K\3
    d1d4:	2b5b18d3 220cd806 4be64342 607b1857     ..[+..."BC.KW.{`
    d1e4:	e0284be5 3b5c4bda 2b8918d3 220cd806     .K(..K\;...+..."
    d1f4:	4be24342 607b1857 e01c4be1 18d34bd4     BC.KW.{`.K...K..
    d204:	d8062b5b 4342220c 18574bde 4bde607b     [+..."BC.KW.{`.K
    d214:	4bcfe011 18d2335c d8062a5b 4342220c     ...K\3..[*..."BC
    d224:	18574bda 4bda607b 220ce005 4bd94342     .KW.{`.K..."BC.K
    d234:	607b1857 19524bd8 1c406053 d3ae2828     W.{`.KR.S`@.((..
    d244:	49c5e01e 20006962 01d209d2 431a2355     ...Ibi. ....U#.C
    d254:	68a26162 00520852 69e260a2 401a4bbf     ba.hR.R..`.i.K.@
    d264:	69e261e2 61e24332 270c4bc2 437a4602     .a.i2C.a.K.'.FzC
    d274:	607b1857 19524fc0 1c406057 d3f42828     W.{`.OR.W`@.((..
    d284:	43b069e0 69e061e0 43c949b4 61e04308     .i.C.a.i.I.C.C.a
    d294:	210168a0 60a04308 2001bdfe 2300e6de     .h.!.C.`... ...#
    d2a4:	68036003 d5fc041b 408b2301 431349bb     .`.h.....#.@.I.C
    d2b4:	6801600b dafc2900 47704608 49b8b5f0     .`.h.)...FpG...I
    d2c4:	6d0ab085 92012200 2a00680a 2800d07e     ...m."...h.*~..(
    d2d4:	48b4d07c 04c06880 48b30ec4 68c09404     |..H.h.....H...h
    d2e4:	0b804db2 07c04eb2 48acd02a 21071d00     .M...N..*..H...!
    d2f4:	90029100 433169a9 9a0161a9 f7ff9900     .....i1C.a......
    d304:	0847ffce 044049ab 0c40400f 69a84307     ..G..I@..@@..C.i
    d314:	61a843b0 99009a01 f7ff9802 0846ffc0     .C.a..........F.
    d324:	044049a4 0c40400e 0b394306 91030b30     .I@..@@..C9.0...
    d334:	d5001a40 02804240 fc00f000 e03c4605     @...@B.......F<.
    d344:	4f9d4896 90023008 90002006 217d6cc8     .H.O.0... ...l}!
    d354:	42880209 4f99d1db 4605e7d9 42be9404     ...B...O...F...B
    d364:	2c1fd203 1c64d204 2c00e002 1e64d000     ...,..d....,..d.
    d374:	6888498c 0212221f 02224390 608a4302     .I.h."...C"..C.`
    d384:	f7ff2001 9a01fd41 98029900 ff87f7ff     . ..A...........
    d394:	49880846 400e0440 43060c40 0b319803     F..I@..@@..C..1.
    d3a4:	99031a08 4240d500 f0000280 2c1ffbc7     ......@B.......,
    d3b4:	2c00d005 42a8d003 2805da01 42a8dccd     ...,...B...(...B
    d3c4:	4978dd0a 221f6888 e0000212 4390e004     ..xI.h.".......C
    d3d4:	02129a04 608a4302 bdf0b005 e76d2001     .....C.`..... m.
    d3e4:	b5104b6f 33140052 461a60da 6050326c     oK..R..3.`.Fl2P`
    d3f4:	28006091 d0024618 fa12f000 f000bd10     .`.(.F..........
    d404:	bd10fc1b 2001b500 fcfef7ff b500bd00     ....... ........
    d414:	f7ff2002 bd00fcf9 2064b500 fcf4f7ff     . ........d ....
    d424:	b500bd00 f7ff20a0 bd00fcef b08fb5f0     ..... ..........
    d434:	90052000 69804862 90030e00 68804859     . ..bH.i....YH.h
    d444:	08c09009 495700c0 60881d80 69504a5d     ......WI...`]JPi
    d454:	485d900b 483f6150 68c13040 495b910a     ..]HPa?H@0.h..[I
    d464:	210160c1 0409485a 21ff6201 31084859     .`.!ZH...b.!YH.1
    d474:	49596081 27016808 43389008 6008463b     .`YI.h.'..8C;F.`
    d484:	90076890 609043b8 495469d0 40089006     .h...C.`.iTI...@
    d494:	43082102 695061d0 08400040 48506150     .!.C.aPi@.@.PaPH
    d4a4:	691460d0 08400060 21006110 60536051     .`.i`.@..a.!Q`S`
    d4b4:	f7ff2001 6051fca9 f7ff2064 4825fca5     . ....Q`d ....%H
    d4c4:	6a003080 0d450600 462007fe 61104330     .0.j..E... F0C.a
    d4d4:	60576051 f7ff2001 6051fc97 f7ff2064     Q`W`. ....Q`d ..
    d4e4:	481cfc93 6a003080 0f400600 69504305     ...H.0.j..@..CPi
    d4f4:	40184b3c 4303052b 61534333 07402003     <K.@+..C3CSa. @.
    d504:	61104320 60576051 f7ff2001 6051fc7d      C.aQ`W`. ..}.Q`
    d514:	f7ff2064 2700fc79 463e4a0e 3280463d     d ..y..'.J>F=F.2
    d524:	4b2b6251 62184830 f7ff20a0 2001fc6d     Qb+K0H.b. ..m.. 
    d534:	20a06250 fc68f7ff 62516a90 482a19c7     Pb. ..h..jQb..*H
    d544:	1c404b23 20026218 fc5ef7ff e04d2001     #K@..b. ..^.. M.
    d554:	fffffa05 40020800 40022800 feefcfff     .......@.(.@....
    d564:	423d34af 420134af fffff8c3 423d44af     .4=B.4.B.....D=B
    d574:	420144af 423d55af 420155af 423d56af     .D.B.U=B.U.B.V=B
    d584:	420156af 423d67af 420167af 423d78af     .V.B.g=B.g.B.x=B
    d594:	420178af 423d79af 420179af 4000c000     .x.B.y=B.y.B...@
    d5a4:	10007cb4 4000f400 10040828 4000b000     .|.....@(......@
    d5b4:	00000200 3fff8000 018cba80 01964000     .......?.....@..
    d5c4:	4000a040 40020000 6a029155 0000800f     @..@...@U..j....
    d5d4:	40041800 40024a00 40025000 f80f8fff     ...@.J.@.P.@....
    d5e4:	05c62762 800fffff 0001007f 20a06250     b'..........Pb. 
    d5f4:	fc0af7ff 1c6d6a90 2d101986 2000d390     .....jm....-... 
    d604:	1bb96250 f0004844 4607fa99 6b804843     Pb..DH.....FCH.k
    d614:	db032800 28009803 0087d000 25004840     .(.....(....@H.%
    d624:	4840900d 180e0069 46310480 fa86f000     ..@Hi.....1F....
    d634:	46314a3c f0004350 4a3afa81 43504631     <J1FPC....:J1FPC
    d644:	fa7cf000 43782101 184004c9 28ff0d00     ..|..!xC..@....(
    d654:	20ffd900 d1002d00 210c9005 43699a0d     ... .-.....!..iC
    d664:	6891188a 02090a09 60914301 2d281c6d     ...h.....C.`m.(-
    d674:	482dd3d7 990b6104 4a2c6141 60119908     ..-H.a..Aa,J...`
    d684:	21004a2b 4a2b6091 4a2b6211 60d1990a     +J.!.`+J.b+J...`
    d694:	61c19906 99094a29 68816091 60819907     ...a)J...`.h...`
    d6a4:	98054927 98056388 bdf0b00f 2800b53e     'I...c......>..(
    d6b4:	2400d018 d0162804 d1132806 f7ff2001     ...$.(...(... ..
    d6c4:	f000fdfd 2001f89c fcc8f7ff 90002001     ....... ..... ..
    d6d4:	23049002 a11c4a1b 48209401 fab2f000     ...#.J.... H....
    d6e4:	fea4f7ff 481ebd3e 491e6800 1a406809     ....>..H.h.I.h@.
    d6f4:	4348491d f000491d 491dfa21 684b680a     .IHC.I..!..I.hKh
    d704:	415c1880 604c6008 f0004814 f000f889     ..\A.`L`.H......
    d714:	f000f84b bd3ef874 0013b800 4000a000     K...t.>........@
    d724:	40022800 00000962 40020000 40025000     .(.@b......@.P.@
    d734:	40024a00 40041800 40020840 4000f400     .J.@...@@..@...@
    d744:	10007fc0 1000715f 74616256 6574565f     ...._q..Vbat_Vte
    d754:	435f706d 62696c61 00000000 10007cc8     mp_Calib.....|..
    d764:	10007be0 10007c18 00000271 0007a120     .{...|..q... ...
    d774:	10040240 492c4602 43c02000 e0046809     @....F,I. .C.h..
    d784:	d101428a 47702000 29006989 4770d1f8     .B... pG.i.)..pG
    d794:	4604b510 4608460b ffecf7ff d0022800     ...F.F.F.....(..
    d7a4:	61986820 bd106023 4e1fb5f8 462f2500      h.a#`.....N.%/F
    d7b4:	e0216830 69844a1d 68136881 1a596852     0h!..J.i.h.hRhY.
    d7c4:	d31741ba 29007901 4b18d00c 681968c2     .A...y.)...K.h.h
    d7d4:	1851685b 60814605 29006901 6940d00b     [hQ..F.`.i.)..@i
    d7e4:	e0084788 42816831 6034d101 61ace000     .G..1h.B..4`...a
    d7f4:	e7f16187 46204605 d1db2800 b510bdf8     .a...F F.(......
    d804:	6800480b 480b0841 61411e49 2207490a     .H.hA..HI.Aa.I."
    d814:	021c69cb 23000a24 618361cc bd106102     .i..$..#.a.a.a..
    d824:	48014601 0000e7b4 1004021c 10040240     .F.H........@...
    d834:	10007cb0 e000e000 e000ed04 4801b403     .|.............H
    d844:	bd019001 0001a2f9 4801b403 bd019001     ...........H....
    d854:	00019fe9 4801b403 bd019001 0001de29     .......H....)...
    d864:	4801b403 bd019001 0001a251 4801b403     ...H....Q......H
    d874:	bd019001 0001de5b 4801b403 bd019001     ....[......H....
    d884:	0001de17 4801b403 bd019001 0001bb9d     .......H........
    d894:	4801b403 bd019001 0001bf11 4801b403     ...H...........H
    d8a4:	bd019001 0001d0ad 4801b403 bd019001     ...........H....
    d8b4:	0001bb9f 4801b403 bd019001 0001bfd5     .......H........
    d8c4:	4801b403 bd019001 0001bdd1 4801b403     ...H...........H
    d8d4:	bd019001 00019c6d 4801b403 bd019001     ....m......H....
    d8e4:	0001bb7d 4801b403 bd019001 0001dbdd     }......H........
    d8f4:	4801b403 bd019001 00000215 4801b403     ...H...........H
    d904:	bd019001 0001b83b 4801b403 bd019001     ....;......H....
    d914:	0001dc5b 4801b403 bd019001 0001cf37     [......H....7...
    d924:	4801b403 bd019001 0001d6f5 4801b403     ...H...........H
    d934:	bd019001 0001b7fb 4801b403 bd019001     ...........H....
    d944:	00000b15 4801b403 bd019001 0001bdd5     .......H........
    d954:	4801b403 bd019001 0001d4d1 4801b403     ...H...........H
    d964:	bd019001 0001d4ed 4801b403 bd019001     ...........H....
    d974:	0001cffb 4801b403 bd019001 00000ab7     .......H........
    d984:	4801b403 bd019001 00000e17 4801b403     ...H...........H
    d994:	bd019001 000000d5 4801b403 bd019001     ...........H....
    d9a4:	0001cdbf 4801b403 bd019001 000011e3     .......H........
    d9b4:	4801b403 bd019001 00012edd 4801b403     ...H...........H
    d9c4:	bd019001 00006685 4801b403 bd019001     .....f.....H....
    d9d4:	00006651 4801b403 bd019001 00012faf     Qf.....H...../..
    d9e4:	4801b403 bd019001 00006647 4801b403     ...H....Gf.....H
    d9f4:	bd019001 00005081 4801b403 bd019001     .....P.....H....
    da04:	0001ba01 4801b403 bd019001 000131af     .......H.....1..
    da14:	4801b403 bd019001 00005df3 4801b403     ...H.....].....H
    da24:	bd019001 000082af 4801b403 bd019001     ...........H....
    da34:	0000533d 4801b403 bd019001 000190bf     =S.....H........
    da44:	4801b403 bd019001 00018bdb 4801b403     ...H...........H
    da54:	bd019001 0001a27d 4801b403 bd019001     ....}......H....
    da64:	0001a0b1 4801b403 bd019001 00019ab5     .......H........
    da74:	4801b403 bd019001 000197fd 4801b403     ...H...........H
    da84:	bd019001 00019a65 4801b403 bd019001     ....e......H....
    da94:	0001de8b 4801b403 bd019001 00019af1     .......H........
    daa4:	4801b403 bd019001 00019a85 4801b403     ...H...........H
    dab4:	bd019001 00019a45 4801b403 bd019001     ....E......H....
    dac4:	0001bfd9 4801b403 bd019001 00019b05     .......H........
    dad4:	4801b403 bd019001 00019a9f 4801b403     ...H...........H
    dae4:	bd019001 00019ca1 4801b403 bd019001     ...........H....
    daf4:	00019f09 4801b403 bd019001 00019095     .......H........
    db04:	4801b403 bd019001 00019711 4801b403     ...H...........H
    db14:	bd019001 0001a2a1 4801b403 bd019001     ...........H....
    db24:	0001d577 4801b403 bd019001 00019c81     w......H........
    db34:	4801b403 bd019001 0001dd01 4801b403     ...H...........H
    db44:	bd019001 0001dcd5 4801b403 bd019001     ...........H....
    db54:	0001b2a7 4801b403 bd019001 00019c47     .......H....G...
    db64:	4801b403 bd019001 0001b731 4801b403     ...H....1......H
    db74:	bd019001 0001a543 4801b403 bd019001     ....C......H....
    db84:	00001399 4801b403 bd019001 000131d3     .......H.....1..
    db94:	4801b403 bd019001 000196d1 4801b403     ...H...........H
    dba4:	bd019001 0001c9db 4801b403 bd019001     ...........H....
    dbb4:	0001c93d 4801b403 bd019001 00006839     =......H....9h..
    dbc4:	4801b403 bd019001 0001cc03 4801b403     ...H...........H
    dbd4:	bd019001 0001e283 4801b403 bd019001     ...........H....
    dbe4:	00006a2d 4801b403 bd019001 0001c9ff     -j.....H........
    dbf4:	4801b403 bd019001 00006a01 4801b403     ...H.....j.....H
    dc04:	bd019001 0001c999 4801b403 bd019001     ...........H....
    dc14:	0001de5b 4801b403 bd019001 0001d25b     [......H....[...
    dc24:	4801b403 bd019001 000007bd 4801b403     ...H...........H
    dc34:	bd019001 000007d7 4801b403 bd019001     ...........H....
    dc44:	0001d751 4801b403 bd019001 0001d6fd     Q......H........
    dc54:	27100000 00000000 10007ba8 100400d8     ...'.....{......
    dc64:	00010001 00000805 00019685 00000300     ................
    dc74:	10005c0d 00000301 000192f7 00000302     .\..............
    dc84:	00019379 00000303 000193a3 00000304     y...............
    dc94:	000193d5 0000030a 00019403 00000305     ................
    dca4:	0001947f 0000030f 000194b1 00000312     ................
    dcb4:	000194e5 00000313 00019535 00000314     ........5.......
    dcc4:	0001956b 00000315 000195ab 00000316     k...............
    dcd4:	000195f1 00000317 0001963b 00000318     ........;.......
    dce4:	0001942b 10007b28 00000010 0001befb     +...({..........
    dcf4:	100066ff 0001bef3 0001bef5 0001d099     .f..............
    dd04:	100069f1 0001d0fd 0001d0ff 00000000     .i..............
    dd14:	00000004 00000001 00000000 00000000     ................
    dd24:	00010001 00000000 00000000 00000000     ................
	...
    dd54:	00000011 00000000 00000000 00000000     ................
    dd64:	00000c13 10005185 00000e0b 100051ff     .....Q.......Q..
	...
    dd7c:	10007c24 00000002 10007c34 10007c3c     $|......4|..<|..
    dd8c:	10007c54 00080001 00000000 00000000     T|..............
    dd9c:	00003800 100052e1 00003801 100052f5     .8...R...8...R..
    ddac:	00003802 1000533f 00000000 00000000     .8..?S..........
    ddbc:	10007c5c 00000003 00000000 10007c7c     \|..........||..
    ddcc:	10007c94 00080001 00000000 00000000     .|..............
    dddc:	00000101 00000000 0001cccb 0000002f     ............/...
    ddec:	00000000 018cba80 00000001 00000000     ................
    ddfc:	0bb80fa0 00000000 00000000 00000000     ................
	...
    de48:	05050505 05050505 05050505 04050505     ................
    de58:	04040404 04040404 03030304 02020303     ................
    de68:	01020202 01010101 00000000 00000000     ................
    de78:	00000001 00000002                       ........

0000de80 <_global_impure_ptr>:
    de80:	20000080                                ... 

0000de84 <__sf_fake_stderr>:
	...

0000dea4 <__sf_fake_stdin>:
	...

0000dec4 <__sf_fake_stdout>:
	...
    dee4:	2b302d23 6c680020 6665004c 47464567     #-0+ .hlL.efgEFG
    def4:	32313000 36353433 41393837 45444342     .0123456789ABCDE
    df04:	31300046 35343332 39383736 64636261     F.0123456789abcd
    df14:	00006665                                ef..

0000df18 <_init>:
    df18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    df1a:	46c0      	nop			; (mov r8, r8)
    df1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    df1e:	bc08      	pop	{r3}
    df20:	469e      	mov	lr, r3
    df22:	4770      	bx	lr

0000df24 <__init_array_start>:
    df24:	000000dd 	.word	0x000000dd

0000df28 <_fini>:
    df28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    df2a:	46c0      	nop			; (mov r8, r8)
    df2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    df2e:	bc08      	pop	{r3}
    df30:	469e      	mov	lr, r3
    df32:	4770      	bx	lr

0000df34 <__fini_array_start>:
    df34:	000000b5 	.word	0x000000b5
